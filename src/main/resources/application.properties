spring.mustache.check-template-location=false
logging.level.root=WARN
logging.level.com.endava=INFO
spring.main.web-application-type=none
spring.main.banner-mode=console
spring.output.ansi.enabled=always
spring.jmx.enabled=false
spring.config.import=optional:file:./cats.properties
spring.main.lazy-initialization=true
########################
#### arguments help ####
########################
arg.api.contract.help=LOCATION_OF_THE_CONTRACT
arg.api.server.help=BASE_URL_OF_THE_SERVICE
arg.api.maxRequestsPerMinute.help=maximum number of requests per minute; this is useful when APIs have rate limiting implemented; default is 100
arg.api.connectionTimeout.help=time period in seconds which CATS should establish a connection with the server; default is 10 seconds
arg.api.writeTimeout.help=maximum time of inactivity in seconds between two data packets when sending the request to the server; default is 10 seconds
arg.api.readTimeout.help=maximum time of inactivity in seconds between two data packets when waiting for the server's response; default is 10 seconds
arg.auth.sslKeystore.help=Location of the keystore holding certificates used when authenticating calls using one-way or two-way SSL
arg.auth.sslKeystorePwd.help=The password of the sslKeystore
arg.auth.sslKeyPwd.help=The password of the private key from the sslKeystore
arg.auth.basicAuth.help=Supplies a `username:password` pair, in case the service uses basic auth
arg.auth.proxyHost.help=HOST the proxy server's host name
arg.auth.proxyPort.help=PORT the proxy server's port number
arg.check.checkHeaders.help=If supplied (no value needed), it will only run the Header Fuzzers
arg.check.checkFields.help=If supplied (no value needed), it will only run the Field Fuzzers
arg.check.checkHttp.help=If supplied (no value needed), it will only run the HTTP Fuzzers
arg.check.checkContract.help=If supplied (no value needed), it will only run the ContractInfo Fuzzers
arg.check.includeWhitespaces.help=If supplied (no value needed), it will include the Whitespaces Fuzzers
arg.check.includeEmojis.help=If supplied (no value needed), it will include the Emojis Fuzzers
arg.check.includeControlChars.help=If supplied (no value needed), it will include the ControlChars Fuzzers
arg.files.urlParams.help=A comma separated list of 'name:value' pairs of parameters to be replaced inside the URLs
arg.files.headers.help=FILE specifies custom headers that will be passed along with request. This can be used to pass oauth or JWT tokens for authentication purposed for example
arg.files.refData.help=FILE specifies the file with fields that must have a fixed value in order for requests to succeed
arg.files.customFuzzerFile.help=A file used by the `CustomFuzzer` that will be used to create user-supplied payloads
arg.files.securityFuzzerFile.help=A file used by the `SecurityFuzzer` that will be used to inject special strings in order to exploit possible vulnerabilities
arg.filter.fuzzers.help=COMMA_SEPARATED_LIST_OF_FUZZERS the list of fuzzers you want to run. You can use 'all' to include all fuzzers. To list all available fuzzers run: './cats.jar list fuzzers
arg.filter.paths.help=PATH_LIST a comma separated list of paths to test. If no path is supplied, all paths will be considered
arg.filter.skipPaths.help=PATH_LIST a comma separated list of paths to ignore. If no path is supplied, no path will be ignored
arg.filter.skipFuzzers.help=COMMA_SEPARATED_LIST_OF_FUZZERS the list of fuzzers you want to exclude. This is either a full or partial Fuzzer name
arg.filter.skipXXXForPath.help=/path1,/path2 can configure fuzzers to be excluded for the specified paths. XXX must be a full Fuzzer name
arg.filter.skipFields.help=field1,field2#subField1 a comma separated list of fields that will be skipped by replacement Fuzzers like EmptyStringsInFields, NullValuesInFields, etc.
arg.filter.httpMethods.help=POST,PUT,GET,etc a comma separated list of HTTP methods that will be used to filter which http methods will be executed for each path within the contract
arg.filter.dryRun.help=simulate a possible run without actually invoking the service. This will print how many tests will actually be executed and with which Fuzzers
arg.filter.ignoreResponseCodes.help=HTTP_CODES_LIST a comma separated list of HTTP response codes that will be considered as SUCCESS, even if the Fuzzer will typically report it as WARN or ERROR. If provided, all Contract Fuzzers will be skipped
arg.filter.tests.help=TESTS_LIST a comma separated list of executed tests in JSON format from the cats-report folder. If you supply the list without the .json extension CATS will search the test in the cats-report folder
arg.filter.ignoreResponseCodeUndocumentedCheck.help=If supplied (not value needed) it won't check if the response code received from the service matches the value expected by the fuzzer and will return the test result as SUCCESS instead of WARN
arg.filter.ignoreResponseBodyCheck.help=If supplied (not value needed) it won't check if the response body received from the service matches the schema supplied inside the contract and will return the test result as SUCCESS instead of WARN
arg.filter.blackbox.help=If supplied (not value needed) it will ignore all response codes expect for 5XX which will be returned as ERROR. This is similar to --ignoreResponseCodes="2xx,4xx"
arg.processing.fieldsFuzzingStrategy.help=STRATEGY set the strategy for tge fields fuzzers. Supported strategies ONEBYONE, SIZE, POWERSET
arg.processing.maxFieldsToRemove.help=NUMBER set the maximum number of fields that will be removed from a request when using the SIZE fieldsFuzzingStrategy
arg.processing.edgeSpacesStrategy.help=STRATEGY this can be either validateAndTrim or trimAndValidate. It can be used to specify what CATS should expect when sending trailing and leading spaces valid values within fields
arg.processing.sanitizationStrategy.help=STRATEGY this can be either sanitizeAndValidation or validateAndSanitize. It can be used to specify what CATS should expect when sending Unicode Control Chars and Other Symbols within the fields
arg.processing.useExamples.help=true/false (default true), instruct CATS on whether to use examples from the OpenAPI contract or not
arg.processing.largeStringsSize.help=SIZE the size of the strings used by the Fuzzers sending large values like VeryLargeStringsFuzzer
arg.reporting.log.help=PACKAGE:LEVEL set custom log level of a given package. You can provide a comma separated list of PACKAGE:LEVEL pairs
arg.reporting.printExecutionStatistics.help=If supplied (no value needed), prints a summary of execution times for each endpoint and HTTP method. By default this will print a summary for each endpoint: max, min and average. If you want detailed reports you must supply --printExecutionStatistics=detailed
arg.reporting.timestampReports.help=If supplied (no value needed), it will output the report still inside the 'cats-report' folder, but in a sub-folder with the current timestamp
arg.reporting.reportFormat.help=FORMAT specifies the format of the CATS report. You can use 'htmlOnly' if you want the report to not contain any Javascript. This is useful for large number of tests, as the page will render faster and also in CI environments due to Javascript content security policies. Default is 'htmlJs' which is the original CATS single page report format.
########################
#### fuzzers enabled ###
########################
## Fields ##
fuzzer.fields.BooleanFieldsFuzzer.enabled=true
fuzzer.fields.DecimalFieldsLeftBoundaryFuzzer.enabled=true
fuzzer.fields.DecimalFieldsRightBoundaryFuzzer.enabled=true
fuzzer.fields.DecimalValuesInIntegerFieldsFuzzer.enabled=true
fuzzer.fields.EmptyStringValuesInFieldsFuzzer.enabled=true
fuzzer.fields.ExtremeNegativeValueDecimalFieldsFuzzer.enabled=true
fuzzer.fields.ExtremeNegativeValueIntegerFieldsFuzzer.enabled=true
fuzzer.fields.ExtremePositiveValueDecimalFieldsFuzzer.enabled=true
fuzzer.fields.ExtremePositiveValueInIntegerFieldsFuzzer.enabled=true
fuzzer.fields.IntegerFieldsLeftBoundaryFuzzer.enabled=true
fuzzer.fields.IntegerFieldsRightBoundaryFuzzer.enabled=true
fuzzer.fields.InvalidValuesInEnumsFieldsFuzzer.enabled=true
fuzzer.fields.MaximumExactValuesInNumericFieldsFuzzer.enabled=true
fuzzer.fields.MaxLengthExactValuesInStringFieldsFuzzer.enabled=true
fuzzer.fields.MinimumExactValuesInNumericFieldsFuzzer.enabled=true
fuzzer.fields.MinLengthExactValuesInStringFieldsFuzzer.enabled=true
fuzzer.fields.NewFieldsFuzzer.enabled=true
fuzzer.fields.NullValuesInFieldsFuzzer.enabled=true
fuzzer.fields.RemoveFieldsFuzzer.enabled=true
fuzzer.fields.StringFieldsLeftBoundaryFuzzer.enabled=true
fuzzer.fields.StringFieldsRightBoundaryFuzzer.enabled=true
fuzzer.fields.StringFormatAlmostValidValuesFuzzer.enabled=true
fuzzer.fields.StringFormatTotallyWrongValuesFuzzer.enabled=true
fuzzer.fields.StringsInNumericFieldsFuzzer.enabled=true
fuzzer.fields.VeryLargeValuesInFieldsFuzzer.enabled=true
fuzzer.fields.VeryLargeUnicodeValuesInFieldsFuzzer.enabled=true
fuzzer.fields.LeadingWhitespacesInFieldsFuzzer.enabled=true
fuzzer.fields.OnlyWhitespacesInFieldsFuzzer.enabled=true
fuzzer.fields.TrailingWhitespacesInFieldsFuzzer.enabled=true
fuzzer.fields.OnlyControlCharsInFieldsFuzzer.enabled=true
fuzzer.fields.TrailingControlCharsInFieldsFuzzer.enabled=true
fuzzer.fields.LeadingControlCharsInFieldsFuzzer.enabled=true
fuzzer.fields.WithinControlCharsInFieldsFuzzer.enabled=true
fuzzer.fields.LeadingSingleCodePointEmojisInFields.enabled=true
fuzzer.fields.OnlySingleCodePointEmojisInFieldsFuzzer.enabled=true
fuzzer.fields.TrailingSingleCodePointEmojisInFieldsFuzzer.enabled=true
fuzzer.fields.WithinSingleCodePointEmojisInFieldsFuzzer.enabled=true
fuzzer.fields.LeadingMultiCodePointEmojisInFields.enabled=true
fuzzer.fields.OnlyMultiCodePointEmojisInFieldsFuzzer.enabled=true
fuzzer.fields.TrailingMultiCodePointEmojisInFieldsFuzzer.enabled=true
fuzzer.fields.WithinMultiCodePointEmojisInFieldsFuzzer.enabled=true
## Headers ##
fuzzer.headers.CheckSecurityHeadersFuzzer.enabled=true
fuzzer.headers.DummyAcceptHeadersFuzzer.enabled=true
fuzzer.headers.DummyContentTypeHeadersFuzzer.enabled=true
fuzzer.headers.DuplicateHeaderFuzzer.enabled=true
fuzzer.headers.EmptyStringValuesInHeadersFuzzer.enabled=true
fuzzer.headers.ExtraHeaderFuzzer.enabled=true
fuzzer.headers.VeryLargeValuesInHeadersFuzzer.enabled=true
fuzzer.headers.VeryLargeUnicodeValuesInHeadersFuzzer.enabled=true
fuzzer.headers.LeadingControlCharsInHeadersFuzzer.enabled=true
fuzzer.headers.LeadingWhitespacesInHeadersFuzzer.enabled=true
fuzzer.headers.NullValuesInHeadersFuzzer.enabled=true
fuzzer.headers.RemoveHeadersFuzzer.enabled=true
fuzzer.headers.OnlyControlCharsInHeadersFuzzer.enabled=true
fuzzer.headers.OnlyWhitespacesInHeadersFuzzer.enabled=true
fuzzer.headers.TrailingControlCharsInHeadersFuzzer.enabled=true
fuzzer.headers.TrailingWhitespacesInHeadersFuzzer.enabled=true
fuzzer.headers.UnsupportedAcceptHeadersFuzzer.enabled=true
fuzzer.headers.UnsupportedContentTypesHeadersFuzzer.enabled=true
fuzzer.headers.TrailingSpacesInHeadersFuzzer.enabled=true
fuzzer.headers.OnlySpacesInHeadersFuzzer.enabled=true
fuzzer.headers.LeadingSpacesInHeadersFuzzer.enabled=true
## HTTP ##
fuzzer.http.BypassAuthenticationFuzzer.enabled=true
fuzzer.http.DummyRequestFuzzer.enabled=true
fuzzer.http.HappyFuzzer.enabled=true
fuzzer.http.HttpMethodsFuzzer.enabled=true
fuzzer.http.MalformedJsonFuzzer.enabled=true
fuzzer.http.NonRestHttpMethodsFuzzer.enabled=true
## Contract ##
fuzzer.contract.NamingsContractInfoFuzzer.enabled=true
fuzzer.contract.PathTagsContractInfoFuzzer.enabled=true
fuzzer.contract.RecommendedHeadersContractInfoFuzzer.enabled=true
fuzzer.contract.SecuritySchemesContractInfoFuzzer.enabled=true
fuzzer.contract.TopLevelElementsContractInfoFuzzer.enabled=true
fuzzer.contract.VersionsContractInfoFuzzer.enabled=true
fuzzer.contract.XmlContentTypeContractInfoFuzzer.enabled=true
fuzzer.contract.HttpStatusCodeInValidRangeContractInfoFuzzer.enabled=true
fuzzer.contract.RecommendedHttpCodesContractInfoFuzzer.enabled=true