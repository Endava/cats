openapi: 3.0.3
info:
  title: Shippo external API.
  description: Use this API to integrate with the Shippo service
  version: '2018-02-08'
  contact:
    name: Shippo Developer Platform
    url: https://goshippo.com/contact/
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - url: https://api.goshippo.com
tags:
  - description: >-
      Carriers are the companies who deliver your package. Shippo uses Carrier
      account objects as credentials to retrieve shipping rates and purchase
      labels from shipping Carriers.


      <SchemaDefinition schemaRef="#/components/schemas/CarrierAccount"/>
    name: Carrier Accounts
  - description: >-
      A batch is a technique for creating multiple labels at once. Use the 
      batch object to create and purchase many shipments in two API calls. After
      creating the batch, retrieve the batch to verify that all shipments are
      valid. You can add and remove shipments after you have created the batch.
      When all shipments are valid you can purchase the batch and retrieve all
      the shipping labels.

      <SchemaDefinition schemaRef="#/components/schemas/Batch"/>


      # Batch Shipment

      The batch shipment object is a wrapper around a shipment object, which
      include shipment-specific information 

      for batch processing.


      Note: batch shipments can only be created on the batch endpoint, either
      when creating a batch object or by through 

      the `/batches/{BATCH_OBJECT_ID}/add_shipments` endpoint

      <SchemaDefinition schemaRef="#/components/schemas/BatchShipment"/>
    name: Batches
  - description: >-
      A user parcel template represents a package used for shipping that has
      preset dimensions and attributes defined 

      by you. They are useful for capturing attributes of parcel-types you
      frequently use for shipping, allowing 

      them to be defined once and then used for many shipments. These parcel
      templates can also be used for live rates.


      User parcel templates can also be created using a carrier parcel template,
      where the dimensions will be copied from 

      the carrier presets, but the weight can be configured by you.

      <SchemaDefinition schemaRef="#/components/schemas/UserParcelTemplate"/>
    name: User Parcel Templates
  - description: >-
      Addresses are the locations a parcel is being shipped **from** and **to**.
      They represent company and residential places. Among other things, you can
      use address objects to create shipments, calculate shipping rates, and
      purchase shipping labels.

      <SchemaDefinition schemaRef="#/components/schemas/Address"/>
    name: Addresses
  - description: >-
      A service group is a set of service levels grouped together. 

      Rates at checkout uses services groups to present available shipping
      options to customers in their shopping basket.

      <SchemaDefinition schemaRef="#/components/schemas/ServiceGroup"/>
    name: Service Groups
  - description: >-
      Rates at checkout is a tool for merchants to display up-to-date shipping
      estimates based on what's in their customers cart and where theyâ€™re
      shipping to.

      Merchants set up curated shipping options for customers in the checkout
      flow based on data in the shopping cart. The request must include the
      **to** address and item information. Optional fields are the **from**
      address and package information. If the optional fields are not included,
      the service will use the default address and/or package configured for
      rates at checkout. The response is a list of shipping options based on the
      Service Group configuration.

      (see <a href="#tag/Service-Groups">Service Group configuration</a> for
      details).

      <SchemaDefinition schemaRef="#/components/schemas/LiveRate"/>



      # Default Parcel Template

      Assign one of your user parcel templates to be the default used when
      generating Live Rates. This template will be used by default when
      generating Live Rates, unless you explicitly provide a parcel in the Live
      Rates request.

      <SchemaDefinition schemaRef="#/components/schemas/UserParcelTemplate"/>
    name: Rates at Checkout
  - description: >-
      Shippo Accounts are used by Shippo Platform Accounts to create and manage
      Managed Shippo Accounts. 

      Managed Shippo Accounts are headless accounts that represent your
      customers. They are opaque to your end customers, meaning customers do not
      need to create their own Shippo login or have a billing relationship with
      Shippo. 

      They can be used by marketplaces, e-commerce platforms, and third-party
      logistics providers who want to offer, seamless, built-in shipping
      functionality to their customers. 

      <SchemaDefinition schemaRef="#/components/schemas/ShippoAccount"/>
    name: Shippo Accounts
  - description: >-
      A parcel is an item you are shipping. The parcel object includes details
      about its physical make-up of the parcel. It includes dimensions and
      weight that Shippo uses to calculate rates. 

      <SchemaDefinition schemaRef="#/components/schemas/Parcel"/>


      # Parcel Extras

      The following values are supported for the `extra` field of the parcel
      object.

      <SchemaDefinition schemaRef="#/components/schemas/ParcelExtra"/>
    name: Parcels
  - description: >-
      A shipment is the act of transporting goods. A shipment object contains
      **to** and **from** addresses, and the parcel details that you are
      shipping. You can use the shipment object to retrieve shipping rates and
      purchase a shipping label.

      <SchemaDefinition schemaRef="#/components/schemas/Shipment"/>
       
      # Shipment Extras

      The following values are supported for the `extra` field of the shipment
      object.

      <SchemaDefinition schemaRef="#/components/schemas/ShipmentExtra"/>
    name: Shipments
  - description: >-
      A rate is the cost to ship a parcel from a carrier. The rate object
      details the service level including the cost and transit time. 

      <SchemaDefinition schemaRef="#/components/schemas/Rate"/>
    name: Rates
  - description: >-
      A transaction is the purchase of a shipping label from a shipping provider
      for a specific service. You can print purchased labels and used them to
      ship a parcel with a carrier, such as USPS or FedEx.

      <SchemaDefinition schemaRef="#/components/schemas/Transaction"/>
    name: Transactions
    x-displayName: Transactions (shipping labels)
  - description: >-
      Customs declarations are relevant information, including one or multiple
      customs items, you need to provide for customs clearance for your
      international shipments.

      <SchemaDefinition schemaRef="#/components/schemas/CustomsItem"/>
    name: Customs Items
  - description: >-
      Customs declarations are relevant information, including one or multiple
      customs items, you need to provide for 

      customs clearance for your international shipments.

      <SchemaDefinition schemaRef="#/components/schemas/CustomsDeclaration"/>
    name: Customs Declarations
  - description: >-
      A manifest is a single-page document with a barcode that carriers can scan
      to accept all packages into transit without the need to scan each item
      individually. 

      They are close-outs of shipping labels of a certain day. Some carriers
      require manifests to  process the shipments.


      <SchemaDefinition schemaRef="#/components/schemas/Manifest"/>


      # Manifest Errors

      The following codes and messages are the possible errors that may occur
      when creating Manifests.

      <SchemaDefinition schemaRef="#/components/schemas/ManifestErrors"/>
    name: Manifests
  - description: >-
      An order is a request from a customer to purchase goods from a merchant. 

      Use the orders object to load orders from your system to the Shippo
      dashboard.

      You can use the orders object to create, retrieve, list, and manage orders
      programmatically. 

      You can also retrieve shipping rates, purchase labels, and track shipments
      for each order.

      <SchemaDefinition schemaRef="#/components/schemas/Order"/>


      # Line Item

      <p style="text-align: center; background-color: #F2F3F4;">
        </br>Line Items, and their corresponding abstract Products and Variants, might be exposed as a separate resource 
        in the future. Currently it's a nested object within the order resource.</br></br>
      </p>
       A line item is an individual object in an order. For example, if your order contains a t-shirt, shorts, and a jacket, each item is represented by a line item.
      <SchemaDefinition schemaRef="#/components/schemas/LineItem"/>
    name: Orders
    x-displayName: Orders (beta)
  - description: >-
      Refunds are reimbursements for successfully created but unused shipping
      labels or other charges.

      <SchemaDefinition schemaRef="#/components/schemas/Refund"/>
    name: Refunds
  - description: >-
      <p style="text-align: center; background-color: #F2F3F4;"></br>

      If you purchased your shipping label through Shippo, you can also get all
      the tracking details of your Shipment 

      from the <a href="#tag/Transactions">Transaction</a> object.

      </br></br></p>

      A tracking status of a package is an indication of current location of a
      package in the supply chain. For example,  sorting, warehousing, or out
      for delivery. Use the tracking status object to track the location of your
      shipments.


      When using your <a
      href="https://docs.goshippo.com/docs/guides_general/authentication/">Test</a>
      token for tracking, you need to use Shippo's 

      predefined tokens for testing different tracking statuses. You can find
      more information in our 

      <a href="https://docs.goshippo.com/docs/tracking/tracking/">Tracking
      tutorial</a> on how to do this, and what the 

      payloads look like.      

      <SchemaDefinition schemaRef="#/components/schemas/Track"/>
    name: Tracking Status
  - description: >-
      A carrier parcel template represents a package used for shipping that has
      preset dimensions defined by a carrier. Some examples of a carrier parcel
      template include USPS Flat Rate Box and Fedex Small Pak. When using a
      carrier parcel template, the rates returned may be limited to the carrier
      that provides the box. You can create user parcel templates using a
      carrier parcel template. Shippo takes the dimensions of the carrier parcel
      template but you must configure the weight.


      <SchemaDefinition schemaRef="#/components/schemas/CarrierParcelTemplate"/>
    name: Carrier Parcel Templates
  - description: >-
      A pickup is when you schedule a carrier to collect a package for delivery.

      Use Shippoâ€™s pickups endpoint to schedule pickups with USPS and DHL
      Express for eligible shipments that you have already created.

      <SchemaDefinition schemaRef="#/components/schemas/Pickup"/>
    name: Pickups
  - description: >-
      <p style="text-align: center; background-color: #F2F3F4;">
        </br>First-time users and those looking for specific integration tutorials,
        <a href="https://docs.goshippo.com">see our full API documentation and guides.</a><br>
        Download the <a href="https://docs.goshippo.com/spec/shippoapi/public-api.yaml">API Specification yaml file</a>     
      </p>


      <h3>API Resources</h3>

      All API URLs listed in this documentation are relative to
      <b>https://api.goshippo.com/</b>.


      For example, the `/addresses/` resource is reachable at
      `https://api.goshippo.com/addresses/`.



      <h3>Authentication</h3>

      The API requires Shippo's token HTTP Authentication with your Shippo token
      (live or test). 


      In order to authenticate properly, please put `Authorization: ShippoToken
      <token>` in your header. You can find your token on the 

      <a href="https://goshippo.com/user/apikeys/">Shippo API settings page</a>.




      For more information about authentication and test mode, 

      <a
      href="https://docs.goshippo.com/docs/guides_general/authentication/">please
      visit our Authentication guide</a>.


      The API is available via Secure Socket Layer (SSL) only. All requests to
      the Shippo API must use TLS version 1.2 or higher.


      <h3>Request & Response Data</h3>

      Request data is passed to the API by <b>POSTing JSON objects</b> with the
      appropriate key/value-pairs to the respective 

      resource. The documentation for each API resource contains more details on
      the values accepted by a given resource.


      Response data also formatted as JSON object. You can specify how many
      results per page are to be returned. For instance, 

      `/rates/?results=25` will return up to 25 results.


      <h3>REST & Disposable Objects</h3>

      The Shippo API is built around <a
      href="http://en.wikipedia.org/wiki/Representational_State_Transfer">REST
      principles</a>. 

      Use POST requests to create objects, GET requests to retrieve objects, and
      PUT requests to update objects.


      Only the Carrier Accounts object can be updated via PUT requests. All
      other objects such as Addresses, Parcels, 

      Shipments, Rates, Transactions, Refunds, Customs Items, and Customs
      Declarations are disposable. This means that 

      once you have created an object, you cannot change it. Instead, create a
      new one with the desired values.


      <h3>API Version</h3>


      This reference guide supports the Shippo API version: `2018-02-08` . 


      To see reference guides for older API versions, see our <a
      href="https://docs.goshippo.com/docs/guides_general/legacy_reference/">legacy
      reference guide</a>. 

      For more information about Shippo API versions, see our <a
      href="https://docs.goshippo.com/docs/api_concepts/apiversioning/">API
      versions guide</a>.
    name: Overview
  - description: <SchemaDefinition schemaRef="#/components/schemas/Carriers"/>
    name: Carriers
  - description: <SchemaDefinition schemaRef="#/components/schemas/ServiceLevelEnumSet"/>
    name: Service Levels
  - description: >-
      A predefined package used by one or multiple carriers.  See below for all
      available values and the corresponding tokens. 

      When a template is given, the parcel dimensions do not have to be sent,
      the dimensions below will instead be used. 

      The parcel weight is not affected by the use of a template.

      <SchemaDefinition schemaRef="#/components/schemas/ParcelTemplateEnumSet"/>
    name: Parcel Templates
paths:
  /addresses:
    get:
      tags:
        - Addresses
      summary: List all addresses
      operationId: Addresses_listAll
      description: >-
        Returns a list of all address objects that have been created in this
        account.
      parameters:
        - $ref: '#/components/parameters/PageNumberQueryParam'
        - $ref: '#/components/parameters/ResultsPerPageQueryParam'
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/addressPaginatedResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: |-
            curl https://api.goshippo.com/addresses/ \
             -H "Authorization: ShippoToken shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # List all addresses
            shippo.Address.all()
        - label: Ruby
          lang: Ruby
          source: |-
            # List all addresses
            Shippo::Address.all()
        - label: Node
          lang: Node
          source: |-
            // List all addresses
            shippo.address.list();
        - label: PHP
          lang: PHP
          source: |-
            // List all addresses
            Shippo_Address::all();
    post:
      tags:
        - Addresses
      summary: Create a new address
      operationId: Addresses_createNewAddress
      description: >-
        Creates a new address object. You can use address objects to create new
        shipments, calculate rates, and to create orders.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        description: Address details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/addressResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: |-
            curl https://api.goshippo.com/addresses/ \
              -H "Authorization: ShippoToken shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \
              -d name="Shawn Ippotle" \
              -d company="Shippo" \
              -d street1="215 Clayton St." \
              -d street2="" \
              -d city="San Francisco" \
              -d state="CA" \
              -d zip=94117 \
              -d country="US" \
              -d phone="+1 555 341 9393" \
              -d email="shippotle@shippo.com"\
              -d is_residential=True\
              -d metadata="Customer ID 123456"
        - label: Python
          lang: Python
          source: |-
            # Create address object
            address_from = shippo.Address.create(
                name="Shawn Ippotle",
                company="Shippo",
                street1="215 Clayton St.",
                city="San Francisco",
                state="CA",
                zip="94117",
                country="US", # iso2 country code
                phone="+1 555 341 9393",
                email="shippotle@shippo.com"
            )
        - label: Ruby
          lang: Ruby
          source: |-
            # Create address object
            address_from = Shippo::Address.create(
                :name => "Shawn Ippotle",
                :company => "Shippo",
                :street1 => "Clayton St.",
                :street_no => "215",
                :street2 => "",
                :city => "San Francisco",
                :state => "CA",
                :zip => "94117",
                :country => "US",
                :phone => "+1 555 341 9393",
                :email => "shippotle@shippo.com"
            )
        - label: Node
          lang: Node
          source: |-
            // Create address object
            var addressFrom  = shippo.address.create({
                "name":"Shawn Ippotle",
                "company":"Shippo",
                "street1":"215 Clayton St.",
                "city":"San Francisco",
                "state":"CA",
                "zip":"94117",
                "country":"US", // iso2 country code
                "phone":"+1 555 341 9393",
                "email":"shippotle@shippo.com",
            })
        - label: PHP
          lang: PHP
          source: |-
            // Create address object
            $fromAddress = Shippo_Address::create( array(
                "name" => "Shawn Ippotle",
                "company" => "Shippo",
                "street1" => "215 Clayton St.",
                "city" => "San Francisco",
                "state" => "CA",
                "zip" => "94117",
                "country" => "US",
                "phone" => "+1 555 341 9393",
                "email" => "shippotle@shippo.com" 
            ));
  /addresses/{AddressId}:
    get:
      tags:
        - Addresses
      summary: Retrieve an address
      operationId: Addresses_getAddressById
      description: Returns an existing address using an object ID.
      parameters:
        - description: Object ID of the address
          in: path
          name: AddressId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/addressResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl
            https://api.goshippo.com/addresses/d799c2679e644279b59fe661ac8fa488/
            \
              -H "Authorization: ShippoToken shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # Retrieve an existing address by object_id
            shippo.Address.retrieve("d799c2679e644279b59fe661ac8fa488")
        - label: Ruby
          lang: Ruby
          source: |-
            # Retrieve an existing address by object_id
            Shippo::Address.get('d799c2679e644279b59fe661ac8fa488')
        - label: Node
          lang: Node
          source: |-
            // Retrieve an existing address by object_id
            shippo.address.retrieve('d799c2679e644279b59fe661ac8fa488');
        - label: PHP
          lang: PHP
          source: |-
            // Retrieve an existing address by object_id
            Shippo_Address::retrieve('d799c2679e644279b59fe661ac8fa488');
  /addresses/{AddressId}/validate:
    get:
      tags:
        - Addresses
      summary: Validate an address
      operationId: Addresses_validateAddress
      description: Validates an existing address using an object ID
      parameters:
        - description: Object ID of the address
          in: path
          name: AddressId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/addressResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl
            https://api.goshippo.com/addresses/d799c2679e644279b59fe661ac8fa488/validate/
            \
              -H "Authorization: ShippoToken shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # Validate an existing address by object_id
            shippo.Address.validate('d799c2679e644279b59fe661ac8fa488')
        - label: Ruby
          lang: Ruby
          source: |-
            # Validate an existing address by object_id
            Shippo::Address.get("d799c2679e644279b59fe661ac8fa488").validate()
        - label: Node
          lang: Node
          source: >-
            // Validate an existing address by object_id

            shippo.address.validate("d799c2679e644279b59fe661ac8fa488",
            function(err, address) {
              // asynchronously called
            });
        - label: PHP
          lang: PHP
          source: |-
            // Validate an existing address by object_id
            Shippo_Address::validate('d799c2679e644279b59fe661ac8fa488');
      x-speakeasy-name-override: validate
  /batches:
    post:
      tags:
        - Batches
      summary: Create a batch
      operationId: Batches_createBatchShipments
      description: >-
        Creates a new batch object for purchasing shipping labels for many
        shipments at once. Batches are created asynchronously. This means that
        the API response won't include your batch shipments yet. You need to
        retrieve the batch later to verify that all batch shipments are valid.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        description: Batch details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreateRequest'
      responses:
        '200':
          $ref: '#/components/responses/batchResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl https://api.goshippo.com/batches/  \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \

            -H "Content-Type: application/json"  \

            -d '{
                  "default_carrier_account": "078870331023437cb917f5187429b093",
                  "default_servicelevel_token": "usps_priority",
                  "label_filetype": "PDF_4x6",
                  "metadata": "BATCH #170",
                  "batch_shipments": [
                    {
                      "shipment": {    
                        "address_from": {
                          "name": "Mr Hippo",
                          "street1": "965 Mission St",
                          "street2": "Ste 201",
                          "city": "San Francisco",
                          "state": "CA",
                          "zip": "94103",
                          "country": "US",
                          "phone": "4151234567",
                          "email": "mrhippo@shippo.com"
                        },
                        "address_to": {
                          "name": "Mrs Hippo",
                          "company": "",
                          "street1": "Broadway 1",
                          "street2": "",
                          "city": "New York",
                          "state": "NY",
                          "zip": "10007",
                          "country": "US",
                          "phone": "4151234567",
                          "email": "mrshippo@shippo.com"
                        },
                        "parcels": [{
                          "length": "5",
                          "width": "5",
                          "height": "5",
                          "distance_unit": "in",
                          "weight": "2",
                          "mass_unit": "oz"
                        }]
                      }
                    },
                    {
                      "shipment": {    
                        "address_from": {
                          "name": "Mr Hippo",
                          "street1": "1092 Indian Summer Ct",
                          "city": "San Jose",
                          "state": "CA",
                          "zip": "95122",
                          "country": "US",
                          "phone": "4151234567",
                          "email": "mrhippo@shippo.com"
                        },
                        "address_to": {
                          "name": "Mrs Hippo",
                          "company": "",
                          "street1": "Broadway 1",
                          "street2": "",
                          "city": "New York",
                          "state": "NY",
                          "zip": "10007",
                          "country": "US",
                          "phone": "4151234567",
                          "email": "mrshippo@shippo.com"
                        },
                        "parcels": [{
                          "length": "5",
                          "width": "5",
                          "height": "5",
                          "distance_unit": "in",
                          "weight": "20",
                          "mass_unit": "lb"
                        }]
                      },
                      "carrier_account": "a4391cd4ab974f478f55dc08b5c8e3b3",
                      "servicelevel_token": "fedex_2_day"
                    }
                  ]
                }' 
        - label: Python
          lang: Python
          source: |-
            batch = shippo.Batch.create(
                default_carrier_account="078870331023437cb917f5187429b093",
                default_servicelevel_token="usps_priority",
                label_filetype="PDF_4x6",
                metadata="this is metadata",
                batch_shipments=[
                    {
                      "shipment": {
                        "address_from": {
                          "name": "Mr Hippo",
                          "street1": "965 Mission St",
                          "street2": "Ste 201",
                          "city": "San Francisco",
                          "state": "CA",
                          "zip": "94103",
                          "country": "US",
                          "phone": "4151234567",
                        },
                        "address_to": {
                          "name": "Mrs Hippo",
                          "company": "",
                          "street1": "Broadway 1",
                          "street2": "",
                          "city": "New York",
                          "state": "NY",
                          "zip": "10007",
                          "country": "US",
                          "phone": "4151234567",
                        },
                        "parcels": [{
                          "length": "5",
                          "width": "5",
                          "height": "5",
                          "distance_unit": "in",
                          "weight": "2",
                          "mass_unit": "oz"
                        }]
                      }
                    },
                    {
                      "shipment": {
                        "address_from": {
                          "name": "Mr Hippo",
                          "street1": "1092 Indian Summer Ct",
                          "city": "San Jose",
                          "state": "CA",
                          "zip": "95122",
                          "country": "US",
                          "phone": "4151234567",
                        },
                        "address_to": {
                          "name": "Mrs Hippo",
                          "company": "",
                          "street1": "Broadway 1",
                          "street2": "",
                          "city": "New York",
                          "state": "NY",
                          "zip": "10007",
                          "country": "US",
                          "phone": "4151234567",
                        },
                        "parcels": [{
                          "length": "5",
                          "width": "5",
                          "height": "5",
                          "distance_unit": "in",
                          "weight": "20",
                          "mass_unit": "lb"
                        }]
                      }
                    }
                ]
            )
        - label: Ruby
          lang: Ruby
          source: |-
            Shippo::batch.create({
                :default_carrier_account => DEFAULT_CARRIER_ACCOUNT,
                :default_servicelevel_token => 'usps_priority',
                :label_filetype => 'ZPLII',
                :metadata => 'BATCH #170',
                :batch_shipments => [
                  {
                    :shipment => {
                      :address_from   => address_from_one,
                      :address_to     => address_to_one,
                      :parcel         => parcel_one,
                      :async          => false
                    }
                  },
                  {
                    :shipment => {
                      :address_from   => address_from_two,
                      :address_to     => address_to_two,
                      :parcel         => parcel_two,
                      :async          => false
                    }
                  }
                ]
            })
        - label: Node
          lang: Node
          source: |-
            var batch = shippo.batch.create({
              "default_carrier_account": "078870331023437cb917f5187429b093",
              "default_servicelevel_token": "usps_priority",
              "label_filetype": "PDF_4x6",
              "metadata": "BATCH #170",
              "batch_shipments": [
                {
                  "shipment": {
                    "address_from": addressFromOne,
                    "address_to": addressToOne,
                    "parcels": parcelsOne
                  }
                },
                {
                  "shipment": {
                    "address_from": addressFromTwo,
                    "address_to": addressToTwo,
                    "parcels": parcelsTwo
                  }
                }
              ]
            })
        - label: PHP
          lang: PHP
          source: |-
            $batch = Shippo_Batch::create(array(
                'default_carrier_account' => $carrier,
                'default_servicelevel_token' => 'usps_priority',
                'label_filetype' => 'PDF_4x6',
                'metadata' => '',
                'batch_shipments' => array(
                    array(
                        'shipment' => array(
                            'address_from' => array(
                                'name' => 'Mr Hippo',
                                'street1' => '965 Mission St',
                                'street2' => 'Ste 201',
                                'city' => 'San Francisco',
                                'state' => 'CA',
                                'zip' => '94103',
                                'country' => 'US',
                                'phone' => '4151234567',
                                'email' => 'mrhippo@shippo.com'
                            ),
                            'address_to' => array(
                                'name' => 'Mrs Hippo',
                                'company' => '',
                                'street1' => 'Broadway 1',
                                'street2' => '',
                                'city' => 'New York',
                                'state' => 'NY',
                                'zip' => '10007',
                                'country' => 'US',
                                'phone' => '4151234567',
                                'email' => 'mrshippo@shippo.com'
                            ),
                            'parcels' => array(
                                array(
                                    'length' => '5',
                                    'width' => '5',
                                    'height' => '5',
                                    'distance_unit' => 'in',
                                    'weight' => '2',
                                    'mass_unit' => 'oz'
                                )
                            )
                        )
                    )
                )
            ))
  /batches/{BatchId}:
    get:
      tags:
        - Batches
      summary: Retrieve a batch
      operationId: Batches_getBatchById
      description: >-
        Returns a batch using an object ID. <br> Batch shipments are displayed
        100 at a time.  You can iterate 

        through each `page` using the `?page= query` parameter.  You can also
        filter based on batch shipment 

        status, for example, by passing a query param like
        `?object_results=creation_failed`. <br> 

        For more details on filtering results, see our guide on <a
        href="https://docs.goshippo.com/docs/api_concepts/filtering/"
        target="blank"> filtering</a>.
      parameters:
        - description: Object ID of the batch
          in: path
          name: BatchId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/batchResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl https://api.goshippo.com/batches/<BATCH OBJECT
            ID>?page=2&object_results=creation_failed \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: shippo.Batch.retrieve(batch_object_id)
        - label: Ruby
          lang: Ruby
          source: Shippo::batch.retrieve(batch_object_id)
        - label: Node
          lang: Node
          source: shippo.batch.retrieve(batchObjectId)
        - label: PHP
          lang: PHP
          source: Shippo_Batch::retrieve($batch_object_id)
  /batches/{BatchId}/add_shipments:
    post:
      tags:
        - Batches
      summary: Add shipments to a batch
      operationId: Batches_addShipmentsToBatch
      description: Adds batch shipments to an existing batch.
      parameters:
        - description: Object ID of the batch
          in: path
          name: BatchId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        description: Array of shipments to add to the batch
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchesAddShipmentsToBatchRequest'
      responses:
        '200':
          $ref: '#/components/responses/batchResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl -X POST https://api.goshippo.com/batches/<BATCH OBJECT
            ID>/add_shipments \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \

            -H "Content-Type: application/json"  \

            -d '[
                    {
                      "shipment": {    
                        "address_from": {
                          "name": "Mr Hippo",
                          "street1": "965 Mission St",
                          "street2": "Ste 201",
                          "city": "San Francisco",
                          "state": "CA",
                          "zip": "94103",
                          "country": "US",
                          "phone": "4151234567",
                        },
                        "address_to": {
                          "name": "Hippo Jr",
                          "street1": "915 Broadway",
                          "street2": "19th Floor",
                          "city": "New York",
                          "state": "NY",
                          "zip": "10010",
                          "country": "US",
                          "phone": "2129947880",
                        },
                        "parcels": [{
                          "length": "12",
                          "width": "12",
                          "height": "12",
                          "distance_unit": "in",
                          "weight": "12",
                          "mass_unit": "oz"
                        }]
                      }
                    },
                    {
                      "shipment": {    
                        "address_from": {
                          "name": "Ms Hippo",
                          "street1": "1092 Indian Summer Ct",
                          "city": "San Jose",
                          "state": "CA",
                          "zip": "95122",
                          "country": "US",
                          "phone": "4151234567",
                        },
                        "address_to": {
                          "name": "Mr Hippo",
                          "street1": "965 Mission St",
                          "street2": "Ste 201",
                          "city": "San Francisco",
                          "state": "CA",
                          "zip": "94103",
                          "country": "US",
                          "phone": "4151234567",
                        },
                        "parcels": [{
                          "length": "5",
                          "width": "5",
                          "height": "5",
                          "distance_unit": "in",
                          "weight": "2",
                          "mass_unit": "lb"
                        }]
                      },
                      "carrier_account": "a4391cd4ab974f478f55dc08b5c8e3b3",
                      "servicelevel_token": "fedex_2_day"
                    }
                  ]'
      x-speakeasy-name-override: addShipments
  /batches/{BatchId}/purchase:
    post:
      tags:
        - Batches
      summary: Purchase a batch
      operationId: Batches_purchaseBatch
      description: >-
        Purchases an existing batch with a status of `VALID`. 

        Once you send a POST request to the purchase endpoint the batch status
        will change to `PURCHASING`. 

        When all the shipments are purchased, the status will change to
        `PURCHASED` and you will receive a 

        `batch_purchased` webhook indicating that the batch has been purchased
      parameters:
        - description: Object ID of the batch
          in: path
          name: BatchId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/batchResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl -X POST https://api.goshippo.com/batches/<BATCH OBJECT
            ID>/purchase \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
      x-speakeasy-name-override: purchase
  /batches/{BatchId}/remove_shipments:
    post:
      tags:
        - Batches
      summary: Remove shipments from a batch
      operationId: Batches_removeShipments
      description: Removes shipments from an existing batch shipment.
      parameters:
        - description: Object ID of the batch
          in: path
          name: BatchId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        description: Array of shipments object ids to remove from the batch
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchesRemoveShipmentsRequest'
      responses:
        '200':
          $ref: '#/components/responses/batchResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl -X POST https://api.goshippo.com/batches/<BATCH OBJECT
            ID>/remove_shipments \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \

            -H "Content-Type: application/json"  \

            -d '[
                  "aa7dea463a5a48b0b8fb21f90e72d779",
                  "f11b46440c144ce3b97fb5ddf02b8c71",
                  "5400f9078f764b1bbb121bcd08de127f",
                  "2ab2b452392545908d2cef8861a39c35"
                ]'
      x-speakeasy-name-override: removeShipments
  /carrier_accounts:
    get:
      tags:
        - Carrier Accounts
      summary: List all carrier accounts
      operationId: CarrierAccounts_listAllAccounts
      description: >-
        Returns a list of all carrier accounts connected to your Shippo account.
        These carrier accounts include both Shippo carrier accounts and your own
        carrier accounts that you have connected to your Shippo account.


        Additionally, you can get information about the service levels
        associated with each carrier account by passing in the
        `?service_levels=true` query parameter. <br>

        Using it appends the property `service_levels` to each carrier account.
        <br>

        By default, if the query parameter is omitted, the `service_levels`
        property will not be included in the response.
      parameters:
        - description: >-
            Appends the property `service_levels` to each returned carrier
            account
          in: query
          name: service_levels
          required: false
          schema:
            type: boolean
        - description: Filter the response by the specified carrier
          in: query
          name: carrier
          required: false
          schema:
            $ref: '#/components/schemas/Carriers'
        - description: Filter the response by the specified carrier account Id
          in: query
          name: account_id
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/PageNumberQueryParam'
        - $ref: '#/components/parameters/ResultsPerPageQueryParam'
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/carrierAccountPaginatedResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: |-
            curl https://api.goshippo.com/carrier_accounts?service_levels=true \
             -H "Authorization: ShippoToken shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # List all carrier accounts
            shippo.CarrierAccount.all()
        - label: Ruby
          lang: Ruby
          source: |-
            # List all carrier accounts
            Shippo::CarrierAccount.all()
        - label: Node
          lang: Node
          source: |-
            // List all carrier accounts
            shippo.carrieraccount.list();
        - label: PHP
          lang: PHP
          source: |-
            // List all carrier accounts
            Shippo_CarrierAccount::all();
    post:
      tags:
        - Carrier Accounts
      summary: Create a new carrier account
      operationId: CarrierAccounts_createNewAccount
      description: >-
        Creates a new carrier account or connects an existing carrier account to
        the Shippo account.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        description: Examples.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectExistingOwnUPSAccountRequest'
        x-examples:
          application/json:
            fedex-existing-account-example:
              summary: Connect an existing Fedex account to Shippo
              value:
                parameters:
                  first_name: Hippo
                  from_address_city: San Francisco
                  from_address_country_iso2: US
                  from_address_st: 250 Union St
                  from_address_state: CA
                  from_address_zip: 94133
                  last_name: Hippovich
                  meter: 118599345
                  phone_number: 1112223333
                  smartpost_id: 5902
                account_id: 321123
                carrier: fedex
                metadata: FEDEX Account
                test: false
            ups-existing-account-example:
              summary: Connect an existing UPS account to Shippo
              value:
                parameters:
                  title: Manager
                  account_number: 94567e
                  aia_country_iso2: US
                  billing_address_city: San Francisco
                  billing_address_country_iso2: US
                  billing_address_state: CA
                  billing_address_street1: 731 Market St
                  billing_address_street2: STE 200
                  billing_address_zip: 94103
                  collec_country_iso2: US
                  collec_zip: 94103
                  company: Shippo
                  currency_code: USD
                  email: hippo@shippo.com
                  full_name: Shippo Meister
                  has_invoice: false
                  invoice_controlid: 1234
                  invoice_date: 20210529
                  invoice_number: 1112234
                  invoice_value: 11.23
                  phone: 1112223333
                  ups_agreements: true
                account_id: 123456
                active: true
                carrier: ups
                metadata: UPS Account
                test: false
            ups-new-account-example:
              summary: Create a new UPS account
              value:
                parameters:
                  billing_address_city: San Francisco
                  billing_address_country_iso2: US
                  billing_address_state: CA
                  billing_address_street1: 731 Market St
                  billing_address_street2: STE 200
                  billing_address_zip: 94103
                  company: Shippo
                  email: hippo@shippo.com
                  full_name: Shippo Meister
                  phone: 1112223333
                  pickup_address_city: San Francisco
                  pickup_address_country_iso2: US
                  pickup_address_same_as_billing_address: false
                  pickup_address_state: CA
                  pickup_address_street1: 731 Market St
                  pickup_address_street2: STE 200
                  pickup_address_zip: 94103
                  ups_agreements: true
                account_id: 123456
                active: true
                carrier: ups
                metadata: UPS Account
                test: false
      responses:
        '201':
          $ref: '#/components/responses/carrierAccountResponse'
        '400':
          $ref: '#/components/responses/badRequestWithDetailResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl --location --request POST
            'https://api.goshippo.com/carrier_accounts/' \

            --header 'Authorization: ShippoToken {{token}}' \

            --header 'Content-Type: application/json' \

            --data-raw '{
              "account_id": "string",
              "active": true,
              "carrier": "ups",
              "metadata": "UPS Account",
              "parameters": {
                "billing_address_city": "San Francisco",
                "billing_address_country_iso2": "US",
                "billing_address_state": "CA",
                "billing_address_street1": "731 Market St",
                "billing_address_street2": "STE 200",
                "billing_address_zip": "94103",
                "company": "Shippo",
                "email": "hippo@shippo.com",
                "full_name": "Thorn Hall",
                "phone": "1112223333",
                "pickup_address_city": "San Francisco",
                "pickup_address_country_iso2": "US",
                "pickup_address_same_as_billing_address": false,
                "pickup_address_state": "CA",
                "pickup_address_street1": "731 Market St",
                "pickup_address_street2": "STE 200",
                "pickup_address_zip": "94103",
                "ups_agreements": true
              },
              "test": false
            }'
        - label: Python
          lang: Python
          source: |-
            fedex_account = shippo.CarrierAccount.create(
              carrier="fedex",
              account_id="321123",
              parameters={"meter" : "789987"},
              active=True
            )
        - label: Ruby
          lang: Ruby
          source: |-
            # Create a carrier account
            fedex_account = Shippo::CarrierAccount.create(
              :carrier => 'fedex',
              :account_id => '321123',
              :parameters => {:meter => '789987'},
              :active => true)
        - label: Node
          lang: Node
          source: |-
            shippo.carrieraccount.create({
                "carrier":"fedex", 
                "account_id":"321123", 
                "parameters":{"meter":"789987"},
                "active":true
            }, function(err, account) {
              // asynchronously called
            });
        - label: PHP
          lang: PHP
          source: |-
            $fedex_account = Shippo_CarrierAccount::create(array(
                'carrier' => 'fedex',
                'account_id' => '321123',
                'parameters' => array('meter' => '789987'),
                'active' => true
            ));
  /carrier_accounts/{CarrierAccountId}:
    get:
      tags:
        - Carrier Accounts
      summary: Retrieve a carrier account
      operationId: CarrierAccounts_getAccountById
      description: Returns an existing carrier account using an object ID.
      parameters:
        - description: Object ID of the carrier account
          in: path
          name: CarrierAccountId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/carrierAccountResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl
            https://api.goshippo.com/carrier_accounts/b741b99f95e841639b54272834bc478c
            \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # Retrieve an existing carrier account by object_id
            shippo.CarrierAccount.retrieve("b741b99f95e841639b54272834bc478c")
        - label: Ruby
          lang: Ruby
          source: |-
            # Retrieve an existing carrier account by object_id
            Shippo::CarrierAccount.get('b741b99f95e841639b54272834bc478c');
        - label: Node
          lang: Node
          source: |-
            // Retrieve an existing carrier account by object_id
            shippo.carrieraccount.retrieve('b741b99f95e841639b54272834bc478c');
        - label: PHP
          lang: PHP
          source: |-
            // Retrieve an existing carrier account by object_id
            Shippo_CarrierAccount::retrieve('b741b99f95e841639b54272834bc478c');
    put:
      tags:
        - Carrier Accounts
      summary: Update a carrier account
      operationId: CarrierAccounts_updateAccount
      description: >-
        Updates an existing carrier account object. The account_id and carrier
        can't be updated. This is because they form the unique identifier
        together.
      parameters:
        - description: Object ID of the carrier account
          in: path
          name: CarrierAccountId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        description: Examples.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrierAccountBase'
        x-examples:
          application/json:
            update-carrier-account:
              summary: Update a carrier account
              value:
                parameters: {}
                account_id: 123356
                active: true
                carrier: ups
      responses:
        '200':
          $ref: '#/components/responses/carrierAccountResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl
            https://api.goshippo.com/carrier_accounts/b741b99f95e841639b54272834bc478c/
            \

            -X PUT  \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \

            -d parameters='{
                "meter": "123987"
            }'
        - label: Python
          lang: Python
          source: >-
            # To update a carrier account we need the account's object_id. 

            # If you haven't stored it in your system, retrieve it first.

            # You can list all your accounts like this.

            accounts = shippo.CarrierAccount.all()

            print accounts


            # Now you can update the account with the corresponding object_id.

            fedex_account =
            shippo.CarrierAccount.update('b741b99f95e841639b54272834bc478c',
            active=True)
        - label: Ruby
          lang: Ruby
          source: >-
            # To update a carrier account we need the account's object_id. 

            # If you haven't stored it in your system, retrieve it first.

            # You can list all your accounts like this.

            accounts = Shippo::CarrierAccount.all()

            puts accounts


            # Now you can update the account with the corresponding object_id.

            fedex_account =
            Shippo::CarrierAccount.update('b741b99f95e841639b54272834bc478c',
            :active => true)
        - label: Node
          lang: Node
          source: >-
            // To update a carrier account we need the account's object_id. 

            // If you haven't stored it in your system, retrieve it first.

            // You can list all your accounts like this.

            var accounts = shippo.carrieraccount.list();

            console.log(accounts);


            //  Now you can update the account with the corresponding object_id.

            var fedex_account =
            shippo.carrieraccount.update("b741b99f95e841639b54272834bc478c",
            {"active":true}, function(err, account) {
              // asynchronously called
            });
        - label: PHP
          lang: PHP
          source: >-
            // To update a carrier account we need the account's object_id. 

            // If you haven't stored it in your system, retrieve it first.

            // You can list all your accounts like this.

            $accounts = Shippo_CarrierAccount::all();

            var_dump($accounts);


            //  Now you can update the account with the corresponding object_id.

            $fedex_account =
            Shippo_CarrierAccount::update('b741b99f95e841639b54272834bc478c',
            array('active' => true));
  /carrier_accounts/register/new:
    post:
      tags:
        - Carrier Accounts
      summary: Add a Shippo carrier account
      operationId: CarrierAccounts_addShippoAccount
      description: Adds a Shippo carrier account
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        description: Examples.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrierAccountsAddShippoAccountRequest'
      responses:
        '201':
          $ref: '#/components/responses/carrierAccountResponse'
        '400':
          $ref: '#/components/responses/badRequestWithErrorResponse'
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |-
            curl --location --request POST '/carrier_accounts/register/new' \
            --header 'Authorization: ShippoToken {{token}}' \
            --header 'Content-Type: application/json' \
            --data-raw '{
                "carrier": "canada_post",
                "parameters": {
                    "company": "Shippo",
                    "full_name": "Shippo Meister",
                    "email": "hippo@shippo.com",
                    "phone": "1112221122",
                    "canada_post_terms": true
                }
            }'
      x-speakeasy-name-override: register
  /carrier_accounts/reg-status:
    get:
      tags:
        - Carrier Accounts
      summary: Get Carrier Registration status
      operationId: CarrierAccounts_getRegStatus
      description: >-
        Returns the registration status for the given account for the given
        carrier
      parameters:
        - description: filter by specific carrier
          in: query
          name: carrier
          required: true
          schema:
            type: string
            enum:
              - ups
              - usps
              - canada_post
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/carrierAccountRegistrationStatusResponse'
      x-speakeasy-name-override: getRegistrationStatus
  /customs/declarations:
    get:
      tags:
        - Customs Declarations
      summary: List all customs declarations
      operationId: CustomsDeclarations_listAllDeclarations
      description: Returns a a list of all customs declaration objects
      parameters:
        - $ref: '#/components/parameters/PageNumberQueryParam'
        - $ref: '#/components/parameters/ResultsPerPageQueryParam'
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/customsDeclarationPaginatedResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl https://api.goshippo.com/customs/declarations/ \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # List all customs declarations
            shippo.CustomsDeclaration.all()
        - label: Ruby
          lang: Ruby
          source: |-
            # List all customs delcarations
            Shippo::CustomsDeclaration.all()
        - label: Node
          lang: Node
          source: |-
            // List all customs declarations
            shippo.customsdeclaration.list();
        - label: PHP
          lang: PHP
          source: |-
            // List all customs declarations
            Shippo_CustomsDeclaration::all();
    post:
      tags:
        - Customs Declarations
      summary: Create a new customs declaration
      operationId: CustomsDeclarations_createNewDeclaration
      description: Creates a new customs declaration object
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        description: CustomsDeclaration details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomsDeclarationCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/customsDeclarationResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: |-
            curl https://api.goshippo.com/customs/declarations/ \
            -H "Authorization: ShippoToken " \
            -H "Content-Type: application/json"  \
            -d '{          
                  "contents_type": "MERCHANDISE",
                  "non_delivery_option": "RETURN",
                  "certify": true,
                  "certify_signer": "Simon Kreuz",
                  "incoterm": "DDU",
                  "items": [{
                            "description": "T-shirt",
                            "quantity": 20,
                            "net_weight": "5",
                            "mass_unit": "lb",
                            "value_amount": "200",
                            "value_currency": "USD",
                            "tariff_number": "",
                            "origin_country": "US"
                    }]
            }'
        - label: Python
          lang: Python
          source: |-
            customs_item = {
            "description":"T-Shirt",
            "quantity":20,
            "net_weight":"1",
            "mass_unit":"lb",
            "value_amount":"200",
            "value_currency":"USD",
            "origin_country":"US",
            "tariff_number":"",
            }

            customs_declaration = shippo.CustomsDeclaration.create(
                contents_type="MERCHANDISE",
                contents_explanation="T-Shirt purchase",
                non_delivery_option="RETURN",
                certify=True,
                certify_signer="Simon Kreuz",
                items=[customs_item]
            )
        - label: Ruby
          lang: Ruby
          source: |-
            customs_item = {
                :description => "T-Shirt",
                :quantity => 20,
                :net_weight => "1",
                :mass_unit => "lb",
                :value_amount => "200",
                :value_currency => "USD",
                :origin_country => "US"
            }

            customs_declaration = Shippo::CustomsDeclaration.create(
                :contents_type => "MERCHANDISE",
                :contents_explanation => "T-Shirt purchase",
                :non_delivery_option => "RETURN",
                :certify => true,
                :certify_signer => "Simon Kreuz",
                :items => [customs_item]
            )
        - label: Node
          lang: Node
          source: |-
            var customsItem = {
                "description":"T-Shirt",
                "quantity":20,
                "net_weight":"1",
                "mass_unit":"lb",
                "value_amount":"200",
                "value_currency":"USD",
                "origin_country":"US",
            };

            shippo.customsdeclaration.create({
                "contents_type": "MERCHANDISE",
                "contents_explanation": "T-Shirt purchase",
                "non_delivery_option": "RETURN",
                "certify": true,
                "certify_signer": "Simon Kreuz",
                "items": [customsItem],
            }, function (err, customsDeclaration) {
                // asynchronously called
            });
        - label: PHP
          lang: PHP
          source: |-
            $customs_item = array(
                'description'=> 'T-Shirt',
                'quantity'=> '20',
                'net_weight'=> '1',
                'mass_unit'=> 'lb',
                'value_amount'=> '200',
                'value_currency'=> 'USD',
                'origin_country'=> 'US');

            $customs_declaration = Shippo_CustomsDeclaration::create(
            array(
                'contents_type'=> 'MERCHANDISE',
                'contents_explanation'=> 'T-Shirt purchase',
                'non_delivery_option'=> 'RETURN',
                'certify'=> 'true',
                'certify_signer'=> 'Simon Kreuz',
                'items'=> array($customs_item)
            ));
  /customs/declarations/{CustomsDeclarationId}:
    get:
      tags:
        - Customs Declarations
      summary: Retrieve a customs declaration
      operationId: CustomsDeclarations_getDeclarationById
      description: Returns an existing customs declaration using an object ID
      parameters:
        - description: Object ID of the customs declaration
          in: path
          name: CustomsDeclarationId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PageNumberQueryParam'
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/customsDeclarationResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl
            https://api.goshippo.com/customs/declarations/e2197a54da9d470480f4f8796cc419cb
            \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: >-
            # Retrieve an existing customs declaration by object_id

            shippo.CustomsDeclaration.retrieve("b741b99f95e841639b54272834bc478c")
        - label: Ruby
          lang: Ruby
          source: |-
            # Retrieve an existing customs declaration by object_id
            Shippo::CustomsDeclaration.get('b741b99f95e841639b54272834bc478c')
        - label: Node
          lang: Node
          source: >-
            // Retrieve an existing customs declaration by object_id

            shippo.customsdeclaration.retrieve('e2197a54da9d470480f4f8796cc419cb');
        - label: PHP
          lang: PHP
          source: >-
            // Retrieve an existing customs declaration by object_id

            Shippo_CustomsDeclaration::retrieve('e2197a54da9d470480f4f8796cc419cb');
  /customs/items:
    get:
      tags:
        - Customs Items
      summary: List all customs items
      operationId: CustomsItems_listAllItems
      description: Returns a list all customs items objects.
      parameters:
        - $ref: '#/components/parameters/PageNumberQueryParam'
        - $ref: '#/components/parameters/ResultsPerPageQueryParam'
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/customsItemPaginatedResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl  https://api.goshippo.com/customs/items/ \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # List all customs items
            shippo.CustomsItem.all()
        - label: Ruby
          lang: Ruby
          source: |-
            # List all customs items
            Shippo::CustomsItem.all()
        - label: Node
          lang: Node
          source: |-
            // List all customs items
            shippo.customsitem.list();
        - label: PHP
          lang: PHP
          source: |-
            // List all customs items
            Shippo_CustomsItem::all();
    post:
      tags:
        - Customs Items
      summary: Create a new customs item
      operationId: CustomsItems_createNewCustomsItem
      description: Creates a new customs item object.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        description: CustomsItem details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomsItemBase'
      responses:
        '201':
          $ref: '#/components/responses/customsItemResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl  https://api.goshippo.com/customs/items/ \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \

            -d description="T-Shirt" \

            -d quantity=2 \

            -d net_weight="400" \

            -d mass_unit="g" \

            -d value_amount="20" \

            -d value_currency="USD" \

            -d tariff_number="" \

            -d origin_country="US" \

            -d metadata="Order ID '123123'"
        - label: Python
          lang: Python
          source: |-
            # Create customs item
            shippo.CustomsItem.create(
                description="T-Shirt",
                quantity=2,
                net_weight="400",
                mass_unit="g",
                value_amount="20",
                value_currency="USD",
                tariff_number="",
                origin_country="US",
                metadata="Order ID #123123"
            )
        - label: Node
          lang: Node
          source: |-
            // Create customs item
            shippo.customsitem.create({
                    "description": "T-Shirt",
                    "quantity": 2,
                    "net_weight": "400",
                    "mass_unit": "g",
                    "value_amount": "20",
                    "value_currency": "USD",
                    "tariff_number": "",
                    "origin_country": "US",
                    "metadata": "Order ID #123123"
            });
        - label: PHP
          lang: PHP
          source: |-
            // Create customs item
            $customs_item = Shippo_CustomsItem::create(
              array(
                "description" => 'T-Shirt',
                "quantity" => 2,
                "net_weight" => '400',
                "mass_unit" => 'g',
                "value_amount" => '20',
                "value_currency" => 'USD',
                "tariff_number" => '',
                "origin_country" => 'US',
                "metadata" => 'Order ID #123123'
              )
            );
  /customs/items/{CustomsItemId}:
    get:
      tags:
        - Customs Items
      summary: Retrieve a customs item
      operationId: CustomsItems_getExistingItem
      description: Returns an existing customs item using an object ID
      parameters:
        - description: Object ID of the customs item
          in: path
          name: CustomsItemId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PageNumberQueryParam'
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/customsItemResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl 
            https://api.goshippo.com/customs/items/55358464c7b740aca199b395536981bd
            \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # Retrieve an existing customs item by object_id
            shippo.CustomsItem.retrieve("55358464c7b740aca199b395536981bd")
        - label: Ruby
          lang: Ruby
          source: |-
            # Retrieve an existing customs item by object_id
            Shippo::CustomsItem.get('55358464c7b740aca199b395536981bd')
        - label: Node
          lang: Node
          source: |-
            // Retrieve an existing customs item by object_id
            shippo.customsitem.retrieve('55358464c7b740aca199b395536981bd');
        - label: PHP
          lang: PHP
          source: |-
            // Retrieve an existing customs item by object_id
            Shippo_CustomsItem::retrieve('55358464c7b740aca199b395536981bd');
  /live-rates:
    post:
      tags:
        - Rates at Checkout
      summary: Generate a live rates request
      operationId: RatesAtCheckout_initiateLiveRatesRequest
      description: >-
        Initiates a live rates request. Include either the object ID for

        an existing address record or a fully formed address object when
        entering

        an address value. You can also enter the object ID of an existing user
        parcel

        template or a fully formed user parcel template object as the parcel
        value.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        description: Generate rates at checkout
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LiveRateCreateRequest'
      responses:
        '200':
          $ref: '#/components/responses/liveRatePaginatedResponse'
      x-codeSamples:
        - label: cURL
          lang: cURL
          source: |-
            curl https://api.goshippo.com/live-rates \
              -H "Authorization: ShippoToken <API_TOKEN>" \
              -H "Content-Type: application/json"
            --data-raw '{
                "address_from": {
                   "name": "S. Hippo",
                   "company": "Shippo",
                   "street1": "731 Market St #200",
                   "street_no": "",
                   "street2": "",
                   "street3": "",
                   "city": "San Francisco",
                   "state": "CA",
                   "zip": "94103",
                   "country": "US"
                },
                "address_to": {
                   "name": "Bob Bloat",
                   "company": "SF Zoo",
                   "street1": "Sloat Blvd. & Upper Great Hwy.",
                   "street_no": "",
                   "street2": "",
                   "street3": "",
                   "city": "San Francisco",
                   "state": "CA",
                   "zip": "94132",
                   "country": "US"
                },
                "line_items": [
                   {
                      "quantity": 1,
                      "total_price": "12.00",
                      "currency": "USD",
                      "weight": "1.0",
                      "weight_unit": "lb",
                      "title": "Hippo Snax",
                      "manufacture_country": "US",
                      "sku": "HM-123"
                   }
               ],
               "parcel": {
                  "length": "10",
                  "width": "15",
                  "height": "10",
                  "distance_unit": "in",
                  "weight": "1",
                  "mass_unit": "lb"
               }
            }'
  /live-rates/settings/parcel-template:
    get:
      tags:
        - Rates at Checkout
      summary: Show current default parcel template
      operationId: RatesAtCheckout_showDefaultParcelTemplate
      description: >-
        Retrieve and display the currently configured default parcel template
        for live rates.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/defaultParcelTemplateResponse'
      x-codeSamples:
        - label: cURL
          lang: cURL
          source: |-
            curl https://api.goshippo.com/live-rates/settings/parcel-template \
              -H "Authorization: ShippoToken <API_TOKEN>" \
              -H "Content-Type: application/json"
      x-speakeasy-name-override: getDefaultParcelTemplate
    put:
      tags:
        - Rates at Checkout
      summary: Update default parcel template
      operationId: RatesAtCheckout_updateDefaultParcelTemplate
      description: >-
        Update the currently configured default parcel template for live rates.
        The object_id in the request payload should identify the user parcel
        template to be the new default.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultParcelTemplateUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/defaultParcelTemplateResponse'
      x-codeSamples:
        - label: cURL
          lang: cURL
          source: >-
            curl -X PUT
            https://api.goshippo.com/live-rates/settings/parcel-template \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \

            -d '
              {
                "object_id": "b958d3690bb04bb8b2986724872750f5"
              }
            '
      x-speakeasy-name-override: updateDefaultParcelTemplate
    delete:
      tags:
        - Rates at Checkout
      summary: Clear current default parcel template
      operationId: RatesAtCheckout_clearDefaultParcelTemplate
      description: Clears the currently configured default parcel template for live rates.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '204':
          description: The parcel template was successfully deleted.
      x-codeSamples:
        - label: cURL
          lang: cURL
          source: >-
            curl -X DELETE
            https://api.goshippo.com/live-rates/settings/parcel-template \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \
      x-speakeasy-name-override: deleteDefaultParcelTemplate
  /manifests:
    get:
      tags:
        - Manifests
      summary: List all manifests
      operationId: Manifests_listAllManifests
      description: Returns a list of all manifest objects.
      parameters:
        - $ref: '#/components/parameters/PageNumberQueryParam'
        - $ref: '#/components/parameters/ResultsPerPageQueryParam'
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/manifestPaginatedResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl https://api.goshippo.com/manifests/ \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # List all manifests
            shippo.Manifest.all()
        - label: Ruby
          lang: Ruby
          source: |-
            # List all manifests
            Shippo::Manifest.all()
        - label: Node
          lang: Node
          source: |-
            // List all manifests
            shippo.manifest.list();
        - label: PHP
          lang: PHP
          source: |-
            // List all manifests
            Shippo_Manifest::all();
    post:
      tags:
        - Manifests
      summary: Create a new manifest
      operationId: Manifests_createNewManifest
      description: Creates a new manifest object.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        description: Manifest details and contact info.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManifestCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/manifestResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl https://api.goshippo.com/manifests/ \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \

            -d carrier_account="b741b99f95e841639b54272834bc478c", \

            -d shipment_date="2014-05-16T23:59:59Z" \

            -d address_from="d799c2679e644279b59fe661ac8fa488" \

            -d transactions=["64bba01845ef40d29374032599f22588",
            "c169aa586a844cc49da00d0272b590e1"] \

            -d async=false
        - label: Python
          lang: Python
          source: |-
            manifest = shippo.Manifest.create(
              carrier_account="b741b99f95e841639b54272834bc478c",
              shipment_date="2014-05-16T23:59:59Z",
              transactions=["64bba01845ef40d29374032599f22588", "c169aa586a844cc49da00d0272b590e1"]
            )
        - label: Ruby
          lang: Ruby
          source: |-
            manifest = Shippo::Manifest.create(
              :carrier_account => "b741b99f95e841639b54272834bc478c",
              :shipment_date => "2014-05-16T23:59:59Z",
              :transactions => ["64bba01845ef40d29374032599f22588", "c169aa586a844cc49da00d0272b590e1"]
            )
        - label: Node
          lang: Node
          source: |-
            shippo.manifest.create({
                "carrier_account": "b741b99f95e841639b54272834bc478c",
                "shipment_date": "2014-05-16T23:59:59Z",
                "transactions": [
                    "64bba01845ef40d29374032599f22588",
                    "c169aa586a844cc49da00d0272b590e1"
                ]
            }, function(err, manifest) {
                // asynchronously called
            });
        - label: PHP
          lang: PHP
          source: |-
            $manifest = Shippo_Manifest::create(
                array(
                    'carrier_account'=> 'b741b99f95e841639b54272834bc478c',
                    'shipment_date'=> '2014-05-16T23:59:59Z',
                    'transactions'=> array('64bba01845ef40d29374032599f22588', 'c169aa586a844cc49da00d0272b590e1')
            ));
  /manifests/{ManifestId}:
    get:
      tags:
        - Manifests
      summary: Retrieve a manifest
      operationId: Manifests_getManifestById
      description: Returns an existing manifest using an object ID.
      parameters:
        - description: Object ID of the manifest to update
          in: path
          name: ManifestId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/manifestResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl
            https://api.goshippo.com/manifests/0fadebf6f60c4aca95fa01bcc59c79ae
            \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # Retrieve an existing manifest by object_id
            shippo.Manifest.retrieve("0fadebf6f60c4aca95fa01bcc59c79ae")
        - label: Ruby
          lang: Ruby
          source: |-
            # Retrieve an existing manifest by object_id
            Shippo::Manifest.get('0fadebf6f60c4aca95fa01bcc59c79ae')
        - label: Node
          lang: Node
          source: |-
            // Retrieve an existing manifest by object_id
            shippo.manifest.retrieve('0fadebf6f60c4aca95fa01bcc59c79ae');
        - label: PHP
          lang: PHP
          source: |-
            // Retrieve an existing manifest by object_id
            Shippo_Manifest::retrieve('0fadebf6f60c4aca95fa01bcc59c79ae');
  /orders:
    get:
      tags:
        - Orders
      summary: List all orders
      operationId: Orders_listAllOrders
      description: Returns a list of all order objects.
      parameters:
        - $ref: '#/components/parameters/PageNumberQueryParam'
        - $ref: '#/components/parameters/ResultsPerPageQueryParam'
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/orderPaginatedResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl https://api.goshippo.com/orders/ \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
    post:
      tags:
        - Orders
      summary: Create a new order
      operationId: Orders_createNewOrder
      description: Creates a new order object.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        description: Order details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/orderResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl https://api.goshippo.com/orders/ \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \

            -d '{
                    "to_address": {
                        "city": "San Francisco",
                        "company": "Shippo",
                        "country": "US",
                        "email": "shippotle@shippo.com",
                        "name": "Mr Hippo",
                        "phone": "15553419393",
                        "state": "CA",
                        "street1": "215 Clayton St.",
                        "zip": "94117"
                    },
                    "line_items": [
                        {
                            "quantity": 1,
                            "sku": "HM-123",
                            "title": "Hippo Magazines",
                            "total_price": "12.10",
                            "currency": "USD",
                            "weight": "0.40",
                            "weight_unit": "lb"
                        }
                    ],
                    "placed_at": "2016-09-23T01:28:12Z",
                    "order_number": "#1068",
                    "order_status": "PAID",
                    "shipping_cost": "12.83",
                    "shipping_cost_currency": "USD",
                    "shipping_method": "USPS First Class Package",
                    "subtotal_price": "12.10",
                    "total_price": "24.93",
                    "total_tax": "0.00",
                    "currency": "USD",
                    "weight": "0.40",
                    "weight_unit": "lb"
                }'
  /orders/{OrderId}:
    get:
      tags:
        - Orders
      summary: Retrieve an order
      operationId: Orders_getOrderById
      description: Retrieves an existing order using an object ID.
      parameters:
        - description: Object ID of the order
          in: path
          name: OrderId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/orderResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl
            https://api.goshippo.com/orders/4f2bc588e4e5446cb3f9fdb7cd5e190b/ \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
  /parcel-templates:
    get:
      tags:
        - Carrier Parcel Templates
      summary: List all carrier parcel templates
      operationId: CarrierParcelTemplates_listAllCarrierParcelTemplates
      description: >-
        List all carrier parcel template objects. <br> Use the following query
        string params to filter the results as needed. <br> <ul>
        <li>`include=all` (the default). Includes templates from all carriers
        </li> <li>`include=user`. Includes templates only from carriers which
        the user has added (whether or not they're currently enabled) </li>
        <li>`include=enabled`. includes templates only for carriers which the
        user has added and enabled </li> <li>`carrier=*token*`. filter by
        specific carrier, e.g. fedex, usps </li> </ul>
      parameters:
        - description: filter by user or enabled
          name: include
          in: query
          schema:
            type: string
            enum:
              - all
              - user
              - enabled
        - description: filter by specific carrier
          name: carrier
          example: fedex
          in: query
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/carrierParcelTemplateListResponse'
      x-codeSamples:
        - label: cURL
          lang: cURL
          source: >-
            curl https://api.goshippo.com/parcel-templates  \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \

            -H "Content-Type: application/json"
  /parcel-templates/{CarrierParcelTemplateToken}:
    get:
      tags:
        - Carrier Parcel Templates
      summary: Retrieve a carrier parcel templates
      operationId: CarrierParcelTemplates_getTemplateById
      description: >-
        Fetches the parcel template information for a specific carrier parcel
        template, identified by the token.
      parameters:
        - description: The unique string representation of the carrier parcel template
          in: path
          name: CarrierParcelTemplateToken
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/carrierParcelTemplateResponse'
      x-codeSamples:
        - label: cURL
          lang: cURL
          source: >-
            curl https://api.goshippo.com/parcel-templates/Fedex_Box_Small_1  \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \

            -H "Content-Type: application/json"
  /parcels:
    get:
      tags:
        - Parcels
      summary: List all parcels
      operationId: Parcels_listAll
      description: Returns a list of all parcel objects.
      parameters:
        - $ref: '#/components/parameters/PageNumberQueryParam'
        - $ref: '#/components/parameters/ResultsPerPageQueryParam'
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/parcelPaginatedResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: |-
            curl https://api.goshippo.com/parcels/ \
              -H "Authorization: ShippoToken shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # List all parcels
            shippo.Parcel.all()
        - label: Ruby
          lang: Ruby
          source: |-
            # List all parcels
            Shippo::Parcel.all()
        - label: Node
          lang: Node
          source: |-
            // List all parcels
            shippo.parcel.list();
        - label: PHP
          lang: PHP
          source: |-
            // List all parcels
            Shippo_Parcel::all();
    post:
      tags:
        - Parcels
      summary: Create a new parcel
      operationId: Parcels_createNewParcel
      description: Creates a new parcel object.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        description: Parcel details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParcelRequest'
      responses:
        '201':
          $ref: '#/components/responses/parcelResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: |-
            curl https://api.goshippo.com/parcels/ \
              -H "Authorization: ShippoToken shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \
              -d length=5 \
              -d width=5 \
              -d height=5 \
              -d distance_unit="cm" \
              -d weight=2 \
              -d mass_unit="lb" \
              -d template="" \
              -d metadata="Customer ID 123456"
        - label: Python
          lang: Python
          source: |-
            # Create parcel object
            parcel = shippo.Parcel.create(
                length="5",
                width="5",
                height="5",
                distance_unit="in",
                weight="2",
                mass_unit="lb"
            )
        - label: Ruby
          lang: Ruby
          source: |-
            # Create parcel object
            parcel = Shippo::Parcel.create(
                :length => 5,
                :width => 1,
                :height => 5.555,
                :distance_unit => :cm,
                :weight => 2,
                :mass_unit => :lb
            )
        - label: Node
          lang: Node
          source: |-
            // Create parcel object
            var parcel = shippo.parcel.create({
                "length": "5",
                "width": "5",
                "height": "5",
                "distance_unit": "in",
                "weight": "2",
                "mass_unit": "lb",
            })
        - label: PHP
          lang: PHP
          source: |-
            // Create parcel object
            $parcel = Shippo_Parcel::create(array(
                "length"=> "5",
                "width"=> "5",
                "height"=> "5",
                "distance_unit"=> "in",
                "weight"=> "2",
                "mass_unit"=> "lb",
            ));
  /parcels/{ParcelId}:
    get:
      tags:
        - Parcels
      summary: Retrieve an existing parcel
      operationId: Parcels_getParcelDetails
      description: >-
        Returns parcel details using an existing parcel object ID (this will not
        return parcel details associated with un-purchased shipment/rate parcel
        object IDs).
      parameters:
        - description: Object ID of the parcel
          in: path
          name: ParcelId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/parcelResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl
            https://api.goshippo.com/parcels/7df2ecf8b4224763ab7c71fae7ec8274/ \
              -H "Authorization: ShippoToken shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # Retrieve an existing parcel by object id.
            shippo.Parcel.retrieve("fcd9c72b564d4bfa8c03299ed6545132")
        - label: Ruby
          lang: Ruby
          source: |-
            # Retrieve an existing parcel by object_id
            Shippo::Parcel.get('fcd9c72b564d4bfa8c03299ed6545132')
        - label: Node
          lang: Node
          source: |-
            // Retrieve an existing parcel by object_id
            shippo.parcel.retrieve('fcd9c72b564d4bfa8c03299ed6545132');
        - label: PHP
          lang: PHP
          source: |-
            // Retrieve an existing parcel by object_id
            Shippo_Parcel::retrieve('fcd9c72b564d4bfa8c03299ed6545132');
  /pickups:
    post:
      tags:
        - Pickups
      summary: Create a pickup
      operationId: Pickups_createObject
      description: >-
        Creates a pickup object. This request is for a carrier to come to a
        specified location to take a package for shipping.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        description: >-
          Shippoâ€™s pickups endpoint allows you to schedule pickups with USPS and
          DHL Express for eligible shipments that you have already created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickupBase'
      responses:
        '201':
          $ref: '#/components/responses/pickupResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl https://api.goshippo.com/pickups/  \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \

            -H "Content-Type: application/json"  \

            -d '{
                  "carrier_account":"6c51273296864869829b96a80fb13ea1",
                  "location":{
                          "building_location_type": "Other",
                          "building_type": "suite",
                          "instructions": "Behind screen door",
                          "address": {
                                  "name": "Mrs Hippo",
                                  "company": "Hungry Hippos",
                                  "street1": "965 Mission St #201",
                                  "city": "San Francisco",
                                  "state": "CA",
                                  "zip": "95122",
                                  "country": "US",
                                  "phone": "+14159876543",
                                  "email": "mrshippo@shippo.com"
                              }
                  },
                  "transactions": ["7439c279b374494c9a80ca24f59e6fc5"],
                  "requested_start_time":"2020-05-12T12:00:00Z",
                  "requested_end_time": "2020-05-12T16:00:00Z",
                  "metadata": "Customer ID 123456",
                  "is_test": false
                }'
  /rates/{RateId}:
    get:
      tags:
        - Rates
      summary: Retrieve a rate
      operationId: Rates_getRateById
      description: Returns an existing rate using a rate object ID.
      parameters:
        - description: Object ID of the rate
          in: path
          name: RateId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/rateResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl https://api.goshippo.com/rates/ee81fab0372e419ab52245c8952ccaeb
            \
              -H "Authorization: ShippoToken shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # Get all rates for the shipment.
            # sync=True indicates that the function will wait until all
            # rates are generated before it returns the rate list.
            rates = shippo.Shipment.get_rates(shipment.object_id, sync=True)
        - label: Ruby
          lang: Ruby
          source: |-
            # Wait for rates to be generated
            timeout_rates_request = 10 # seconds
            while ["QUEUED","WAITING"].include? shipment.status do
              Timeout::timeout(timeout_rates_request) do
                shipment = Shippo::Shipment.get(shipment["object_id"])
              end
            end

            # Retrieve all rates
            rates = shipment.rates()
        - label: Node
          lang: Node
          source: >-
            //Returns the shipping rate using a Rate object ID

            shippo.rate.retrieve('0e5d30f4a8e84939ab46948226ab4a84').then(function(rates)

            {
              console.log("rates : %s", JSON.stringify(rates));
            });
        - label: PHP
          lang: PHP
          source: >-
            // Check if rate generation has been finished

            $attempts = 0;

            while ( ( $shipment["status"] == "QUEUED" || $shipment["status"] ==
            "WAITING" ) && $attempts < 10 ){
                $shipment = Shippo_Shipment::retrieve( $shipment["object_id"] );
                $attempts += 1;
            }


            // Retrieve all rates

            $rates = Shippo_Shipment::get_shipping_rates( array( 'id'=>
            $shipment["object_id"] ) );
  /refunds:
    get:
      tags:
        - Refunds
      summary: List all refunds
      operationId: Refunds_listAll
      description: Returns a list all refund objects.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/refundPaginatedResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: |-
            curl https://api.goshippo.com/refunds/ \
                -H "Authorization: ShippoToken shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # List all refunds
            shippo.Refund.all()
        - label: Ruby
          lang: Ruby
          source: |-
            # List all refunds
            Shippo::Refund.all()
        - label: Node
          lang: Node
          source: |-
            // List all refunds
            shippo.refund.list();
        - label: PHP
          lang: PHP
          source: |-
            // List all refunds
            Shippo_Refund::all();
  /refunds/{RefundId}:
    get:
      tags:
        - Refunds
      summary: Retrieve a refund
      operationId: Refunds_getRefundById
      description: Returns an existing rate using a rate object ID.
      parameters:
        - description: Object ID of the refund to update
          in: path
          name: RefundId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/refundResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl
            https://api.goshippo.com/refunds/d7c811cff9e24e4387418876f1ffd371 \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # Retrieve an existing refund by object_id
            shippo.Refund.retrieve("d7c811cff9e24e4387418876f1ffd371")
        - label: Ruby
          lang: Ruby
          source: |-
            # Retrieve an existing refund by object_id
            Shippo::Refund.get('d7c811cff9e24e4387418876f1ffd371')
        - label: Node
          lang: Node
          source: |-
            // Retrieve an existing refund by object_id
            shippo.refund.retrieve('d7c811cff9e24e4387418876f1ffd371');
        - label: PHP
          lang: PHP
          source: |-
            // Retrieve an existing refund by object_id
            Shippo_Refund::retrieve('d7c811cff9e24e4387418876f1ffd371');
  /service-groups:
    get:
      tags:
        - Service Groups
      summary: List all service groups
      operationId: ServiceGroups_listAllServiceGroups
      description: Returns a list of service group objects.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/serviceGroupListResponse'
      x-codeSamples:
        - label: cURL
          lang: cURL
          source: |-
            curl https://api.goshippo.com/service-groups  \
              -H "Authorization: ShippoToken <API_TOKEN>" \
              -H "Content-Type: application/json"
    post:
      tags:
        - Service Groups
      summary: Create a new service group
      operationId: ServiceGroups_createNewGroup
      description: Creates a new service group.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceGroupCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/serviceGroupResponse'
      x-codeSamples:
        - label: cURL
          lang: cURL
          source: >-
            curl -X POST https://api.goshippo.com/service-groups  \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \

            -H "Content-Type: application/json"  \

            -d '{
                    "name": "UPS shipping",
                    "description": "UPS shipping options",
                    "flat_rate": "5",
                    "flat_rate_currency": "USD",
                    "type": "LIVE_RATE",
                    "rate_adjustment": 15,
                    "service_levels": [
                        {
                            "account_object_id": "80feb1633d4a43c898f0058506cfd82d",
                            "service_level_token": "ups_next_day_air_saver"
                        },
                        {
                            "account_object_id": "80feb1633d4a43c898f0058506cfd82d",
                            "service_level_token": "ups_ground"
                        }
                    ]
                }'
    put:
      tags:
        - Service Groups
      summary: Update an existing service group
      operationId: ServiceGroups_updateExistingGroup
      description: >-
        Updates an existing service group object. <br>The object_id cannot be
        updated as it is the unique identifier for the object.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceGroupUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/serviceGroupResponse'
      x-codeSamples:
        - label: cURL
          lang: cURL
          source: >-
            curl -X PUT https://api.goshippo.com/service-groups  \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \

            -H "Content-Type: application/json"  \

            -d '{
                    "object_id": "7552000a5f71473c9378e98fc7322c99",
                    "name": "UPS shipping",
                    "description": "UPS shipping options, updated",
                    "flat_rate": "20",
                    "flat_rate_currency": "USD",
                    "type": "LIVE_RATE",
                    "rate_adjustment": 15,
                    "service_levels": [
                        {
                            "account_object_id": "80feb1633d4a43c898f0058506cfd82d",
                            "service_level_token": "ups_next_day_air_saver"
                        },
                        {
                            "account_object_id": "80feb1633d4a43c898f0058506cfd82d",
                            "service_level_token": "ups_ground"
                        }
                    ]
                }'
  /service-groups/{ServiceGroupId}:
    delete:
      tags:
        - Service Groups
      summary: Delete a service group
      operationId: ServiceGroups_deleteServiceGroup
      description: Deletes an existing service group using an object ID.
      parameters:
        - description: Object ID of the service group
          in: path
          name: ServiceGroupId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '204':
          description: The service group was successfully deleted.
      x-codeSamples:
        - label: cURL
          lang: cURL
          source: >-
            curl -x DELETE
            https://api.goshippo.com/service-groups/80feb1633d4a43c898f0058506cfd82d 
            \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \
  /shipments:
    get:
      tags:
        - Shipments
      summary: List all shipments
      operationId: Shipments_listAllShipments
      description: >-
        Returns a list of all shipment objects.<br><br>

        In order to filter results, you must use the below path parameters. 

        A maximum date range of 90 days is permitted. 

        Provided dates should be ISO 8601 UTC dates (timezone offsets are
        currently not supported).<br><br>


        Optional path parameters:<br>
          `object_created_gt`- object(s) created greater than a provided date time<br>
          `object_created_gte` - object(s) created greater than or equal to a provided date time<br>
          `object_created_lt` - object(s) created less than a provided date time<br>
          `object_created_lte` - object(s) created less than or equal to a provided date time<br>

          Date format examples:<br>
            `2017-01-01`<br>
            `2017-01-01T03:30:30` or `2017-01-01T03:30:30.5`<br>
            `2017-01-01T03:30:30Z`<br><br>

          Example URL:<br>
            `https://api.goshippo.com/shipments/?object_created_gte=2017-01-01T00:00:30&object_created_lt=2017-04-01T00:00:30`
      parameters:
        - $ref: '#/components/parameters/PageNumberQueryParam'
        - $ref: '#/components/parameters/ResultsPerPageQueryParam'
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/shipmentPaginatedResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: |-
            curl https://api.goshippo.com/shipments/ \
              -H "Authorization: ShippoToken shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # List all shipments
            shippo.Shipment.all()
        - label: Ruby
          lang: Ruby
          source: |-
            # List all shipments
            Shippo::Shipment.list()
        - label: Node
          lang: Node
          source: |-
            // List all shipments
            shippo.shipment.list();
        - label: PHP
          lang: PHP
          source: |-
            // List all shipments
            Shippo_Shipment::all();
    post:
      tags:
        - Shipments
      summary: Create a new shipment
      operationId: Shipments_createNewShipment
      description: Creates a new shipment object.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        description: Shipment details and contact info.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentCreateRequest'
      responses:
        '201':
          $ref: '#/components/responses/shipmentResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: |-
            curl https://api.goshippo.com/shipments/ \
              -H "Authorization: ShippoToken shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \
              -H "Content-Type: application/json" \
              -d $'{
                  "address_to": {
                      "name": "Mr Hippo",
                      "street1": "965 Mission St #572",
                      "city": "San Francisco",
                      "state": "CA",
                      "zip": "94103",
                      "country": "US",
                      "phone": "4151234567",
                      "email": "mrhippo@shippo.com"
                  },
                  "address_from": {
                      "name": "Mrs Hippo",
                      "street1": "1092 Indian Summer Ct",
                      "city": "San Jose",
                      "state": "CA",
                      "zip": "95122",
                      "country": "US",
                      "phone": "4159876543",
                      "email": "mrshippo@shippo.com"
                  },
                  "parcels": [{
                      "length": "10",
                      "width": "15",
                      "height": "10",
                      "distance_unit": "in",
                      "weight": "1",
                      "mass_unit": "lb"
                  }],
                  "async": false
              }'
        - label: Python
          lang: Python
          source: |-
            # Create shipment object
            shipment = shippo.Shipment.create(
                address_from = address_from,
                address_to = address_to,
                parcels = parcel,
                async = False
            )
        - label: Ruby
          lang: Ruby
          source: |-
            # Create the shipment object
            shipment = Shippo::Shipment.create(
                :address_from => address_from,
                :address_to => address_to,
                :parcels => parcel,
                :async => false
            )
        - label: Node
          lang: Node
          source: |-
            // Create shipment object
            var shipment = shippo.shipment.create({
                "address_from": addressFrom,
                "address_to": addressTo,
                "parcels": parcel,
                "async": true
            })
        - label: PHP
          lang: PHP
          source: |-
            // Create shipment object
            $shipment = Shippo_Shipment::create(
                array(
                    "address_from" => $fromAddress,
                    "address_to" => $toAddress,
                    "parcels" => $parcel,
                    "async" => false
                )
            );
  /shipments/{ShipmentId}:
    get:
      tags:
        - Shipments
      summary: Retrieve a shipment
      operationId: Shipments_getShipmentById
      description: Returns an existing shipment using an object ID
      parameters:
        - description: Object ID of the shipment to update
          in: path
          name: ShipmentId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/shipmentResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl
            https://api.goshippo.com/shipments/7c47d12aa95a4cbb9d90c167cca7bea7
            \
              -H "Authorization: ShippoToken shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # Retrieve an existing shipment by object_id
            shippo.Shipment.retrieve('89436997a794439ab47999701e60392e')
        - label: Ruby
          lang: Ruby
          source: |-
            # Retrieve an existing shipment by object_id
            Shippo::Shipment.get('89436997a794439ab47999701e60392e')
        - label: Node
          lang: Node
          source: |-
            // Retrieve an existing shipment by object_id
            shippo.shipment.retrieve('89436997a794439ab47999701e60392e');
        - label: PHP
          lang: PHP
          source: |-
            // Retrieve an existing shipment by object_id
            Shippo_Shipment::retrieve('89436997a794439ab47999701e60392e');
  /shipments/{ShipmentId}/rates:
    get:
      tags:
        - Rates
      summary: Retrieve shipment rates
      operationId: Rates_getShipmentRates
      description: Returns a paginated list of rates associated with a shipment
      parameters:
        - description: Object ID of the shipment to update
          in: path
          name: ShipmentId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PageNumberQueryParam'
        - $ref: '#/components/parameters/ResultsPerPageQueryParam'
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/ratePaginatedResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl
            https://api.goshippo.com/shipments/5e40ead7cffe4cc1ad45108696162e42/rates/USD
            \
              -H "Authorization: ShippoToken shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: >-
            # Get rates for shipment by object_id

            shippo.Shipment.get_rates("89436997a794439ab47999701e60392e",
            async=False)
        - label: Ruby
          lang: Ruby
          source: |-
            # Get rates for shipment by object_id
            Shippo.Shipment.rates('5e40ead7cffe4cc1ad45108696162e42')
        - label: Node
          lang: Node
          source: |-
            // Get rates for shipment by object_id
            shippo.shipment.rates('5e40ead7cffe4cc1ad45108696162e42');
        - label: PHP
          lang: PHP
          source: |-
            // Get rates for shipment by object_id
            Shippo_Shipment::get_shipping_rates(
              array(
                'id' => '5e40ead7cffe4cc1ad45108696162e42',
                'currency' => 'USD'
              )
            );
      x-speakeasy-name-override: listShipmentRates
  /shipments/{ShipmentId}/rates/{CurrencyCode}:
    get:
      tags:
        - Rates
      summary: Retrieve shipment rates in currency
      operationId: Rates_getShipmentRatesInCurrency
      description: >-
        Returns all available shipping rates for a shipment object.


        When you create a new valid shipment object, Shippo automatically
        calculates all available rates. Depending on your shipment data, there
        may be none, one or multiple rates.


        By default, the calculated rates will return the price in two currencies
        under the `amount` and `amount_local` keys, respectively. The `amount`
        key will contain the price of a rate expressed in the currency that is
        used in the country from where the parcel originates, and the
        `amount_local` key will contain the price expressed in the currency that
        is used in the country the parcel is shipped to. You can request rates
        with prices expressed in a different currency by adding the currency
        code to the end of the resource URL. The full list of supported
        currencies along with their codes can be viewed on <a
        href="http://openexchangerates.org/api/currencies.json">open exchange
        rates</a>.


        Note: re-requesting the rates with a different currency code will
        re-queue the shipment (i.e. set the Shipment's `status` to `QUEUED`) and
        the converted currency rates will only be available when the Shipment's
        `status` is set to `SUCCESS`.
      parameters:
        - description: Object ID of the shipment to update
          in: path
          name: ShipmentId
          required: true
          schema:
            type: string
        - description: ISO currency code for the rates
          in: path
          name: CurrencyCode
          required: true
          schema:
            type: string
            default: USD
        - $ref: '#/components/parameters/PageNumberQueryParam'
        - $ref: '#/components/parameters/ResultsPerPageQueryParam'
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/ratePaginatedResponse'
      x-speakeasy-name-override: listShipmentRatesByCurrencyCode
  /tracks:
    post:
      tags:
        - Tracking Status
      summary: Register a tracking webhook
      operationId: TrackingStatus_registerWebhook
      description: >-
        Registers a webhook that will send HTTP notifications to you when the
        status of your tracked package changes. For more details on creating a
        webhook, see our guides on <a
        href="https://docs.goshippo.com/docs/tracking/webhooks/">Webhooks</a>
        and <a
        href="https://docs.goshippo.com/docs/tracking/tracking/">Tracking</a>.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TracksRequest'
      responses:
        '201':
          $ref: '#/components/responses/trackResponse'
        '400':
          $ref: '#/components/responses/badRequestWithDetailResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl https://api.goshippo.com/tracks/ \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \

            -d carrier="usps" \

            -d tracking_number="9205590164917312751089" \

            -d metadata="Order 000123"
  /tracks/{Carrier}/{TrackingNumber}:
    get:
      tags:
        - Tracking Status
      summary: Get a tracking status
      operationId: TrackingStatus_getStatus
      description: >-
        Returns the tracking status of a shipment using a carrier name and a
        tracking number.
      parameters:
        - description: Tracking number
          in: path
          name: TrackingNumber
          required: true
          schema:
            type: string
        - description: Name of the carrier
          in: path
          name: Carrier
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/trackResponse'
        '400':
          $ref: '#/components/responses/badRequestWithDetailResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl https://api.goshippo.com/tracks/usps/9205590164917312751089 \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
  /transactions:
    get:
      tags:
        - Transactions
      summary: List all shipping labels
      operationId: Transactions_listAllShippingLabels
      description: Returns a list of all transaction objects.
      parameters:
        - $ref: '#/components/parameters/PageNumberQueryParam'
        - $ref: '#/components/parameters/ResultsPerPageQueryParam'
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/transactionPaginatedResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: |-
            curl https://api.goshippo.com/transactions/ \
              -H "Authorization: ShippoToken shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # List all transactions
            shippo.Transaction.all()
        - label: Ruby
          lang: Ruby
          source: |-
            # List all transactions
            Shippo::Transaction.all()
        - label: Node
          lang: Node
          source: |-
            // List all transactions
            shippo.transaction.list();
        - label: PHP
          lang: PHP
          source: |-
            // List all transactions
            Shippo_Transaction::all();
    post:
      tags:
        - Transactions
      summary: Create a shipping label
      operationId: Transactions_createShippingLabel
      description: >-
        Creates a new transaction object and purchases the shipping label using
        a rate object that has previously been created. <br> OR <br> Creates a
        new transaction object and purchases the shipping label instantly using
        shipment details, an existing carrier account, and an existing service
        level token.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        description: Examples.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionsCreateShippingLabelRequest'
        x-examples:
          application/json:
            instant-transaction-example:
              summary: Create an instant transaction
              value:
                carrier_account: b741b99f95e841639b54272834bc478c
                label_file_type: PDF
                metadata: Order ID
                servicelevel_token: usps_priority
                shipment:
                  address_from:
                    city: San Francisco
                    company: Shippo
                    country: US
                    email: shippotle@shippo.com
                    is_residential: true
                    metadata: Customer ID 123456
                    name: Shwan Ippotle
                    phone: +1 555 341 9393
                    state: CA
                    street1: 215 Clayton St.
                    street2: 215 Clayton St.
                    validate: true
                    zip: 94117
                  address_return:
                    city: San Francisco
                    company: Shippo
                    country: US
                    email: shippotle@shippo.com
                    is_residential: true
                    metadata: Customer ID 123456
                    name: Shwan Ippotle
                    phone: +1 555 341 9393
                    state: CA
                    street1: 215 Clayton St.
                    street2: 215 Clayton St.
                    validate: true
                    zip: 94117
                  address_to:
                    city: San Francisco
                    company: Shippo
                    country: US
                    email: shippotle@shippo.com
                    is_residential: true
                    metadata: Customer ID 123456
                    name: Shwan Ippotle
                    phone: +1 555 341 9393
                    state: CA
                    street1: 215 Clayton St.
                    street2: 215 Clayton St.
                    validate: true
                    zip: 94117
                  parcels:
                    - distance_unit: in
                      height: 1
                      length: 1
                      mass_unit: lb
                      template: USPS_LargeFlatRateBox
                      weight: 1
                      width: 1
            rate-transaction-example:
              summary: Create a rate transaction
              value:
                async: false
                label_file_type: PDF
                metadata: Order ID
                rate: ec9f0d3adc9441449c85d315f0997fd5
      responses:
        '201':
          $ref: '#/components/responses/transactionResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl --location --request POST
            'https://api.goshippo.com/transactions' \

            --header 'Authorization: ShippoToken {{token}}' \

            --header 'Content-Type: application/json' \

            --header 'SHIPPO-API-VERSION: 2018-02-08' \

            --data-raw '{
              "rate": "a5c9d1bec93149f5bedc3a9374b50970",
              "async": false,
              "label_file_type": "PDF"
            }'
        - label: Python
          lang: Python
          source: |-
            # Get the first rate in the rates results.
            # Customize this based on your business logic.
            rate = shipment.rates[0]

            # Purchase the desired rate.
            transaction = shippo.Transaction.create(
                rate=rate.object_id,
                label_file_type="PDF",
                async=False)

            # Retrieve label url and tracking number or error message
            if transaction.status == "SUCCESS":
                print transaction.label_url
                print transaction.tracking_number
            else:
                print transaction.messages
        - label: Ruby
          lang: Ruby
          source: |-
            # Get the first rate in the rates results.
            # Customize this based on your business logic.
            rate = shipment.rates.first

            # Purchase the desired rate.
            transaction = Shippo::Transaction.create( 
              :rate => rate["object_id"], 
              :label_file_type => "PDF", 
              :async => false )

            # label_url and tracking_number
            if transaction["status"] == "SUCCESS"
              puts "Label sucessfully generated:"
              puts "label_url: #{transaction.label_url}" 
              puts "tracking_number: #{transaction.tracking_number}" 
            else
              puts "Error generating label:"
              puts transaction.messages
            end
        - label: Node
          lang: Node
          source: |-
            // Get the first rate in the rates results.
            // Customize this based on your business logic.
            var rate = shipment.rates[0];

            // Purchase the desired rate.
            shippo.transaction.create({
                "rate": rate.object_id,
                "label_file_type": "PDF",
                "async": false
            }, function(err, transaction) {
              // asynchronous callback
            });
        - label: PHP
          lang: PHP
          source: |-
            // Get the first rate in the rates results.
            // Customize this based on your business logic.
            $rate = $shipment["rates"][0];

            // Purchase the desired rate.
            $transaction = Shippo_Transaction::create( array( 
                'rate' => $rate["object_id"], 
                'label_file_type' => "PDF", 
                'async' => false ) );

            // Retrieve label url and tracking number or error message
            if ($transaction["status"] == "SUCCESS"){
                echo( $transaction["label_url"] );
                echo("\n");
                echo( $transaction["tracking_number"] );
            }else {
                echo( $transaction["messages"] );
            }
  /transactions/{TransactionId}:
    get:
      tags:
        - Transactions
      summary: Retrieve a shipping label
      operationId: Transactions_getShippingLabel
      description: Returns an existing transaction using an object ID.
      parameters:
        - description: Object ID of the transaction to update
          in: path
          name: TransactionId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/transactionResponse'
      x-code-samples:
        - label: cURL
          lang: cURL
          source: >-
            curl
            https://api.goshippo.com/transactions/70ae8117ee1749e393f249d5b77c45e0
            \
             -H "Authorization: ShippoToken shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396"
        - label: Python
          lang: Python
          source: |-
            # Retrieve an existing transaction by object_id
            shippo.Transaction.retrieve("70ae8117ee1749e393f249d5b77c45e0")
        - label: Ruby
          lang: Ruby
          source: |-
            # Retrieve an existing transaction by object_id
            Shippo::Transaction.get('70ae8117ee1749e393f249d5b77c45e0')
        - label: Node
          lang: Node
          source: |-
            // Retrieve an existing transaction by object_id
            shippo.transaction.retrieve('70ae8117ee1749e393f249d5b77c45e0');
        - label: PHP
          lang: PHP
          source: |-
            // Retrieve an existing transaction by object_id
            Shippo_Transaction::retrieve('70ae8117ee1749e393f249d5b77c45e0');   
  /user-parcel-templates:
    get:
      tags:
        - User Parcel Templates
      summary: List all user parcel templates
      operationId: UserParcelTemplates_listAll
      description: Returns a list all of all user parcel template objects.
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/userParcelTemplateListResponse'
      x-codeSamples:
        - label: cURL
          lang: cURL
          source: >-
            curl https://api.goshippo.com/user-parcel-templates  \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \

            -H "Content-Type: application/json"
    post:
      tags:
        - User Parcel Templates
      summary: Create a new user parcel template
      operationId: UserParcelTemplates_createNewTemplate
      description: >-
        Creates a new user parcel template. <br>You can choose to create a

        parcel template using a preset carrier template as a starting point, or

        you can create an entirely custom one. To use a preset carrier template,

        pass in a unique template token from <a
        href="#tag/Parcel-Templates">this list</a>

        plus the weight fields (**weight** and **weight_unit**). Otherwise, omit

        the template field and pass the other fields, for the weight, length,
        height,

        and depth, as well as their units."
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserParcelTemplateCreateRequest'
      responses:
        '200':
          $ref: '#/components/responses/userParcelTemplateResponse'
      x-codeSamples:
        - label: cURL
          lang: cURL
          source: |-
            curl -X POST https://api.goshippo.com/user-parcel-templates  \
              -H "Authorization: ShippoToken <API_TOKEN>" \
              -H "Content-Type: application/json"
              -d '{
                  "name": "My Custom Template",
                  "length": "10",
                  "width": "8",
                  "height": "6",
                  "distance_unit": "in",
                  "weight": "12",
                  "weight_unit": "lb"
              }'
  /user-parcel-templates/{UserParcelTemplateObjectId}:
    delete:
      tags:
        - User Parcel Templates
      summary: Delete a user parcel template
      operationId: UserParcelTemplates_deleteById
      description: Deletes a user parcel template using an object ID.
      parameters:
        - description: Object ID of the user parcel template
          in: path
          name: UserParcelTemplateObjectId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '204':
          description: The user parcel template was successfully deleted.
      x-codeSamples:
        - label: cURL
          lang: cURL
          source: >-
            curl -X DELETE
            https://api.goshippo.com/user-parcel-templates/{UserParcelTemplateObjectId} 
            \
              -H "Authorization: ShippoToken <API_TOKEN>"
    get:
      tags:
        - User Parcel Templates
      summary: Retrieves a user parcel template
      operationId: UserParcelTemplates_getTemplateById
      description: |-
        Returns the parcel template information for a specific user parcel
        template, identified by the object ID.
      parameters:
        - description: Object ID of the user parcel template
          in: path
          name: UserParcelTemplateObjectId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/userParcelTemplateResponse'
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |-
            curl /user-parcel-templates/{UserParcelTemplateToken}  \
              -H "Authorization: ShippoToken <API_TOKEN>" \
              -H "Content-Type: application/json"
    put:
      tags:
        - User Parcel Templates
      summary: Update an existing user parcel template
      operationId: UserParcelTemplates_updateTemplate
      description: Updates an existing user parcel template.
      parameters:
        - description: Object ID of the user parcel template
          in: path
          name: UserParcelTemplateObjectId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserParcelTemplateUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/userParcelTemplateResponse'
      x-codeSamples:
        - label: cURL
          lang: cURL
          source: >-
            curl
            https://api.goshippo.com/user-parcel-templates/b958d3690bb04bb8b2986724872750f5 
            \

            -H "Authorization: ShippoToken
            shippo_test_3a47d23c032ca626fce863c48d0f93d63a394396" \

            -H "Content-Type: application/json"
              -d '{
                  "name": "My Custom Template",
                  "length": "10",
                  "width": "8",
                  "height": "6",
                  "distance_unit": "in",
                  "weight": "12",
                  "weight_unit": "lb"
              }'
  /shippo-accounts:
    get:
      tags:
        - Shippo Accounts
      summary: List all Shippo Accounts
      operationId: ShippoAccounts_listAll
      description: Returns a list of Shippo Accounts objects
      parameters:
        - $ref: '#/components/parameters/PageNumberQueryParam'
        - $ref: '#/components/parameters/ResultsPerPageQueryParam'
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/shippoAccountPaginatedResponse'
    post:
      tags:
        - Shippo Accounts
      summary: Create a Shippo Account
      operationId: ShippoAccounts_createNewAccount
      description: Creates a Shippo Account object
      parameters:
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippoAccountUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/shippoAccountResponse'
  /shippo-accounts/{ShippoAccountId}:
    get:
      tags:
        - Shippo Accounts
      summary: Retrieve a Shippo Account
      operationId: ShippoAccounts_getAccountById
      description: Returns a Shippo Account using an object ID
      parameters:
        - $ref: '#/components/parameters/ShippoAccountIdPathParam'
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      responses:
        '200':
          $ref: '#/components/responses/shippoAccountResponse'
    put:
      tags:
        - Shippo Accounts
      summary: Update a Shippo Account
      operationId: ShippoAccounts_updateAccountObject
      description: Updates a Shippo Account object
      parameters:
        - $ref: '#/components/parameters/ShippoAccountIdPathParam'
        - $ref: '#/components/parameters/ShippoApiVersionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippoAccountUpdateRequest'
      responses:
        '200':
          $ref: '#/components/responses/shippoAccountResponse'
components:
  parameters:
    PageNumberQueryParam:
      description: The page number you want to select
      in: query
      name: page
      schema:
        type: integer
        format: int64
        default: 1
    ResultsPerPageQueryParam:
      description: The number of results to return per page (max 100)
      in: query
      name: results
      schema:
        type: integer
        format: int64
        maximum: 100
        default: 25
    ShippoApiVersionHeader:
      description: String used to pick a non-default API version to use
      in: header
      name: SHIPPO-API-VERSION
      schema:
        type: string
    ObjectCreatedGtQueryParam:
      description: Object(s) created greater than a provided date and time.
      in: query
      name: object_created_gt
      required: false
      schema:
        type: string
        format: date-time
    ObjectCreatedGteQueryParam:
      description: Object(s) created greater than or equal to a provided date and time.
      in: query
      name: object_created_gte
      required: false
      schema:
        type: string
        format: date-time
    ObjectCreatedLtQueryParam:
      description: Object(s) created lesser than a provided date and time.
      in: query
      name: object_created_lt
      required: false
      schema:
        type: string
        format: date-time
    ObjectCreatedLteQueryParam:
      description: Object(s) created lesser than or equal to a provided date and time.
      in: query
      name: object_created_lte
      required: false
      schema:
        type: string
        format: date-time
    ShippoAccountIdPathParam:
      description: Object ID of the ShippoAccount
      in: path
      name: ShippoAccountId
      required: true
      schema:
        type: string
  responses:
    carrierParcelTemplateListResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/CarrierParcelTemplatesListAllCarrierParcelTemplatesResponse
    userParcelTemplateListResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserParcelTemplatesListAllResponse'
    trackResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Track'
    serviceGroupResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceGroup'
    serviceGroupListResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceGroupsListAllServiceGroupsResponse'
    defaultParcelTemplateResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DefaultParcelTemplate'
    transactionPaginatedResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionPaginatedList'
    invoiceResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Invoice'
    invoicePaginatedResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoicePaginatedList'
    invoiceItemsPaginatedResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceItemPaginatedList'
    addressPaginatedResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddressPaginatedList'
    customsDeclarationPaginatedResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomsDeclarationPaginatedList'
    customsItemPaginatedResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomsItemPaginatedList'
    manifestPaginatedResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ManifestPaginatedList'
    refundPaginatedResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RefundPaginatedList'
    orderPaginatedResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrderPaginatedList'
    parcelPaginatedResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ParcelPaginatedList'
    ratePaginatedResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RatePaginatedList'
    shipmentPaginatedResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShipmentPaginatedList'
    badRequestWithDetailResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestWithDetail'
    carrierAccountResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CarrierAccount'
    carrierAccountPaginatedResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CarrierAccountPaginatedList'
    liveRatePaginatedResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LiveRatePaginatedList'
    addressResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Address'
    batchResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Batch'
    carrierParcelTemplateResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CarrierParcelTemplate'
    customsDeclarationResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomsDeclaration'
    customsItemResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomsItem'
    manifestResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Manifest'
    orderResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
    parcelResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Parcel'
    pickupResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pickup'
    rateResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rate'
    refundResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Refund'
    shipmentResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Shipment'
    transactionResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Transaction'
    userParcelTemplateResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserParcelTemplate'
    shippoAccountPaginatedResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShippoAccountPaginatedList'
    shippoAccountResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShippoAccount'
    badRequestWithErrorResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestWithError'
    carrierAccountRegistrationStatusResponse:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CarrierAccountRegistrationStatus'
  securitySchemes:
    APIKeyHeader:
      in: header
      name: Authorization
      type: apiKey
  schemas:
    PaginatedList:
      properties:
        next:
          example: baseurl?page=3&results=10
          type: string
        previous:
          example: baseurl?page=1&results=10
          type: string
      type: object
    AddressBase:
      description: Address represents the address as retrieved from the database
      properties:
        name:
          description: |-
            **required for purchase**<br>
            First and Last Name of the addressee
          example: Shwan Ippotle
          type: string
        company:
          description: Company Name
          example: Shippo
          type: string
        street1:
          description: >-
            **required for purchase**<br>

            First street line, 35 character limit. Usually street number and
            street name (except for DHL Germany, see street_no).
          example: 215 Clayton St.
          type: string
        street2:
          description: Second street line, 35 character limit.
          type: string
        street3:
          description: >-
            Third street line, 35 character limit. 

            Only accepted for USPS international shipments, UPS domestic and UPS
            international shipments.
          type: string
          example: ''
        street_no:
          description: >-
            Street number of the addressed building. 

            This field can be included in street1 for all carriers except for
            DHL Germany.
          type: string
          example: ''
        city:
          description: >-
            **required for purchase**<br>

            Name of a city. When creating a Quote Address, sending a city is
            optional but will yield more accurate Rates. 

            Please bear in mind that city names may be ambiguous (there are 34
            Springfields in the US). Pass in a state 

            or a ZIP code (see below), if known, it will yield more accurate
            results.
          example: San Francisco
          type: string
        state:
          description: >-
            **required for purchase for some countries**<br>

            State/Province values are required for shipments from/to the US, AU,
            and CA. UPS requires province for some 

            countries (i.e Ireland). To receive more accurate quotes, passing
            this field is recommended. Most carriers 

            only accept two or three character state abbreviations.
          example: CA
          type: string
        zip:
          description: >-
            **required for purchase**<br>

            Postal code of an Address. When creating a Quote Addresses, sending
            a ZIP is optional but will yield more 

            accurate Rates.
          example: '94117'
          type: string
        country:
          description: >-
            Example: `US` or `DE`. All accepted values can be found on the 

            <a href="http://www.iso.org/" target="blank">Official ISO
            Website</a>.

            Sending a country is always required.
          example: US
          type: string
        phone:
          description: >-
            Addresses containing a phone number allow carriers to call the
            recipient when delivering the Parcel. This 

            increases the probability of delivery and helps to avoid accessorial
            charges after a Parcel has been shipped.    
          example: +1 555 341 9393
          type: string
        email:
          description: E-mail address of the contact person, RFC3696/5321-compliant.
          example: shippotle@shippo.com
          type: string
        is_residential:
          example: true
          type: boolean
        metadata:
          description: >-
            A string of up to 100 characters that can be filled with any
            additional information you want 

            to attach to the object.
          example: Customer ID 123456
          type: string
        latitude:
          description: Latitude of address
          type: number
        longitude:
          description: Longitude of address
          type: number
      type: object
    Address:
      allOf:
        - $ref: '#/components/schemas/AddressBase'
        - properties:
            is_complete:
              description: >-
                Complete addresses contain all required
                values.<br><br>Incomplete addresses have failed one or multiple 

                validations.<br>Incomplete Addresses are eligible for requesting
                rates but lack at least one required 

                value for purchasing labels.
              example: true
              type: boolean
            object_created:
              description: Date and time of Address creation.
              example: '2014-07-09T02:19:13.174Z'
              format: date-time
              type: string
            object_id:
              description: |-
                Unique identifier of the given Address object. 
                This ID is required to create a Shipment object.
              example: d799c2679e644279b59fe661ac8fa488
              type: string
            object_owner:
              description: Username of the user who created the Address object.
              example: shippotle@shippo.com
              type: string
            object_updated:
              description: >-
                Date and time of last Address update. Since you cannot update
                Addresses after they were created, this time 

                stamp reflects the time when the Address was changed by Shippo's
                systems for the last time, e.g., during the 

                approximation of one or more values.
              example: '2014-07-09T02:19:13.174Z'
              format: date-time
              type: string
            validation_results:
              $ref: '#/components/schemas/AddressValidationResults'
            test:
              description: Indicates whether the object has been created in test mode.
              type: boolean
              example: false
          required:
            - country
    AddressCreateRequest:
      allOf:
        - $ref: '#/components/schemas/AddressBase'
        - properties:
            validate:
              description: Set to true to validate Address object.
              example: true
              type: boolean
          required:
            - country
    AddressCompleteCreateRequest:
      allOf:
        - $ref: '#/components/schemas/AddressBase'
        - properties:
            validate:
              example: true
              type: boolean
          required:
            - name
            - street1
            - city
            - state
            - zip
            - country
    AddressPaginatedList:
      allOf:
        - $ref: '#/components/schemas/PaginatedList'
        - properties:
            results:
              items:
                $ref: '#/components/schemas/Address'
              type: array
    AddressImporter:
      description: Object that represents the address of the importer
      type: object
      properties:
        name:
          description: First and Last Name of the addressee
          example: Shwan Ippotle
          type: string
        company:
          description: Company Name
          example: Shippo
          type: string
        street1:
          description: >-
            First street line, 35 character limit. Usually street number and
            street name (except for DHL Germany, see street_no).
          example: BlumenstraÃŸe
          type: string
        street2:
          description: Second street line, 35 character limit.
          type: string
        street3:
          description: >-
            Third street line, 35 character limit. 

            Only accepted for USPS international shipments, UPS domestic and UPS
            international shipments.
          type: string
          example: ''
        street_no:
          description: >-
            Street number of the addressed building. 

            This field can be included in street1 for all carriers except for
            DHL Germany.
          type: string
          example: '22'
        city:
          description: Name of a city
          example: MÃ¼nchen
          type: string
        state:
          description: >-
            **required for purchase for some countries**<br>

            State/Province values are required for shipments from/to the US, AU,
            and CA. UPS requires province for some 

            countries (i.e Ireland). To receive more accurate quotes, passing
            this field is recommended. Most carriers 

            only accept two or three character state abbreviations.
          example: CA
          type: string
        zip:
          description: Postal code of an Address.
          example: '80331'
          type: string
        country:
          description: >-
            Example: `US` or `DE`. All accepted values can be found on the 

            <a href="http://www.iso.org/" target="blank">Official ISO
            Website</a>.

            Sending a country is always required.
          example: DE
          type: string
        phone:
          description: >-
            Addresses containing a phone number allow carriers to call the
            recipient when delivering the Parcel. This 

            increases the probability of delivery and helps to avoid accessorial
            charges after a Parcel has been shipped.    
          example: '80331'
          type: string
        email:
          description: E-mail address of the contact person, RFC3696/5321-compliant.
          example: shippotle@shippo.com
          type: string
        is_residential:
          description: >-
            Indicates whether the address provided is a residential address or
            not.
          example: true
          type: boolean
    AddressImporterResponse:
      properties:
        object_id:
          description: ID of importer address object
          example: 7506ccbb65a34a8a9ac2cc4a89e820d2
          type: string
    AddressValidationResults:
      description: >-
        Object that contains information regarding if an address had been
        validated or not. Also contains any messages 

        generated during validation. Children keys are
        <code>is_valid</code>(boolean) and <code>messages</code>(array).
      properties:
        is_valid:
          example: false
          type: boolean
        messages:
          items:
            $ref: '#/components/schemas/AddressValidationResultsMessage'
          type: array
      type: object
    AddressValidationResultsMessage:
      properties:
        code:
          enum:
            - verification_error
            - unknown_street
            - component_mismatch_error
            - multiple_match
            - sub_premise_number_invalid
            - sub_premise_number_missing
            - premise_number_invalid
            - premise_number_missing
            - box_number_invalid
            - box_number_missing
            - pmb_number_missing
            - postal_code_change
            - administrative_area_change
            - locality_change
            - dependent_locality_change
            - street_name_change
            - street_type_change
            - street_directional_change
            - sub_premise_type_change
            - sub_premise_number_change
            - double_dependent_locality_change
            - subadministrative_area_change
            - subnational_area_change
            - po_box_change
            - premise_type_change
            - house_number_change
            - organization_change
            - extraneous_information
            - usps_door_inaccessible
            - administrative_area_partial
            - city_partial
            - street_partial
            - building_partial
            - subpremise_partial
            - administrative_area_full
            - city_full
            - thoroughfare_full
            - premises_full
            - subpremise_full
            - geocoded_street
            - geocoded_neighborhood
            - geocoded_community
            - geocoded_state
            - geocoded_rooftop
            - geocoded_interpolated_rooftop
            - invalid_postal_code
            - postal_code_not_found
            - empty_request
            - service_error
            - street_detail_missing
            - Invalid City/State/Zip
            - Default Match
            - Unknown Street
            - Address Not Found
            - Non-Deliverable ZIP4
            - Multiple Responses
            - Invalid Dual Address
            - Invalid State
            - Invalid City
            - Ambiguous Address
          example: Unknown Street
          type: string
        source:
          enum:
            - Shippo Address Validator
            - UPS
          example: Shippo Address Validator
          type: string
        text:
          example: >-
            City, State and ZIP Code are valid, but street address is not a
            match.
          type: string
        type:
          example: address_warning
          type: string
      type: object
    Alcohol:
      description: Indicates that a shipment contains Alcohol (Fedex and UPS only).
      properties:
        contains_alcohol:
          description: >-
            Mandatory for Fedex and UPS. Specifies that the package contains
            Alcohol.
          type: boolean
        recipient_type:
          description: >-
            Mandatory for Fedex only. License type of the recipient of the
            Alcohol Package.
          enum:
            - licensee
            - consumer
          type: string
      type: object
    AmountAndCurrencyCharged:
      description: >-
        The amount and currency that was charged after possible currency
        conversion occurred.
      properties:
        amount:
          description: The money amount
          example: '5.52'
          type: string
        currency:
          description: >-
            The currency that 'amount' is in. The official ISO 4217 currency
            codes are used, e.g. "USD" or "EUR".

            <a href="http://www.xe.com/iso4217.php" target="blank">ISO 4217
            Standard</a>.
          example: USD
          type: string
      type: object
    AmountAndCurrencyInvoiced:
      description: The amount and currency.
      properties:
        amount:
          description: The money amount
          example: '5.52'
          type: string
        currency:
          description: >-
            The currency that 'amount' is in. The official ISO 4217 currency
            codes are used, e.g. "USD" or "EUR".

            <a href="http://www.xe.com/iso4217.php" target="blank">ISO 4217
            Standard</a>.
          example: USD
          type: string
      type: object
    ConversionAmount:
      description: Invoice Item's amount after currency conversion took place.
      properties:
        rate:
          description: >-
            Currency conversion rate, relative to USD, that was used to
            calculate the converted amount.
          example: '0.89'
          type: string
        time:
          description: Date and time the currency conversion took place.
          type: string
          format: date-time
        amount:
          description: The money amount after currency conversion.
          example: '4.91'
          type: string
        currency:
          description: >-
            The currency that 'amount' is in. The official ISO 4217 currency
            codes are used, e.g. "USD" or "EUR".

            <a href="http://www.xe.com/iso4217.php" target="blank">ISO 4217
            Standard</a>.
          example: USD
          type: string
      type: object
    BatchBase:
      properties:
        default_carrier_account:
          description: >-
            ID of the Carrier Account object to use as the default for all
            shipments in this Batch. 

            The carrier account can be changed on a per-shipment basis by
            changing the carrier_account in the 

            corresponding BatchShipment object.
          example: 078870331023437cb917f5187429b093
          type: string
        default_servicelevel_token:
          description: >-
            Token of the service level to use as the default for all shipments
            in this Batch. 

            The servicelevel can be changed on a per-shipment basis by changing
            the servicelevel_token in the 

            corresponding BatchShipment object. <a
            href="#tag/Service-Levels">Servicelevel tokens can be found
            here.</a>
          example: usps_priority
          type: string
        label_filetype:
          $ref: '#/components/schemas/LabelFileType'
        metadata:
          description: >-
            A string of up to 100 characters that can be filled with any
            additional information you want to attach to the object.
          example: 'BATCH #1'
          maxLength: 100
          type: string
      required:
        - default_carrier_account
        - default_servicelevel_token
      type: object
    Batch:
      allOf:
        - $ref: '#/components/schemas/BatchBase'
        - properties:
            batch_shipments:
              $ref: '#/components/schemas/BatchShipmentPaginatedList'
            label_url:
              description: >-
                An array of URLs each pointing to a merged file of 100 labels
                each
              items:
                type: string
              type: array
            object_created:
              description: Date and time of Batch creation
              example: '2016-01-04T00:15:44.394Z'
              type: string
            object_id:
              description: Unique identifier of the given Batch object
              example: 5ef63c54f5bf45d3b1f8fb37dcb1c5f4
              type: string
            object_owner:
              description: Username of the user who created the Address object.
              example: shippo@shippo.com
              type: string
            object_results:
              description: >-
                An object containing the following
                counts:<br>`creation_succeeded`<br>`creation_failed`<br>`purchase_succeeded`<br>`purchase_failed`
              properties:
                creation_failed:
                  example: 3
                  format: int64
                  type: integer
                creation_succeeded:
                  example: 5
                  format: int64
                  type: integer
                purchase_failed:
                  example: 0
                  format: int64
                  type: integer
                purchase_succeeded:
                  example: 0
                  format: int64
                  type: integer
              required:
                - purchase_failed
                - purchase_succeeded
                - creation_failed
                - creation_succeeded
              type: object
            object_updated:
              description: Date and time of last update to the Batch
              example: '2016-01-04T00:48:13.841Z'
              type: string
            status:
              description: >-
                Batches that are `VALIDATING` are being created and
                validated<br>

                `VALID` batches can be purchased<br>

                `INVALID` batches cannot be purchased, `INVALID` BatchShipments
                must be removed<br>

                Batches that are in the `PURCHASING` state are being
                purchased<br>

                `PURCHASED` batches are finished purchasing.
              enum:
                - VALIDATING
                - VALID
                - INVALID
                - PURCHASING
                - PURCHASED
              example: VALID
              type: string
            test:
              example: false
              type: boolean
          required:
            - object_id
            - object_owner
            - status
            - object_created
            - object_updated
            - batch_shipments
            - object_results
            - label_url
    BatchCreateRequest:
      allOf:
        - $ref: '#/components/schemas/BatchBase'
        - properties:
            batch_shipments:
              description: >-
                Array of BatchShipment objects. The response keeps the same
                order as in the request array.
              items:
                $ref: '#/components/schemas/BatchShipmentBase'
              type: array
          required:
            - batch_shipments
    BatchShipmentBase:
      properties:
        carrier_account:
          description: >-
            Object ID of the carrier account to be used for this shipment (will
            override batch default)
          example: a4391cd4ab974f478f55dc08b5c8e3b3
          type: string
        metadata:
          description: >-
            A string of up to 100 characters that can be filled with any
            additional information you want 

            to attach to the object.
          example: 'SHIPMENT #1'
          maxLength: 100
          type: string
        servicelevel_token:
          description: >-
            A token that sets the shipping method for the batch, overriding the
            batch default. 

            Servicelevel tokens can be found <a href="#tag/Service-Levels">in
            this list</a> 

            or <a href="#operation/ListCarrierAccounts">at this endpoint</a>.
          example: fedex_ground
          type: string
        shipment:
          $ref: '#/components/schemas/ShipmentCreateRequest'
      required:
        - shipment
      type: object
    BatchShipment:
      allOf:
        - $ref: '#/components/schemas/BatchShipmentBase'
        - properties:
            messages:
              description: List of Shipment and Transaction error messages.
              items:
                $ref: '#/components/schemas/ErrorMessage'
              type: array
            object_id:
              description: >-
                Object ID of this batch shipment. Can be used in the
                remove_shipments endpoint.
              example: e11c95a6788d4ddcaa22f03175838740
              type: string
            status:
              description: >-
                `INVALID` batch shipments cannot be purchased and will have to
                be removed, fixed, and added to the batch again.<br>

                `VALID` batch shipments can be purchased. <br>

                Batch shipments with the status `TRANSACTION_FAILED` were not
                able to be purchased and the error will be displayed on the
                message field<br> 

                `INCOMPLETE` batch shipments have an issue with the Address and
                will need to be removed, fixed, and added to the batch again.
              enum:
                - INVALID
                - VALID
                - INCOMPLETE
                - TRANSACTION_FAILED
              example: INVALID
              type: string
            transaction:
              description: >-
                Object ID of the transaction object created for this batch
                shipment.
              example: 4c33736a67e2450da88b38c42deef6b7
              type: string
          required:
            - shipment
            - object_id
            - status
    BatchShipmentPaginatedList:
      allOf:
        - $ref: '#/components/schemas/PaginatedList'
        - description: >-
            Array of <a href="#section/Batch-Shipment">BatchShipment</a>
            objects. 

            The response keeps the same order as in the request array.
          properties:
            results:
              items:
                $ref: '#/components/schemas/BatchShipment'
              type: array
    Billing:
      description: Specify billing details (UPS, FedEx, and DHL Germany only).
      properties:
        account:
          description: >-
            Account number to be billed. (For DHL Germany, leave this field
            blank.)
          type: string
        country:
          description: >-
            Country iso2 code of account number to be billed (required for UPS
            third party billing only).
          type: string
          format: iso-3166
        participation_code:
          description: >-
            2 digit code used to override your default participation code
            associated with your DHL Germany account.
          type: string
        type:
          description: Party to be billed. (Leave blank for DHL Germany.)
          enum:
            - SENDER
            - RECIPIENT
            - THIRD_PARTY
            - THIRD_PARTY_CONSIGNEE
            - COLLECT
          type: string
        zip:
          description: >-
            ZIP code of account number to be billed (required for UPS if there
            is a zip on the billing account).
          type: string
      type: object
    COD:
      title: COD Specify collection on delivery details (UPS only).
      description: Specify collection on delivery details (UPS only).
      properties:
        amount:
          description: Amount to be collected.
          example: '5.5'
          type: string
        currency:
          description: >-
            Currency for the amount to be collected. Currently only USD is
            supported for UPS.
          example: USD
          type: string
        payment_method:
          description: >-
            Secured funds include money orders, certified cheques and others
            (see 

            <a
            href="https://www.ups.com/content/us/en/shipping/time/service/value_added/cod.html">UPS</a>
            for details). 

            If no payment_method inputted the value defaults to "ANY".)
          enum:
            - SECURED_FUNDS
            - CASH
            - ANY
          example: CASH
          type: string
      type: object
    CarrierParcelTemplate:
      title: >-
        CarrierParcelTemplate represents the fields of a template before saving
        it to the db.
      properties:
        carrier:
          description: The name of the carrier that provides this parcel template
          example: FedEx
          type: string
        distance_unit:
          $ref: '#/components/schemas/DistanceUnit'
        height:
          description: >-
            The height of the package, in units specified by the distance_unit
            attribute
          example: '1.5'
          type: string
        is_variable_dimensions:
          description: >-
            True if the carrier parcel template allows custom dimensions, such
            as USPS Softpack.
          example: 'false'
          type: string
        length:
          description: >-
            The length of the package, in units specified by the distance_unit
            attribute
          example: '12.375'
          type: string
        name:
          description: The name of the carrier parcel template
          example: FedExÂ® Small Box (S1)
          type: string
        token:
          description: The unique string representation of the carrier parcel template
          example: FedEx_Box_Small_1
          type: string
        width:
          description: >-
            The width of the package, in units specified by the distance_unit
            attribute
          example: '10.875'
          type: string
      type: object
    ConnectExistingOwnFedexAccountRequest:
      properties:
        parameters:
          $ref: '#/components/schemas/FedexConnectExistingOwnAccountParameters'
        account_id:
          example: '321123'
          type: string
        active:
          type: boolean
        carrier:
          example: fedex
          type: string
        metadata:
          example: FEDEX Account
          type: string
        test:
          example: false
          type: boolean
      required:
        - carrier
        - account_id
        - parameters
      type: object
    ConnectExistingOwnUPSAccountRequest:
      properties:
        parameters:
          $ref: '#/components/schemas/UPSConnectExistingOwnAccountParameters'
        account_id:
          description: >-
            This field is required as input to the API, but is not used for UPS.
            Use the empty string.
          type: string
        active:
          type: boolean
        carrier:
          example: ups
          type: string
        metadata:
          example: UPS Account
          type: string
        test:
          example: false
          type: boolean
      required:
        - account_id
        - active
        - parameters
      type: object
    CustomerReference:
      description: Specify the reference field on the label (FedEx only).
      properties:
        prefix:
          description: >-
            Custom prefix for customer reference field (ZPL labels only). Up to
            11 characters, including trailing 

            spaces. Empty string indicates removal of default prefix. To use the
            default prefix, do not include

            this property.
          type: string
        value:
          description: >-
            Optional text to be printed on the shipping label for customer
            reference. Up to 40 characters. If 

            this is provided, reference_1 will be ignored.
          type: string
      type: object
    CustomsDeclarationBase:
      properties:
        aes_itn:
          description: |-
            **required if eel_pfc is `AES_ITN`**<br>
            AES / ITN reference of the shipment.
          type: string
        b13a_filing_option:
          description: >-
            B13A Option details are obtained by filing a B13A Canada Export
            Declaration via the Canadian Export Reporting System (CERS). 

            <a href="https://www.cbsa-asfc.gc.ca/services/export/guide-eng.html"
            target="_blank" rel="noopener noreferrer"> More information on
            reporting commercial exports from Canada. </a>
          type: string
          enum:
            - FILED_ELECTRONICALLY
            - SUMMARY_REPORTING
            - NOT_REQUIRED
        b13a_number:
          description: >-
            **must be provided if and only if b13a_filing_option is
            provided**<br>

            Represents:<br> the Proof of Report (POR) Number when
            b13a_filing_option is `FILED_ELECTRONICALLY`;<br> 

            the Summary ID Number when b13a_filing_option is
            `SUMMARY_REPORTING`;<br> 

            or the Exemption Number when b13a_filing_option is `NOT_REQUIRED`.
          type: string
        certificate:
          description: Certificate reference of the shipment.
          type: string
        certify:
          description: >-
            Expresses that the certify_signer has provided all information of
            this customs declaration truthfully.
          example: true
          type: boolean
        certify_signer:
          description: >-
            Name of the person who created the customs declaration and is
            responsible for the validity of all 

            information provided.
          example: Shawn Ippotle
          type: string
        commercial_invoice:
          type: string
        contents_explanation:
          description: |-
            **required if contents_type is `OTHER`**<br>
            Explanation of the type of goods of the shipment.
          example: T-Shirt purchase
          type: string
        contents_type:
          description: Type of goods of the shipment.
          example: MERCHANDISE
          enum:
            - DOCUMENTS
            - GIFT
            - SAMPLE
            - MERCHANDISE
            - HUMANITARIAN_DONATION
            - RETURN_MERCHANDISE
            - OTHER
          type: string
        disclaimer:
          description: >-
            Disclaimer for the shipment and customs information that have been
            provided.
          type: string
        eel_pfc:
          description: >-
            EEL / PFC type of the shipment. For most shipments from the US to
            CA, `NOEEI_30_36` is applicable; for most 

            other shipments from the US, `NOEEI_30_37_a` is applicable.
          example: NOEEI_30_37_a
          enum:
            - NOEEI_30_37_a
            - NOEEI_30_37_h
            - NOEEI_30_37_f
            - NOEEI_30_36
            - AES_ITN
          type: string
        exporter_reference:
          description: Exporter reference of an export shipment.
          type: string
        importer_reference:
          description: Importer reference of an import shipment.
          type: string
        incoterm:
          description: >-
            The incoterm reference of the shipment. FCA is available for DHL
            Express and FedEx only. 

            eDAP is available for DPD UK only. DAP is available for DHL Express
            and DPD UK.

            If expecting DAP for other carriers, please use DDU.
          example: DDP
          enum:
            - DDP
            - DDU
            - FCA
            - DAP
            - eDAP
          type: string
        is_vat_collected:
          description: >-
            Indicates whether the shipment's destination VAT has been collected.
            May be required for some destinations.
        invoice:
          description: Invoice reference of the shipment.
          example: '#123123'
          type: string
        license:
          description: License reference of the shipment.
          type: string
        metadata:
          description: >-
            A string of up to 100 characters that can be filled with any
            additional information you 

            want to attach to the object.
          example: 'Order ID #123123'
          type: string
        non_delivery_option:
          description: >-
            Indicates how the carrier should proceed in case the shipment can't
            be delivered.
          type: string
          enum:
            - ABANDON
            - RETURN
        notes:
          description: Additional notes to be included in the customs declaration.
          type: string
      required:
        - certify_signer
        - certify
        - non_delivery_option
        - contents_type
      type: object
    CustomsDeclaration:
      allOf:
        - $ref: '#/components/schemas/CustomsDeclarationBase'
        - properties:
            address_importer:
              description: Object ID of the Importer address.
              type: object
              example: 257ba08436604d2aaf069caafe7acb2a
            exporter_identification:
              $ref: '#/components/schemas/CustomsExporterIdentification'
            invoiced_charges:
              $ref: '#/components/schemas/CustomsInvoicedCharges'
            items:
              description: Distinct Parcel content items as Customs Items object_ids.
              example:
                - 5087f181d1dc4b14b73fdbf636498886
              items:
                type: string
              type: array
            object_created:
              description: Date and time of object creation.
              example: '2014-07-17T01:01:08.306Z'
              format: date-time
              type: string
            object_id:
              description: Unique identifier of the given object.
              example: e2197a54da9d470480f4f8796cc419cb
              type: string
            object_owner:
              description: Username of the user who created the object.
              example: shippotle@shippo.com
              type: string
            object_state:
              $ref: '#/components/schemas/ObjectState'
            object_updated:
              description: Date and time of last object update.
              example: '2014-07-17T01:01:08.306Z'
              format: date-time
              type: string
            test:
              description: Indicates whether the object has been created in test mode.
              example: true
              type: boolean
          required:
            - items
    CustomsDeclarationCreateRequest:
      allOf:
        - $ref: '#/components/schemas/CustomsDeclarationBase'
        - properties:
            address_importer:
              $ref: '#/components/schemas/AddressImporter'
            items:
              items:
                $ref: '#/components/schemas/CustomsItemBase'
              type: array
            test:
              example: true
              type: boolean
          required:
            - items
    CustomsDeclarationPaginatedList:
      allOf:
        - $ref: '#/components/schemas/PaginatedList'
        - properties:
            results:
              items:
                $ref: '#/components/schemas/CustomsDeclaration'
              type: array
    CustomsExporterIdentification:
      description: >-
        Additional exporter identification that may be required to ship in
        certain countries
      properties:
        eori_number:
          description: >-
            Economic Operators' Registration and Identification (EORI) number.
            Must start with a 2 character 

            country code followed by a 6-17 character alphanumeric identifier
            (e.g. PL1234567890ABCDE).

            <a
            href="https://ec.europa.eu/taxation_customs/business/customs-procedures/general-overview/economic-operators-registration-identification-number-eori_en">More
            information on EORI.</a>
          example: PL123456790ABCDE
          type: string
        tax_id:
          $ref: '#/components/schemas/CustomsTaxIdentification'
      type: object
    CustomsInvoicedCharges:
      description: >-
        Additional invoiced charges to be shown on the Customs Declaration
        Commercial Invoice.
      properties:
        currency:
          description: >-
            Currency for the invoiced charges amounts incurred on the end
            consumer.
          type: string
          format: iso-4217
        total_shipping:
          description: Total shipping paid by the buyer.
          type: string
        total_taxes:
          description: Total taxes paid by the buyer.
          type: string
        total_duties:
          description: Total duties paid by the buyer.
          type: string
        other_fees:
          description: Other fees paid by the buyer.
          type: string
      required:
        - currency
      type: object
    CustomsItemBase:
      properties:
        description:
          description: Text description of your item.
          example: T-Shirt
          type: string
        eccn_ear99:
          description: >-
            Export Control Classification Number, required on some exports from
            the United States.
          type: string
        mass_unit:
          $ref: '#/components/schemas/WeightUnit'
        metadata:
          description: >-
            A string of up to 100 characters that can be filled with any
            additional information you 

            want to attach to the object.
          example: Order ID "123454"
          type: string
        net_weight:
          description: Total weight of this item, i.e. quantity * weight per item.
          example: '5'
          type: string
        origin_country:
          description: >-
            Country of origin of the item. Example: `US` or `DE`. 

            All accepted values can be found on the <a
            href="http://www.iso.org/" target="_blank">Official ISO Website</a>.
          type: string
        quantity:
          description: >-
            Quantity of this item in the shipment you send.  Must be greater
            than 0.
          example: 20
          format: int64
          type: integer
        sku_code:
          description: SKU code of the item, which is required by some carriers.
          example: HM-123
          type: string
        tariff_number:
          description: The tariff number of the item.
          type: string
        value_amount:
          description: Total value of this item, i.e. quantity * value per item.
          example: '200'
          type: string
        value_currency:
          description: >-
            Currency used for value_amount. The <a
            href="http://www.xe.com/iso4217.php">official ISO 4217</a> 

            currency codes are used, e.g.  `USD` or `EUR`.
          example: USD
          type: string
      required:
        - description
        - quantity
        - net_weight
        - mass_unit
        - value_amount
        - value_currency
        - origin_country
      type: object
    CustomsItem:
      allOf:
        - $ref: '#/components/schemas/CustomsItemBase'
        - properties:
            object_created:
              description: Date and time of object creation.
              example: '2014-07-17T00:49:20.631Z'
              format: date-time
              type: string
            object_id:
              description: Unique identifier of the given object.
              example: d799c2679e644279b59fe661ac8fa488
              type: string
            object_owner:
              description: Username of the user who created the object.
              example: shippotle@shippo.com
              type: string
            object_state:
              $ref: '#/components/schemas/ObjectState'
            object_updated:
              description: Date and time of last object update.
              example: '2014-07-17T00:49:20.631Z'
              format: date-time
              type: string
            test:
              description: Indicates whether the object has been created in test mode.
              type: boolean
    CustomsItemPaginatedList:
      allOf:
        - $ref: '#/components/schemas/PaginatedList'
        - properties:
            results:
              items:
                $ref: '#/components/schemas/CustomsItem'
              type: array
    CustomsTaxIdentification:
      description: >-
        Tax identification that may be required to ship in certain countries.
        Typically used to assess duties on 

        goods that are crossing a border.
      properties:
        number:
          description: Tax identification number.
          example: '123456789'
          type: string
        type:
          description: >-
            Type of tax identification.

            * `EIN` - Employer Identification Number, also known as a Federal
            Tax Identification Number.

            * `VAT` - Value Added Tax identification number.

            * `IOSS` - Import One-Stop Shop

            * `ARN` - Australian Taxation Office Reference Number
          example: EIN
          enum:
            - EIN
            - VAT
            - IOSS
            - ARN
          type: string
      type: object
    DangerousGoodsBiologicalMaterial:
      description: Container for specifying the presence of biological material.
      properties:
        contains:
          description: Indicates if the shipment contains biological material.
          type: boolean
      type: object
    DangerousGoodsLithiumBatteries:
      description: Container for specifying the presence of lithium batteries.
      properties:
        contains:
          description: Indicates if the shipment contains lithium batteries.
          type: boolean
      type: object
    DangerousGoodsObject:
      description: >-
        Container for specifying the presence of dangerous materials. This is
        specific to USPS, and if any contents

        are provided, only certain USPS service levels will be eligible. For
        more information, see our

        <a href="https://docs.goshippo.com/docs/shipments/hazmat/">guide on
        hazardous or dangerous materials shipping</a>.
      properties:
        contains:
          description: Indicates if the shipment contains dangerous goods.
          type: boolean
        biological_material:
          $ref: '#/components/schemas/DangerousGoodsBiologicalMaterial'
        lithium_batteries:
          $ref: '#/components/schemas/DangerousGoodsLithiumBatteries'
      type: object
    DefaultParcelTemplate:
      properties:
        result:
          $ref: '#/components/schemas/UserParcelTemplate'
      type: object
    DefaultParcelTemplateUpdateRequest:
      properties:
        object_id:
          example: b958d3690bb04bb8b2986724872750f5
          type: string
      type: object
    DepartmentNumber:
      description: Specify the department number field on the label (FedEx only).
      properties:
        prefix:
          description: >-
            Custom prefix for department number field (ZPL labels only). Up to
            11 characters, including trailing 

            spaces. Empty string indicates removal of default prefix. To use the
            default prefix, do not include

            this property.
          type: string
        value:
          description: >-
            Optional text to be printed on the shipping label for department
            number. Up to 40 characters.
          type: string
      type: object
    DryIce:
      description: Specify that the package contains Dry Ice (FedEx, Veho, and UPS only).
      properties:
        contains_dry_ice:
          description: Mandatory. Specifies that the package contains Dry Ice.
          type: boolean
        weight:
          description: >-
            Mandatory. Units must be in Kilograms. Cannot be greater than
            package weight.
          type: string
      type: object
    ErrorMessage:
      properties:
        shipment:
          example:
            - address_to:
                - This field is required.
          items:
            additionalProperties:
              items:
                type: string
              type: array
            type: object
          type: array
      type: object
    ShipmentExtra:
      description: An object holding optional extra services to be requested.
      properties:
        ancillary_endorsement:
          description: >-
            Specify an ancillary service endorsement to provide the USPS with
            instructions on how to handle undeliverable-as-addressed pieces (DHL
            eCommerce only).
          enum:
            - FORWARDING_SERVICE_REQUESTED
            - RETURN_SERVICE_REQUESTED
          type: string
        authority_to_leave:
          description: >-
            Request `true` to give carrier permission to leave the parcel in a
            safe place if no one answers the 

            door (where supported). When set to `false`, if no one is available
            to receive the item, the parcel 

            will not be left (*surcharges may be applicable).
          type: boolean
        alcohol:
          $ref: '#/components/schemas/Alcohol'
        billing:
          $ref: '#/components/schemas/Billing'
        bypass_address_validation:
          description: Bypasses address validation (USPS, UPS, & LaserShip only).
          type: boolean
        carbon_neutral:
          description: Request carbon offsets by passing true (UPS only).
          type: boolean
        carrier_hub_id:
          description: Identifies the carrier injection site.
          type: string
        carrier_hub_travel_time:
          description: >-
            Travel time in hours from fulfillment center to carrier injection
            site.
          type: integer
        COD:
          $ref: '#/components/schemas/COD'
        container_type:
          description: Specify container type.
          type: string
        critical_pull_time:
          description: >-
            Carrier arrival time to pickup packages from the fulfillment
            center. 

            UTC format: `%Y-%m-%dT%H:%M:%SZ`
          type: string
        customer_branch:
          description: Specify customer branch (Lasership only).
          type: string
        customer_reference:
          $ref: '#/components/schemas/CustomerReference'
        dangerous_goods_code:
          description: >-
            Dangerous Goods Code (DHL eCommerce only). See <a
            href="https://api-legacy.dhlecs.com/docs/v2/appendix.html#dangerous-goods">Category
            Codes</a>
          enum:
            - '01'
            - '02'
            - '03'
            - '04'
            - '05'
            - '06'
            - '07'
            - '08'
            - '09'
          type: string
        dangerous_goods:
          $ref: '#/components/schemas/DangerousGoodsObject'
        delivery_instructions:
          description: >-
            Specify delivery instructions. Up to 500 characters. (FedEx and
            OnTrac only).
          type: string
        dept_number:
          $ref: '#/components/schemas/DepartmentNumber'
        dry_ice:
          $ref: '#/components/schemas/DryIce'
        fulfillment_center:
          description: The fulfilment center where the package originates from.
          type: string
        insurance:
          $ref: '#/components/schemas/Insurance'
        invoice_number:
          $ref: '#/components/schemas/InvoiceNumber'
        is_return:
          description: >-
            This field specifies if it is a scan-based return shipment. See the
            <a href="https://docs.goshippo.com/docs/shipments/returns/">Create a
            return shipment</a> section for more details.
          type: boolean
        lasership_attrs:
          description: >-
            Specify Lasership Attributes (Lasership only). Multiple options
            accepted.
          enum:
            - TwoPersonDelivery
            - Explosive
            - Alcohol
            - Hazmat
            - ControlledSubstance
            - Refrigerated
            - DryIce
            - Perishable
            - NoRTS
          type: string
        lasership_declared_value:
          description: Declared value (Lasership only). Defaults to `50.00`.
          type: string
        po_number:
          $ref: '#/components/schemas/PoNumber'
        preferred_delivery_timeframe:
          description: >-
            Required for DHL Germany Paket Sameday. Designates a desired
            timeframe for delivery. Format is `HHMMHHMM`
          enum:
            - '10001200'
            - '12001400'
            - '14001600'
            - '16001800'
            - '18002000'
            - '19002100'
          type: string
        premium:
          description: >-
            Add premium service to a shipment (DHL Germany international
            shipments only).
          type: boolean
        qr_code_requested:
          description: >-
            Request a QR code for a given transaction when creating a shipping
            label (USPS domestic and Evri UK only).
          type: boolean
        reference_1:
          description: >-
            Optional text to be printed on the shipping label if supported by
            carrier. Up to 50 characters.
          type: string
        reference_2:
          description: >-
            Optional text to be printed on the shipping label if supported by
            carrier. Up to 50 characters. For DHL eCommerce, this field can be
            used for billing reference.
          type: string
        request_retail_rates:
          description: >-
            Returns retail rates instead of account-based rates (UPS and FedEx
            only).
          type: boolean
        return_service_type:
          description: Request additional return option for return shipments (UPS only).
          enum:
            - PRINT_AND_MAIL
            - ATTEMPT_1
            - ATTEMPT_3
            - ELECTRONIC_LABEL
          type: string
        rma_number:
          $ref: '#/components/schemas/RmaNumber'
        saturday_delivery:
          description: Marks shipment as to be delivered on a Saturday.
          type: boolean
        signature_confirmation:
          description: >-
            Request standard or adult signature confirmation. You can
            alternatively request Certified Mail (USPS only) 

            or Indirect signature (FedEx only) or Carrier Confirmation (Deutsche
            Post only).
          enum:
            - STANDARD
            - ADULT
            - CERTIFIED
            - INDIRECT
            - CARRIER_CONFIRMATION
          type: string
      type: object
    FedexConnectExistingOwnAccountParameters:
      properties:
        first_name:
          example: Hippo
          type: string
        from_address_city:
          example: San Francisco
          type: string
        from_address_country_iso2:
          example: US
          type: string
        from_address_st:
          example: 250 Union St
          type: string
        from_address_state:
          example: CA
          type: string
        from_address_zip:
          example: '94133'
          type: string
        last_name:
          example: Hippovich
          type: string
        meter:
          example: '118599345'
          type: string
        phone_number:
          example: '1112223333'
          type: string
        smartpost_id:
          example: '5902'
          type: string
      required:
        - meter
      type: object
    InstantTransactionRequestBody:
      properties:
        carrier_account:
          example: b741b99f95e841639b54272834bc478c
          type: string
        label_file_type:
          example: PDF
          type: string
          enum:
            - PNG
            - PNG_2.3x7.5
            - PDF
            - PDF_2.3x7.5
            - PDF_4x6
            - PDF_4x8
            - PDF_A4
            - PDF_A6
            - ZPLII
        metadata:
          example: 'Order ID #12345'
          type: string
        servicelevel_token:
          example: usps_priority
          type: string
        shipment:
          $ref: '#/components/schemas/ShipmentCreateRequest'
      required:
        - shipment
        - carrier_account
        - servicelevel_token
      type: object
    Insurance:
      description: >-
        To add 3rd party insurance powered by <a
        href="https://docs.goshippo.com/docs/shipments/shippinginsurance/">XCover</a>,
        specify <br> `amount`, `content`, and `currency`. <br> Alternatively,
        you can choose carrier provided insurance by additionally specifying
        `provider` (UPS, FedEx and OnTrac only). <br><br> If you do not want to
        add insurance to you shipment, do not set these parameters.
      properties:
        amount:
          description: Declared value of the goods you want to insure.
          example: '5.5'
          type: string
        content:
          description: Description of package content.
          type: string
        currency:
          description: |-
            Currency for the amount value.
            Currently only USD is supported for FedEx and UPS.
          example: USD
          type: string
          format: iso-4217
        provider:
          description: >-
            To have insurance cover provided by a carrier directly instead of
            Shippo's provider (XCover), set `provider` to `FEDEX`, `UPS`, or
            `ONTRAC`.
          enum:
            - FEDEX
            - UPS
            - ONTRAC
          type: string
      type: object
    InvoiceNumber:
      description: Specify the invoice number field on the label (FedEx only).
      properties:
        prefix:
          description: >-
            Custom prefix for invoice number field (ZPL labels only). Up to 11
            characters, including trailing 

            spaces. Empty string indicates removal of default prefix. To use the
            default prefix, do not include

            this property.
          type: string
        value:
          description: >-
            Optional text to be printed on the shipping label for invoice
            number. Up to 40 characters. If 

            provided, this will be used on the label instead of
            shipment.customs_declaration.invoice.
          type: string
      type: object
    LineItemBase:
      properties:
        title:
          description: Title of the line item.
          example: Hippo Magazines
          type: string
        currency:
          description: Currency of the <code>total_price</code> amount.
          example: USD
          type: string
        manufacture_country:
          description: >-
            Country the item was manufactured in. In the Shippo dashboard, this
            value will be used ot pre-fill the customs declaration when creating
            a label for this order.
          example: US
          type: string
        max_delivery_time:
          description: >-
            The date and time this item needs to be delivered by, i.e. by when
            the carrier delivers it to the buyer. 

            This value is used by some platforms such as eBay to measure a
            seller's shipping time and performance. 

            It will be displayed in the Shippo dashboard.
          example: '2016-07-23T00:00:00Z'
          format: date-time
          type: string
        max_ship_time:
          description: >-
            The date and time this item needs to be fulfilled by, i.e. by when
            the shipping label needs to be 

            created and handed over to the carrier. This value is used by some
            platforms such as eBay to measure 

            a seller's handling time and performance. It will be displayed in
            the Shippo dashboard.
          example: '2016-07-23T00:00:00Z'
          format: date-time
          type: string
        quantity:
          description: The quantity of this item in this order.
          example: 20
          format: int64
          type: integer
        sku:
          description: The stock keeping unit value of this item.
          example: HM-123
          type: string
        total_price:
          description: >-
            Total price paid by the buyer for this item (or these items, if
            quantity > 1).
          example: '12.1'
          type: string
        variant_title:
          description: >-
            A variant is a specific variation of an item (e.g. `size M` or
            `color blue`). 

            Variants might be exposed as a separate resource in the future too. 

            Currently the variant title is a free text field describing the
            variant.
          example: June Edition
          type: string
        weight:
          description: >-
            Total weight of this/these item(s). Instead of specifying the weight
            of all items, 

            you can also set the <code>total_weight</code> value of the order
            object.
          example: '0.4'
          type: string
        weight_unit:
          $ref: '#/components/schemas/WeightUnit'
      type: object
    LineItem:
      allOf:
        - $ref: '#/components/schemas/LineItemBase'
        - properties:
            object_id:
              description: Unique identifier of the line item object.
              type: string
              example: abf7d5675d744b6ea9fdb6f796b28f28
    LiveRateCreateRequest:
      properties:
        address_from:
          description: >-
            The sender address, which includes your name, company name, street
            address, city, state, zip code, 

            country, phone number, and email address (strings). Special
            characters should not be included in 

            any address element, especially name, company, and email.
          oneOf:
            - description: Object ID for an existing <a href="#tag/Addresses">Address</a>
              type: string
            - $ref: '#/components/schemas/AddressCompleteCreateRequest'
        address_to:
          description: >-
            The recipient address, which includes the recipient's name, company
            name, street address, city, state, zip code, 

            country, phone number, and email address (strings). Special
            characters should not be included in 

            any address element, especially name, company, and email.
          oneOf:
            - description: Object ID for an existing <a href="#tag/Addresses">Address</a>
              type: string
            - $ref: '#/components/schemas/AddressCompleteCreateRequest'
        line_items:
          description: Array of Line Item objects
          items:
            $ref: '#/components/schemas/LineItem'
          type: array
        parcel:
          description: >-
            Object ID for an existing User Parcel Template OR a fully formed
            Parcel object.
          oneOf:
            - description: Object ID for an existing User Parcel Template
              type: string
            - $ref: '#/components/schemas/Parcel'
          example: 5df144dca289442cv7a06
      required:
        - address_to
        - line_items
      type: object
    LiveRate:
      properties:
        title:
          description: The name of the service group being returned
          example: Shipping Option 1
          type: string
        amount:
          description: >-
            The value of the price for the service group, in units of currency
            of the sender address
          example: '12.34'
          type: string
        amount_local:
          description: >-
            The value of the price for the service group, in the currency of the
            destination address
          example: '15.48'
          type: string
        currency:
          description: The ISO 4217 currency code for the price
          example: USD
          type: string
        currency_local:
          description: The ISO 4217 currency code for the currency describing amount_local
          example: CAD
          type: string
        estimated_days:
          description: >-
            The estimated days in transit of the rate that powers the shipping
            option, if available.
          example: 2
          format: int64
          type: integer
      type: object
    LiveRatePaginatedList:
      allOf:
        - $ref: '#/components/schemas/PaginatedList'
        - properties:
            count:
              example: 123
              format: int64
              type: integer
            results:
              items:
                $ref: '#/components/schemas/LiveRate'
              type: array
    Location:
      description: Location where the parcel(s) will be picked up.
      properties:
        address:
          $ref: '#/components/schemas/AddressCompleteCreateRequest'
        building_location_type:
          description: >-
            Where your parcels will be available for pickup. "Security Deck" and
            "Shipping Dock" are only 

            supported for DHL Express.
          enum:
            - Back Door
            - Ring Bell
            - Security Deck
            - Shipping Dock
            - Front Door
            - Knock on Door
            - In/At Mailbox
            - Mail Room
            - Office
            - Other
            - Reception
            - Side Door
          example: Front Door
          type: string
        building_type:
          description: The type of building where the pickup is located.
          enum:
            - apartment
            - building
            - department
            - floor
            - room
            - suite
          example: apartment
          type: string
        instructions:
          description: >-
            Pickup instructions for the courier. This is a mandatory field if
            the building_location_type is "Other".
          example: Behind screen door
          type: string
      required:
        - building_location_type
        - address
      type: object
    ManifestBase:
      properties:
        carrier_account:
          description: ID of carrier account
          example: adcfdddf8ec64b84ad22772bce3ea37a
          type: string
        shipment_date:
          description: |-
            All shipments to be submitted on this day will be closed out. 
            Must be in the format `2014-01-18T00:35:03.463Z` (ISO 8601 date).
          example: '2014-05-16T23:59:59Z'
          type: string
        transactions:
          description: >-
            IDs transactions to use. If you set this to null or not send this
            parameter, 

            Shippo will automatically assign all applicable transactions.
          example:
            - adcfdddf8ec64b84ad22772bce3ea37a
          items:
            type: string
          type: array
      required:
        - carrier_account
        - shipment_date
      type: object
    Manifest:
      allOf:
        - $ref: '#/components/schemas/ManifestBase'
        - properties:
            address_from:
              description: >-
                ID of the Address object that should be used as pickup address
                for the scan form. 

                The USPS will validate this address before creating the scan
                form.
              example: d799c2679e644279b59fe661ac8fa488
              type: string
            documents:
              description: An array containing the URLs to all returned manifest documents.
              items:
                type: string
              type: array
            errors:
              description: >-
                An array of codes and messages describing the error that
                occurred if any.
              items:
                type: string
              type: array
            object_created:
              description: Date and time of object creation.
              format: date-time
              type: string
            object_id:
              description: Unique identifier of the given object.
              example: adcfdddf8ec64b84ad22772bce3ea37a
              type: string
            object_owner:
              description: Username of the user who created the object.
              example: shippotle@shippo.com
              type: string
            object_updated:
              description: Date and time of last object update.
              format: date-time
              type: string
            status:
              description: Indicates the status of the manifest.
              enum:
                - QUEUED
                - SUCCESS
                - ERROR
              example: SUCCESS
              type: string
          required:
            - status
            - object_created
            - object_updated
            - object_id
            - object_owner
            - documents
            - address_from
    ManifestErrors:
      properties:
        generic_carrier_error:
          description: >-
            There is an error from the carrier that requires investigation.
            Please contact support with the object ID of this response.
          type: string
        carrier_account_invalid_credentials:
          description: >-
            The carrier account contains invalid credentials. Please update your
            carrier account with valid credentials.
          type: string
        carrier_account_access_denied:
          description: >-
            There is an issue with your carrier account. Please contact support
            with the information of your account manager at the carrier and the
            object ID of this response.
          type: string
        manifest_invalid_transactions:
          description: >-
            For this carrier, all shipments must be manifested on the same day
            that they are created regardless of shipment date.
          type: string
        manifest_no_transactions:
          description: >-
            There are no shipments in the manifest. Please check that the
            shipment date of the shipments matches the shipment date of the
            manifest.
          type: string
        address_from_missing_zip:
          description: >-
            The sender address is missing the zip. Please update the sender
            address and try again.
          type: string
        address_from_invalid_zip1:
          description: >-
            The sender address contains an invalid zip. Please update the sender
            address and try again.
          type: string
        address_from_invalid_zip2:
          description: >-
            The sender address contains an invalid zip. Please update the sender
            address and try again. You can also try removing the last 4 digits
            of the zip.
          type: string
        address_from_missing_city:
          description: >-
            The sender address is missing the city. Please update the sender
            address and try again.
          type: string
        address_from_invalid_city:
          description: >-
            The sender address contains an invalid city. Please update the
            sender address and try again.
          type: string
        address_from_missing_state:
          description: >-
            The sender address is missing the state. Please update the sender
            address and try again.
          type: string
        address_from_invalid_state:
          description: >-
            The sender address contains an invalid state. Please update the
            sender address and try again.
          type: string
        address_from_missing_name:
          description: >-
            The sender address is missing the name. Please update the sender
            address and try again.
          type: string
        shipment_date_missing:
          description: >-
            The shipment date is missing. Please update the shipment date and
            try again.
          type: string
        shipment_date_invalid:
          description: >-
            The shipment date is invalid. Please update the shipment date and
            try again.
          type: string
    ManifestCreateRequest:
      allOf:
        - $ref: '#/components/schemas/ManifestBase'
        - properties:
            address_from:
              oneOf:
                - $ref: '#/components/schemas/AddressCreateRequest'
                - description: >-
                    ID of the Address object that should be used as pickup
                    address for the scan form. 

                    The USPS will validate this address before creating the scan
                    form.
                  type: string
            async:
              type: boolean
          required:
            - address_from
      type: object
    ManifestPaginatedList:
      allOf:
        - $ref: '#/components/schemas/PaginatedList'
        - properties:
            results:
              items:
                $ref: '#/components/schemas/Manifest'
              type: array
    OrderBase:
      properties:
        currency:
          description: >-
            **Required if total_price is provided**<br>

            Currency of the <code>total_price</code> and <code>total_tax</code>
            amounts.
          example: USD
          type: string
        notes:
          description: Custom buyer- or seller-provided notes about the order.
          example: This customer is a VIP
          type: string
        order_number:
          description: >-
            An alphanumeric identifier for the order used by the seller/buyer.
            This identifier doesn't need to be unique.
          example: '#1068'
          type: string
        order_status:
          description: >-
            Current state of the order. See the <a
            href="https://docs.goshippo.com/docs/orders/orders/">orders
            tutorial</a> 

            for the logic of how the status is handled.
          enum:
            - UNKNOWN
            - AWAITPAY
            - PAID
            - REFUNDED
            - PARTIALLY_FULFILLED
            - SHIPPED
          example: PAID
          type: string
        placed_at:
          description: >-
            Date and time when the order was placed. This datetime can be
            different from the datetime of the order object creation on Shippo.
          example: '2016-09-23T01:28:12Z'
          type: string
        shipping_cost:
          description: >-
            Amount paid by the buyer for shipping. This amount can be different
            from the price the seller will actually pay for shipping.
          example: '12.83'
          type: string
        shipping_cost_currency:
          description: |-
            **Required if shipping_cost is provided**<br>
            Currency of the <code>shipping_cost</code> amount.
          example: USD
          type: string
        shipping_method:
          description: >-
            Shipping method (carrier + service or other free text description)
            chosen by the buyer. 

            This value can be different from the shipping method the seller will
            actually choose.
          example: USPS First Class Package
          type: string
        subtotal_price:
          example: '12.1'
          type: string
        total_price:
          description: Total amount paid by the buyer for this order.
          example: '24.93'
          type: string
        total_tax:
          description: Total tax amount paid by the buyer for this order.
          example: '0.0'
          type: string
        weight:
          description: Total weight of the order.
          example: '0.4'
          type: string
        weight_unit:
          $ref: '#/components/schemas/WeightUnit'
      required:
        - placed_at
      type: object
    Order:
      allOf:
        - $ref: '#/components/schemas/OrderBase'
        - properties:
            from_address:
              $ref: '#/components/schemas/Address'
            to_address:
              $ref: '#/components/schemas/Address'
            line_items:
              description: >-
                Array of <a href="#section/Line-Item">line item</a> objects
                representing the items in this order. 

                All objects will be returned expanded by default.
              items:
                $ref: '#/components/schemas/LineItem'
              type: array
            object_id:
              description: Unique identifier of the order object.
              example: adcfdddf8ec64b84ad22772bce3ea37a
              type: string
            object_owner:
              description: Username of the user who created the object.
              example: shippotle@shippo.com
              type: string
            shop_app:
              description: >-
                Platform the order was created on and, if applicable, imported
                from. 

                Orders created via the Shippo API or dashboard will have the
                value "Shippo".
              type: string
              example: Shippo
              enum:
                - Amazon
                - Bigcommerce
                - CSV_Import
                - eBay
                - ePages
                - Etsy
                - Godaddy
                - Magento
                - Shippo
                - Shopify
                - Spreecommerce
                - StripeRelay
                - Weebly
                - WooCommerce
            transactions:
              description: >-
                Array of <a href="#tag/Transactions">transaction</a> objects
                representing all shipping labels purchased for this order.

                All objects are returned expanded with a limited number of
                fields by default.
              items:
                type: string
              type: array
          required:
            - to_address
    OrderCreateRequest:
      allOf:
        - $ref: '#/components/schemas/OrderBase'
        - properties:
            from_address:
              $ref: '#/components/schemas/AddressCreateRequest'
            to_address:
              $ref: '#/components/schemas/AddressCreateRequest'
            line_items:
              description: >-
                Array of <a href="#section/Line-Item">line item</a> objects
                representing the items in this order. 

                All objects will be returned expanded by default.
              items:
                $ref: '#/components/schemas/LineItemBase'
              type: array
          required:
            - to_address
    OrderPaginatedList:
      allOf:
        - $ref: '#/components/schemas/PaginatedList'
        - properties:
            results:
              items:
                $ref: '#/components/schemas/Order'
              type: array
    Parcel:
      properties:
        distance_unit:
          $ref: '#/components/schemas/DistanceUnitTemplate'
        extra:
          $ref: '#/components/schemas/ParcelExtra'
        height:
          description: >-
            **Required if template is not specified**<br>

            Height of the parcel. Up to six digits in front and four digits
            after the decimal separator are accepted.
          example: '1'
          type: string
        length:
          description: >-
            **Required if template is not specified**<br>

            Length of the Parcel. Up to six digits in front and four digits
            after the decimal separator are accepted.
          example: '1'
          type: string
        mass_unit:
          $ref: '#/components/schemas/WeightUnit'
        metadata:
          description: >-
            A string of up to 100 characters that can be filled with any
            additional information you want to attach to the object.
          type: string
        object_created:
          description: Date and time of Parcel creation.
          example: '2014-07-09T02:19:13.174Z'
          format: date-time
          type: string
        object_id:
          description: >-
            Unique identifier of the given Parcel object. This ID is required to
            create a Shipment object.
          example: adcfdddf8ec64b84ad22772bce3ea37a
          type: string
        object_owner:
          description: Username of the user who created the Parcel object.
          example: shippotle@shippo.com
          type: string
        object_state:
          description: >-
            A Parcel will only be valid when all required values have been sent
            and validated successfully.
          example: VALID
          enum:
            - VALID
          type: string
        object_updated:
          description: >-
            Date and time of last Parcel update. Since you cannot update Parcels
            after they were created, this time stamp reflects the time when the
            Parcel was changed by Shippo's systems for the last time, e.g.,
            during sorting the dimensions given.
          example: '2014-07-09T02:19:13.174Z'
          format: date-time
          type: string
        template:
          $ref: '#/components/schemas/ParcelTemplateEnumSet'
        test:
          description: Indicates whether the object has been created in test mode.
          type: boolean
        weight:
          description: >-
            Weight of the parcel. Up to six digits in front and four digits
            after the decimal separator are accepted.
          example: '1'
          type: string
        width:
          description: >-
            **Required if template is not specified**<br>

            Width of the Parcel. Up to six digits in front and four digits after
            the decimal separator are accepted.
          example: '1'
          type: string
      required:
        - length
        - width
        - height
        - distance_unit
        - weight
        - mass_unit
      type: object
    ParcelCreateRequest:
      properties:
        distance_unit:
          $ref: '#/components/schemas/DistanceUnitTemplate'
        height:
          description: >-
            **Required if template is not specified**<br>

            Height of the parcel. Up to six digits in front and four digits
            after the decimal separator are accepted.
          example: '1'
          type: string
        length:
          description: >-
            **Required if template is not specified**<br>

            Length of the Parcel. Up to six digits in front and four digits
            after the decimal separator are accepted.
          example: '1'
          type: string
        mass_unit:
          $ref: '#/components/schemas/WeightUnit'
        template:
          $ref: '#/components/schemas/ParcelTemplateEnumSet'
        weight:
          description: >-
            Weight of the parcel. Up to six digits in front and four digits
            after the decimal separator are accepted.
          example: '1'
          type: string
        width:
          description: >-
            **Required if template is not specified**<br>

            Width of the Parcel. Up to six digits in front and four digits after
            the decimal separator are accepted.
          example: '1'
          type: string
        metadata:
          type: string
          example: Customer ID 123456
      required:
        - length
        - width
        - height
        - distance_unit
        - weight
        - mass_unit
      type: object
    ParcelPaginatedList:
      allOf:
        - $ref: '#/components/schemas/PaginatedList'
        - properties:
            results:
              items:
                $ref: '#/components/schemas/Parcel'
              type: array
    ParcelExtra:
      description: >-
        An object holding optional extra services to be requested for each
        parcel in a multi-piece shipment. 

        See the <a href="#section/Parcel-Extras">Parcel Extra table below</a>
        for all available services.
      properties:
        COD:
          $ref: '#/components/schemas/COD'
        insurance:
          $ref: '#/components/schemas/ParcelInsurance'
        reference_1:
          description: >-
            Optional text to be printed on the shipping label if supported by
            carrier. Up to 50 characters.
          type: string
        reference_2:
          description: >-
            Optional text to be printed on the shipping label if supported by
            carrier. Up to 50 characters.
          type: string
      type: object
    ParcelInsurance:
      description: >-
        To add insurace to your parcel, specify `amount`, `content` and
        `currency`. <br><br>If you do not want to add insurance to you parcel,
        do not set these parameters.
      properties:
        amount:
          description: Declared value of the goods you want to insure.
          example: '5.5'
          type: string
        content:
          description: Description of parcel content.
          example: Laptop
          type: string
        currency:
          description: >-
            Currency for the amount value. Currently only USD is supported for
            FedEx and UPS.
          example: USD
          type: string
        provider:
          description: >-
            To have insurance cover provided by a carrier directly instead of
            Shippo's provider (XCover), set provider to `FEDEX`, `UPS`, or
            `ONTRAC`.
          example: UPS
          type: string
          enum:
            - FEDEX
            - UPS
            - ONTRAC
      type: object
    ParcelRequest:
      properties:
        distance_unit:
          $ref: '#/components/schemas/DistanceUnitTemplate'
        extra:
          $ref: '#/components/schemas/ParcelExtra'
        height:
          description: >-
            Required if template is not specified. Height of the parcel. Up to
            six digits in front and four digits after the decimal separator are
            accepted.
          example: '1'
          type: string
        length:
          description: >-
            Required if template is not specified. Length of the Parcel. Up to
            six digits in front and four digits after the decimal separator are
            accepted.
          example: '1'
          type: string
        mass_unit:
          $ref: '#/components/schemas/WeightUnit'
        metadata:
          description: >-
            A string of up to 100 characters that can be filled with any
            additional information you want to attach to the object.
          type: string
        template:
          $ref: '#/components/schemas/ParcelTemplateEnumSet'
        test:
          description: Indicates whether the object has been created in test mode.
          type: boolean
        weight:
          description: >-
            Weight of the parcel. Up to six digits in front and four digits
            after the decimal separator are accepted.
          example: '1'
          type: string
        width:
          description: >-
            Required if template is not specified. Width of the Parcel. Up to
            six digits in front and four digits after the decimal separator are
            accepted.
          example: '1'
          type: string
      required:
        - length
        - width
        - height
        - distance_unit
        - weight
        - mass_unit
      type: object
    PickupBase:
      properties:
        carrier_account:
          description: >-
            The object ID of your USPS or DHL Express carrier account. 

            You can retrieve this from your Rate requests or our <a
            href="#tag/Carrier-Accounts/">Carrier Accounts</a> endpoint.
          example: adcfdddf8ec64b84ad22772bce3ea37a
          type: string
        location:
          $ref: '#/components/schemas/Location'
        metadata:
          description: >-
            A string of up to 100 characters that can be filled with any
            additional information you 

            want to attach to the object.
          type: string
        requested_end_time:
          description: >-
            The latest that you requested your parcels to be available for
            pickup. 

            Expressed in the timezone specified in the response.
          format: date-time
          type: string
        requested_start_time:
          description: >-
            The earliest that you requested your parcels to be ready for
            pickup. 

            Expressed in the timezone specified in the response.
          format: date-time
          type: string
        transactions:
          description: >-
            The transaction(s) object ID(s) for the parcel(s) that need to be
            picked up.
          example:
            - adcfdddf8ec64b84ad22772bce3ea37a
          items:
            type: string
          type: array
      required:
        - carrier_account
        - location
        - transactions
        - requested_start_time
        - requested_end_time
      type: object
    Pickup:
      allOf:
        - $ref: '#/components/schemas/PickupBase'
        - properties:
            object_created:
              description: Date and time of Pickup creation.
              format: date-time
              type: string
            object_id:
              description: Unique identifier of the given Pickup object.
              type: string
            object_updated:
              description: Date and time of last Pickup update.
              format: date-time
              type: string
            confirmed_start_time:
              description: >-
                The earliest that your parcels will be ready for pickup,
                confirmed by the carrier. 

                Expressed in the timezone specified in the response.
              type: string
              format: datetime
              example: '2020-05-09T12:00:00Z'
            confirmed_end_time:
              description: >-
                The latest that your parcels will be available for pickup,
                confirmed by the carrier. 

                Expressed in the timezone specified in the response.
              type: string
              format: datetime
              example: '2020-05-09T23:59:59.999Z'
            cancel_by_time:
              description: >-
                The latest time to cancel a pickup. Expressed in the timezone
                specified in the response. 

                To cancel a pickup, you will need to contact the carrier
                directly. 

                The ability to cancel a pickup through Shippo may be released in
                future iterations.
              type: string
              format: datetime
              example: '2020-05-09T08:00:00Z'
            status:
              description: Indicates the status of the pickup.
              type: string
              example: CONFIRMED
              enum:
                - PENDING
                - CONFIRMED
                - ERROR
                - CANCELLED
            confirmation_code:
              description: >-
                Pickup's confirmation code returned by the carrier. 

                To edit or cancel a pickup, you will need to contact USPS or DHL
                Express directly and provide your `confirmation_code`.
              type: string
              example: WTC310058750
            timezone:
              description: >-
                The pickup time windows will be in the time zone specified here,
                not UTC.
              type: string
              example: US/Pacific
            messages:
              description: >-
                An array containing strings of any messages generated during
                validation.
              type: array
              items:
                type: string
              example: []
            is_test:
              description: Indicates whether the object has been created in test mode.
              type: boolean
    BadRequestWithDetail:
      properties:
        detail:
          example: >-
            Your registration unfortunately failed due to the following UPS
            error: Missing or invalid ControlID.
          type: string
      type: object
    PoNumber:
      description: Specify the PO number field on the label (FedEx only).
      properties:
        prefix:
          description: >-
            Custom prefix for PO number field (ZPL labels only). Up to 11
            characters, including trailing 

            spaces. Empty string indicates removal of default prefix. To use the
            default prefix, do not include

            this property.
          type: string
        value:
          description: >-
            Optional text to be printed on the shipping label for PO number. Up
            to 40 characters. If 

            this is provided, reference_2 will be ignored.
          type: string
      type: object
    CarrierAccountPaginatedList:
      allOf:
        - $ref: '#/components/schemas/PaginatedList'
        - properties:
            results:
              items:
                $ref: '#/components/schemas/CarrierAccount'
              type: array
    Rate:
      properties:
        amount:
          description: >-
            Final Rate price, expressed in the currency used in the sender's
            country.
          example: '5.5'
          type: string
        amount_local:
          description: >-
            Final Rate price, expressed in the currency used in the recipient's
            country.
          example: '5.5'
          type: string
        arrives_by:
          description: >-
            Predicted time the carrier will deliver the package in the
            destination's local time zone. In the format `HH:MM:SS`.
          type: string
          example: '08:30:00'
        attributes:
          description: >-
            An array containing specific attributes of this Rate in context of
            the entire shipment. 

            Attributes can be assigned `CHEAPEST`, `FASTEST`, or `BESTVALUE`.
          items:
            enum:
              - BESTVALUE
              - CHEAPEST
              - FASTEST
            type: string
          type: array
        carrier_account:
          description: >-
            Object ID of the carrier account that has been used to retrieve the
            rate.
          example: 078870331023437cb917f5187429b093
          type: string
        currency:
          description: >-
            Currency used in the sender's country, refers to `amount`. 

            The <a href="http://www.xe.com/iso4217.php">official ISO 4217</a>
            currency codes are used, e.g. `USD` or `EUR`.
          example: USD
          type: string
        currency_local:
          description: >-
            Currency used in the recipient's country, refers to `amount_local`. 

            The <a href="http://www.xe.com/iso4217.php">official ISO 4217</a>
            currency codes are used, e.g. `USD` or "EUR".
          example: USD
          type: string
        duration_terms:
          description: >-
            Further clarification of the transit times. 

            Often, this includes notes that the transit time as given in "days"
            is only an average, not a guaranteed time.
          example: Delivery in 1 to 3 business days
          type: string
        estimated_days:
          description: >-
            Estimated transit time (duration) in days of the Parcel at the given
            servicelevel. 

            Please note that this is not binding, but only an average value as
            given by the provider. 

            Shippo is not able to guarantee any transit times.
          example: 2
          format: int64
          type: integer
        included_insurance_price:
          description: >-
            Cost to the user to insure the Rate for the requested amount of
            coverage, if insurance coverage was requested. 

            Expressed in the currency used in the sender's country. Will be null
            if no insurance coverage was requested, or if insurance is requested
            from a non-standard insurance provider. 

            Please note this price is already included in the `amount` and
            `amount_local` fields on the Rate. Do not add this field to them.
          example: 1.05
          type: number
        messages:
          description: >-
            An array containing elements of the following schema: <br>

            `source`(string): the name of the carrier sending the message. <br>

            `code` (string): carrier specific identifier code for the
            corresponding message (not always available).<br>

            `text` (string): a publishable message containing further
            information (not always available).
          items:
            $ref: '#/components/schemas/RateMessage'
          type: array
        object_created:
          description: Date and time of Rate creation.
          format: date-time
          type: string
        object_id:
          description: Unique identifier of the given Rate object.
          example: adcfdddf8ec64b84ad22772bce3ea37a
          type: string
        object_owner:
          description: Username of the user who created the rate object.
          example: pp@gmail.com
          type: string
        provider:
          description: Carrier offering the rate, e.g., `FedEx` or `Deutsche Post DHL`.
          example: USPS
          type: string
        provider_image_75:
          description: >-
            URL to the provider logo with max. dimensions of 75*75px. 

            Please refer to the provider's Logo Usage Guidelines before using
            the logo.
          example: https://cdn2.goshippo.com/providers/75/USPS.png
          type: string
        provider_image_200:
          description: >-
            URL to the provider logo with max. dimensions of 200*200px. 

            Please refer to the provider's Logo Usage Guidelines before using
            the logo.
          example: https://cdn2.goshippo.com/providers/200/USPS.png
          type: string
        servicelevel:
          $ref: '#/components/schemas/ServiceLevel'
        shipment:
          example: adcfdddf8ec64b84ad22772bce3ea37a
          type: string
        test:
          description: Indicates whether the object has been created in test mode.
          type: boolean
        zone:
          description: >-
            The parcel's transit zone token. These tokens can vary depending on
            the provider.
          type: string
          example: '1'
      required:
        - object_created
        - object_id
        - object_owner
        - shipment
        - attributes
        - amount
        - currency
        - amount_local
        - currency_local
        - provider
        - servicelevel
        - carrier_account
      type: object
    RatePaginatedList:
      allOf:
        - $ref: '#/components/schemas/PaginatedList'
        - properties:
            results:
              items:
                $ref: '#/components/schemas/Rate'
              type: array
    RateMessage:
      properties:
        source:
          example: UPS
          type: string
        code:
          type: string
        text:
          example: >-
            RatedShipmentWarning: User Id and Shipper Number combination is not
            qualified to receive negotiated rates.
          type: string
      type: object
    Refund:
      properties:
        object_created:
          description: Date and time of object creation.
          format: date-time
          type: string
        object_id:
          description: Unique identifier of the given object.
          example: adcfdddf8ec64b84ad22772bce3ea37a
          type: string
        object_owner:
          description: Username of the user who created the object.
          example: shippotle@shippo.com
          type: string
        object_updated:
          description: Date and time of last object update.
          format: date-time
          type: string
        status:
          description: Indicates the status of the Refund.
          enum:
            - QUEUED
            - PENDING
            - SUCCESS
            - ERROR
          example: SUCCESS
          type: string
        test:
          description: Indicates whether the object has been created in test mode.
          type: boolean
        transaction:
          description: Object ID of the Transaction to be refunded.
          example: 915d94940ea54c3a80cbfa328722f5a1
          type: string
      type: object
    RefundRequestBody:
      properties:
        async:
          example: false
          type: boolean
        transaction:
          example: 915d94940ea54c3a80cbfa328722f5a1
          type: string
      required:
        - transaction
      type: object
    RefundPaginatedList:
      allOf:
        - $ref: '#/components/schemas/PaginatedList'
        - properties:
            results:
              items:
                $ref: '#/components/schemas/Refund'
              type: array
    RmaNumber:
      description: Specify the RMA number field on the label (FedEx only).
      properties:
        prefix:
          description: >-
            Custom prefix for RMA number field (ZPL labels only). Up to 11
            characters, including trailing 

            spaces. Empty string indicates removal of default prefix. To use the
            default prefix, do not include

            this property.
          type: string
        value:
          description: >-
            Optional text to be printed on the shipping label for RMA number. Up
            to 40 characters.
          type: string
      type: object
    ServiceGroupBase:
      properties:
        description:
          description: Description for the service group
          example: USPS shipping options
          type: string
        flat_rate:
          description: |-
            String representation of an amount to be returned as the flat rate
            if 1. The service group is of type `LIVE_RATE` and no matching rates
            were found; or 2. The service group is of type `FLAT_RATE`. Either
            integers or decimals are accepted. Required unless type is
            `FREE_SHIPPING`
          example: '5'
          type: string
        flat_rate_currency:
          description: required unless type is `FREE_SHIPPING`. (ISO 4217 currency)
          example: USD
          type: string
        free_shipping_threshold_currency:
          description: optional unless type is `FREE_SHIPPING`. (ISO 4217 currency)
          example: USD
          type: string
        free_shipping_threshold_min:
          description: >-
            For service groups of type `FREE_SHIPPING`, this field must be
            required to configure the minimum cart total (total cost of items in
            the cart) for this service group to be returned for rates at
            checkout. Optional unless type is `FREE_SHIPPING`
          example: '5'
          type: string
        name:
          description: >-
            Name for the service group that will be shown to customers in the
            response
          example: USPS Shipping
          type: string
        rate_adjustment:
          description: >-
            The amount in percent (%) that the service group's returned rate
            should be adjusted. For example, if this field is set to 5 and the
            matched rate price is $5.00, the returned value of the service group
            will be $5.25. Negative integers are also accepted and will discount
            the rate price by the defined percentage amount.
          example: 15
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/ServiceGroupType'
      type: object
    ServiceGroupType:
      description: >-
        The type of the service group.<br> `LIVE_RATE` - Shippo will make a
        rating request and return real-time rates for the shipping group, only
        falling back to the specified flat rate amount if no rates match a
        service level in the service group.<br> `FLAT_RATE` - Returns a shipping
        option with the specified flat rate amount.<br> `FREE_SHIPPING` -
        Returns a shipping option with a price of $0 only if the total cost of
        items exceeds the amount defined by `free_shipping_threshold_min`
      enum:
        - LIVE_RATE
        - FLAT_RATE
        - FREE_SHIPPING
      example: FLAT_RATE
      type: string
    ServiceGroup:
      allOf:
        - $ref: '#/components/schemas/ServiceGroupBase'
        - properties:
            object_id:
              description: The unique identifier of the given Service Group object.
              example: 80feb1633d4a43c898f005850
              type: string
            is_active:
              description: True if the service group is enabled, false otherwise.
              example: true
              type: boolean
            service_levels:
              items:
                $ref: '#/components/schemas/ServiceLevel'
              type: array
          required:
            - name
            - description
            - type
            - service_levels
            - object_id
    ServiceGroupCreateRequest:
      allOf:
        - $ref: '#/components/schemas/ServiceGroupBase'
        - properties:
            service_levels:
              items:
                $ref: '#/components/schemas/ServiceGroupAccountAndServiceLevel'
              type: array
        - required:
            - name
            - description
            - type
            - service_levels
    ServiceGroupUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/ServiceGroupBase'
        - properties:
            object_id:
              description: The unique identifier of the given Service Group object.
              example: 80feb1633d4a43c898f005850
              type: string
            is_active:
              description: True if the service group is enabled, false otherwise.
              example: true
              type: boolean
            service_levels:
              items:
                $ref: '#/components/schemas/ServiceGroupAccountAndServiceLevel'
              type: array
        - required:
            - name
            - description
            - type
            - service_levels
            - object_id
            - is_active
    ServiceGroupAccountAndServiceLevel:
      properties:
        account_object_id:
          description: ID of a Carrier Account object
          example: 80feb1633d4a43c898f0058506cfd82d
          type: string
        service_level_token:
          description: |-
            Service level token, e.g. `usps_priority` or `fedex_ground`.<br>
            See <a href="#tag/Service-Levels">Service Levels</a>.
          example: ups_next_day_air_saver
          type: string
      type: object
    ServiceLevel:
      description: Contains details regarding the service level for the given rate.
      properties:
        name:
          description: >-
            Name of the Rate's servicelevel, e.g. `International Priority` or
            `Standard Post`. 

            A servicelevel commonly defines the transit time of a Shipment
            (e.g., Express vs. Standard), along with other properties. 

            These names vary depending on the provider.
          example: Priority Mail Express
          type: string
        terms:
          description: Further clarification of the service.
          type: string
        service_level_token:
          description: >-
            Token of the Rate's servicelevel, e.g. `usps_priority` or
            `fedex_ground`. 

            See <a href="#tag/Service-Levels">servicelevels</a>.
          example: usps_priority_express
          type: string
        extended_token:
          description: >-
            Unique, extended version of the Service Level "token". 

            Guaranteed to be unique across all Service Levels, and may help
            offer insight into the specific Service Level it describes.
          type: string
        parent_servicelevel:
          description: >-
            Used for some Service Levels to link to the more "generic" version
            of this Service Level - for example, 

            if this Service Level is a variation specific to shipments to
            Europe("ups_saver_eu"), the "parent" is 

            the fully generic version ("ups_saver"). Helpful when displaying
            Service Levels to users. Has the same 

            structure of the servicelevel - "name", "token", "terms", and
            "extended_token", or it is otherwise null.
          type: string
      type: object
    ShipmentBase:
      properties:
        customs_declaration:
          description: ID of the Customs Declarations object for an international shipment.
          example: adcfdddf8ec64b84ad22772bce3ea37a
          type: string
        extra:
          $ref: '#/components/schemas/ShipmentExtra'
        metadata:
          description: >-
            A string of up to 100 characters that can be filled with any
            additional information you want to attach to the object.
          example: Customer ID 123456
          type: string
        shipment_date:
          description: >-
            Date the shipment will be tendered to the carrier. Must be in the
            format `2014-01-18T00:35:03.463Z`. 

            Defaults to current date and time if no value is provided. Please
            note that some carriers require this value to

            be in the future, on a working day, or similar.
          example: '2021-03-22T12:00:00Z'
          type: string
      type: object
    Shipment:
      allOf:
        - $ref: '#/components/schemas/ShipmentBase'
        - description: Shipment represents the parcel as retrieved from the database
          properties:
            address_from:
              $ref: '#/components/schemas/Address'
            address_return:
              $ref: '#/components/schemas/Address'
            address_to:
              $ref: '#/components/schemas/Address'
            carrier_accounts:
              description: >-
                An array of object_ids of the carrier account objects to be used
                for getting shipping rates for this shipment. 

                If no carrier account object_ids are set in this field, Shippo
                will attempt to generate rates using all the 

                carrier accounts that have the `active` field set.
              items:
                type: string
              type: array
            messages:
              description: >-
                An array containing elements of the following schema:<br>`code`
                (string): an identifier for the corresponding message

                (not always available)<br>`message` (string): a publishable
                message containing further information.
              items:
                properties:
                  code:
                    type: string
                  source:
                    example: UPS
                    type: string
                  text:
                    example: >-
                      RatedShipmentWarning: User Id and Shipper Number
                      combination is not qualified to receive negotiated rates.
                    type: string
                type: object
              type: array
            object_created:
              description: Date and time of Shipment creation.
              format: date-time
              type: string
            object_id:
              description: Unique identifier of the given Shipment object.
              example: adcfdddf8ec64b84ad22772bce3ea37a
              type: string
            object_owner:
              description: Username of the user who created the Shipment object.
              example: pp@gmail.com
              type: string
            object_updated:
              description: Date and time of last Shipment update.
              format: date-time
              type: string
            parcels:
              description: List of Parcel objects to be shipped.
              items:
                $ref: '#/components/schemas/Parcel'
              type: array
            rates:
              description: >-
                An array with all available rates. If <code>async</code> has
                been set to <code>false</code> in the request,

                this will be populated with all available rates in the response.
                Otherwise rates will be created

                asynchronously and this array will initially be empty.
              items:
                $ref: '#/components/schemas/Rate'
              type: array
            status:
              description: >-
                `Waiting` shipments have been successfully submitted but not yet
                been processed. 

                `Queued` shipments are currently being processed. 

                `Success` shipments have been processed successfully, meaning
                that rate generation has concluded. 

                `Error` does not occur currently and is reserved for future use.
              enum:
                - ERROR
                - QUEUED
                - SUCCESS
                - STATUS
              example: SUCCESS
              type: string
            test:
              description: Indicates whether the object has been created in test mode.
              type: boolean
          required:
            - address_to
            - address_from
            - parcels
            - object_created
            - object_updated
            - object_id
            - object_owner
            - status
            - rates
            - carrier_accounts
            - messages
            - metadata
    ShipmentCreateRequest:
      allOf:
        - $ref: '#/components/schemas/ShipmentBase'
        - properties:
            address_from:
              oneOf:
                - $ref: '#/components/schemas/AddressCreateRequest'
                - description: >-
                    <a href="#tag/Addresses">Address</a> `object_id` of a
                    previously created address.
                  type: string
            address_return:
              oneOf:
                - $ref: '#/components/schemas/AddressCreateRequest'
                - description: >-
                    <a href="#tag/Addresses">Address</a> `object_id` of a
                    previously created address.
                  type: string
            address_to:
              oneOf:
                - $ref: '#/components/schemas/AddressCreateRequest'
                - description: >-
                    <a href="#tag/Addresses">Address</a> `object_id` of a
                    previously created address.
                  type: string
            async:
              type: boolean
            carrier_accounts:
              description: >-
                List of <a href="#tag/Carrier-Accounts/">Carrier Accounts</a>
                `object_id`s used to filter 

                the returned rates.  If set, only rates from these carriers will
                be returned.
              items:
                type: string
              type: array
              example:
                - 065a4a8c10d24a34ab932163a1b87f52
                - 73f706f4bdb94b54a337563840ce52b0
            parcels:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/ParcelCreateRequest'
                  - description: >-
                      <a href="#tag/Parcel">Parcel</a> `object_id` of a
                      previously created parcel.
                    type: string
          required:
            - address_to
            - address_from
            - parcels
    ShipmentPaginatedList:
      allOf:
        - $ref: '#/components/schemas/PaginatedList'
        - properties:
            results:
              items:
                $ref: '#/components/schemas/Shipment'
              type: array
    Track:
      properties:
        address_from:
          $ref: '#/components/schemas/TrackingStatusLocationBase'
        address_to:
          $ref: '#/components/schemas/TrackingStatusLocationBase'
        carrier:
          description: >-
            Name of the carrier of the shipment to track. See <a
            href="#tag/Carriers">Carriers</a>.
          example: usps
          type: string
        eta:
          description: >-
            The estimated time of arrival according to the carrier, this might
            be updated by carriers during the life of the shipment.
          format: date-time
          type: string
        messages:
          items:
            type: string
          type: array
        metadata:
          description: >-
            A string of up to 100 characters that can be filled with any
            additional information you want to attach to the object.
          example: Order 000123
          type: string
        original_eta:
          description: >-
            The estimated time of arrival according to the carrier at the time
            the shipment first entered the system.
          example: '2021-07-23T00:00:00Z'
          format: date-time
          type: string
        servicelevel:
          $ref: '#/components/schemas/ServiceLevel'
        tracking_history:
          description: >-
            A list of tracking events, following the same structure as
            <code>tracking_status</code>. 

            It contains a full history of all tracking statuses, starting with
            the earlier tracking event first.
          items:
            $ref: '#/components/schemas/TrackingStatus'
          type: array
        tracking_number:
          description: Tracking number to track.
          example: '9205590164917312751089'
          type: string
        tracking_status:
          $ref: '#/components/schemas/TrackingStatus'
        transaction:
          description: >-
            The <code>object_id</code> of the transaction associated with this
            tracking object. 

            This field is visible only to the object owner of the transaction.
          type: string
      required:
        - carrier
        - tracking_number
        - address_from
        - servicelevel
        - tracking_history
        - messages
      type: object
    TrackingStatus:
      description: The latest tracking information of this shipment.
      properties:
        location:
          $ref: '#/components/schemas/TrackingStatusLocationBase'
        object_created:
          format: date-time
          type: string
        object_id:
          type: string
        object_updated:
          format: date-time
          type: string
        status:
          description: Indicates the high level status of the shipment.
          example: DELIVERED
          type: string
          enum:
            - UNKNOWN
            - PRE_TRANSIT
            - TRANSIT
            - DELIVERED
            - RETURNED
            - FAILURE
        substatus:
          $ref: '#/components/schemas/TrackingStatusSubstatus'
        status_date:
          description: >-
            Date and time when the carrier scanned this tracking event. This is
            displayed in UTC.
          example: '2016-07-23T00:00:00Z'
          format: date-time
          type: string
        status_details:
          description: The human-readable description of the status.
          example: Your shipment has been delivered at the destination mailbox.
          type: string
      required:
        - object_created
        - object_updated
        - object_id
        - status
        - status_details
        - status_date
        - location
      type: object
    TrackingStatusLocationBase:
      properties:
        city:
          example: Las Vegas
          type: string
        country:
          example: US
          type: string
        state:
          example: NV
          type: string
        zip:
          example: '89101'
          type: string
      type: object
    TrackingStatusSubstatus:
      description: A finer-grained classification of the tracking event.
      properties:
        code:
          description: >-
            A code that represents the substatus of the shipment. See the <a
            href="https://docs.goshippo.com/docs/tracking/tracking/#event-definitions">Event
            Definitions</a> for more information.
          example: information_received
          type: string
        text:
          description: >-
            A human-readable description of the substatus. See the <a
            href="https://docs.goshippo.com/docs/tracking/tracking/#event-definitions">Event
            Definitions</a> for more information.
          example: Information about the package received.
          type: string
        action_required:
          description: >-
            Indicates whether the substatus requires action from the shipper or
            recipient to complete delivery.
          type: boolean
      required:
        - code
        - text
        - action_required
      type: object
    TracksRequest:
      properties:
        carrier:
          description: Name of the carrier of the shipment to track.
          example: usps
          type: string
        metadata:
          description: >-
            A string of up to 100 characters that can be filled with any
            additional information you want to attach to the object.
          example: Order 000123
          type: string
        tracking_number:
          description: Tracking number to track.
          example: '9205590164917312751089'
          type: string
      required:
        - carrier
        - tracking_number
      type: object
    Transaction:
      properties:
        commercial_invoice_url:
          description: >-
            A URL pointing to the commercial invoice as a 8.5x11 inch PDF file. 

            A value will only be returned if the Transactions has been processed
            successfully and if the shipment is international.
          type: string
        eta:
          description: The estimated time of arrival according to the carrier.
          type: string
        label_file_type:
          $ref: '#/components/schemas/LabelFileType'
        label_url:
          description: >-
            A URL pointing directly to the label in the format you've set in
            your settings. 

            A value will only be returned if the Transactions has been processed
            successfully.
          type: string
        messages:
          description: >-
            An array containing elements of the following schema:<br>

            `code` (string): an identifier for the corresponding message (not
            always available)<br>

            `message` (string): a publishable message containing further
            information.
          example: []
          items:
            type: object
          type: array
        metadata:
          description: >-
            A string of up to 100 characters that can be filled with any
            additional information you want to 

            attach to the object.
          type: string
        object_created:
          description: Date and time of Transaction creation.
          format: date-time
          type: string
        object_id:
          description: Unique identifier of the given Transaction object.
          example: 915d94940ea54c3a80cbfa328722f5a1
          type: string
        object_owner:
          description: Username of the user who created the Transaction object.
          example: shippotle@shippo.com
          type: string
        object_state:
          $ref: '#/components/schemas/ObjectState'
        object_updated:
          description: Date and time of last Transaction update.
          format: date-time
          type: string
        qr_code_url:
          description: >-
            A URL pointing directly to the QR code in PNG format. 

            A value will only be returned if requested using qr_code_requested
            flag and the carrier provides such an option.
          type: string
        rate:
          description: >-
            ID of the Rate object for which a Label has to be obtained. 

            Please note that only rates that are not older than 7 days can be
            purchased in order to ensure up-to-date pricing.
          example: ec9f0d3adc9441449c85d315f0997fd5
          type: string
        status:
          description: Indicates the status of the Transaction.
          enum:
            - WAITING
            - QUEUED
            - SUCCESS
            - ERROR
            - REFUNDED
            - REFUNDPENDING
            - REFUNDREJECTED
          example: SUCCESS
          type: string
        test:
          description: Indicates whether the object has been created in test mode.
          type: boolean
        tracking_number:
          description: >-
            The carrier-specific tracking number that can be used to track the
            Shipment. 

            A value will only be returned if the Rate is for a trackable
            Shipment and if the Transactions has been processed successfully.
          example: '9499907123456123456781'
          type: string
        tracking_status:
          description: >-
            Indicates the high level status of the shipment: `UNKNOWN`,
            `DELIVERED`, `TRANSIT`, `FAILURE`, `RETURNED`.
          example: UNKOWN
          type: string
        tracking_url_provider:
          description: >-
            A link to track this item on the carrier-provided tracking website. 

            A value will only be returned if tracking is available and the
            carrier provides such a service.
          example: >-
            https://tools.usps.com/go/TrackConfirmAction_input?origTrackNum=9499907123456123456781
          type: string
      type: object
    TransactionCreateRequest:
      properties:
        async:
          example: false
          type: boolean
        label_file_type:
          $ref: '#/components/schemas/LabelFileType'
        metadata:
          example: 'Order ID #12345'
          type: string
        rate:
          example: ec9f0d3adc9441449c85d315f0997fd5
          type: string
      required:
        - rate
      type: object
    TransactionPaginatedList:
      allOf:
        - $ref: '#/components/schemas/PaginatedList'
        - properties:
            results:
              items:
                $ref: '#/components/schemas/Transaction'
              type: array
    Invoice:
      properties:
        object_id:
          description: Unique identifier of the given Invoice object
          example: ec9f0d3adc9441449c85d315f0997fd5
          type: string
        object_created:
          description: Date and time of Invoice creation.
          format: date-time
          type: string
        object_updated:
          description: Date and time of last Invoice update.
          format: date-time
          type: string
        shippo_account:
          description: Unique identifier of the user who the Invoice has been issued to.
          example: 915d94940ea54c3a80cbfa328722f5a1
          type: string
        invoice_number:
          description: >-
            Human readable unique identifier of the given Invoice object that is
            displayed in the web app.
          example: 234167
          type: string
        status:
          $ref: '#/components/schemas/InvoiceStatus'
        invoice_closed:
          description: >-
            Date and time of when the Invoice was posted and no new Invoice
            Items were added. Field will be null when invoice is still in the
            draft status.
          format: date-time
          type: string
        invoice_paid_date:
          description: >-
            Date and time of when the Invoice was successfully paid. Field will
            be null when invoice is not in the paid status.
          format: date-time
          type: string
        total_invoiced:
          $ref: '#/components/schemas/AmountAndCurrencyInvoiced'
        total_charged:
          $ref: '#/components/schemas/AmountAndCurrencyCharged'
      type: object
    InvoicePaginatedList:
      allOf:
        - $ref: '#/components/schemas/PaginatedList'
        - properties:
            results:
              items:
                $ref: '#/components/schemas/Invoice'
              type: array
    InvoiceStatus:
      description: The status of the Invoice.
      enum:
        - DRAFT
        - POSTED
        - PAID
        - UNCOLLECTIBLE
        - VOID
      example: POSTED
      type: string
    InvoiceItem:
      properties:
        description:
          description: Additional information about what the Invoice Item is for.
          example: monthly subscription plan fee for 2019-08-24
          type: string
        object_id:
          description: Unique identifier of the given Invoice Item object.
          example: ec9f0d3adc9441449c85d315f0997fd5
          type: string
        object_created:
          description: Date and time of Invoice Item creation.
          format: date-time
          type: string
        object_updated:
          description: Date and time of last Invoice Item update.
          format: date-time
          type: string
        shippo_account:
          description: >-
            Unique identifier of the user who the Invoice Item has been issued
            to.
          example: 915d94940ea54c3a80cbfa328722f5a1
          type: string
        type:
          $ref: '#/components/schemas/InvoiceItemTypes'
          example: SUBSCRIPTION_PLAN_FEE
          type: string
        amount:
          description: The money amount that the Invoice Item represents.
          example: '5.54'
          type: string
        currency:
          description: >-
            The currency that 'amount' is in. The official ISO 4217 currency
            codes are used, e.g. "USD" or "EUR".

            <a href="http://www.xe.com/iso4217.php" target="blank">ISO 4217
            Standard</a>.
          example: USD
          type: string
        charge_conversion:
          $ref: '#/components/schemas/ConversionAmount'
        invoice:
          description: Unique identifier of the Invoice that the Invoice Item belongs to.
          example: 011044d8405e43bd8b1efe1c21f967df
          type: string
        transaction:
          description: >-
            Unique identifier of the Transaction that the Invoice Item
            represents. Not all Invoice Items are linked to a transaction.
          example: 915d94940ea54c3a80cbfa328722f5a1
          type: string
      type: object
    InvoiceItemTypes:
      description: >
        The type of the Invoice Item.

        |Type| Description|

        |:---|:---|

        | LABEL_PAYMENT | Invoice Item for the payment of a label. |

        | LABEL_SURCHARGE | Invoice Item for a surcharge of a label. See <a
        href="https://support.goshippo.com/hc/en-us/articles/115004734443-Understanding-Postal-Surcharges-in-Shippo">
        here </a> for more information. |

        | LABEL_REFUND | Invoice Item for a refund of a label. |

        | ONE_OFF_CREDIT | Invoice Item for credit given by Shippo. |

        | TRACK_FEE | Invoice Item for fees associated with tracking services. |

        | ADDRESS_VALIDATION_FEE | Invoice Item for fees associated with global
        address validation services. |

        | SUBSCRIPTION_PLAN_FEE | Invoice Item for subscription plan fees. |

        | PROMO_CODE_CREDIT | Invoice Item for promotional code related credits.
        |

        | PREAUTH_CAPTURE | Invoice Item for preauthorization capture.
        Represents a credit. See <a
        href="https://support.goshippo.com/hc/en-us/articles/4407966198171-Pre-Authorization-Charges-for-New-Accounts-in-Shippo">
        here </a> for more information. |

        | LABEL_PAYMENT_ADJUSTMENT | Invoice Item for adjustments on label
        purchases. |

        | LABEL_REFUND_ADJUSTMENT | Invoice Item for adjustments on label
        refunds. |
      type: string
      enum:
        - LABEL_PAYMENT
        - LABEL_SURCHARGE
        - LABEL_REFUND
        - ONE_OFF_CREDIT
        - TRACK_FEE
        - ADDRESS_VALIDATION_FEE
        - SUBSCRIPTION_PLAN_FEE
        - PROMO_CODE_CREDIT
        - PREAUTH_CAPTURE
        - LABEL_PAYMENT_ADJUSTMENT
        - LABEL_REFUND_ADJUSTMENT
    InvoiceItemPaginatedList:
      allOf:
        - $ref: '#/components/schemas/PaginatedList'
        - properties:
            results:
              items:
                $ref: '#/components/schemas/InvoiceItem'
              type: array
    UPSConnectExistingOwnAccountParameters:
      description: >-
        An array of additional parameters for the account, such as e.g. password
        or token.

        Please check the <a
        href="https://docs.goshippo.com/docs/carriers/carrieraccounts/">carrier
        accounts tutorial</a> page for the parameters per carrier.<br> 

        To protect account information, this field will be masked in any API
        response.
      properties:
        title:
          description: >-
            User's title, e.g. including but not limited to Manager, Doctor,
            Artist, Engineer, Mr, Ms, Mrs, Mx
          example: Manager
          type: string
        account_number:
          description: The UPS account number
          example: 94567e
          type: string
        aia_country_iso2:
          description: >-
            Only required if has_invoice is true. Country associated with the
            account that issued the invoice
          example: US
          type: string
        billing_address_city:
          example: San Francisco
          type: string
        billing_address_country_iso2:
          example: US
          maxLength: 2
          minLength: 2
          type: string
        billing_address_state:
          example: CA
          maxLength: 2
          minLength: 2
          type: string
        billing_address_street1:
          example: 731 Market St
          type: string
        billing_address_street2:
          description: Empty string acceptable for billing_address_street2
          example: STE 200
          type: string
        billing_address_zip:
          example: '94103'
          maxLength: 5
          minLength: 5
          type: string
        collec_country_iso2:
          example: US
          maxLength: 2
          minLength: 2
          type: string
        collec_zip:
          description: Zip code of the collection/pickup address
          example: '94103'
          maxLength: 5
          minLength: 5
          type: string
        company:
          description: >-
            Company name. Full name is acceptable in this field if the user has
            no company name
          example: Shippo
          type: string
        currency_code:
          description: >-
            Only required if has_invoice is true. 3-letter currency code
            associated with invoice_value
          example: USD
          maxLength: 3
          minLength: 3
          type: string
        email:
          example: hippo@shippo.com
          type: string
        full_name:
          example: Shippo Meister
          type: string
        has_invoice:
          description: >-
            true if user has been issued a UPS invoice within the past 90 days
            for the US or Canada; and 45 days for any other countries. User can
            use data from any of the last 3 invoices
          type: boolean
        invoice_controlid:
          description: Only required if aia_country_iso2 is US and has_invoice is true.
          example: '1234'
          maxLength: 4
          minLength: 4
          type: string
        invoice_date:
          description: >-
            Only required if has_invoice is true. Date the invoice was issued.
            yyyymmdd format
          example: '20210529'
          type: string
        invoice_number:
          example: '1112234'
          maxLength: 15
          minLength: 1
          type: string
        invoice_value:
          description: >-
            Only required if has_invoice is true. Max 16 digits before decimal
            and 2 digits after decimal
          example: '11.23'
          type: string
        phone:
          example: '1112223333'
          type: string
        ups_agreements:
          description: >-
            Whether the user agrees to the UPS terms and conditions or not.
            Error 400 will be returned if passed in as false
          type: boolean
      required:
        - ups_agreements
        - account_number
        - title
        - company
        - full_name
        - phone
        - billing_address_street1
        - billing_address_city
        - billing_address_zip
        - billing_address_state
        - billing_address_country_iso2
        - collec_zip
        - collec_country_iso2
        - has_invoice
        - email
      type: object
    CreateNewOwnUPSAccountRequest:
      properties:
        parameters:
          $ref: '#/components/schemas/UPSCreateNewOwnAccountParameters'
        account_id:
          description: >-
            This field is required as input to the API, but is not used for UPS.
            Use the empty string.
          type: string
        active:
          type: boolean
        carrier:
          example: ups
          type: string
        metadata:
          example: UPS Account
          type: string
        test:
          example: false
          type: boolean
      required:
        - account_id
        - parameters
        - active
      type: object
    UPSCreateNewOwnAccountParameters:
      properties:
        billing_address_city:
          example: San Francisco
          type: string
        billing_address_country_iso2:
          example: US
          maxLength: 2
          minLength: 2
          type: string
        billing_address_state:
          example: CA
          maxLength: 2
          minLength: 2
          type: string
        billing_address_street1:
          example: 731 Market St
          type: string
        billing_address_street2:
          description: Empty string acceptable for billing_address_street2
          example: STE 200
          type: string
        billing_address_zip:
          example: '94103'
          maxLength: 5
          minLength: 5
          type: string
        company:
          description: >-
            Company name. Full name is acceptable in this field if the user has
            no company name
          example: Shippo
          type: string
        email:
          example: hippo@shippo.com
          type: string
        full_name:
          example: Shippo Meister
          type: string
        phone:
          example: '1112223333'
          type: string
        pickup_address_city:
          description: >-
            User's pickup address city. Only required if
            pickup_address_same_as_billing_address is false
          example: San Francisco
          type: string
        pickup_address_country_iso2:
          description: >-
            User's pickup street 1. Only required if
            pickup_address_same_as_billing_address is false
          example: US
          maxLength: 2
          minLength: 2
          type: string
        pickup_address_same_as_billing_address:
          example: false
          type: boolean
        pickup_address_state:
          description: >-
            User's pickup address state. Only required if
            pickup_address_same_as_billing_address is false
          example: CA
          maxLength: 2
          minLength: 2
          type: string
        pickup_address_street1:
          description: >-
            User's pickup address street 1. Only required if
            pickup_address_same_as_billing_address is false
          example: 731 Market St
          type: string
        pickup_address_street2:
          description: >-
            User's pickup street 2. Only used if
            pickup_address_same_as_billing_address is false, empty string
            acceptable
          example: STE 200
          type: string
        pickup_address_zip:
          description: >-
            User's pickup address zip code. Only required if
            pickup_address_same_as_billing_address is false
          example: '94103'
          maxLength: 5
          minLength: 5
          type: string
        ups_agreements:
          description: >-
            Whether the user agrees to the UPS terms and conditions or not.
            Error 400 will be returned if passed in as false
          type: boolean
      required:
        - ups_agreements
        - email
        - full_name
        - company
        - phone
        - billing_address_street1
        - billing_address_city
        - billing_address_zip
        - billing_address_state
        - billing_address_country_iso2
        - pickup_address_same_as_billing_address
      type: object
    CarrierAccountBase:
      properties:
        parameters:
          description: >-
            An array of additional parameters for the account, such as e.g.
            password or token.

            Please check the <a
            href="https://docs.goshippo.com/docs/carriers/carrieraccounts/">carrier
            accounts tutorial</a> page for the parameters per carrier.<br> 

            To protect account information, this field will be masked in any API
            response.
          type: object
          additionalProperties: true
        account_id:
          description: >-
            Unique identifier of the account. Please check the <a
            href="https://docs.goshippo.com/docs/carriers/carrieraccounts/">carrier
            accounts tutorial</a> 

            page for the `account_id` per carrier.<br> 

            To protect account information, this field will be masked in any API
            response.
          example: '****'
          type: string
        active:
          description: >-
            Determines whether the account is active. When creating a shipment,
            if no `carrier_accounts` are explicitly 

            passed Shippo will query all carrier accounts that have this field
            set. By default, this is set to True.
          type: boolean
        carrier:
          description: >-
            Carrier token, see <a href="#tag/Carriers">Carriers</a><br>

            Please check the <a
            href="https://docs.goshippo.com/docs/carriers/carrieraccounts/">carrier
            accounts tutorial</a> page for all supported carriers.
          example: usps
          type: string
      required:
        - carrier
        - account_id
      type: object
    CarrierAccount:
      allOf:
        - $ref: '#/components/schemas/CarrierAccountBase'
        - properties:
            carrier_name:
              description: Carrier name, see <a href="#tag/Carriers">Carriers</a><br>
              example: USPS
            is_shippo_account:
              example: false
              type: boolean
            metadata:
              type: string
            object_id:
              description: Unique identifier of the carrier account object.
              example: 6aa34d5f6865448fbb1ee93636e98999
              type: string
            object_owner:
              description: Username of the user who created the carrier account object.
              example: bob+22@gmail.com
              type: string
            service_levels:
              items:
                $ref: '#/components/schemas/CarrierAccountServiceLevel'
              type: array
            test:
              description: Indicates whether the object has been created in test mode.
              example: false
              type: boolean
    CarrierAccountServiceLevel:
      description: Contains details regarding the service level for the carrier account.
      properties:
        name:
          description: >-
            Service level name, e.g. `Priority Mail` or `FedEx GroundÂ®`. 

            A service level commonly defines the transit time of a Shipment
            (e.g., Express vs. Standard), along with other properties. 

            These names vary depending on the provider.<br>

            See <a href="#tag/Service-Levels">Service Levels</a>.
          example: Priority Mail Express
          type: string
        token:
          description: |-
            Service level token, e.g. `usps_priority` or `fedex_ground`.<br>
            See <a href="#tag/Service-Levels">Service Levels</a>.
          example: usps_priority_express
          type: string
        supports_return_labels:
          description: Whether or not the service level supports return labels.
          example: true
          type: boolean
      type: object
    CarrierAccountRegistrationStatus:
      properties:
        carrier_account:
          example: 99dc410d295b4a168993cc38809cb123
          type: string
        object_created:
          format: date-time
          type: string
        object_owner:
          example: tom@gmail.com
          type: string
        object_updated:
          format: date-time
          type: string
        status:
          example: PENDING_TERMS
          type: string
      type: object
    BadRequestWithError:
      properties:
        error:
          example: Only US shippers can create a new USPS account
          type: string
      type: object
    CarrierAccountCanadaPostCreateRequest:
      title: Shippo Canada Post account
      properties:
        parameters:
          $ref: '#/components/schemas/CarrierAccountCanadaPostCreateParameters'
        carrier:
          example: canada_post
          type: string
      required:
        - carrier
        - parameters
      type: object
    CarrierAccountCanadaPostCreateParameters:
      properties:
        canada_post_terms:
          description: >-
            Whether or not the user agrees to Canada Post's terms. If passed in
            as false, request will fail with error 400
          type: boolean
        company:
          example: Shippo
          type: string
        email:
          example: hippo@shippo.com
          type: string
        full_name:
          example: Shippo Meister
          type: string
        phone:
          description: Needs to be a valid phone number and cannot be null
          example: '1112223333'
          type: string
      required:
        - company
        - phone
        - full_name
        - email
        - canada_post_terms
      type: object
    CarrierAccountChronopostCreateRequest:
      title: Shippo Chronopost account
      properties:
        parameters:
          type: object
        carrier:
          example: chronopost
          type: string
      required:
        - carrier
        - parameters
      type: object
    CarrierAccountColissimoCreateRequest:
      title: Shippo Colissimo account
      properties:
        parameters:
          type: object
        carrier:
          example: colissimo
          type: string
      required:
        - carrier
        - parameters
      type: object
    CarrierAccountCorreosCreateRequest:
      title: Shippo Correos account
      properties:
        parameters:
          type: object
        carrier:
          example: correos
          type: string
      required:
        - carrier
        - parameters
      type: object
    CarrierAccountDeutschePostCreateRequest:
      title: Shippo Deutsche Post account
      properties:
        parameters:
          type: object
        carrier:
          example: deustche_post
          type: string
      required:
        - carrier
        - parameters
      type: object
    CarrierAccountDHLExpressCreateRequest:
      title: Shippo DHL Express account
      properties:
        parameters:
          $ref: '#/components/schemas/CarrierAccountDHLExpressCreateRequestParameters'
        carrier:
          example: dhl_express
          type: string
      required:
        - carrier
        - parameters
      type: object
    CarrierAccountDHLExpressCreateRequestParameters:
      properties:
        user_accepted_terms_and_conditions:
          description: >-
            Whether or not the user agrees to the DHL Express Terms and
            Conditions. If passed in as false, request will fail with error 400
          type: boolean
      required:
        - user_accepted_terms_and_conditions
      type: object
    CarrierAccountDpdDeCreateRequest:
      title: Shippo DPD DE account
      properties:
        parameters:
          type: object
        carrier:
          example: dpd_de
          type: string
      required:
        - carrier
        - parameters
      type: object
    CarrierAccountDPDUKCreateRequest:
      title: Shippo DPD UK account
      properties:
        parameters:
          type: object
        carrier:
          example: dpd_uk
          type: string
      required:
        - carrier
        - parameters
      type: object
    CarrierAccountHermesUKCreateRequest:
      title: Shippo Evri UK account
      properties:
        parameters:
          type: object
        carrier:
          example: hermes_uk
          type: string
      required:
        - carrier
        - parameters
      type: object
    CarrierAccountPosteItalianeCreateRequest:
      title: Shippo Poste Italiane account
      properties:
        parameters:
          type: object
        carrier:
          example: poste_italiane
          type: string
      required:
        - carrier
        - parameters
      type: object
    CarrierAccountUPSCreateRequest:
      title: Shippo UPS account
      properties:
        parameters:
          $ref: '#/components/schemas/CarrierAccountUPSCreateRequestParameters'
        carrier:
          example: ups
          type: string
      required:
        - carrier
      type: object
    CarrierAccountUSPSCreateRequest:
      title: Shippo USPS account
      properties:
        parameters:
          type: object
        carrier:
          example: usps
          type: string
      required:
        - carrier
        - parameters
      type: object
    CarrierAccountUPSCreateRequestParameters:
      properties:
        billing_address_city:
          example: San Francisco
          type: string
        billing_address_country_iso2:
          example: US
          maxLength: 2
          minLength: 2
          type: string
        billing_address_state:
          example: CA
          maxLength: 2
          minLength: 2
          type: string
        billing_address_street1:
          example: 731 Market St
          type: string
        billing_address_street2:
          description: Empty string acceptable for billing_address_street2
          example: STE 200
          type: string
        billing_address_zip:
          example: '94103'
          maxLength: 5
          minLength: 5
          type: string
        company:
          description: >-
            Company name. Full name is acceptable in this field if the user has
            no company name
          example: Shippo
          type: string
        email:
          example: hippo@shippo.com
          type: string
        full_name:
          example: Shippo Meister
          type: string
        phone:
          description: Needs to be a valid phone number and cannot be null
          example: '1112223333'
          type: string
        pickup_address_city:
          description: User's pickup address city.
          example: San Francisco
          type: string
        pickup_address_country_iso2:
          description: User's pickup street 1.
          example: US
          maxLength: 2
          minLength: 2
          type: string
        pickup_address_same_as_billing_address:
          example: false
          type: boolean
        pickup_address_state:
          description: User's pickup address state.
          example: CA
          maxLength: 2
          minLength: 2
          type: string
        pickup_address_street1:
          description: User's pickup address street 1.
          example: 731 Market St
          type: string
        pickup_address_street2:
          description: User's pickup street 2.
          example: STE 200
          type: string
        pickup_address_zip:
          description: User's pickup address zip code.
          example: '94103'
          maxLength: 5
          minLength: 5
          type: string
        ups_agreements:
          description: >-
            Whether the user agrees to the UPS terms and conditions or not.
            Error 400 will be returned if passed in as false
          type: boolean
      required:
        - ups_agreements
        - billing_address_street1
        - billing_address_city
        - billing_address_zip
        - billing_address_state
        - billing_address_country_iso2
        - pickup_address_street1
        - pickup_address_city
        - pickup_address_zip
        - pickup_address_state
        - pickup_address_country_iso2
      type: object
    UserParcelTemplateBase:
      properties:
        distance_unit:
          $ref: '#/components/schemas/DistanceUnitUserTemplate'
        height:
          description: >-
            The height of the package, in units specified by the `distance_unit`
            attribute. Required, but if using a preset carrier template then
            this field must be empty.
          example: '6'
          type: string
        length:
          description: >-
            The length of the package, in units specified by the `distance_unit`
            attribute. Required, but if using a preset carrier template then
            this field must be empty.
          example: '10'
          type: string
        name:
          description: The name of the User Parcel Template
          example: My Custom Template
          type: string
        weight:
          description: >-
            The weight of the package, in units specified by the weight_unit
            attribute.
          example: '12'
          type: string
        weight_unit:
          $ref: '#/components/schemas/WeightUnit'
        width:
          description: >-
            The width of the package, in units specified by the `distance_unit`
            attribute. Required, but if using a preset carrier template then
            this field must be empty.
          example: '8'
          type: string
      type: object
    UserParcelTemplateWithoutCarrierTemplateCreateRequest:
      allOf:
        - $ref: '#/components/schemas/UserParcelTemplateBase'
        - title: A request to create or update a new parcel template.
          required:
            - name
            - length
            - width
            - height
            - distance_unit
    UserParcelTemplateUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/UserParcelTemplateBase'
        - required:
            - name
            - length
            - width
            - height
            - distance_unit
    UserParcelTemplateWithCarrierTemplateCreateRequest:
      title: A request to create or update a new parcel template.
      properties:
        template:
          description: The object representing the carrier parcel template
          type: string
        weight:
          description: >-
            The weight of the package, in units specified by the weight_unit
            attribute.
          example: '12'
          type: string
        weight_unit:
          $ref: '#/components/schemas/WeightUnit'
      type: object
    UserParcelTemplateCreateRequest:
      oneOf:
        - $ref: >-
            #/components/schemas/UserParcelTemplateWithCarrierTemplateCreateRequest
        - $ref: >-
            #/components/schemas/UserParcelTemplateWithoutCarrierTemplateCreateRequest
    UserParcelTemplate:
      allOf:
        - $ref: '#/components/schemas/UserParcelTemplateBase'
        - title: The fields of a parcel template before saving it to the db.
          properties:
            object_created:
              description: Date and time of User Parcel Template creation
              example: '2013-12-11T19:38:09.729Z'
              format: date-time
              type: string
            object_id:
              description: Unique identifier of the given User Parcel Template object
              example: b958d3690bb04bb8b2986724872750f5
              type: string
            object_owner:
              description: Username of the user who created the User Parcel Template object
              example: shippotle@shippo.com
              type: string
            object_updated:
              description: Date and time of last update on User Parcel Template
              example: '2013-12-12T19:38:09.729Z'
              format: date-time
              type: string
            template:
              $ref: '#/components/schemas/CarrierParcelTemplate'
    Carriers:
      description: >
        |Token | Carrier name|

        |:---|:---|

        | airterra | Airterra |

        | apc_postal | APC Postal|

        | apg | APG|

        | aramex | Aramex|

        | asendia_us | Asendia US|

        | australia_post | Australia Post (also used for Startrack)|

        | axlehire | Axlehire|

        | better_trucks | BetterTrucks|

        | borderguru | BorderGuru|

        | boxberry | Boxberry|

        | bring | Bring (also used for Posten Norge)|

        | canada_post | Canada Post|

        | cdl | CDL|

        | chronopost | Chronopost|

        | collect_plus | CollectPlus|

        | correios_br | CorreiosBR|

        | correos_espana | Correos EspaÃ±a |

        | couriersplease | Couriers Please|

        | colissimo | Colissimo|

        | deutsche_post | Deutsche Post|

        | dhl_benelux | DHL Benelux|

        | dhl_ecommerce | DHL eCommerce|

        | dhl_express | DHL Express|

        | dhl_germany_c2c | DHL Germany C2C|

        | dhl_germany | DHL Germany|

        | dpd_de | DPD GERMANY|

        | dpd_uk | DPD UK|

        | estafeta | Estafeta|

        | fastway_australia | Aramex|

        | fedex | FedEx|

        | globegistics | Globegistics (now Asendia)|

        | gls_us | GLS US|

        | gophr | Gophr|

        | gso | GSO|

        | hermes_germany_b2c | Hermes Germany B2C|

        | hermes_uk | Evri UK |

        | hongkong_post | Hongkong Post|

        | lasership | LaserShip|

        | lso | LSO|

        | mondial_relay | Mondial Relay|

        | new_zealand_post | New Zealand Post (also used for Pace and
        CourierPost)|

        | nippon_express | Nippon Express|

        | ontrac | OnTrac|

        | orangeds | OrangeDS|

        | parcelforce | Parcelforce|

        | parcel | Parcel|

        | passport | Passport|

        | pcf | PCF|

        | poste_italiane | Poste Italiane |

        | posti | Posti|

        | purolator | Purolator|

        | royal_mail | Royal Mail|

        | rr_donnelley | ePost Global|

        | russian_post | Russian Post|

        | sendle | Sendle|

        | skypostal | SkyPostal|

        | stuart | Stuart|

        | swyft | Swyft|

        | uds | UDS (United Delivery Service)|

        | ups | UPS|

        | usps | USPS|

        | veho | Veho |

        | x_delivery | X Delivery (now Maergo)|

        | yodel | Yodel|
      type: string
      enum:
        - airterra
        - apc_postal
        - apg
        - aramex
        - asendia_us
        - australia_post
        - axlehire
        - better_trucks
        - borderguru
        - boxberry
        - bring
        - canada_post
        - cdl
        - chronopost
        - collect_plus
        - correios_br
        - correos_espana
        - couriersplease
        - colissimo
        - deutsche_post
        - dhl_benelux
        - dhl_ecommerce
        - dhl_express
        - dhl_germany_c2c
        - dhl_germany
        - dpd_de
        - dpd_uk
        - estafeta
        - fastway_australia
        - fedex
        - globegistics
        - gls_us
        - gophr
        - gso
        - hermes_germany_b2c
        - hermes_uk
        - hongkong_post
        - lasership
        - lso
        - mondial_relay
        - new_zealand_post
        - nippon_express
        - ontrac
        - orangeds
        - parcelforce
        - parcel
        - passport
        - pcf
        - poste_italiane
        - posti
        - purolator
        - royal_mail
        - rr_donnelley
        - russian_post
        - sendle
        - skypostal
        - stuart
        - swyft
        - uds
        - ups
        - usps
        - veho
        - x_delivery
        - yodel
    ObjectState:
      description: Indicates the validity of the enclosing object
      type: string
      enum:
        - VALID
        - INVALID
    ServiceLevelUSPS:
      description: >
        |Token | Service name|

        |:---|:---|

        | usps_priority | Priority Mail|

        | usps_priority_express | Priority Mail Express|

        | usps_media_mail | Media Mail, only for existing Shippo customers with
        grandfathered Media Mail option.|

        | usps_priority_mail_international | Priority Mail International|

        | usps_priority_mail_express_international | Priority Mail Express
        International|

        | usps_first_class_package_international_service | First Class Package
        International|

        | usps_ground_advantage | Ground Advantage |
      type: string
      enum:
        - usps_priority
        - usps_priority_express
        - usps_media_mail
        - usps_priority_mail_international
        - usps_priority_mail_express_international
        - usps_first_class_package_international_service
        - usps_ground_advantage
    ServiceLevelFedEx:
      description: >
        |Token | Service name|

        |:---|:---|

        | fedex_ground | FedEx GroundÂ®|

        | fedex_home_delivery | FedEx Home DeliveryÂ®|

        | fedex_ground_economy | FedEx GroundÂ® Economy|

        | fedex_2_day | FedEx 2DayÂ®|

        | fedex_2_day_am | FedEx 2DayÂ® A.M.|

        | fedex_express_saver | FedEx Express SaverÂ®|

        | fedex_standard_overnight | FedEx Standard OvernightÂ®|

        | fedex_priority_overnight | FedEx Priority OvernightÂ®|

        | fedex_first_overnight | FedEx First OvernightÂ®|

        | fedex_freight_priority | FedEx FreightÂ® Priority|

        | fedex_next_day_freight | FedEx Next Day Freight|

        | fedex_freight_economy | FedEx FreightÂ® Economy|

        | fedex_first_freight | FedEx First Freight|

        | fedex_international_economy | FedEx International EconomyÂ®|

        | fedex_international_priority | FedEx International PriorityÂ®|

        | fedex_international_first | FedEx International FirstÂ®|

        | fedex_europe_first_international_priority | FedEx International
        FirstÂ®|

        | fedex_international_connect_plus | FedEx International Connect Plus|

        | international_economy_freight | FedEx International EconomyÂ® Freight|

        | international_priority_freight | FedEx International PriorityÂ®
        Freight|
      type: string
      enum:
        - fedex_ground
        - fedex_home_delivery
        - fedex_smart_post
        - fedex_ground_economy
        - fedex_2_day
        - fedex_2_day_am
        - fedex_express_saver
        - fedex_standard_overnight
        - fedex_priority_overnight
        - fedex_first_overnight
        - fedex_freight_priority
        - fedex_next_day_freight
        - fedex_freight_economy
        - fedex_first_freight
        - fedex_international_economy
        - fedex_international_priority
        - fedex_international_first
        - fedex_europe_first_international_priority
        - fedex_international_connect_plus
        - international_economy_freight
        - international_priority_freight
    ServiceLevelUPS:
      description: |
        |Token | Service name|
        |:---|:---|
        | ups_standard | Standardâ„ |
        | ups_ground | Ground|
        | ups_saver | SaverÂ®|
        | ups_3_day_select | 3 Day SelectÂ®|
        | ups_second_day_air | 2nd Day AirÂ®|
        | ups_second_day_air_am | 2nd Day AirÂ® A.M.|
        | ups_next_day_air | Next Day AirÂ®|
        | ups_next_day_air_saver | Next Day Air SaverÂ®|
        | ups_next_day_air_early_am | Next Day AirÂ® Early|
        | ups_mail_innovations_bpm_flat | Mail Innovations BPM Flat |
        | ups_mail_innovations_bpm_parcel | Mail Innovations BPM Parcel |
        | ups_mail_innovations_irregular | Mail Innovations Irregular |
        | ups_mail_innovations_media_mail | Mail Innovations Media Mail |
        | ups_mail_innovations_parcel | Mail Innovations Parcel |
        | ups_mail_innovations_standard_flat | Mail Innovations Standard Flat |
        | ups_surepost | Surepost|
        | ups_surepost_bound_printed_matter | SurePostÂ® Bound Printed Matter|
        | ups_surepost_lightweight | Surepost Lightweight|
        | ups_surepost_media | SurePostÂ® Media|
        | ups_express | ExpressÂ®|
        | ups_express_1200 | Express 12:00|
        | ups_express_plus | Express PlusÂ®|
        | ups_expedited | ExpeditedÂ®|
        | ups_express_early | ExpressÂ® Early|
        | ups_access_point_economy | Access Pointâ„¢ Economy|
      type: string
      enum:
        - ups_standard
        - ups_ground
        - ups_saver
        - ups_3_day_select
        - ups_second_day_air
        - ups_second_day_air_am
        - ups_next_day_air
        - ups_next_day_air_saver
        - ups_next_day_air_early_am
        - ups_mail_innovations_bpm_flat
        - ups_mail_innovations_bpm_parcel
        - ups_mail_innovations_irregular
        - ups_mail_innovations_media_mail
        - ups_mail_innovations_parcel
        - ups_mail_innovations_standard_flat
        - ups_surepost
        - ups_surepost_bound_printed_matter
        - ups_surepost_lightweight
        - ups_surepost_media
        - ups_express
        - ups_express_1200
        - ups_express_plus
        - ups_expedited
        - ups_express_early
        - ups_access_point_economy
    ServiceLevelAirterra:
      description: |
        |Token | Service name|
        |:---|:---|
        | airterra_ground | GroundXC|
        | airterra_postal | FastPost|
      type: string
      enum:
        - airterra_ground
        - airterra_postal
    ServiceLevelSwyft:
      description: |
        |Token | Service name|
        |:---|:---|
        | same_day | Next Day|
        | next_day | Next Day|
      type: string
      enum:
        - same_day
        - next_day
    ServiceLevelAPG:
      description: |
        |Token | Service name|
        |:---|:---|
        | epacket | ePacket|
        | epacket_plus | ePacket Plus|
        | eparcel_premium | eParcel premium|
        | apg_eparcel_expedited | eParcel Expedited|
      type: string
      enum:
        - epacket
        - epacket_plus
        - eparcel_premium
        - apg_eparcel_expedited
    ServiceLevelUDS:
      description: |
        |Token | Service name|
        |:---|:---|
        | uds_next_day | Next Day|
      type: string
      enum:
        - uds_next_day
    ServiceLevelAPCPostal:
      description: >
        |Token | Service name|

        |:---|:---|

        | apc_postal_parcelconnect_expedited | parcelConnect Expedited|

        | apc_postal_parcelconnect_priority | parcelConnect Priority|

        | apc_postal_parcelconnect_priority_delcon | parcelConnect Priority
        Delcon|

        | apc_postal_parcelconnect_priority_pqw | parcelConnect Priority PQW|

        | apc_postal_parcelconnect_book_service | parcelConnect Book Service|

        | apc_postal_parcelconnect_standard | parcelConnect Standard|

        | apc_postal_parcelconnect_epmi | parcelConnect ePMI|

        | apc_postal_parcelconnect_epacket | parcelConnect ePacket|

        | apc_postal_parcelconnect_epmei | parcelConnect ePMEI|
      type: string
      enum:
        - apc_postal_parcelconnect_expedited
        - apc_postal_parcelconnect_priority
        - apc_postal_parcelconnect_priority_delcon
        - apc_postal_parcelconnect_priority_pqw
        - apc_postal_parcelconnect_book_service
        - apc_postal_parcelconnect_standard
        - apc_postal_parcelconnect_epmi
        - apc_postal_parcelconnect_epacket
        - apc_postal_parcelconnect_epmei
    ServiceLevelAsendia:
      description: >
        |Token | Service name|

        |:---|:---|

        | asendia_us_priority_tracked | Asendia USA Priority Tracked|

        | asendia_us_international_express | Asendia USA International Express|

        | asendia_us_international_priority_airmail | Asendia USA International
        Priority Airmail|

        | asendia_us_international_surface_airlift | Asendia USA International
        Surface Air Lift|

        | asendia_us_priority_mail_international | Asendia USA Priority Mail
        International|

        | asendia_us_priority_mail_express_international | Asendia USA Priority
        Mail Express International|

        | asendia_us_epacket | Asendia USA International ePacket|

        | asendia_us_other | Asendia USA Other Services (custom)|
      type: string
      enum:
        - asendia_us_priority_tracked
        - asendia_us_international_express
        - asendia_us_international_priority_airmail
        - asendia_us_international_surface_airlift
        - asendia_us_priority_mail_international
        - asendia_us_priority_mail_express_international
        - asendia_us_epacket
        - asendia_us_other
    ServiceLevelAustraliaPost:
      description: >
        |Token | Service name|

        |:---|:---|

        | australia_post_express_post | Express Post|

        | australia_post_parcel_post | Parcel Post|

        | australia_post_pack_and_track_international | Pack and Track
        International|

        | australia_post_international_airmail | International Airmail|

        | australia_post_express_post_international | Express Post
        International|

        | australia_post_express_courier_international | Express Courier
        International|

        | australia_post_international_express | International Express|

        | australia_post_international_standard | International Standard|

        | australia_post_international_economy | International Economy|
      type: string
      enum:
        - australia_post_express_post
        - australia_post_parcel_post
        - australia_post_pack_and_track_international
        - australia_post_international_airmail
        - australia_post_express_post_international
        - australia_post_express_courier_international
        - australia_post_international_express
        - australia_post_international_standard
        - australia_post_international_economy
    ServiceLevelBetterTrucks:
      description: |
        |Token | Service name|
        |:---|:---|
        | better_trucks_same_day | Same Day|
        | better_trucks_next_day | Next Day|
      type: string
      enum:
        - better_trucks_same_day
        - better_trucks_next_day
    ServiceLevelAxleHire:
      description: |
        |Token | Service name|
        |:---|:---|
        | axlehire_same_day | Same Day|
        | axlehire_next_day | Next Day|
      type: string
      enum:
        - axlehire_same_day
        - axlehire_next_day
    ServiceLevelCanadaPost:
      description: >
        |Token | Service name|

        |:---|:---|

        | canada_post_regular_parcel | Regular Parcel|

        | canada_post_expedited_parcel | Expedited Parcel|

        | canada_post_priority | Priority|

        | canada_post_xpresspost | Xpresspost|

        | canada_post_xpresspost_international | Xpresspost International|

        | canada_post_xpresspost_usa | Xpresspost USA|

        | canada_post_expedited_parcel_usa | Expedited Parcel USA|

        | canada_post_tracked_packet_usa | Tracked Packet USA|

        | canada_post_small_packet_usa_air | Small Packet USA Air|

        | canada_post_tracked_packet_international | Tracked Packet
        International|

        | canada_post_small_packet_international_air | Small Package
        International Air|
      type: string
      enum:
        - canada_post_regular_parcel
        - canada_post_expedited_parcel
        - canada_post_priority
        - canada_post_xpresspost
        - canada_post_xpresspost_international
        - canada_post_xpresspost_usa
        - canada_post_expedited_parcel_usa
        - canada_post_tracked_packet_usa
        - canada_post_small_packet_usa_air
        - canada_post_tracked_packet_international
        - canada_post_small_packet_international_air
    ServiceLevelCDL:
      description: |
        |Token | Service name|
        |:---|:---|
        | cdl_next_day | Next Day|
      type: string
      enum:
        - cdl_next_day
    ServiceLevelColissimo:
      description: |
        |Token | Service name|
        |:---|:---|
        | colissimo_home | Domicile|
        | colissimo_pick_up_point | Point Retrait|
        | colissimo_return_mainland_france | Retour France|
      type: string
      enum:
        - colissimo_home
        - colissimo_pick_up_point
        - colissimo_return_mainland_france
    ServiceLevelChronopost:
      description: |
        |Token | Service name|
        |:---|:---|
        | chronopost_13 | Chrono 13|
        | chronopost_10 | Chrono 10|
        | chronopost_18| Chrono 18|
        | chronopost_relais_fr | Chrono Point Relais|
        | chronopost_classic | Chrono Classic International|
        | chronopost_express | Chrono Express International|
      type: string
      enum:
        - chronopost_13
        - chronopost_10
        - chronopost_18
        - chronopost_relais_fr
        - chronopost_classic
        - chronopost_express
    ServiceLevelCorreosEspana:
      description: |
        |Token | Service name|
        |:---|:---|
        | correos_standard_home| Paquete EstÃ¡ndar|
        | correos_premium_home | Paquete Premium|
      type: string
      enum:
        - correos_standard_home
        - correos_premium_home
    ServiceLevelCouriersPlease:
      description: >
        |Token | Service name|

        |:---|:---|

        | couriersplease_domestic_priority_auth_to_leave | Domestic Priority -
        Authority To Leave/POPPoints|

        | couriersplease_domestic_priority_sign_required | Domestic Priority -
        Signature Required|

        | couriersplease_gold_domestic_auth_to_leave | Gold Domestic - Authority
        To Leave/POPPoints|

        | couriersplease_gold_domestic_sign_required | Gold Domestic - Signature
        Required|

        | couriersplease_off_peak_auth_to_leave | Off Peak - Authority To
        Leave/POPPoints|

        | couriersplease_off_peak_sign_required | Off Peak - Signature Required|

        | couriersplease_parcel_auth_to_leave | Parcel - Authority To Leave|

        | couriersplease_parcel_sign_required | Parcel - Signature Required|

        | couriersplease_road_express | Road Express|

        | couriersplease_satchel_auth_to_leave | Satchel - Authority To Leave|

        | couriersplease_satchel_sign_required | Satchel - Signature Required|
      type: string
      enum:
        - couriersplease_domestic_priority_auth_to_leave
        - couriersplease_domestic_priority_sign_required
        - couriersplease_gold_domestic_auth_to_leave
        - couriersplease_gold_domestic_sign_required
        - couriersplease_off_peak_auth_to_leave
        - couriersplease_off_peak_sign_required
        - couriersplease_parcel_auth_to_leave
        - couriersplease_parcel_sign_required
        - couriersplease_road_express
        - couriersplease_satchel_auth_to_leave
        - couriersplease_satchel_sign_required
    ServiceLevelPurolator:
      description: >
        |Token | Service name|

        |:---|:---|

        | purolator_ground | Ground|

        | purolator_ground9_am | Ground 9am|

        | purolator_ground1030_am | Ground 10:30am|

        | purolator_ground_distribution | Ground Distribution|

        | purolator_ground_evening | Ground Evening|

        | purolator_ground_us | Ground US|

        | purolator_express | Express|

        | purolator_express9_am | Express 9am|

        | purolator_express1030_am | Express 10am|

        | purolator_express_evening | Express Evening|

        | purolator_express_us | Express US|

        | purolator_express_us9_am | Express US 9am|

        | purolator_express_us1030_am | Express US 10:30am|

        | purolator_express_us1200 | Express US 12pm|

        | purolator_express_international | Express International|

        | purolator_express_international9_am | Express International 9am|

        | purolator_express_international1030_am | Express International
        10:30am|

        | purolator_express_international1200 | Express International 12pm|
      type: string
      enum:
        - purolator_ground
        - purolator_ground9_am
        - purolator_ground1030_am
        - purolator_ground_distribution
        - purolator_ground_evening
        - purolator_ground_us
        - purolator_express
        - purolator_express9_am
        - purolator_express1030_am
        - purolator_express_evening
        - purolator_express_us
        - purolator_express_us9_am
        - purolator_express_us1030_am
        - purolator_express_us1200
        - purolator_express_international
        - purolator_express_international9_am
        - purolator_express_international1030_am
        - purolator_express_international1200
    ServiceLevelDHLExpress:
      description: |
        |Token | Service name|
        |:---|:---|
        | dhl_express_domestic_express_doc | Domestic Express Doc|
        | dhl_express_economy_select_doc | Economy Select Doc|
        | dhl_express_worldwide_nondoc | Express Worldwide Nondoc|
        | dhl_express_worldwide_doc | Express Worldwide Doc|
        | dhl_express_worldwide | Worldwide|
        | dhl_express_worldwide_eu_doc | Express Worldwide EU Doc|
        | dhl_express_break_bulk_express_doc | Break Bulk Express Doc|
        | dhl_express_express_9_00_nondoc | Express 9:00 NonDoc|
        | dhl_express_economy_select_nondoc | Economy Select NonDoc|
        | dhl_express_break_bulk_economy_doc | Break Bulk Economy Doc|
        | dhl_express_express_9_00_doc | Express 9:00 Doc|
        | dhl_express_express_10_30_doc | Express 10:30 Doc|
        | dhl_express_express_10_30_nondoc | Express 10:30 NonDoc|
        | dhl_express_express_12_00_doc | Express 12:00 Doc|
        | dhl_express_europack_nondoc | Europack NonDoc|
        | dhl_express_express_envelope_doc | Express Envelope Doc|
        | dhl_express_express_12_00_nondoc | Express 12:00 NonDoc|
        | dhl_express_express_12_doc | Domestic Express 12:00|
        | dhl_express_worldwide_b2c_doc | Express Worldwide (B2C) Doc|
        | dhl_express_worldwide_b2c_nondoc | Express Worldwide (B2C) NonDoc|
        | dhl_express_medical_express | Medical Express|
        | dhl_express_express_easy_nondoc | Express Easy NonDoc|
      type: string
      enum:
        - dhl_express_domestic_express_doc
        - dhl_express_economy_select_doc
        - dhl_express_worldwide_nondoc
        - dhl_express_worldwide_doc
        - dhl_express_worldwide
        - dhl_express_worldwide_eu_doc
        - dhl_express_break_bulk_express_doc
        - dhl_express_express_9_00_nondoc
        - dhl_express_economy_select_nondoc
        - dhl_express_break_bulk_economy_doc
        - dhl_express_express_9_00_doc
        - dhl_express_express_10_30_doc
        - dhl_express_express_10_30_nondoc
        - dhl_express_express_12_00_doc
        - dhl_express_europack_nondoc
        - dhl_express_express_envelope_doc
        - dhl_express_express_12_00_nondoc
        - dhl_express_express_12_doc
        - dhl_express_worldwide_b2c_doc
        - dhl_express_worldwide_b2c_nondoc
        - dhl_express_medical_express
        - dhl_express_express_easy_nondoc
    ServiceLevelDHLeCommerce:
      description: >
        |Token | Service name|

        |:---|:---|

        | dhl_ecommerce_marketing_parcel_expedited | Marketing Parcel Expedited|

        | dhl_ecommerce_globalmail_business_ipa | GlobalMail Business IPA|

        | dhl_ecommerce_parcel_international_direct | Parcel International
        Direct|

        | dhl_ecommerce_parcels_expedited_max | Parcels Expedited Max|

        | dhl_ecommerce_bpm_ground | Bounded Printed Matter Ground|

        | dhl_ecommerce_priority_expedited | Priority Expedited|

        | dhl_ecommerce_globalmail_packet_ipa | GlobalMail Packet IPA|

        | dhl_ecommerce_globalmail_packet_isal | GlobalMail Packet ISAL|

        | dhl_ecommerce_easy_return_plus | Easy Return Plus|

        | dhl_ecommerce_marketing_parcel_ground | Marketing Parcel Ground|

        | dhl_ecommerce_first_class_parcel_expedited | First Class Parcel
        Expedited|

        | dhl_ecommerce_globalmail_business_priority | GlobalMail Business
        Priority|

        | dhl_ecommerce_parcels_expedited | Parcels Expedited|

        | dhl_ecommerce_globalmail_business_isal | GlobalMail Business ISAL|

        | dhl_ecommerce_parcel_plus_expedited_max | Parcel Plus Expedited Max|

        | dhl_ecommerce_globalmail_packet_plus | GlobalMail Packet Plus|

        | dhl_ecommerce_parcels_ground | Parcels Ground|

        | dhl_ecommerce_expedited | Expedited|

        | dhl_ecommerce_parcel_plus_ground | Parcel Plus Ground|

        | dhl_ecommerce_parcel_international_standard | Parcel International
        Standard|

        | dhl_ecommerce_bpm_expedited | Bounded Printed Matter Expedited|

        | dhl_ecommerce_parcel_international_expedited | Parcel International
        Expedited|

        | dhl_ecommerce_globalmail_packet_priority | GlobalMail Packet Priority|

        | dhl_ecommerce_easy_return_light | Easy Return Light|

        | dhl_ecommerce_parcel_plus_expedited | Parcel Plus Expedited|

        | dhl_ecommerce_globalmail_business_standard | GlobalMail Packet
        Standard|

        | dhl_ecommerce_ground | Ground|

        | dhl_ecommerce_globalmail_packet_standard | GlobalMail Business
        Standard|
      type: string
      enum:
        - dhl_ecommerce_marketing_parcel_expedited
        - dhl_ecommerce_globalmail_business_ipa
        - dhl_ecommerce_parcel_international_direct
        - dhl_ecommerce_parcels_expedited_max
        - dhl_ecommerce_bpm_ground
        - dhl_ecommerce_priority_expedited
        - dhl_ecommerce_globalmail_packet_ipa
        - dhl_ecommerce_globalmail_packet_isal
        - dhl_ecommerce_easy_return_plus
        - dhl_ecommerce_marketing_parcel_ground
        - dhl_ecommerce_first_class_parcel_expedited
        - dhl_ecommerce_globalmail_business_priority
        - dhl_ecommerce_parcels_expedited
        - dhl_ecommerce_globalmail_business_isal
        - dhl_ecommerce_parcel_plus_expedited_max
        - dhl_ecommerce_globalmail_packet_plus
        - dhl_ecommerce_parcels_ground
        - dhl_ecommerce_expedited
        - dhl_ecommerce_parcel_plus_ground
        - dhl_ecommerce_parcel_international_standard
        - dhl_ecommerce_bpm_expedited
        - dhl_ecommerce_parcel_international_expedited
        - dhl_ecommerce_globalmail_packet_priority
        - dhl_ecommerce_easy_return_light
        - dhl_ecommerce_parcel_plus_expedited
        - dhl_ecommerce_globalmail_business_standard
        - dhl_ecommerce_ground
        - dhl_ecommerce_globalmail_packet_standard
    ServiceLevelDHLGermany:
      description: |
        |Token | Service name|
        |:---|:---|
        | dhl_germany_europaket | DHL Germany Europaket|
        | dhl_germany_paket | DHL Germany Paket|
        | dhl_germany_paket_connect | DHL Germany Paket Connect|
        | dhl_germany_paket_international | DHL Germany Paket International|
        | dhl_germany_paket_priority | DHL Germany Paket Priority|
        | dhl_germany_paket_sameday | DHL Germany Paket Sameday|
      type: string
      enum:
        - dhl_germany_europaket
        - dhl_germany_paket
        - dhl_germany_paket_connect
        - dhl_germany_paket_international
        - dhl_germany_paket_priority
        - dhl_germany_paket_sameday
    ServiceLevelDPDDE:
      description: |
        |Token | Service name|
        |:---|:---|
        | dpd_de_classic | DPD Classic|
      type: string
      enum:
        - dpd_de_classic
    ServiceLevelDPDUK:
      description: |
        |Token | Service name|
        |:---|:---|
        | dpd_uk_ship_to_shop | Ship to shop|
        | dpd_uk_1030 | Door to door 10.30 next day|
        | dpd_uk_1200 | Door to door 12.00 next day|
        | dpd_uk_saturday | Saturday Delivery|
        | dpd_uk_saturday_1030 | Saturday Delivery 10.30|
        | dpd_uk_saturday_1200 | Saturday Delivery 12.00|
        | dpd_uk_sunday | Sunday Delivery|
        | dpd_uk_sunday_1030 | Sunday Delivery 10.30|
        | dpd_uk_sunday_1200 | Sunday Delivery 12.00|
        | dpd_uk_next_day | Next day|
        | dpd_uk_two_day | Two day|
        | dpd_uk_classic | DPD Classic|
        | dpd_uk_air_classic | DPD Air Classic|
        | dpd_uk_air_express | DPD Air Express|
        | dpd_uk_direct | DPD Direct|
        | dpd_uk_direct_tracked_mail| DPD Tracked Mail|
        | dpd_uk_pickup_returns | Pickup Returns|
      type: string
      enum:
        - dpd_uk_ship_to_shop
        - dpd_uk_1030
        - dpd_uk_1200
        - dpd_uk_saturday
        - dpd_uk_saturday_1030
        - dpd_uk_saturday_1200
        - dpd_uk_sunday
        - dpd_uk_sunday_1030
        - dpd_uk_sunday_1200
        - dpd_uk_next_day
        - dpd_uk_two_day
        - dpd_uk_classic
        - dpd_uk_air_classic
        - dpd_uk_air_express
        - dpd_uk_direct
        - dpd_uk_direct_tracked_mail
        - dpd_uk_pickup_returns
    ServiceLevelDeutschePost:
      description: |
        |Token | Service name|
        |:---|:---|
        | deutsche_post_postkarte | Postkarte|
        | deutsche_post_standardbrief | Standardbrief|
        | deutsche_post_kompaktbrief | Kompaktbrief|
        | deutsche_post_grossbrief | Grossbrief|
        | deutsche_post_maxibrief | Maxibrief|
        | deutsche_post_maxibrief_plus | Maxibrief Plus|
        | deutsche_post_warenpost_international_xs | Warenpost International XS|
        | deutsche_post_warenpost_international_s | Warenpost International S|
        | deutsche_post_warenpost_international_m | Warenpost International M|
        | deutsche_post_warenpost_international_l | Warenpost International L|
      type: string
      enum:
        - deutsche_post_postkarte
        - deutsche_post_standardbrief
        - deutsche_post_kompaktbrief
        - deutsche_post_grossbrief
        - deutsche_post_maxibrief
        - deutsche_post_maxibrief_plus
        - deutsche_post_warenpost_international_xs
        - deutsche_post_warenpost_international_s
        - deutsche_post_warenpost_international_m
        - deutsche_post_warenpost_international_l
    ServiceLevelAramexAustralia:
      description: |
        |Token | Service name|
        |:---|:---|
        | fastway_australia_parcel | Parcel|
        | fastway_australia_satchel | Satchel|
        | fastway_australia_box_small | Box Small|
        | fastway_australia_box_medium | Box Medium|
        | fastway_australia_box_large | Box Large|
      type: string
      enum:
        - fastway_australia_parcel
        - fastway_australia_satchel
        - fastway_australia_box_small
        - fastway_australia_box_medium
        - fastway_australia_box_large
    ServiceLevelGlobegistics:
      description: >
        |Token | Service name|

        |:---|:---|

        | globegistics_priority_mail_express_international | Globegistics
        Priority Mail Express International|

        | globegistics_priority_mail_international | Globegistics Priority Mail
        International|

        | globegistics_priority_mail_express_international_pds | Globegistics
        Priority Mail Express International PreSort Drop Ship|

        | globegistics_priority_mail_international_pds | Globegistics Priority
        Mail International PreSort Drop Ship|

        | globegistics_epacket | Globegistics ePacket|

        | globegistics_ecom_tracked_ddp | Globegistics eCom Tracked DDP|

        | globegistics_ecom_packet_ddp | Globegistics eCom Packet DDP|

        | globegistics_ecom_priority_mail_international_ddp | Globegistics eCom
        Priority Mail International DDP|

        | globegistics_ecom_priority_mail_express_international_ddp |
        Globegistics eCom Priority Mail Express International DDP|

        | globegistics_ecom_extra | Globegistics eCom Extra|

        | globegistics_ecom_international_priority_airmail | Globegistics eCom
        International Priority Airmail|

        | globegistics_ecom_international_surface_airlift | Globegistics eCom
        International Surface Air Lift|
      type: string
      enum:
        - globegistics_priority_mail_express_international
        - globegistics_priority_mail_international
        - globegistics_priority_mail_express_international_pds
        - globegistics_priority_mail_international_pds
        - globegistics_epacket
        - globegistics_ecom_tracked_ddp
        - globegistics_ecom_packet_ddp
        - globegistics_ecom_priority_mail_international_ddp
        - globegistics_ecom_priority_mail_express_international_ddp
        - globegistics_ecom_extra
        - globegistics_ecom_international_priority_airmail
        - globegistics_ecom_international_surface_airlift
    ServiceLevelGLSUS:
      description: |
        |Token | Service name|
        |:---|:---|
        | gls_us_cps | GSO Ground|
        | gls_us_eps | Early Priority Overnight|
        | gls_us_ess | Early Saturday Delivery|
        | gls_us_nps | Noon Priority Overnight|
        | gls_us_pds | Priority Overnight|
        | gls_us_sds | Saturday Delivery|
      type: string
      enum:
        - gls_us_cps
        - gls_us_eps
        - gls_us_ess
        - gls_us_nps
        - gls_us_pds
        - gls_us_sds
    ServiceLevelLSO:
      description: |
        |Token | Service name|
        |:---|:---|
        | lso_ground | Ground|
        | lso_economy_next_day | Economy Next Day|
        | lso_saturday_delivery | Saturday Delivery|
        | lso_2nd_day | 2nd Day|
        | lso_priority_next_day | Priority Next Day|
        | lso_early_overnight | Early Overnight|
      type: string
      enum:
        - lso_ground
        - lso_economy_next_day
        - lso_saturday_delivery
        - lso_2nd_day
        - lso_priority_next_day
        - lso_early_overnight
    ServiceLevelMondialRelay:
      description: |
        |Token | Service name|
        |:---|:---|
        | mondial_relay_pointrelais | Point Relais|
      type: string
      enum:
        - mondial_relay_pointrelais
    ServiceLevelMaergo:
      description: |
        |Token | Service name|
        |:---|:---|
        | x_delivery_expedited | Expedited|
      type: string
      enum:
        - x_delivery_expedited
    ServiceLevelParcelforce:
      description: |
        |Token | Service name|
        |:---|:---|
        | parcelforce_express48 | Express 48|
        | parcelforce_express24 | Express 24|
        | parcelforce_expressam | Express AM|
      type: string
      enum:
        - parcelforce_express48
        - parcelforce_express24
        - parcelforce_expressam
    ServiceLevelPostItaliane:
      description: >
        |Token | Service name|

        |:---|:---|

        | poste_italiane_delivery_business_express | Poste Delivery Business
        Express|
      type: string
      enum:
        - poste_italiane_delivery_business_express
    ServiceLevelePostGlobal:
      description: >
        |Token | Service name|

        |:---|:---|

        | rr_donnelley_domestic_economy_parcel | Domestic Economy Parcel|

        | rr_donnelley_domestic_priority_parcel | Domestic Priority Parcel |

        | rr_donnelley_domestic_parcel_bpm | Domestic Parcel BPM|

        | rr_donnelley_priority_domestic_priority_parcel_bpm | Domestic Priority
        Parcel BPM|

        | rr_donnelley_priority_parcel_delcon | International Priority Parcel
        DelCon|

        | rr_donnelley_priority_parcel_nondelcon | International Priority Parcel
        NonDelcon|

        | rr_donnelley_economy_parcel | Economy Parcel Service |

        | rr_donnelley_ipa | International Priority Airmail (IPA)|

        | rr_donnelley_courier | International Courier|

        | rr_donnelley_isal | International Surface Air Lift (ISAL)|

        | rr_donnelley_epacket | e-Packet|

        | rr_donnelley_pmi | Priority Mail International|

        | rr_donnelley_emi | Express Mail International|
      type: string
      enum:
        - rr_donnelley_domestic_economy_parcel
        - rr_donnelley_domestic_priority_parcel
        - rr_donnelley_domestic_parcel_bpm
        - rr_donnelley_priority_domestic_priority_parcel_bpm
        - rr_donnelley_priority_parcel_delcon
        - rr_donnelley_priority_parcel_nondelcon
        - rr_donnelley_economy_parcel
        - rr_donnelley_ipa
        - rr_donnelley_courier
        - rr_donnelley_isal
        - rr_donnelley_epacket
        - rr_donnelley_pmi
        - rr_donnelley_emi
    ServiceLevelRoyalMail:
      description: >
        |Token | Service name|

        |:---|:---|

        | royal_mail_tracked_letter_boxable_24_no_signature | Royal Mail Tracked
        Letter-Boxable 24 No Signature|

        | royal_mail_tracked_letter_boxable_48_no_signature | Royal Mail Tracked
        Letter-Boxable 48 No Signature|

        | royal_mail_tracked_24_returns | Royal Mail Tracked Returns 24|

        | royal_mail_tracked_48_returns | Royal Mail Tracked Returns 48|

        | royal_mail_special_delivery_guaranteed_1pm | Special Delivery
        Guaranteed by 1pm

        | royal_mail_special_delivery_guaranteed_9am | Special Delivery
        Guaranteed by 9am

        | royal_mail_24 | RoyalMail 24

        | royal_mail_48 | RoyalMail 48

        | royal_mail_signed_for_first_class | Signed for First Class

        | royal_mail_signed_for_second_class | Signed for Second Class

        | royal_mail_standard_first_class | Standard First Class

        | royal_mail_standard_second_class | Standard Second Class

        | royal_mail_tracked_24_no_signature | Royal Mail Tracked 24 No
        Signature

        | royal_mail_tracked_48_no_signature | Royal Mail Ttacked 48 No
        Signature

        | royal_mail_intl_bus_mail_lrg_ltr_zone_sort_pri | International
        Business Mail Large Letter Zone Sort Priority

        | royal_mail_intl_bus_parcels_tracked_zone_sort | International Business
        Parcels Tracked Zone Sort

        | royal_mail_intl_bus_parcels_tracked_country_priced | International
        Business Parcels Tracked Country Priced

        | royal_mail_intl_bus_parcels_tracked_signed_zone_srt | International
        Business Parcels & Signed Zone Sort

        | royal_mail_24_flat_rate | Royal Mail 24 Parcel Flat Rate

        | royal_mail_48_flat_rate | Royal Mail 48 Parcel Flat Rate
      type: string
      enum:
        - royal_mail_tracked_letter_boxable_24_no_signature
        - royal_mail_tracked_letter_boxable_48_no_signature
        - royal_mail_tracked_24_returns
        - royal_mail_tracked_48_returns
        - royal_mail_special_delivery_guaranteed_1pm
        - royal_mail_special_delivery_guaranteed_9am
        - royal_mail_24
        - royal_mail_48
        - royal_mail_signed_for_first_class
        - royal_mail_signed_for_second_class
        - royal_mail_standard_first_class
        - royal_mail_standard_second_class
        - royal_mail_tracked_24_no_signature
        - royal_mail_tracked_48_no_signature
        - royal_mail_intl_bus_mail_lrg_ltr_zone_sort_pri
        - royal_mail_intl_bus_parcels_tracked_zone_sort
        - royal_mail_intl_bus_parcels_tracked_country_priced
        - royal_mail_intl_bus_parcels_tracked_signed_zone_srt
        - royal_mail_24_flat_rate
        - royal_mail_48_flat_rate
    ServiceLevelSendle:
      description: |
        |Token | Service name|
        |:---|:---|
        | sendle_parcel | Sendle Parcel|
      type: string
      enum:
        - sendle_parcel
    ServiceLevelOnTrac:
      description: |
        |Token | Service name|
        |:---|:---|
        | ontrac_ground | Ground|
        | ontrac_sunrise_gold | Sunrise Gold|
        | ontrac_sunrise | Sunrise|
      type: string
      enum:
        - ontrac_ground
        - ontrac_sunrise_gold
        - ontrac_sunrise
    ServiceLevelLasership:
      description: |
        |Token | Service name|
        |:---|:---|
        | lasership_routed_delivery | Routed Delivery|
      type: string
      enum:
        - lasership_routed_delivery
    ServiceLevelVeho:
      description: |
        |Token | Service name|
        |:---|:---|
        | veho_next_day | Veho Next Day |
      type: string
      enum:
        - veho_next_day
    ServiceLevelEvriUK:
      description: |
        |Token | Service name|
        |:---|:---|
        | hermes_uk_courier_service | Courier Collection|
        | hermes_uk_parcelshop_dropoff | ParcelShop Drop-Off|
        | hermes_uk_parcelshop_dropoff_nextday | ParcelShop Drop-Off Next Day|
        | hermes_uk_postable | Postable|
        | hermes_uk_postable_nextday | Postable Next Day|
      type: string
      enum:
        - hermes_uk_courier_service
        - hermes_uk_parcelshop_dropoff
        - hermes_uk_parcelshop_dropoff_nextday
        - hermes_uk_postable
        - hermes_uk_postable_nextday
    ServiceLevelEnumSet:
      oneOf:
        - $ref: '#/components/schemas/ServiceLevelUSPS'
        - $ref: '#/components/schemas/ServiceLevelFedEx'
        - $ref: '#/components/schemas/ServiceLevelUPS'
        - $ref: '#/components/schemas/ServiceLevelAirterra'
        - $ref: '#/components/schemas/ServiceLevelAPCPostal'
        - $ref: '#/components/schemas/ServiceLevelAsendia'
        - $ref: '#/components/schemas/ServiceLevelAustraliaPost'
        - $ref: '#/components/schemas/ServiceLevelAxleHire'
        - $ref: '#/components/schemas/ServiceLevelAPG'
        - $ref: '#/components/schemas/ServiceLevelBetterTrucks'
        - $ref: '#/components/schemas/ServiceLevelCanadaPost'
        - $ref: '#/components/schemas/ServiceLevelCDL'
        - $ref: '#/components/schemas/ServiceLevelChronopost'
        - $ref: '#/components/schemas/ServiceLevelCouriersPlease'
        - $ref: '#/components/schemas/ServiceLevelCorreosEspana'
        - $ref: '#/components/schemas/ServiceLevelColissimo'
        - $ref: '#/components/schemas/ServiceLevelPurolator'
        - $ref: '#/components/schemas/ServiceLevelDHLExpress'
        - $ref: '#/components/schemas/ServiceLevelDHLeCommerce'
        - $ref: '#/components/schemas/ServiceLevelDHLGermany'
        - $ref: '#/components/schemas/ServiceLevelDPDDE'
        - $ref: '#/components/schemas/ServiceLevelDPDUK'
        - $ref: '#/components/schemas/ServiceLevelDeutschePost'
        - $ref: '#/components/schemas/ServiceLevelAramexAustralia'
        - $ref: '#/components/schemas/ServiceLevelGlobegistics'
        - $ref: '#/components/schemas/ServiceLevelGLSUS'
        - $ref: '#/components/schemas/ServiceLevelLSO'
        - $ref: '#/components/schemas/ServiceLevelMondialRelay'
        - $ref: '#/components/schemas/ServiceLevelMaergo'
        - $ref: '#/components/schemas/ServiceLevelParcelforce'
        - $ref: '#/components/schemas/ServiceLevelPostItaliane'
        - $ref: '#/components/schemas/ServiceLevelePostGlobal'
        - $ref: '#/components/schemas/ServiceLevelRoyalMail'
        - $ref: '#/components/schemas/ServiceLevelSendle'
        - $ref: '#/components/schemas/ServiceLevelOnTrac'
        - $ref: '#/components/schemas/ServiceLevelLasership'
        - $ref: '#/components/schemas/ServiceLevelEvriUK'
        - $ref: '#/components/schemas/ServiceLevelUDS'
        - $ref: '#/components/schemas/ServiceLevelVeho'
        - $ref: '#/components/schemas/ServiceLevelSwyft'
      x-speakeasy-include: true
    ParcelTemplateFedEx:
      description: >
        |Token | Name | Dimensions|

        |:---|:---|:---|

        | FedEx_Box_10kg | FedExÂ® 10kg Box | 15.81 x 12.94 x 10.19 in|

        | FedEx_Box_25kg | FedExÂ® 25kg Box | 54.80 x 42.10 x 33.50 in|

        | FedEx_Box_Extra_Large_1 | FedExÂ® Extra Large Box (X1) | 11.88 x 11.00
        x 10.75 in|

        | FedEx_Box_Extra_Large_2 | FedExÂ® Extra Large Box (X2) | 15.75 x 14.13
        x 6.00 in|

        | FedEx_Box_Large_1 | FedExÂ® Large Box (L1) | 17.50 x 12.38 x 3.00 in|

        | FedEx_Box_Large_2 | FedExÂ® Large Box (L2) | 11.25 x 8.75 x 7.75 in|

        | FedEx_Box_Medium_1 | FedExÂ® Medium Box (M1) | 13.25 x 11.50 x 2.38 in|

        | FedEx_Box_Medium_2 | FedExÂ® Medium Box (M2) | 11.25 x 8.75 x 4.38 in|

        | FedEx_Box_Small_1 | FedExÂ® Small Box (S1) | 12.38 x 10.88 x 1.50 in|

        | FedEx_Box_Small_2 | FedExÂ® Small Box (S2) | 11.25 x 8.75 x 4.38 in|

        | FedEx_Envelope | FedExÂ® Envelope | 12.50 x 9.50 x 0.80 in|

        | FedEx_Padded_Pak | FedExÂ® Padded Pak | 11.75 x 14.75 x 2.00 in|

        | FedEx_Pak_1 | FedExÂ® Large Pak | 15.50 x 12.00 x 0.80 in|

        | FedEx_Pak_2 | FedExÂ® Small Pak | 12.75 x 10.25 x 0.80 in|

        | FedEx_Tube | FedExÂ® Tube | 38.00 x 6.00 x 6.00 in|

        | FedEx_XL_Pak | FedExÂ® Extra Large Pak | 17.50 x 20.75 x 2.00 in|
      type: string
      enum:
        - FedEx_Box_10kg
        - FedEx_Box_25kg
        - FedEx_Box_Extra_Large_1
        - FedEx_Box_Extra_Large_2
        - FedEx_Box_Large_1
        - FedEx_Box_Large_2
        - FedEx_Box_Medium_1
        - FedEx_Box_Medium_2
        - FedEx_Box_Small_1
        - FedEx_Box_Small_2
        - FedEx_Envelope
        - FedEx_Padded_Pak
        - FedEx_Pak_1
        - FedEx_Pak_2
        - FedEx_Tube
        - FedEx_XL_Pak
    ParcelTemplateUPS:
      description: >
        |Token | Name | Dimensions|

        |:---|:---|:---|

        | UPS_Box_10kg | Box 10kg | 410.00 x 335.00 x 265.00 mm|

        | UPS_Box_25kg | Box 25kg | 484.00 x 433.00 x 350.00 mm|

        | UPS_Express_Box | Express Box | 460.00 x 315.00 x 95.00 mm|

        | UPS_Express_Box_Large | Express Box Large | 18.00 x 13.00 x 3.00 in|

        | UPS_Express_Box_Medium | Express Box Medium | 15.00 x 11.00 x 3.00 in|

        | UPS_Express_Box_Small | Express Box Small | 13.00 x 11.00 x 2.00 in|

        | UPS_Express_Envelope | Express Envelope | 12.50 x 9.50 x 2.00 in|

        | UPS_Express_Hard_Pak | Express Hard Pak | 14.75 x 11.50 x 2.00 in|

        | UPS_Express_Legal_Envelope | Express Legal Envelope | 15.00 x 9.50 x
        2.00 in|

        | UPS_Express_Pak | Express Pak | 16.00 x 12.75 x 2.00 in|

        | UPS_Express_Tube | Express Tube | 970.00 x 190.00 x 165.00 mm|

        | UPS_Laboratory_Pak | Laboratory Pak | 17.25 x 12.75 x 2.00 in|

        | UPS_MI_BPM | BPM (Mail Innovations - Domestic &amp; International) |
        0.00 x 0.00 x 0.00 in|

        | UPS_MI_BPM_Flat | BPM Flat (Mail Innovations - Domestic &amp;
        International) | 0.00 x 0.00 x 0.00 in|

        | UPS_MI_BPM_Parcel | BPM Parcel (Mail Innovations - Domestic &amp;
        International) | 0.00 x 0.00 x 0.00 in|

        | UPS_MI_First_Class | First Class (Mail Innovations - Domestic only) |
        0.00 x 0.00 x 0.00 in|

        | UPS_MI_Flat | Flat (Mail Innovations - Domestic only) | 0.00 x 0.00 x
        0.00 in|

        | UPS_MI_Irregular | Irregular (Mail Innovations - Domestic only) | 0.00
        x 0.00 x 0.00 in|

        | UPS_MI_Machinable | Machinable (Mail Innovations - Domestic only) |
        0.00 x 0.00 x 0.00 in|

        | UPS_MI_MEDIA_MAIL | Media Mail (Mail Innovations - Domestic only) |
        0.00 x 0.00 x 0.00 in|

        | UPS_MI_Parcel_Post | Parcel Post (Mail Innovations - Domestic only) |
        0.00 x 0.00 x 0.00 in|

        | UPS_MI_Priority | Priority (Mail Innovations - Domestic only) | 0.00 x
        0.00 x 0.00 in|

        | UPS_MI_Standard_Flat | Standard Flat (Mail Innovations - Domestic
        only) | 0.00 x 0.00 x 0.00 in|

        | UPS_Pad_Pak | Pad Pak | 14.75 x 11.00 x 2.00 in|

        | UPS_Pallet | Pallet | 120.00 x 80.00 x 200.00 cm|
      type: string
      enum:
        - UPS_Box_10kg
        - UPS_Box_25kg
        - UPS_Express_Box
        - UPS_Express_Box_Large
        - UPS_Express_Box_Medium
        - UPS_Express_Box_Small
        - UPS_Express_Envelope
        - UPS_Express_Hard_Pak
        - UPS_Express_Legal_Envelope
        - UPS_Express_Pak
        - UPS_Express_Tube
        - UPS_Laboratory_Pak
        - UPS_MI_BPM
        - UPS_MI_BPM_Flat
        - UPS_MI_BPM_Parcel
        - UPS_MI_First_Class
        - UPS_MI_Flat
        - UPS_MI_Irregular
        - UPS_MI_Machinable
        - UPS_MI_MEDIA_MAIL
        - UPS_MI_Parcel_Post
        - UPS_MI_Priority
        - UPS_MI_Standard_Flat
        - UPS_Pad_Pak
        - UPS_Pallet
    ParcelTemplateUSPS:
      description: >
        |Token | Name | Dimensions|

        |:---|:---|:---|

        | USPS_FlatRateCardboardEnvelope | Flat Rate Cardboard Envelope |  12.50
        x 9.50 x 0.75 in |

        | USPS_FlatRateEnvelope | Flat Rate Envelope |  12.50 x 9.50 x 0.75 in |

        | USPS_FlatRateGiftCardEnvelope | Flat Rate Gift Card Envelope |  10.00
        x 7.00 x 0.75 in |

        | USPS_FlatRateLegalEnvelope | Flat Rate Legal Envelope |  15.00 x 9.50
        x 0.75 in |

        | USPS_FlatRatePaddedEnvelope | Flat Rate Padded Envelope |  12.50 x
        9.50 x 1.00 in |

        | USPS_FlatRateWindowEnvelope | Flat Rate Window Envelope |  10.00 x
        5.00 x 0.75 in |

        | USPS_IrregularParcel | Irregular Parcel |  0.00 x 0.00 x 0.00 in |

        | USPS_LargeFlatRateBoardGameBox | Large Flat Rate Board Game Box | 
        24.06 x 11.88 x 3.13 in |

        | USPS_LargeFlatRateBox | Large Flat Rate Box |  12.25 x 12.25 x 6.00 in
        |

        | USPS_APOFlatRateBox | APO/FPO/DPO Large Flat Rate Box |  12.25 x 12.25
        x 6.00 in |

        | USPS_LargeVideoFlatRateBox | Flat Rate Large Video Box (Int&#39;l
        only) |  9.60 x 6.40 x 2.20 in |

        | USPS_MediumFlatRateBox1 | Medium Flat Rate Box 1 |  11.25 x 8.75 x
        6.00 in |

        | USPS_MediumFlatRateBox2 | Medium Flat Rate Box 2 |  14.00 x 12.00 x
        3.50 in |

        | USPS_RegionalRateBoxA1 | Regional Rate Box A1 |  10.13 x 7.13 x 5.00
        in |

        | USPS_RegionalRateBoxA2 | Regional Rate Box A2 |  13.06 x 11.06 x 2.50
        in |

        | USPS_RegionalRateBoxB1 | Regional Rate Box B1 |  12.25 x 10.50 x 5.50
        in |

        | USPS_RegionalRateBoxB2 | Regional Rate Box B2 |  16.25 x 14.50 x 3.00
        in |

        | USPS_SmallFlatRateBox | Small Flat Rate Box |  8.69 x 5.44 x 1.75 in |

        | USPS_SmallFlatRateEnvelope | Small Flat Rate Envelope |  10.00 x 6.00
        x 4.00 in |

        | USPS_SoftPack | Soft Pack Padded Envelope |  Length and width defined
        in the Parcel|
      type: string
      enum:
        - USPS_FlatRateCardboardEnvelope
        - USPS_FlatRateEnvelope
        - USPS_FlatRateGiftCardEnvelope
        - USPS_FlatRateLegalEnvelope
        - USPS_FlatRatePaddedEnvelope
        - USPS_FlatRateWindowEnvelope
        - USPS_IrregularParcel
        - USPS_LargeFlatRateBoardGameBox
        - USPS_LargeFlatRateBox
        - USPS_APOFlatRateBox
        - USPS_LargeVideoFlatRateBox
        - USPS_MediumFlatRateBox1
        - USPS_MediumFlatRateBox2
        - USPS_RegionalRateBoxA1
        - USPS_RegionalRateBoxA2
        - USPS_RegionalRateBoxB1
        - USPS_RegionalRateBoxB2
        - USPS_SmallFlatRateBox
        - USPS_SmallFlatRateEnvelope
        - USPS_SoftPack
    ParcelTemplateDHLeCommerce:
      description: |
        |Token | Name | Dimensions|
        |:---|:---|:---|
        | DHLeC_Irregular | Irregular Shipment | 10.00 x 10.00 x 10.00 in|
        | DHLeC_SM_Flats | Flats | 27.00 x 17.00 x 17.00 in|
      type: string
      enum:
        - DHLeC_Irregular
        - DHLeC_SM_Flats
    ParcelTemplateDPDUK:
      description: |
        |Token | Name | Dimensions|
        |:---|:---|:---|
        | DPD_UK_Express_Pak| DPD UK Express Pak | 530.00 x 400.00 x 100.00 mm|
      type: string
      enum:
        - DPD_UK_Express_Pak
    ParcelTemplateCouriersPlease:
      description: |
        |Token | Name | Dimensions|
        |:---|:---|:---|
        | couriersplease_500g_satchel | 500g Satchel | 22.00 x 33.50 x 0.10 cm|
        | couriersplease_1kg_satchel | 1kg Satchel | 28.00 x 35.00 x 0.10 cm|
        | couriersplease_3kg_satchel | 3kg Satchel | 34.00 x 42.00 x 0.10 cm|
        | couriersplease_5kg_satchel | 5kg Satchel | 43.70 x 59.70 x 0.10 cm|
      type: string
      enum:
        - couriersplease_500g_satchel
        - couriersplease_1kg_satchel
        - couriersplease_3kg_satchel
        - couriersplease_5kg_satchel
    ParcelTemplateAramexAustralia:
      description: >
        |Token | Name | Dimensions|

        |:---|:---|:---|

        | Fastway_Australia_Satchel_A2 | Satchel A2 | 594.00 x 420.00 x 48.00
        mm|

        | Fastway_Australia_Satchel_A3 | Satchel A3 | 420.00 x 297.00 x 64.00
        mm|

        | Fastway_Australia_Satchel_A4 | Satchel A4 | 297.00 x 210.00 x 64.00
        mm|

        | Fastway_Australia_Satchel_A5 | Satchel A5 | 210.00 x 148.00 x 64.00
        mm|
      type: string
      enum:
        - Fastway_Australia_Satchel_A2
        - Fastway_Australia_Satchel_A3
        - Fastway_Australia_Satchel_A4
        - Fastway_Australia_Satchel_A5
    ParcelTemplateEnumSet:
      description: >-
        If template is passed, `length`, `width`, `height`, and `distance_unit`
        are not required
      oneOf:
        - $ref: '#/components/schemas/ParcelTemplateFedEx'
        - $ref: '#/components/schemas/ParcelTemplateUPS'
        - $ref: '#/components/schemas/ParcelTemplateUSPS'
        - $ref: '#/components/schemas/ParcelTemplateDHLeCommerce'
        - $ref: '#/components/schemas/ParcelTemplateDPDUK'
        - $ref: '#/components/schemas/ParcelTemplateCouriersPlease'
        - $ref: '#/components/schemas/ParcelTemplateAramexAustralia'
      x-speakeasy-include: true
    LabelFileType:
      description: >-
        Print format of the <a
        href="https://docs.goshippo.com/docs/shipments/shippinglabelsizes/">label</a>.
        If empty, will use the default format set from 

        <a href="https://apps.goshippo.com/settings/labels">the Shippo
        dashboard.</a>
      enum:
        - PNG
        - PNG_2.3x7.5
        - PDF
        - PDF_2.3x7.5
        - PDF_4x6
        - PDF_4x8
        - PDF_A4
        - PDF_A5
        - PDF_A6
        - ZPLII
      example: PDF_4x6
      type: string
    WeightUnit:
      description: The unit used for weight.
      enum:
        - g
        - kg
        - lb
        - oz
      example: lb
      type: string
    DistanceUnitBase:
      enum:
        - cm
        - in
        - ft
        - m
        - mm
        - yd
      example: in
      type: string
    DistanceUnit:
      description: The measure unit used for length, width and height.
      enum:
        - cm
        - in
        - ft
        - m
        - mm
        - yd
      example: in
      type: string
    DistanceUnitTemplate:
      description: >-
        The measure unit used for length, width and height. Required if template
        is not specified.
      enum:
        - cm
        - in
        - ft
        - m
        - mm
        - yd
      example: in
      type: string
    DistanceUnitUserTemplate:
      description: >-
        The measure unit used for length, width and height. Required, but if
        using a preset carrier template then this field must be empty.
      enum:
        - cm
        - in
        - ft
        - m
        - mm
        - yd
      example: in
      type: string
    ShippoAccountUpdateRequest:
      title: >-
        ShippoAccountUpdateRequest represents the fields of a shippo account
        before saving it to the db.
      properties:
        email:
          example: hippo@shippo.com
          type: string
        first_name:
          example: Shippo
          type: string
        last_name:
          example: Meister
          type: string
        company_name:
          example: Acme
          type: string
      required:
        - first_name
        - last_name
        - email
        - company_name
      type: object
    ShippoAccount:
      properties:
        email:
          example: hippo@shippo.com
          type: string
        first_name:
          example: Shippo
          type: string
        last_name:
          example: Meister
          type: string
        company_name:
          example: Acme
          type: string
        object_created:
          format: date-time
          type: string
        object_id:
          example: adcfdddf8ec64b84ad22772bce3ea37a
          type: string
        object_updated:
          format: date-time
          type: string
      required:
        - first_name
        - last_name
        - email
        - company_name
      type: object
    ShippoAccountPaginatedList:
      allOf:
        - $ref: '#/components/schemas/PaginatedList'
        - properties:
            results:
              items:
                $ref: '#/components/schemas/ShippoAccount'
              type: array
    BatchesAddShipmentsToBatchRequest:
      items:
        $ref: '#/components/schemas/BatchShipmentBase'
      type: array
    BatchesRemoveShipmentsRequest:
      items:
        type: string
      type: array
    CarrierAccountsAddShippoAccountRequest:
      oneOf:
        - $ref: '#/components/schemas/CarrierAccountCanadaPostCreateRequest'
        - $ref: '#/components/schemas/CarrierAccountChronopostCreateRequest'
        - $ref: '#/components/schemas/CarrierAccountColissimoCreateRequest'
        - $ref: '#/components/schemas/CarrierAccountCorreosCreateRequest'
        - $ref: '#/components/schemas/CarrierAccountDeutschePostCreateRequest'
        - $ref: '#/components/schemas/CarrierAccountDHLExpressCreateRequest'
        - $ref: '#/components/schemas/CarrierAccountDpdDeCreateRequest'
        - $ref: '#/components/schemas/CarrierAccountDPDUKCreateRequest'
        - $ref: '#/components/schemas/CarrierAccountHermesUKCreateRequest'
        - $ref: '#/components/schemas/CarrierAccountPosteItalianeCreateRequest'
        - $ref: '#/components/schemas/CarrierAccountUPSCreateRequest'
        - $ref: '#/components/schemas/CarrierAccountUSPSCreateRequest'
    TransactionsCreateShippingLabelRequest:
      oneOf:
        - $ref: '#/components/schemas/TransactionCreateRequest'
        - $ref: '#/components/schemas/InstantTransactionRequestBody'
    CarrierParcelTemplatesListAllCarrierParcelTemplatesResponse:
      items:
        $ref: '#/components/schemas/CarrierParcelTemplate'
      type: array
    ServiceGroupsListAllServiceGroupsResponse:
      items:
        $ref: '#/components/schemas/ServiceGroup'
      type: array
    UserParcelTemplatesListAllResponse:
      items:
        $ref: '#/components/schemas/UserParcelTemplate'
      type: array
security:
  - APIKeyHeader: []
x-tagGroups:
  - tags:
      - Overview
    name: API
  - tags:
      - Addresses
    name: Addresses
  - tags:
      - Parcels
      - Carrier Parcel Templates
      - User Parcel Templates
    name: Parcels
  - tags:
      - Shipments
      - Rates
    name: Shipments
  - tags:
      - Transactions
      - Batches
    name: Purchase
  - tags:
      - Tracking Status
    name: Tracking
  - tags:
      - Customs Items
      - Customs Declarations
    name: International Shipping
  - tags:
      - Carrier Accounts
    name: Carriers
  - tags:
      - Manifests
      - Pickups
    name: Manifests and pickups
  - tags:
      - Orders
    name: Orders
  - tags:
      - Refunds
    name: Billing
  - tags:
      - Service Groups
      - Rates at Checkout
    name: Rates at Checkout
  - tags:
      - Shippo Accounts
    name: Accounts
  - tags:
      - Carriers
      - Service Levels
      - Parcel Templates
    name: Enums
x-speakeasy-name-override:
  - operationId: ^Create.*
    methodNameOverride: create
  - operationId: ^Delete.*
    methodNameOverride: delete
  - operationId: ^Get.*
    methodNameOverride: get
  - operationId: ^List.*
    methodNameOverride: list
  - operationId: ^Update.*
    methodNameOverride: update
