openapi: 3.0.0
info:
  title: GetResponse APIv3
  description: >


    # Limits and throttling


    GetResponse API calls are subject to throttling to ensure a high level of
    service for all users.


    ## Time frame


    Time frame is a period of time for which we calculate the API call limits.
    The limits reset in every time frame.


    The time frame duration is **10 minutes**.


    ## Basic rate limits


    Each user is allowed to make **30,000 API calls per time frame** (10
    minutes) and **80 API calls per second**.


    ## Parallel requests limit


    It is possible to send up to **10 simultaneous requests**.


    ## Headers


    Every API response includes a few additional headers:


    *   `X-RateLimit-Limit` – the total number of requests available per time
    frame

    *   `X-RateLimit-Remaining` – the number of requests left in the current
    time frame

    *   `X-RateLimit-Reset` – seconds left in the current time frame


    ## Errors


    The **429 Too Many Requests** HTTP response code indicates that the limit
    has been reached. The error response includes `currentLimit` and
    `timeToReset` fields in the context section, with the total number of
    requests available per time frame and seconds left in the current time frame
    respectively.


    ## Reaching the limit


    When you reach the limit, you need to wait for the time specified in
    `timeToReset` field or `X-RateLimit-Reset` header before making another
    request.


    # Authentication


    API can be accessed by authenticated users only. This means that every
    request must be signed with your credentials. We offer two methods of
    authentication: API Key and OAuth 2.0. API key is our primary method and
    should be used in most cases. GetResponse MAX clients have to send an
    `X-Domain` header in addition to the API key. Supported OAuth 2.0 flows are:
    Authorization Code, Client Credentials, Implicit, and Refresh Token.


    ## API key


    Follow these steps to send an authentication request:


    *   Find your unique and secret API key in the panel:
    [https://app.getresponse.com/api](https://app.getresponse.com/api)

    *   Add a custom `X-Auth-Token` header to all your requests. For example, if
    your API key is `jfgs8jh4ksg93ban9Dfgh8`, the header will look like this:


    ```

    X-Auth-Token: api-key jfgs8jh4ksg93ban9Dfgh8

    ```


    **For security reasons, unused API keys expire after 90 days. When that
    happens, you’ll need to generate a new key to use our API.**


    ### Example authenticated request


    ```

    $ curl -H "X-Auth-Token: api-key jfgs8jh4ksg93ban9Dfgh8"
    https://api.getresponse.com/v3/accounts

    ```


    ## OAuth 2.0


    To use OAuth 2.0 authentication, you need to get an "Access Token". For more
    information on how to obtain a token, head to our dedicated page: [OAuth
    2.0](/#section/Authentication/Using-OAuth-2.0)


    To authenticate a request using an Access Token, set the value of
    `Authorization` header to "Bearer" followed by the Access Token.


    ### Example


    If the Access Token is `jfg93baDfgh8n9Ds8jh4ksg93ban9Dfgh8`


    ```

    Authorization: Bearer jfg93baDfgh8n9Ds8jh4ksg93ban9Dfgh8

    ```


    ## GetResponse MAX


    GetResponse MAX customers need to take an extra step to authenticate the
    request. All requests have to be send with an `X-Domain` header that
    contains the client's domain. For example:


    ```

    X-Domain: example.com

    ```


    Please note that the header must contain only the domain name, without the
    protocol identifier (`http://` or `https://`).


    ## Using OAuth 2.0


    ### Registering your own application


    If you want to use an OAuth flow to authorize your application, first
    [register your application](https://app.getresponse.com/authorizations)


    You need to provide a name, short description, and redirect URL.


    ### Choosing grant flow


    Once your application is registered, you can click on it to see your
    `client_id` and `client_secret`. They're basically a login and password for
    your application's access, so be sure not to share them with anyone.


    Next, decide which authentication flow (grant type) you want to use. Here
    are your options:


    - choose the **Authorization Code** flow if your application is server-based
    (you have a server with its own domain and server-side code),

    - choose the **Implicit** flow if your application is based mostly on
    JavaScript or client-side code,

    - choose the **Client Credential** flow if you want to test your application
    or access your GetResponse account,

    - implement the **Refresh Token** flow to handle token expiration if you use
    the Authorization Code flow.


    ### Authorization Code flow


    First, your application must redirect a resource owner to the following URL:


    ```

    https://app.getresponse.com/oauth2_authorize.html?response_type=code&client_id=_your_client_id_&state=xyz

    ```


    The `state` parameter is there for security reasons and should be a random
    string. When the resource owner grants your application access to the
    resource, we will redirect the browser to the `redirect URL` you specified
    in the application settings and attach the same state as the parameter.
    Comparing the state parameter value ensures that the redirect was initiated
    by our system. The code parameter is an authorization code that you can
    exchange for an access token within 10 minutes, after which time it expires.


    #### Example redirect with authorization code


    ```

    https://myredirecturi.com/cb?code=ed17c498bfe343175cd7684c5b09979f2875b25c&state=xyz

    ```


    #### Exchanging authorization code for the access token


    Here's an example request to exchange authorization code for the access
    token:


    ```

    $ curl -u client_id:client_secret https://api.getresponse.com/v3/token \
           -d 'grant_type=authorization_code&code=ed17c498bfe343175cd7684c5b09979f2875b25c'
    ```


    *Remember to replace `client_id` and `client_secret` with your OAuth
    application credentials.*


    ##### Example response


    ```json

    {
        "access_token": "03807cb390319329bdf6c777d4dfae9c0d3b3c35",
        "expires_in": 3600,
        "token_type": "Bearer",
        "scope": null,
        "refresh_token": "170d9f64e781aaa6b3ba036083faba71b2fc4e6c"
    }

    ```


    ### Client Credentials flow


    This flow is suitable for development, when you need to quickly access API
    to create some functionality. You can get the access token with a single
    request:


    #### Request


    ```

    $ curl -u client_id:client_secret https://api.getresponse.com/v3/token \
           -d 'grant_type=client_credentials'
    ```


    *Remember to replace `client_id` and `client_secret` with your OAuth
    application credentials.*


    #### Response


    ```json

    {
        "access_token": "e2222af2851a912470ec33c9b4de1ea3a304b7d7",
        "expires_in": 86400,
        "token_type": "Bearer",
        "scope": null
    }

    ```


    You can also go to https://app.getresponse.com/manage_api.html, click the
    action button for your application, and select "generate credentials". This
    will open a popup with a generated access token. You can then use the access
    token to authenticate your requests, for example:


    ```

    $ curl -H "Authorization: Bearer e2222af2851a912470ec33c9b4de1ea3a304b7d7"
    https://api.getresponse.com/v3/from-fields

    ```


    ### Implicit flow


    First, your application must redirect a resource owner to the following URL:


    ```

    https://app.getresponse.com/oauth2_authorize.html?response_type=token&client_id=_your_client_id_&redirect_uri=https://myredirecturi.com/cb&state=xyz

    ```


    When the resource owner grants your application access to the resource, we
    will redirect the owner to the URL that was specified in the request.


    There is no code exchange process because, unlike the Authorization Code
    flow, the redirect already has the access token in the parameters.


    ```

    https://myredirecturi.com/cb#access_token=2YotnFZFEjr1zCsicMWpAA&state=xyz&token_type=bearer&expires_in=3600

    ```


    ### Refresh Token flow


    You need to refresh your access token if you receive this error message as a
    response to your request:


    ```json

    {
        "httpStatus": 401,
        "code": 1014,
        "codeDescription": "Problem during authentication process, check headers!",
        "message": "The access token provided is expired",
        "moreInfo": "https://apidocs.getresponse.com/v3/errors/1014",
        "context": {
            "sentToken": "b8b1e961a7f9fd4cc710d5d955e09c15a364ab71"
        }
    }

    ```


    If you are using the Authorization Code flow, you need to use the refresh
    token to issue a new access token/refresh token pair by making the following
    request:


    ```

    $ curl -u client_id:client_secret https://api.getresponse.com/v3/token \
           -d 'grant_type=refresh_token&refresh_token=170d9f64e781aaa6b3ba036083faba71b2fc4e6c'
    ```


    *Remember to replace `client_id` and `client_secret` with your OAuth
    application credentials.*


    The response you'll get will look like this:


    ```json

    {
        "access_token": "890fdsa2f5d7b189fc4e6c4b1d170d9f591238ss",
        "expires_in": 86400,
        "token_type": "Bearer",
        "scope": null,
        "refresh_token": "170d9f64e781aaa6b3ba036083faba71b2fc4e6c"
    }

    ```


    ### GetResponse MAX


    There are some differences when authenticating GetResponse MAX users:


    - the application must redirect to a page in the client's custom domain, for
    example: `https://custom-domain.getresponse360.com/oauth2_authorize.html`

    - token requests have to be send to one of the GetResponse MAX APIv3
    endpoints (depending on the client's environment),

    - token requests have to include an `X-Domain` header,

    - the application has to be registered in a GetResponse MAX account within
    the same environment.



    # CORS (AJAX requests)


    [Cross-Origin Resource Sharing
    (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) mechanism is
    not supported by APIv3. It means that AJAX requests to the API will be
    blocked by the browser's [same-origin
    policy](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy).
    Please use a server-side application to access the API.



    # Timezone settings


    The default timezone in response data is **UTC**.


    To set a different timezone, add `X-Time-Zone` header with value of [time
    zone name](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)
    ("TZ database name" column).



    # Pagination


    Most of the resource collections returned by API are paginated. It means
    that the response is divided into multiple pages.


    Control the number of results on each page by using `perPage` query
    parameter and change pages by using `page` query parameter.


    By default we return only the first **100** resources per page. You can
    change that by adding `perPage` parameter with a value of up to **1000**.


    Page numbers start with **1**.


    Paginated responses have 3 extra headers:

    * `TotalCount` – a total number of resources on all pages

    * `TotalPages` – a total number of pages

    * `CurrentPage` – current page number


    Use the maximum `perPage` value (**1000**) if you plan to iterate over all
    the pages of the response.


    When trying to get a page that exceeds the total number of pages, API will
    return an empty array (`[]`). Make sure to stop iterating when it happens.



    # CURLE_SSL_CACERT error


    Solution to CURLE_SSL_CACERT error (code 60).


    This error is related to expired CA (Certificate Authority) certificates
    installed on your server (the server that you send the requests from). You
    can read more about certificate verification on the [cURL project
    website](https://curl.haxx.se/docs/sslcerts.html).


    If you encounter this error while sending requests to the GetResponse APIv3,
    ask your server administrator to update the CA certificates using the
    [latest bundle provided by the cURL
    project](https://curl.haxx.se/docs/caextract.html).


    **Please make sure that cURL is configured to use the updated bundle.**
  version: 3.2024-03-04T09:53:07+0000
  contact:
    name: API Support - DevZone
    url: https://app.getresponse.com/feedback.html?devzone=yes
    email: getresponse-devzone@cs.getresponse.com
  x-logo:
    url: https://us-ws.gr-cdn.com/images/global/getresponse.png
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - description: GetResponse
    url: https://api.getresponse.com/v3
  - description: GetResponse MAX US
    url: https://api3.getresponse360.com/v3
  - description: GetResponse MAX PL
    url: https://api3.getresponse360.pl/v3
tags:
  - name: Accounts
  - description: >-
      Our API v3 uses the terminology from the previous version of GetResponse.


      **Campaigns and lists are the same resource under a different name.** For
      now, please refer to lists as campaigns.


      Our API v4 will use the updated terminology.
    name: Campaigns (Lists)
  - name: Contacts
  - name: Newsletters
  - name: Search Contacts
  - name: File Library
  - name: Autoresponders
  - name: RSS Newsletters
  - name: Products
  - name: Custom Events
  - name: From Fields
  - name: Taxes
  - name: Predefined Fields
  - name: Categories
  - name: Suppressions
  - name: Orders
  - name: Shops
  - name: Carts
  - name: Tags
  - name: Addresses
  - name: Custom Fields
  - name: Product Variants
  - name: Meta Fields
  - name: Transactional Emails Templates
  - name: Transactional Emails
  - name: A/B tests - subject
  - name: Forms
  - name: Imports
  - name: Workflows
  - name: Webinars
  - name: Legacy Landing Pages
  - name: Subscription Confirmations
  - name: Forms and Popups
  - name: A/B tests
  - description: >-
      Click tracking refers to the data collected about each link click, such as
      how many people clicked it, how many clicks resulted in desired actions
      such as sales, forwards or subscriptions.
    name: Click Tracks
  - name: Multimedia
  - name: Tracking
  - name: Legacy Forms
  - name: SMS Messages
  - name: Websites
  - name: Landing Pages
  - name: GDPR Fields
  - name: Ecommerce
  - name: SMS Automation Messages
  - name: Sms
  - name: Form and Popup
  - name: Landing Page
  - name: Website
  - name: Transactional Email Templates
  - name: New Landing Pages
paths:
  /webinars/{webinarId}:
    parameters:
      - $ref: '#/components/parameters/webinarId'
    get:
      tags:
        - Webinars
      summary: Get a webinar by ID
      operationId: Webinars_getById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/WebinarDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /contacts/{contactId}:
    parameters:
      - $ref: '#/components/parameters/contactId'
    get:
      tags:
        - Contacts
      summary: Get contact details by contact ID
      operationId: Contacts_getDetailsById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/ContactDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Contacts
      summary: Update contact details
      operationId: Contacts_updateDetails
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        Skip the fields you don't want to update. If tags and custom fields are
        provided, they'll be **replaced** with the values sent in this request. 
        If the `campaignId` changes, the contact will be moved from the original
        campaign (list) to the new campaign (list). Their activity history and
        statistics will also be moved.
      requestBody:
        $ref: '#/components/requestBodies/UpdateContact'
      responses:
        '200':
          $ref: '#/components/responses/ContactDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 409
                    code: 1008
                    codeDescription: >-
                      There is another resource with the same value of unique
                      property
                    message: Property value is already taken
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1008
                    context: []
                    uuid: b89a0d53-67f6-4269-b207-223b42b6bfbd
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - Contacts
      summary: Delete a contact by contact ID
      operationId: Contacts_deleteById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - description: >-
            >

            The ID of a message (such as a newsletter, an autoresponder, or an
            RSS-newsletter).

            When passed, this method will simulate the unsubscribe process, as
            if the contact clicked the unsubscribe link in a given message.
          name: messageId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            This makes it possible to pass the IP from which the contact
            unsubscribed. Used only if the `messageId` was send.
          name: ipAddress
          in: query
          schema:
            type: string
            format: ipv4
      responses:
        '204':
          description: Empty response.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /contacts/{contactId}/activities:
    parameters:
      - $ref: '#/components/parameters/contactId'
    get:
      tags:
        - Contacts
      summary: Get a list of contact activities
      operationId: Contacts_getListOfActivities
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        By default, only activities from the last 14 days are returned. To get
        earlier data, use `query[createdOn]` parameter. You can filter the
        resource using criteria specified as `query[*]`. You can provide
        multiple criteria, to use AND logic. You can sort the resource using
        parameters specified as `sort[*]`. You can specify multiple fields to
        sort by.
      parameters:
        - name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/ContactActivityList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /campaigns/{campaignId}/contacts:
    parameters:
      - $ref: '#/components/parameters/campaignId'
    get:
      tags:
        - Contacts
      summary: Get contacts from a single campaign
      operationId: Contacts_getSingleCampaignContacts
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search contacts by email
          name: query[email]
          in: query
          required: false
          schema:
            type: string
        - description: Search contacts by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Count data from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Count data to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Sort contacts by email
          name: sort[email]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort contacts by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort contacts by creation date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/ContactList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /contacts/{contactId}/custom-fields:
    parameters:
      - $ref: '#/components/parameters/contactId'
    post:
      tags:
        - Contacts
      summary: Upsert the custom fields of a contact
      operationId: Contacts_upsertCustomFields
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        Upsert (add or update) the custom fields of a contact. This method
        doesn't remove (unassign) custom fields.
      requestBody:
        $ref: '#/components/requestBodies/UpsertContactCustomFields'
      responses:
        '200':
          $ref: '#/components/responses/ContactCustomFieldList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-type: upsert
  /contacts/{contactId}/tags:
    parameters:
      - $ref: '#/components/parameters/contactId'
    post:
      tags:
        - Contacts
      summary: Upsert the tags of a contact
      operationId: Contacts_upsertContactTags
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        Upsert (add or update) the tags of a contact. This method doesn't remove
        (unassign) tags.
      requestBody:
        $ref: '#/components/requestBodies/UpsertContactTags'
      responses:
        '200':
          $ref: '#/components/responses/UpsertContactTags'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-type: upsert
  /search-contacts/{searchContactId}:
    parameters:
      - $ref: '#/components/parameters/searchContactId'
    get:
      tags:
        - Search Contacts
      summary: Get search contacts by contact ID.
      operationId: SearchContacts_byContactId
      security:
        - api-key: []
        - oauth2:
            - all
      description: Get the definition of a specific contact-search filter.
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/SearchContactsDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Search Contacts
      summary: Update search contacts
      operationId: SearchContacts_updateSpecifiedContacts
      security:
        - api-key: []
        - oauth2:
            - all
      description: Update specified search contacts.
      requestBody:
        $ref: '#/components/requestBodies/UpdateSearchContacts'
      responses:
        '200':
          $ref: '#/components/responses/SearchContactsDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 409
                    code: 1008
                    codeDescription: >-
                      There is another resource with the same value of unique
                      property
                    message: Property value is already taken
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1008
                    context: []
                    uuid: b89a0d53-67f6-4269-b207-223b42b6bfbd
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - Search Contacts
      summary: Delete search contacts
      operationId: SearchContacts_deleteById
      security:
        - api-key: []
        - oauth2:
            - all
      responses:
        '204':
          description: Delete search contacts.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /search-contacts/{searchContactId}/contacts:
    parameters:
      - $ref: '#/components/parameters/searchContactId'
    get:
      tags:
        - Search Contacts
      summary: Get contacts by search contacts ID
      operationId: SearchContacts_byId
      security:
        - api-key: []
        - oauth2:
            - all
      description: Get contacts from saved search contacts by ID.
      parameters:
        - description: Sort by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
          example: desc
        - description: Sort by email
          name: sort[email]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
          example: desc
        - description: Sort by creation date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
          example: asc
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/SearchedContactsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /search-contacts/{searchContactId}/custom-fields:
    parameters:
      - $ref: '#/components/parameters/searchContactId'
    post:
      tags:
        - Search Contacts
      summary: Upsert custom fields by search contacts
      operationId: SearchContacts_upsertCustomFieldsByContactId
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        Makes it possible to add and update custom field values for all contacts
        that meet the search criteria. This method doesn't remove or overwrite
        custom fields with the values from the request.
      requestBody:
        $ref: '#/components/requestBodies/UpsertContactCustomFields'
      responses:
        '202':
          description: Upsert custom fields by searchContactId.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: UpsertCustomFieldsBySearchContactsId
  /transactional-emails/templates/{transactionalTemplateId}:
    parameters:
      - $ref: '#/components/parameters/transactionalTemplateId'
    get:
      tags:
        - Transactional Emails Templates
      summary: Get a single template by ID
      operationId: TransactionalEmailsTemplates_getById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/TransactionalEmailsTemplateDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-labels:
        - content: GetResponse MAX
          class: primary
        - content: Add-on required
          class: warning
    post:
      tags:
        - Transactional Emails Templates
      summary: Update transactional email template
      operationId: TransactionalEmailsTemplates_updateTemplate
      security:
        - api-key: []
        - oauth2:
            - all
      description: This method allows you to update transactional email template
      requestBody:
        $ref: '#/components/requestBodies/updateTransactionalEmailsTemplate'
      responses:
        '200':
          $ref: '#/components/responses/TransactionalEmailsTemplateDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-labels:
        - content: GetResponse MAX
          class: primary
        - content: Add-on required
          class: warning
    delete:
      tags:
        - Transactional Emails Templates
      summary: Delete transactional email template
      operationId: TransactionalEmailsTemplates_deleteTemplate
      security:
        - api-key: []
        - oauth2:
            - all
      responses:
        '204':
          description: Delete transactional email template
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-labels:
        - content: GetResponse MAX
          class: primary
        - content: Add-on required
          class: warning
  /transactional-emails/{transactionalEmailId}:
    parameters:
      - $ref: '#/components/parameters/transactionalEmailId'
    get:
      tags:
        - Transactional Emails
      summary: Get transactional email details by transactional email ID
      operationId: TransactionalEmails_getDetailsById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/TransactionalEmailDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-labels:
        - content: GetResponse MAX
          class: primary
        - content: Add-on required
          class: warning
  /from-fields/{fromFieldId}:
    parameters:
      - $ref: '#/components/parameters/fromFieldId'
    get:
      tags:
        - From Fields
      summary: Get a single 'From' address by ID
      operationId: FromFields_getSingleAddressById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/FromFieldDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - From Fields
      summary: Delete 'From' address
      operationId: FromFields_deleteAddress
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - description: The 'From' address ID that should replace the deleted 'From' address
          name: fromFieldIdToReplaceWith
          in: query
          required: false
          schema:
            type: string
      responses:
        '204':
          description: Delete 'From' address.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /from-fields/{fromFieldId}/default:
    parameters:
      - $ref: '#/components/parameters/fromFieldId'
    post:
      tags:
        - From Fields
      summary: Set a 'From' address as default
      operationId: FromFields_setFromAddressAsDefault
      security:
        - api-key: []
        - oauth2:
            - all
      responses:
        '200':
          description: Set a 'From' address as default.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: SetDefaultFromField
      x-no-body: true
      x-type: update
  /rss-newsletters/{rssNewsletterId}:
    parameters:
      - $ref: '#/components/parameters/rssNewsletterId'
    get:
      tags:
        - RSS Newsletters
      summary: Get RSS newsletter by ID
      operationId: RssNewsletters_getById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/RssNewsletterDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - RSS Newsletters
      summary: Update RSS newsletter
      operationId: RssNewsletters_updateNewsletter
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/UpdateRssNewsletter'
      responses:
        '200':
          $ref: '#/components/responses/RssNewsletterDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - RSS Newsletters
      summary: Delete RSS newsletter
      operationId: RssNewsletters_deleteNewsletter
      security:
        - api-key: []
        - oauth2:
            - all
      responses:
        '204':
          description: Delete RSS newsletter.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /rss-newsletters/{rssNewsletterId}/statistics:
    parameters:
      - $ref: '#/components/parameters/rssNewsletterId'
    get:
      tags:
        - RSS Newsletters
      summary: Get RSS newsletter statistics by ID
      operationId: RssNewsletters_getStatisticsById
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Group results by time interval
          name: query[groupBy]
          in: query
          required: false
          schema:
            type: string
            enum:
              - total
              - hour
              - day
              - month
        - description: Count data from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Count data to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/SingleMessageStatisticsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: GetRssNewsletterStatistics
  /shops/{shopId}/taxes:
    parameters:
      - $ref: '#/components/parameters/shopId'
    get:
      tags:
        - Taxes
      summary: Get a list of taxes
      operationId: Taxes_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-

        Sending **GET** request to this URL returns a collection of tax
        resources that belong to the given shop.


        You can narrow down the list of resources by passing proper query
        parameters (the list of which you can find below, in the request params
        section). You can basically search by:
         * name
         * createdOn
         You can filter the resource using criteria specified as `query[*]`. You can provide multiple criteria, to use AND logic. You can sort the resource using parameters specified as `sort[*]`. You can specify multiple fields to sort by.
      parameters:
        - description: Search tax by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search tax created from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search tax created to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Sort by date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/TaxList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Taxes
      summary: Create tax
      operationId: Taxes_createNewTax
      security:
        - api-key: []
        - oauth2:
            - all
      description: >

        Sending a **POST** request to this URL will create a new tax resource.


        In order to create a new tax, you need to send a tax resource in the
        body of the request (remember that you need to serialize the body into a
        JSON string)
      requestBody:
        $ref: '#/components/requestBodies/NewTax'
      responses:
        '201':
          $ref: '#/components/responses/TaxDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: CreateTax
  /shops/{shopId}/taxes/{taxId}:
    parameters:
      - $ref: '#/components/parameters/shopId'
      - $ref: '#/components/parameters/taxId'
    get:
      tags:
        - Taxes
      summary: Get a single tax by ID
      operationId: Taxes_getSingleById
      security:
        - api-key: []
        - oauth2:
            - all
      description: >

        This method returns tax with a given `taxId` in the context of a given
        `shopId`
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/TaxDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: GetTax
    post:
      tags:
        - Taxes
      summary: Update tax
      operationId: Taxes_updateShopTax
      security:
        - api-key: []
        - oauth2:
            - all
      description: >

        Update the properties of the shop tax. You should only send the fields
        that need to be changed. The rest of the properties will stay the same.
      requestBody:
        $ref: '#/components/requestBodies/UpdateTax'
      responses:
        '200':
          $ref: '#/components/responses/TaxDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: UpdateTax
    delete:
      tags:
        - Taxes
      summary: Delete tax by ID
      operationId: Taxes_deleteById
      security:
        - api-key: []
        - oauth2:
            - all
      description: ''
      responses:
        '204':
          description: Delete tax
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: DeleteTax
  /custom-events/{customEventId}:
    parameters:
      - $ref: '#/components/parameters/customEventId'
    get:
      tags:
        - Custom Events
      summary: Get custom events by custom event ID
      operationId: CustomEvents_getById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/CustomEventDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Custom Events
      summary: Update custom event details
      operationId: CustomEvents_updateDetails
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/UpdateCustomEvent'
      responses:
        '200':
          $ref: '#/components/responses/CustomEventDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - Custom Events
      summary: Delete a custom event by custom event ID
      operationId: CustomEvents_deleteEventById
      security:
        - api-key: []
        - oauth2:
            - all
      responses:
        '204':
          description: Delete custom event
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /forms/{formId}:
    parameters:
      - $ref: '#/components/parameters/formId'
    get:
      tags:
        - Forms
      summary: Get form by ID
      operationId: Forms_getById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/FormDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /forms/{formId}/variants:
    parameters:
      - $ref: '#/components/parameters/formId'
    get:
      tags:
        - Forms
      summary: Get the list of form variants (A/B tests)
      operationId: Forms_getListOfVariants
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/FormVariantList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /landing-pages/{landingPageId}:
    parameters:
      - $ref: '#/components/parameters/landingPageId'
    get:
      tags:
        - Legacy Landing Pages
      summary: Get single landing page by ID
      operationId: LegacyLandingPages_getById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/LandingPageDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /imports/{importId}:
    parameters:
      - $ref: '#/components/parameters/importId'
    get:
      tags:
        - Imports
      summary: Get import details by ID.
      operationId: Imports_getImportDetailsById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/ImportDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /statistics/sms/{smsId}:
    parameters:
      - $ref: '#/components/parameters/smsId'
    get:
      tags:
        - Sms
      summary: Get details for the SMS message statistics
      operationId: Sms_getMessageStatistics
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - description: Get statistics for a single SMS from this date
          name: query[createdOn][from]
          in: query
          schema:
            type: string
            format: date
            example: '2023-01-20'
        - description: Get statistics for a single SMS to this date
          name: query[createdOn][to]
          in: query
          schema:
            type: string
            format: date
            example: '2023-01-20'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/SmsStats'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-labels:
        - content: GetResponse MAX
          class: primary
        - content: Add-on required
          class: warning
  /predefined-fields/{predefinedFieldId}:
    parameters:
      - $ref: '#/components/parameters/predefinedFieldId'
    get:
      tags:
        - Predefined Fields
      summary: Get a predefined field by ID
      operationId: PredefinedFields_getById
      security:
        - api-key: []
        - oauth2:
            - all
      description: Get detailed information about a specified predefined field.
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/PredefinedFieldDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Predefined Fields
      summary: Update a predefined field
      operationId: PredefinedFields_updateField
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/UpdatePredefinedField'
      responses:
        '200':
          $ref: '#/components/responses/PredefinedFieldDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - Predefined Fields
      summary: Delete a predefined field
      operationId: PredefinedFields_deleteField
      security:
        - api-key: []
        - oauth2:
            - all
      responses:
        '204':
          description: Delete a predefined field.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /shops/{shopId}/categories:
    parameters:
      - $ref: '#/components/parameters/shopId'
    get:
      tags:
        - Categories
      summary: Get the shop categories list
      operationId: Categories_list
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-

        Sending a **GET** request to this URL returns a collection of category
        resources that belong to the given shop.


        You can narrow down the list of resources by passing proper query
        parameters (the list of which you can find below in the request params
        section). You can basically search by:
         *name
         * createdOn
         * parentId

        The `name` fields can be a pattern and we'll try to match this phrase.


        The `parentId` will search for sub-categories of a given parent
        category.


         You can filter the resource using criteria specified as `query[*]`. You can provide multiple criteria, to use AND logic. You can sort the resource using parameters specified as `sort[*]`. You can specify multiple fields to sort by.
      parameters:
        - description: Search category by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search categories by their parent
          name: query[parentId]
          in: query
          required: false
          schema:
            type: string
        - description: Search categories by external ID
          name: query[externalId]
          in: query
          required: false
          schema:
            type: string
        - description: Show categories starting from this date
          name: search[createdAt][from]
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Show categories starting to this date
          name: search[createdAt][to]
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Sort by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by date
          name: sort[createdAt]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/CategoryList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Categories
      summary: Create category
      operationId: Categories_createNewCategory
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        Create shop category. You can pass the `parentId` parameter to create a
        sub-category of a given parent. Unlike most **POST** methods, this call
        is idempotent, that is: sending the same request 10 times will not
        create 10 new categories. Only one category will be created.

      requestBody:
        $ref: '#/components/requestBodies/NewCategory'
      responses:
        '201':
          $ref: '#/components/responses/CategoryDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /shops/{shopId}/categories/{categoryId}:
    parameters:
      - $ref: '#/components/parameters/shopId'
      - $ref: '#/components/parameters/categoryId'
    get:
      tags:
        - Categories
      summary: Get a single category by ID
      operationId: Categories_getById
      security:
        - api-key: []
        - oauth2:
            - all
      description: |

        This method returns a category according to the given `categoryId`.
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/CategoryDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Categories
      summary: Update category
      operationId: Categories_updateCategoryProperties
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        Update the properties of the shop category. You can specify a `parentId`
        to assign a category as sub-category for an existing category. You
        should send only those fields that need to be changed. The rest of the
        properties will stay the same.

      requestBody:
        $ref: '#/components/requestBodies/UpdateCategory'
      responses:
        '200':
          $ref: '#/components/responses/CategoryDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - Categories
      summary: Delete category
      operationId: Categories_deleteCategory
      security:
        - api-key: []
        - oauth2:
            - all
      description: ''
      responses:
        '204':
          description: Delete category
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /suppressions/{suppressionId}:
    parameters:
      - $ref: '#/components/parameters/suppressionId'
    get:
      tags:
        - Suppressions
      summary: Get a suppression list by ID
      operationId: Suppressions_getSuppressionListById
      security:
        - api-key: []
        - oauth2:
            - all
      responses:
        '200':
          $ref: '#/components/responses/SuppressionDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Suppressions
      summary: Update a suppression list by ID
      operationId: Suppressions_updateById
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        description: The suppression list to be updated.
        $ref: '#/components/requestBodies/UpdateSuppression'
      responses:
        '200':
          $ref: '#/components/responses/SuppressionDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 409
                    code: 1008
                    codeDescription: >-
                      There is another resource with the same value of unique
                      property
                    message: Property value is already taken
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1008
                    context: []
                    uuid: b89a0d53-67f6-4269-b207-223b42b6bfbd
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - Suppressions
      summary: Deletes a given suppression list by ID
      operationId: Suppressions_deleteById
      security:
        - api-key: []
        - oauth2:
            - all
      responses:
        '204':
          description: Suppression list deleted successfully.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /shops/{shopId}/orders:
    parameters:
      - $ref: '#/components/parameters/shopId'
    get:
      tags:
        - Orders
      summary: Get the list of orders
      operationId: Orders_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-

        Sending a  **GET** request to this URL returns a collection of order
        resources that belong to the given shop.


        You can narrow down the list of resources by passing proper query
        parameters (the list of which you can find below in the request params
        section). You can basically search by:
         * description
         * status
         * externalId
         * processedAt

        The `description` fields can be a pattern and we'll try to match this
        phrase.

         You can filter the resource using criteria specified as `query[*]`. You can provide multiple criteria, to use AND logic. You can sort the resource using parameters specified as `sort[*]`. You can specify multiple fields to sort by.
      parameters:
        - description: Search order by description
          name: query[description]
          in: query
          required: false
          schema:
            type: string
        - description: Search order by status
          name: query[status]
          in: query
          required: false
          schema:
            type: string
        - description: Search order by external ID
          name: query[externalId]
          in: query
          required: false
          schema:
            type: string
        - description: Show orders processed from this date
          name: query[processedAt][from]
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Show orders processed to this date
          name: query[processedAt][to]
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Sort by date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/OrderList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Orders
      summary: Create order
      operationId: Orders_createNewOrder
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        Sending a **POST** request to this URL will create a new order resource.


        In order to create a new order, you need to send the order resource in
        the body of the request (remember that you need to serialize the body
        into a JSON string).

      parameters:
        - description: >-
            The additional flags parameter with the value `skipAutomation` will
            skip the triggering `Make a purchase` element in an automated
            workflow
          name: additionalFlags
          in: query
          required: false
          schema:
            type: string
          example: skipAutomation
          x-set:
            - skipAutomation
      requestBody:
        $ref: '#/components/requestBodies/NewOrder'
      responses:
        '201':
          $ref: '#/components/responses/OrderDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /shops/{shopId}/orders/{orderId}:
    parameters:
      - $ref: '#/components/parameters/shopId'
      - $ref: '#/components/parameters/orderId'
    get:
      tags:
        - Orders
      summary: Get a single order by ID
      operationId: Orders_getById
      security:
        - api-key: []
        - oauth2:
            - all
      description: |+

        This method returns the order according to the given `orderId`.

      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/OrderDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Orders
      summary: Update order
      operationId: Orders_updateOrder
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        Update the properties of a shop's order. You should send only those
        fields that need to be changed. The rest of the properties will stay the
        same.

        However, in case of `billingAddress` and `shippingAddress`, you must
        send the entire representation. Individual fields can't be updated.

        If you want to update individual fields of an address, you can do so
        using `POST /v3/addresses/{addressId}`.


        In case of `selectedVariants`, when the collection is updated, the old
        collection is completely removed. The same goes for meta fields.

        Individual fields can't be updated either. The full representations of
        `selectedVariants` and `metaFields` must be sent instead.

      parameters:
        - description: >-
            The additional flags parameter with the value `skipAutomation` will
            skip the triggering `Make a purchase` element in an automated
            workflow
          name: additionalFlags
          in: query
          required: false
          schema:
            type: string
          example: skipAutomation
          x-set:
            - skipAutomation
      requestBody:
        $ref: '#/components/requestBodies/UpdateOrder'
      responses:
        '200':
          $ref: '#/components/responses/OrderDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - Orders
      summary: Delete order
      operationId: Orders_deleteOrder
      security:
        - api-key: []
        - oauth2:
            - all
      description: ''
      responses:
        '204':
          description: Delete order
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /shops/{shopId}/products:
    parameters:
      - $ref: '#/components/parameters/shopId'
    get:
      tags:
        - Products
      summary: Get a product list.
      operationId: Products_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-

        Sending a **GET** request to this URL returns a collection of product
        resources that belong to the given shop.


        You can narrow down the list of resources by passing proper query
        parameters (the list of which you can find below in the request params
        section). You can basically search by:
         * name
         * vendor
         * category
         * categoryId
         * externalId
         * variantName
         * metaFieldNames
         * metaFieldValues
         * createdOn

        The `metaFieldNames` and `metaFieldValues` fields can be a list of
        values separated by a comma [,].
         You can filter the resource using criteria specified as `query[*]`. You can provide multiple criteria, to use AND logic. You can sort the resource using parameters specified as `sort[*]`. You can specify multiple fields to sort by.
      parameters:
        - description: Search products by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search products by vendor
          name: query[vendor]
          in: query
          required: false
          schema:
            type: string
        - description: Search products by category name
          name: query[category]
          in: query
          required: false
          schema:
            type: string
        - description: Search products by category ID
          name: query[categoryId]
          in: query
          required: false
          schema:
            type: string
        - description: Search products by external ID
          name: query[externalId]
          in: query
          required: false
          schema:
            type: string
        - description: Search products by product variant name
          name: query[variantName]
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Search products by meta field name (the list of names must be
            separated by a comma [,])
          name: query[metaFieldNames]
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Search products by meta field value (the list of values must be
            separated by a comma [,])
          name: query[metaFieldValues]
          in: query
          required: false
          schema:
            type: string
        - description: Search products created from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search products created to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Sort by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/ProductList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Products
      summary: Create product
      operationId: Products_createProduct
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        Sending a **POST** request to this URL will create a new product
        resource.


        In order to create a new product, you need to send the product resource
        in the body of the request (remember that you need to serialize the body
        into a JSON string)


        You don't need a separate endpoint for each element (e.g. variant,
        category, meta-field). You can create them all with this method.


        Please note that categories aren't required, but if a product has at
        least one category, then one of those categories must be marked as
        default.

        This can be set by field `isDefault`. If  none of the elements contains
        isDefault=true, then the system picks the first one from the collection
        by default.

      requestBody:
        $ref: '#/components/requestBodies/NewProduct'
      responses:
        '201':
          $ref: '#/components/responses/ProductDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /shops/{shopId}/products/{productId}:
    parameters:
      - $ref: '#/components/parameters/shopId'
      - $ref: '#/components/parameters/productId'
    get:
      tags:
        - Products
      summary: Get a single product by ID
      operationId: Products_getByShopIdAndProductId
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        This method returns product according to the given `productId` in the
        context of a given `shopId`.

      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/ProductDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Products
      summary: Update product
      operationId: Products_updateProduct
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        Update the properties of a shop's product. You should only send those
        fields that need to be changed. The remaining properties will stay the
        same.

        However, when updating variants, categories, and meta fields, you need
        to send entire collections. Individual fields can't be updated.

        If you want to update particular fields, you can do so using their
        specific endpoints, i.e.:

         * categories - `POST /v3/shops/{shopId}/categories/{categoryId}`
         * variants - POST `/v3/shops/{shopId}/products/{productId}/variants/{variantId}`
         * metaFields - `POST /v3/shops/{shopId}/meta-fields/{metaFieldId}`


      requestBody:
        $ref: '#/components/requestBodies/UpdateProduct'
      responses:
        '200':
          $ref: '#/components/responses/ProductDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - Products
      summary: Delete product
      operationId: Products_deleteProduct
      security:
        - api-key: []
        - oauth2:
            - all
      description: ''
      responses:
        '204':
          description: Delete product
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /shops/{shopId}/products/{productId}/categories:
    parameters:
      - $ref: '#/components/parameters/shopId'
      - $ref: '#/components/parameters/productId'
    post:
      tags:
        - Products
      summary: Upsert product categories
      operationId: Products_upsertCategories
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        This method makes it possible to assign product categories, and to set a
        default product category. This method doesn't remove or unassign product
        categories. It returns a list of product categories.


        Please note that if you assign only one category to a given product,
        that category is marked as default. If you try to remove the default
        mark, your change won't be executed.

      requestBody:
        $ref: '#/components/requestBodies/UpsertProductCategory'
      responses:
        '200':
          $ref: '#/components/responses/SimpleProductCategoryList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-type: upsert
  /shops/{shopId}/products/{productId}/meta-fields:
    parameters:
      - $ref: '#/components/parameters/shopId'
      - $ref: '#/components/parameters/productId'
    post:
      tags:
        - Products
      summary: Upsert product meta fields
      operationId: Products_upsertMetaFields
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        This method makes it possible to assign meta fields. It doesn't remove
        or unassign meta fields. It returns a list of product meta fields.

      requestBody:
        $ref: '#/components/requestBodies/UpsertMetaField'
      responses:
        '200':
          $ref: '#/components/responses/MetaFieldList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-type: upsert
  /shops/{shopId}:
    parameters:
      - $ref: '#/components/parameters/shopId'
    get:
      tags:
        - Shops
      summary: Get a single shop by ID
      operationId: Shops_getById
      security:
        - api-key: []
        - oauth2:
            - all
      description: |+

        This method returns the shop according to the given `shopId`

      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/ShopDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Shops
      summary: Update shop
      operationId: Shops_updatePreferences
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        This makes it possible to update shop preferences. You should send only
        those fields that need to be changed. The rest of the properties remain
        the same.

      requestBody:
        $ref: '#/components/requestBodies/UpdateShop'
      responses:
        '200':
          $ref: '#/components/responses/ShopDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - Shops
      summary: Delete shop
      operationId: Shops_deleteShop
      security:
        - api-key: []
        - oauth2:
            - all
      description: |+

        This method deletes a shop.

      responses:
        '204':
          description: Delete a shop
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /popups/{popupId}:
    parameters:
      - $ref: '#/components/parameters/popupId'
    get:
      tags:
        - Forms and Popups
      summary: Get a single form or popup by ID
      operationId: FormsAndPopups_getFormOrPopupById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/PopupDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /statistics/popups/{popupId}/performance:
    parameters:
      - $ref: '#/components/parameters/popupId'
    get:
      tags:
        - Form and Popup
      summary: Get statistics for a single form or popup
      operationId: FormAndPopup_getPerformanceStatsSinglePopup
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - description: Get statistics for a single form or popup from this date
          name: query[date][from]
          in: query
          required: false
          schema:
            type: string
            format: date
            example: '2023-01-10'
        - description: Get statistics for a single form or popup to this date
          name: query[date][to]
          in: query
          required: false
          schema:
            type: string
            format: date
            example: '2023-01-20'
        - description: Form or popup statistics by location
          name: query[location]
          in: query
          required: false
          schema:
            type: string
        - description: Form or popup statistics by device
          name: query[device]
          in: query
          required: false
          schema:
            type: string
            enum:
              - desktop
              - mobile
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/PopupGeneralPerformance'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /splittests/{splittestId}:
    parameters:
      - $ref: '#/components/parameters/splittestId'
    get:
      tags:
        - A/B tests
      summary: Get a single A/B test.
      operationId: AbTests_getSingleAbTestById
      security:
        - api-key: []
        - oauth2:
            - all
      description: Get a single A/B test by ID.
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/Splittest'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /shops/{shopId}/carts:
    parameters:
      - $ref: '#/components/parameters/shopId'
    get:
      tags:
        - Carts
      summary: Get shop carts
      operationId: Carts_getShopCarts
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-

        Sending a **GET** request to this URL returns a collection of cart
        resources that belong to the given shop.


        You can narrow down the list of resources by passing proper query
        parameters (the list of which you can find below in the request params
        section). You can basically search by:

         * externalId
         * createdOn



         You can filter the resource using criteria specified as `query[*]`. You can provide multiple criteria, to use AND logic. You can sort the resource using parameters specified as `sort[*]`. You can specify multiple fields to sort by.
      parameters:
        - description: Search carts created from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search carts created to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search cart by external ID
          name: query[externalId]
          in: query
          required: false
          schema:
            type: string
        - description: Sort by date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/CartList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Carts
      summary: Create cart
      operationId: Carts_createNewCart
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        Sending a **POST** request to this URL will create a new cart resource.


        In order to create a new cart, you need to send the cart resource in the
        body of the request (remember that you need to serialize the body into a
        JSON string)

      requestBody:
        $ref: '#/components/requestBodies/NewCart'
      responses:
        '201':
          $ref: '#/components/responses/CartDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /shops/{shopId}/carts/{cartId}:
    parameters:
      - $ref: '#/components/parameters/shopId'
      - $ref: '#/components/parameters/cartId'
    get:
      tags:
        - Carts
      summary: Get cart by ID
      operationId: Carts_getByIdInShopContext
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        This method returns cart with the given `cartId` in the context of a
        given `shopId`

      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/CartDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Carts
      summary: Update cart
      operationId: Carts_updateCartProperties
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        Update properties of the shop cart. You should send only those fields
        that need to be changed. The rest of the properties will stay the same.


        In case of selectedVariants, when the collection is updated, the old one
        is completely removed.

      requestBody:
        $ref: '#/components/requestBodies/UpdateCart'
      responses:
        '200':
          $ref: '#/components/responses/CartDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - Carts
      summary: Delete cart
      operationId: Carts_deleteCart
      security:
        - api-key: []
        - oauth2:
            - all
      description: ''
      responses:
        '204':
          description: Delete cart
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /file-library/files/{fileId}:
    parameters:
      - $ref: '#/components/parameters/fileId'
    get:
      tags:
        - File Library
      summary: Get file by ID
      operationId: FileLibrary_getFileById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/File'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - File Library
      summary: Delete file by file ID
      operationId: FileLibrary_deleteFileById
      security:
        - api-key: []
        - oauth2:
            - all
      responses:
        '204':
          description: Delete file
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /file-library/folders/{folderId}:
    parameters:
      - $ref: '#/components/parameters/folderId'
    delete:
      tags:
        - File Library
      summary: Delete folder by folder ID
      operationId: FileLibrary_deleteFolderById
      security:
        - api-key: []
        - oauth2:
            - all
      responses:
        '204':
          description: Delete folder
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /ab-tests/subject/{abTestId}:
    parameters:
      - $ref: '#/components/parameters/abTestId'
    get:
      tags:
        - A/B tests - subject
      summary: Get a single A/B test by ID
      operationId: AbTestsSubject_getSingleById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/AbtestsSubjectGetDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /ab-tests/subject/{abTestId}/winner:
    parameters:
      - $ref: '#/components/parameters/abTestId'
    post:
      tags:
        - A/B tests - subject
      summary: Choose A/B test winner
      operationId: AbTestsSubject_chooseWinner
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/ChooseWinnerAbtestsSubject'
      responses:
        '204':
          description: Choose A/B test winner
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /click-tracks/{clickTrackId}:
    parameters:
      - $ref: '#/components/parameters/clickTrackId'
    get:
      tags:
        - Click Tracks
      summary: Get click tracked link details by click track ID
      operationId: ClickTracks_getLinkDetailsById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/ClickTrack'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /newsletters/{newsletterId}:
    parameters:
      - $ref: '#/components/parameters/newsletterId'
    get:
      tags:
        - Newsletters
      summary: Get a single newsletter by its ID.
      operationId: Newsletters_getSingleById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/NewsletterDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - Newsletters
      summary: Delete newsletter
      operationId: Newsletters_deleteNewsletter
      security:
        - api-key: []
        - oauth2:
            - all
      responses:
        '204':
          description: Delete newsletter.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /newsletters/{newsletterId}/activities:
    parameters:
      - $ref: '#/components/parameters/newsletterId'
    get:
      tags:
        - Newsletters
      summary: Get newsletter activities
      operationId: Newsletters_getActivities
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        By default, activities from the **last 14 days** are listed only. You
        can get activities for last 30 days only. You can filter the resource
        using criteria specified as `query[*]`. You can provide multiple
        criteria, to use AND logic. You can sort the resource using parameters
        specified as `sort[*]`. You can specify multiple fields to sort by.
      parameters:
        - description: Search newsletter activities by activity type
          name: query[activity]
          in: query
          required: false
          schema:
            type: string
            enum:
              - send
              - open
              - click
        - description: >-
            Search newsletter activities from this date. Default value is 14
            days earlier. You can get activities for last 30 days only.
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search newsletter activities to this date. Default value is now
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Sort by date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/NewsletterActivities'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /newsletters/{newsletterId}/cancel:
    parameters:
      - $ref: '#/components/parameters/newsletterId'
    post:
      tags:
        - Newsletters
      summary: Cancel sending the newsletter
      operationId: Newsletters_cancelSending
      security:
        - api-key: []
        - oauth2:
            - all
      description: >
        >

        Using this method, you can cancel the sending of the newsletter. It will
        also turn the newsletter into a **draft**.
      responses:
        '200':
          $ref: '#/components/responses/NewsletterDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: CancelNewsletter
      x-no-body: true
  /newsletters/{newsletterId}/thumbnail:
    parameters:
      - $ref: '#/components/parameters/newsletterId'
    get:
      tags:
        - Newsletters
      summary: Get newsletter thumbnail
      operationId: Newsletters_getThumbnail
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - description: The size of the thumbnail
          name: size
          in: query
          required: false
          schema:
            type: string
            default: default
            enum:
              - default
              - small
      responses:
        '200':
          description: The newsletter thumbnail.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
          content:
            image/*:
              schema:
                $ref: '#/components/schemas/NewslettersGetThumbnailResponse'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-type: get
      x-operation-class-name: GetNewsletterThumbnail
  /newsletters/{newsletterId}/statistics:
    parameters:
      - $ref: '#/components/parameters/newsletterId'
    get:
      tags:
        - Newsletters
      summary: The statistics of single newsletter
      operationId: Newsletters_getStatistics
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        >

        This makes it possible to easily fetch statistics for a single
        newsletter. You can group the data hourly, daily, monthly and as a

        total sum. Remember that all statistics date ranges are given in
        standard UTC period type objects.

        ([See ISO 8601
        standard](http://en.wikipedia.org/wiki/ISO_8601#Time_intervals)).
         You can filter the resource using criteria specified as `query[*]`. You can provide multiple criteria, to use AND logic. You can sort the resource using parameters specified as `sort[*]`. You can specify multiple fields to sort by.
      parameters:
        - description: Group results by time interval
          name: query[groupBy]
          in: query
          required: false
          schema:
            type: string
            enum:
              - total
              - hour
              - day
              - month
        - description: Count data from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Count data to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/SingleMessageStatisticsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: GetNewsletterStatistics
  /tags/{tagId}:
    parameters:
      - $ref: '#/components/parameters/tagId'
    get:
      tags:
        - Tags
      summary: Get tag by ID
      operationId: Tags_getById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - description: The tag ID
          name: tagId
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/TagDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Tags
      summary: Update tag by ID
      operationId: Tags_updateById
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/UpdateTag'
      responses:
        '200':
          $ref: '#/components/responses/TagDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - Tags
      summary: Delete tag by ID
      operationId: Tags_deleteById
      security:
        - api-key: []
        - oauth2:
            - all
      responses:
        '204':
          description: Tag deleted successfully.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /addresses/{addressId}:
    parameters:
      - $ref: '#/components/parameters/addressId'
    get:
      tags:
        - Addresses
      summary: Get an address by ID
      operationId: Addresses_getAddressById
      security:
        - api-key: []
        - oauth2:
            - all
      description: ''
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/AddressDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Addresses
      summary: Update address
      operationId: Addresses_updateAddress
      security:
        - api-key: []
        - oauth2:
            - all
      description: >

        Update an existing address. You should send only those fields that need
        to be changed. The rest of the properties will stay the same.
      requestBody:
        $ref: '#/components/requestBodies/UpdateAddress'
      responses:
        '200':
          $ref: '#/components/responses/AddressDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - Addresses
      summary: Delete address
      operationId: Addresses_deleteAddress
      security:
        - api-key: []
        - oauth2:
            - all
      description: ''
      responses:
        '204':
          description: Empty response
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /campaigns/{campaignId}/blocklists:
    parameters:
      - $ref: '#/components/parameters/campaignId'
    get:
      tags:
        - Campaigns (Lists)
      summary: Returns campaign blocklist masks
      operationId: CampaignsLists_getBlocklistMasks
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - description: Blocklist mask to search for
          name: query[mask]
          in: query
          required: false
          schema:
            type: string
            example: '@somedomain.com'
      responses:
        '200':
          $ref: '#/components/responses/CampaignBlocklist'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Campaigns (Lists)
      summary: Updates campaign blocklist masks
      operationId: CampaignsLists_updateBlocklistMasks
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - description: >-
            The flag value `add` adds the masks provided in the request body to
            your blocklist. The flag value `delete` deletes the masks. The masks
            are replaced if there are no flag values in the request body. 

             For better performance, use the flag value `noResponse`. It removes the response body and can be used alone or combined with other flags. If multiple flags are used,  separate them by a comma, like this: `additionalFlags=noResponse` or `additionalFlags=add,noResponse`.
          name: additionalFlags
          in: query
          required: false
          schema:
            type: string
            enum:
              - add
              - delete
              - noResponse
      requestBody:
        $ref: '#/components/requestBodies/UpdateCampaignBlocklist'
      responses:
        '200':
          $ref: '#/components/responses/CampaignBlocklist'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-type: update
  /custom-fields/{customFieldId}:
    parameters:
      - $ref: '#/components/parameters/customFieldId'
    get:
      tags:
        - Custom Fields
      summary: Get a single custom field definition by the custom field ID
      operationId: CustomFields_getDefinitionById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/CustomFieldDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Custom Fields
      summary: Update the custom field definition
      operationId: CustomFields_updateDefinition
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/UpdateCustomField'
      responses:
        '200':
          $ref: '#/components/responses/CustomFieldDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - Custom Fields
      summary: Delete a single custom field definition
      operationId: CustomFields_deleteSingleCustomField
      security:
        - api-key: []
        - oauth2:
            - all
      responses:
        '204':
          description: Delete a custom field.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /lps/{lpsId}:
    parameters:
      - $ref: '#/components/parameters/lpsId'
    get:
      tags:
        - Landing Pages
      summary: Get a single landing page by ID
      operationId: LandingPages_getById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/LpsDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /statistics/lps/{lpsId}/performance:
    parameters:
      - $ref: '#/components/parameters/lpsId'
    get:
      tags:
        - Landing Page
      summary: Get details for landing page statistics
      operationId: LandingPage_getPerformanceDetails
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - description: Show a single landing page statistics from this date
          name: query[date][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Show a single landing page statistics to this date
          name: query[date][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Landing page statistics by location
          name: query[location]
          in: query
          required: false
          schema:
            type: string
        - description: Landing page statistics by device
          name: query[device]
          in: query
          required: false
          schema:
            type: string
            enum:
              - desktop
              - mobile
        - description: Landing page statistics by page UUID
          name: query[page]
          in: query
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/LpsStats'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /shops/{shopId}/products/{productId}/variants:
    parameters:
      - $ref: '#/components/parameters/shopId'
      - $ref: '#/components/parameters/productId'
    get:
      tags:
        - Product Variants
      summary: Get a list of product variants
      operationId: ProductVariants_getProductVariantsList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        Sending a **GET** request to this URL returns a collection of product
        variant resources that belong to the given shop and product.


        You can narrow down the list of resources by passing proper query
        parameters (the list of which you can find below in the request params
        section). You can basically search by:

        * name

        * sku

        * description


        The `description` fields can be a pattern and we'll try to match this
        phrase.

      parameters:
        - description: Search variant by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search variant by SKU
          name: query[sku]
          in: query
          required: false
          schema:
            type: string
        - description: Search variant by description
          name: query[description]
          in: query
          required: false
          schema:
            type: string
        - description: Search variant by external ID
          name: query[externalId]
          in: query
          required: false
          schema:
            type: string
        - description: Show variants starting from this date
          name: query[createdAt][from]
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Show variants starting to this date
          name: query[createdAt][to]
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Sort by date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/ProductVariantList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Product Variants
      summary: Create product variant
      operationId: ProductVariants_createNewVariant
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        Sending a **POST** request to this URL will create a new product variant
        resource.


        In order to create a new product variant, you need to send a product
        variant resource in the body of the request (remember that you need to
        serialize the body into a JSON string)


        There is no need to create every element (like: image, meta field, tax)
        one by one by their own endpoints. All these elements can be created
        during this method.

      requestBody:
        $ref: '#/components/requestBodies/NewProductVariant'
      responses:
        '201':
          $ref: '#/components/responses/ProductVariantDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /shops/{shopId}/products/{productId}/variants/{variantId}:
    parameters:
      - $ref: '#/components/parameters/shopId'
      - $ref: '#/components/parameters/productId'
      - $ref: '#/components/parameters/variantId'
    get:
      tags:
        - Product Variants
      summary: Get a single product variant by ID
      operationId: ProductVariants_getById
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        This method returns product variant according to the given `variantId`
        in the context of a given `shopId` and `productId`

      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/ProductVariantDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Product Variants
      summary: Update product variant
      operationId: ProductVariants_updateVariantProperties
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        Update properties of a product variant. You should send only those
        fields that need to be changed. The remaining properties will stay the
        same. However, when updating metafields, images, and taxes, you need to
        send entire collections. Individual fields can't be updated. If you want
        to update particular metafields or tax resources, you can do so using
        their particular endpoints, i.e:

         * taxes - `POST /v3/shops/{shopId}/taxes/{taxId}`
         * metaFields - `POST /v3/shops/{shopId}/meta-fields/{metaFieldId}`

      requestBody:
        $ref: '#/components/requestBodies/UpdateProductVariant'
      responses:
        '200':
          $ref: '#/components/responses/ProductVariantDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - Product Variants
      summary: Delete product variant
      operationId: ProductVariants_deleteVariant
      security:
        - api-key: []
        - oauth2:
            - all
      description: ''
      responses:
        '204':
          description: Delete product variant
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /campaigns/{campaignId}:
    parameters:
      - $ref: '#/components/parameters/campaignId'
    get:
      tags:
        - Campaigns (Lists)
      summary: Get a single campaign by the campaign ID
      operationId: CampaignsLists_getSingleCampaign
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/Campaign'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Campaigns (Lists)
      summary: Update a campaign
      operationId: CampaignsLists_updateCampaign
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/UpdateCampaign'
      responses:
        '200':
          $ref: '#/components/responses/Campaign'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 409
                    code: 1008
                    codeDescription: >-
                      There is another resource with the same value of unique
                      property
                    message: Property value is already taken
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1008
                    context: []
                    uuid: b89a0d53-67f6-4269-b207-223b42b6bfbd
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /shops/{shopId}/meta-fields:
    parameters:
      - $ref: '#/components/parameters/shopId'
    get:
      tags:
        - Meta Fields
      summary: Get the shop meta fields
      operationId: MetaFields_getCollection
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-

        Sending a **GET** request to this URL returns a collection of meta field
        resources that belong to the given shop.


        You can narrow down the list of resources by passing proper query
        parameters (the list of which you can find below in the request params
        section). You can basically search by:

         * name
         * value
         * description
         * createdOn


         You can filter the resource using criteria specified as `query[*]`. You can provide multiple criteria, to use AND logic. You can sort the resource using parameters specified as `sort[*]`. You can specify multiple fields to sort by.
      parameters:
        - description: Search meta fields by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search meta fields by description
          name: query[description]
          in: query
          required: false
          schema:
            type: string
        - description: Search meta fields by value
          name: query[value]
          in: query
          required: false
          schema:
            type: string
        - description: Search meta fields created from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search meta fields created to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Sort by date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/MetaFieldList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Meta Fields
      summary: Create meta field
      operationId: MetaFields_createNewMetaField
      security:
        - api-key: []
        - oauth2:
            - all
      description: >

        Sending a **POST** request to this URL will create a new meta field
        resource.


        In order to create a new meta field, you need to send a meta field
        resource in the body of the request (remember that you need to serialize
        the body into a JSON string)
      requestBody:
        $ref: '#/components/requestBodies/NewMetaField'
      responses:
        '201':
          $ref: '#/components/responses/MetaFieldDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /shops/{shopId}/meta-fields/{metaFieldId}:
    parameters:
      - $ref: '#/components/parameters/shopId'
      - $ref: '#/components/parameters/metaFieldId'
    get:
      tags:
        - Meta Fields
      summary: Get the meta field by ID
      operationId: MetaFields_getById
      security:
        - api-key: []
        - oauth2:
            - all
      description: >

        This method returns meta field with a given `metaFieldId` in the context
        of a given `shopId`
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/MetaFieldDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Meta Fields
      summary: Update meta field
      operationId: MetaFields_updateProperties
      security:
        - api-key: []
        - oauth2:
            - all
      description: >

        Update the properties of a shop's meta field. You should send only those
        fields that need to be changed. The rest of the properties will stay the
        same.
      requestBody:
        $ref: '#/components/requestBodies/UpdateMetaField'
      responses:
        '200':
          $ref: '#/components/responses/MetaFieldDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - Meta Fields
      summary: Delete meta field
      operationId: MetaFields_delete
      security:
        - api-key: []
        - oauth2:
            - all
      description: ''
      responses:
        '204':
          description: Delete meta field
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /webforms/{webformId}:
    parameters:
      - $ref: '#/components/parameters/webformId'
    get:
      tags:
        - Legacy Forms
      summary: Get Legacy Form by ID.
      operationId: LegacyForms_getById
      security:
        - api-key: []
        - oauth2:
            - all
      description: Get Legacy Form by ID.
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/LegacyForm'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /gdpr-fields/{gdprFieldId}:
    parameters:
      - $ref: '#/components/parameters/gdprFieldId'
    get:
      tags:
        - GDPR Fields
      summary: Get GDPR Field details
      operationId: GdprFields_getDetails
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/GDPRFieldDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /workflow/{workflowId}:
    parameters:
      - $ref: '#/components/parameters/workflowId'
    get:
      tags:
        - Workflows
      summary: Get workflow by ID
      operationId: Workflows_getById
      security:
        - api-key: []
        - oauth2:
            - all
      description: Get a single workflow by ID.
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/Workflow'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Workflows
      summary: Update workflow
      operationId: Workflows_updateSingleWorkflow
      security:
        - api-key: []
        - oauth2:
            - all
      description: Update single workflow.
      requestBody:
        $ref: '#/components/requestBodies/UpdateWorkflow'
      responses:
        '200':
          $ref: '#/components/responses/Workflow'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /sms/{smsId}:
    parameters:
      - $ref: '#/components/parameters/smsId'
    get:
      tags:
        - SMS Messages
      summary: Get a single SMS message by its ID
      operationId: SmsMessages_getById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/SmsDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-labels:
        - content: GetResponse MAX
          class: primary
        - content: Add-on required
          class: warning
  /autoresponders/{autoresponderId}:
    parameters:
      - $ref: '#/components/parameters/autoresponderId'
    get:
      tags:
        - Autoresponders
      summary: Get a single autoresponder by its ID
      operationId: Autoresponders_getById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/AutoresponderDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Autoresponders
      summary: Update autoresponder
      operationId: Autoresponders_updateAutoresponder
      security:
        - api-key: []
        - oauth2:
            - all
      description: >
        >

        **The action-based autoresponder feature has been migrated over to
        marketing automation. Your existing autoresponders are

        now converted into workflows. You can no longer create and update
        action-based autoresponders using our API.**


        This method allows you to update an autoresponder. The same rules as in
        creating an autoresponder apply.
      requestBody:
        $ref: '#/components/requestBodies/UpdateAutoresponder'
      responses:
        '200':
          $ref: '#/components/responses/AutoresponderDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 409
                    code: 1008
                    codeDescription: >-
                      There is another resource with the same value of unique
                      property
                    message: Property value is already taken
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1008
                    context: []
                    uuid: b89a0d53-67f6-4269-b207-223b42b6bfbd
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    delete:
      tags:
        - Autoresponders
      summary: Delete autoresponder.
      operationId: Autoresponders_deleteById
      security:
        - api-key: []
        - oauth2:
            - all
      responses:
        '204':
          description: Delete autoresponder
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /autoresponders/{autoresponderId}/thumbnail:
    parameters:
      - $ref: '#/components/parameters/autoresponderId'
    get:
      tags:
        - Autoresponders
      summary: Get the autoresponder thumbnail
      operationId: Autoresponders_getThumbnail
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - description: The size of the autoresponder thumbnail
          name: size
          in: query
          required: false
          schema:
            type: string
            default: default
            enum:
              - default
              - small
      responses:
        '200':
          description: The autoresponder thumbnail.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
          content:
            image/*:
              schema:
                $ref: '#/components/schemas/AutorespondersGetThumbnailResponse'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-type: get
      x-operation-class-name: GetAutoresponderThumbnail
  /autoresponders/{autoresponderId}/statistics:
    parameters:
      - $ref: '#/components/parameters/autoresponderId'
    get:
      tags:
        - Autoresponders
      summary: The statistics for a single autoresponder
      operationId: Autoresponders_getStatistics
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        >

        This requst returns the statistics summary for a single given
        autoresponder. As in all statistics, you can change the date and time
        range  (hourly daily monthly or total). Keep in mind

        that all statistics date ranges are given in standard UTC period type
        objects. ([See ISO 8601
        standard](http://en.wikipedia.org/wiki/ISO_8601#Time_intervals))


        (https://app.getresponse.com/statistics.html?t=followup#total).
         You can filter the resource using criteria specified as `query[*]`. You can provide multiple criteria, to use AND logic. You can sort the resource using parameters specified as `sort[*]`. You can specify multiple fields to sort by.
      parameters:
        - description: Group results by time interval
          name: query[groupBy]
          in: query
          required: false
          schema:
            type: string
            enum:
              - total
              - hour
              - day
              - month
        - description: Count data from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Count data to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/SingleMessageStatisticsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: GetAutoresponderStatistics
  /websites/{websiteId}:
    parameters:
      - $ref: '#/components/parameters/websiteId'
    get:
      tags:
        - Websites
      summary: Get a single Website by ID
      operationId: Websites_getById
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/WebsiteDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /statistics/wbe/{websiteId}/performance:
    parameters:
      - $ref: '#/components/parameters/websiteId'
    get:
      tags:
        - Website
      summary: Get details for website statistics
      operationId: Website_getPerformanceDetails
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - description: Show a single website statistics from this date
          name: query[date][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Show a single website statistics to this date
          name: query[date][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Website statistics by location
          name: query[location]
          in: query
          required: false
          schema:
            type: string
        - description: Website statistics by device
          name: query[device]
          in: query
          required: false
          schema:
            type: string
            enum:
              - desktop
              - mobile
        - description: Website statistics by a page UUID
          name: query[page]
          in: query
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/WebsiteStats'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /webinars:
    get:
      tags:
        - Webinars
      summary: Get a list of webinars
      operationId: Webinars_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search webinars by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: The list of campaign resource IDs (string separated with ',')
          name: query[campaignId]
          in: query
          required: false
          schema:
            type: string
        - description: Search webinars by status
          name: query[status]
          in: query
          required: false
          schema:
            type: string
            enum:
              - upcoming
              - finished
              - published
              - unpublished
        - description: Sort webinars by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort webinars by creation date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort webinars by update date
          name: sort[startsOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Search webinars by type
          name: query[type]
          in: query
          required: false
          schema:
            type: string
            enum:
              - all
              - live
              - on_demand
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/WebinarList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /contacts:
    get:
      tags:
        - Contacts
      summary: Get contact list
      operationId: Contacts_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search contacts by email
          name: query[email]
          in: query
          required: false
          schema:
            type: string
        - description: Search contacts by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search contacts by campaign ID
          name: query[campaignId]
          in: query
          required: false
          schema:
            type: string
        - description: Search contacts by origin
          name: query[origin]
          in: query
          required: false
          schema:
            type: string
            enum:
              - import
              - email
              - www
              - panel
              - leads
              - sale
              - api
              - forward
              - survey
              - iphone
              - copy
              - landing_page
              - webinar
              - website_builder_elegant
        - description: Count data from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Count data to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search contacts edited from this date
          name: query[changedOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search contacts edited to this date
          name: query[changedOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Sort by email
          name: sort[email]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by change date
          name: sort[changedOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by campaign ID
          name: sort[campaignId]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: >-
            The additional flags parameter with the value 'exactMatch' will
            search for contacts with the exact value of the email and name
            provided in the query string. Without this flag, matching is done
            via a standard 'like' comparison, which may sometimes be slow.
          name: additionalFlags
          in: query
          required: false
          schema:
            type: string
          x-set:
            - exactMatch
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/ContactList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Contacts
      summary: Create a new contact
      operationId: Contacts_createNewContact
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/NewContact'
      responses:
        '202':
          description: >-
            >

            If the request is successful, the API returns the HTTP code **202
            Accepted**.

            This means that the contact has been preliminarily validated and
            added to the queue. 

            It may take a few minutes to process the queue and add the contact
            to the list. If your contact didn't appear on the list, there's a
            possibility that it was rejected at a later stage of processing. 


            ### Double opt-in


            Campaigns can be set to double opt-in.

            This means that the contact has to click a link in a confirmation
            message before they can be added to your list.

            Unconfirmed contacts are not returned by the API and can only be
            found using Search Contacts.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 409
                    code: 1008
                    codeDescription: >-
                      There is another resource with the same value of unique
                      property
                    message: Property value is already taken
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1008
                    context: []
                    uuid: b89a0d53-67f6-4269-b207-223b42b6bfbd
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /contacts/batch:
    post:
      tags:
        - Contacts
      summary: Create multiple contacts at once
      operationId: Contacts_createBatchContacts
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        This endpoint lets you create multiple contacts in one request.


        **Note** 


        This endpoint is subject to special limits and throttling. You can make
        80 calls per time frame (10 minutes). The allowed batch size is 1000
        contacts. For more information, check our [API
        Docs](https://apidocs.getresponse.com/v3/case-study/adding-batch-contacts).
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactsCreateBatchContactsRequest'
      responses:
        '202':
          description: >-
            >

            If the request is successful, the API returns the HTTP code **202
            Accepted**.

            This means that the contacts has been preliminarily validated and
            added to the queue. 

            It may take a few minutes to process the queue and add the contacts
            to the list. If your contact doesn't appear on the list, they were
            likely rejected during the late processing stages. 


            ### Double opt-in


            Campaigns (lists) can be set to use double opt-in.

            This means that a contact has to click a link in a confirmation
            message before they can be added to your list.

            Unconfirmed contacts are not returned by API and can only be found
            using Search Contacts.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 409
                    code: 1008
                    codeDescription: >-
                      There is another resource with the same value of unique
                      property
                    message: Property value is already taken
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1008
                    context: []
                    uuid: b89a0d53-67f6-4269-b207-223b42b6bfbd
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /search-contacts:
    get:
      tags:
        - Search Contacts
      summary: Get a saved search contact list
      operationId: SearchContacts_savedList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        Makes it possible to retrieve a collection of short representations of
        search-contact (known as custom filters in the panel). Every item
        represents a basic filter object. You can filter the resource using
        criteria specified as `query[*]`. You can provide multiple criteria, to
        use AND logic. You can sort the resource using parameters specified as
        `sort[*]`. You can specify multiple fields to sort by.
      parameters:
        - description: Sort by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
          example: desc
        - description: Sort by creation date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
          example: asc
        - description: Search by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Count data from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Count data to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/BaseSearchContactsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Search Contacts
      summary: Create search contacts
      operationId: SearchContacts_createNewSearch
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        Makes it possible to create a new search-contact. Please refer to
        [Segments (search contacts) reference
        manual](https://apidocs.getresponse.com/v3/case-study/segments-manual)
      requestBody:
        $ref: '#/components/requestBodies/NewSearchContacts'
      responses:
        '201':
          $ref: '#/components/responses/SearchContactsDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 409
                    code: 1008
                    codeDescription: >-
                      There is another resource with the same value of unique
                      property
                    message: Property value is already taken
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1008
                    context: []
                    uuid: b89a0d53-67f6-4269-b207-223b42b6bfbd
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /search-contacts/contacts:
    post:
      tags:
        - Search Contacts
      summary: Search contacts using conditions
      operationId: SearchContacts_usingConditions
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        Makes it possible to get a collection of contacts according to a given
        condition.  Please refer to [Segments (search contacts) reference
        manual](https://apidocs.getresponse.com/v3/case-study/segments-manual)
      parameters:
        - description: Sort by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
          example: desc
        - description: Sort by email
          name: sort[email]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
          example: desc
        - description: Sort by creation date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
          example: asc
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      requestBody:
        $ref: '#/components/requestBodies/SearchContactsConditionsDetails'
      responses:
        '200':
          $ref: '#/components/responses/SearchedContactsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: GetContactsBySearchContactsConditions
  /transactional-emails/templates:
    get:
      tags:
        - Transactional Emails Templates
      summary: Get the list of transactional email templates
      operationId: TransactionalEmailsTemplates_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search templates by subject
          name: query[subject]
          in: query
          required: false
          schema:
            type: string
        - description: Sort by creation date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by template subject
          name: sort[subject]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/TransactionalEmailsTemplateList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-labels:
        - content: GetResponse MAX
          class: primary
        - content: Add-on required
          class: warning
    post:
      tags:
        - Transactional Emails Templates
      summary: Create transactional email template
      operationId: TransactionalEmailsTemplates_createNewTemplate
      security:
        - api-key: []
        - oauth2:
            - all
      description: This method creates a new transactional email template
      requestBody:
        $ref: '#/components/requestBodies/CreateTransactionalEmailTemplate'
      responses:
        '201':
          $ref: '#/components/responses/TransactionalEmailsTemplateDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-labels:
        - content: GetResponse MAX
          class: primary
        - content: Add-on required
          class: warning
  /transactional-emails:
    get:
      tags:
        - Transactional Emails
      summary: Get the list of transactional emails
      operationId: TransactionalEmails_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search transactional emails sent from this date
          name: query[sentOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search transactional emails sent to this date
          name: query[sentOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search tagged/untagged transactional emails
          name: query[tagged]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/StringBooleanEnum'
        - description: Search transactional emails with a specific tag ID
          name: query[tagId]
          in: query
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/TransactionalEmailList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-labels:
        - content: GetResponse MAX
          class: primary
        - content: Add-on required
          class: warning
    post:
      tags:
        - Transactional Emails
      summary: Send transactional email
      operationId: TransactionalEmails_sendEmail
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/CreateTransactionalEmail'
      responses:
        '201':
          $ref: '#/components/responses/TransactionalEmail'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-labels:
        - content: GetResponse MAX
          class: primary
        - content: Add-on required
          class: warning
  /transactional-emails/statistics:
    get:
      tags:
        - Transactional Emails
      summary: Get the overall statistics of transactional emails
      operationId: TransactionalEmails_getOverallStatistics
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - description: Group results by time interval
          name: query[groupBy]
          in: query
          required: true
          schema:
            type: string
            enum:
              - total
              - day
        - description: Count data from this date
          name: query[timeFrame][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Count data to this date
          name: query[timeFrame][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search tagged/untagged transactional emails
          name: query[tagged]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/StringBooleanEnum'
        - description: Search transactional emails with a specific tag ID
          name: query[tagId]
          in: query
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/TransactionalEmailStatistics'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-labels:
        - content: GetResponse MAX
          class: primary
        - content: Add-on required
          class: warning
  /from-fields:
    get:
      tags:
        - From Fields
      summary: Get the list of 'From' addresses
      operationId: FromFields_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search 'From' address by email
          name: query[email]
          in: query
          required: false
          schema:
            type: string
        - description: Search 'From' address by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Search only default 'From' address
          name: query[isDefault]
          in: query
          required: false
          schema:
            type: boolean
            example: true
        - description: Search only active 'From' addresses
          name: query[isActive]
          in: query
          required: false
          schema:
            type: boolean
            example: true
        - description: Sort 'From' address by date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/FromFieldList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - From Fields
      summary: Create 'From' address
      operationId: FromFields_createNewAddress
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/NewFromField'
      responses:
        '201':
          $ref: '#/components/responses/FromFieldDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 409
                    code: 1008
                    codeDescription: >-
                      There is another resource with the same value of unique
                      property
                    message: Property value is already taken
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1008
                    context: []
                    uuid: b89a0d53-67f6-4269-b207-223b42b6bfbd
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /rss-newsletters:
    get:
      tags:
        - RSS Newsletters
      summary: Get the list of RSS newsletters
      operationId: RssNewsletters_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search RSS newsletters by subject
          name: query[subject]
          in: query
          required: false
          schema:
            type: string
        - description: Search RSS newsletters by status
          name: query[status]
          in: query
          required: false
          schema:
            type: string
            enum:
              - enabled
              - disabled
        - description: Search RSS newsletters created from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search RSS newsletters created to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search RSS newsletters by campaign ID
          name: query[campaignId]
          in: query
          required: false
          schema:
            type: string
        - description: Sort by date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/RssNewsletterList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - RSS Newsletters
      summary: Create RSS newsletter
      operationId: RssNewsletters_createNewsletter
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/NewRssNewsletter'
      responses:
        '201':
          $ref: '#/components/responses/RssNewsletterDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /rss-newsletters/statistics:
    get:
      tags:
        - RSS Newsletters
      summary: The statistics for all RSS newsletters
      operationId: RssNewsletters_getStatistics
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Group results by time interval
          name: query[groupBy]
          in: query
          required: false
          schema:
            type: string
            enum:
              - total
              - hour
              - day
              - month
        - description: The list of RSS newsletter resource IDs (string separated with ',')
          name: query[rssNewsletterId]
          in: query
          required: false
          schema:
            type: string
        - description: The list of campaign resource IDs (string separated with ',')
          name: query[campaignId]
          in: query
          required: false
          schema:
            type: string
        - description: Count data from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Count data to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/MessageStatisticsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: GetRssNewslettersStatistics
  /custom-events:
    get:
      tags:
        - Custom Events
      summary: Get a list of custom events
      operationId: CustomEvents_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search custom events by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search custom events with or without attributes
          name: query[hasAttributes]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/StringBooleanEnum'
        - description: Sort by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/CustomEventsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Custom Events
      summary: Create custom event
      operationId: CustomEvents_createEvent
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/NewCustomEvent'
      responses:
        '201':
          $ref: '#/components/responses/CustomEventDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /custom-events/trigger:
    post:
      tags:
        - Custom Events
      summary: Trigger a custom event
      operationId: CustomEvents_triggerEvent
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/TriggerCustomEvent'
      responses:
        '201':
          description: Empty response
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: TriggerCustomEvent
  /forms:
    get:
      tags:
        - Forms
      summary: Get the list of forms.
      operationId: Forms_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search forms by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search forms created from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search forms created to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: >-
            Search forms assigned to this list (campaign). You can pass multiple
            comma-separated values, eg. `Xd1P,sC7r`
          name: query[campaignId]
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Search by status. **Note:** `disabled` includes both `unpublished`
            and `draft` and `enabled` equals `published`
          name: query[status]
          in: query
          required: false
          schema:
            type: string
            enum:
              - enabled
              - disabled
              - published
              - unpublished
              - draft
        - name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: sort[visitors]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: sort[uniqueVisitors]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: sort[subscribed]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - name: sort[subscriptionRate]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/FormList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /landing-pages:
    get:
      tags:
        - Legacy Landing Pages
      summary: Get a list of landing pages
      operationId: LegacyLandingPages_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search landing pages by domain
          name: query[domain]
          in: query
          required: false
          schema:
            type: string
        - description: Search landing pages by status
          name: query[status]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/StatusEnum'
        - description: Search landing pages by subdomain
          name: query[subdomain]
          in: query
          required: false
          schema:
            type: string
        - description: Search landing pages by metaTitle field
          name: query[metaTitle]
          in: query
          required: false
          schema:
            type: string
        - description: Search landing pages by user provided domain
          name: query[userDomain]
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Search landing pages by ID of the assigned campaign. Campaign ID
            must be encoded! You can get the campaign list with encoded IDs by
            calling the `/v3/campaigns` endpoint. You can search by multiple
            comma separated values eg. `o5lx,34er`.
          name: query[campaignId]
          in: query
          required: false
          schema:
            type: string
        - description: Show landing pages created from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Show landing pages created to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Sort by date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by domain
          name: sort[domain]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by campaign
          name: sort[campaignId]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by metaTitle
          name: sort[metaTitle]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/LandingPageList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /imports:
    get:
      tags:
        - Imports
      summary: Get a list of imports.
      operationId: Imports_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search imports by campaignId
          name: query[campaignId]
          in: query
          required: false
          schema:
            type: string
        - description: Search imports created from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search imports created to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Sort imports by creation date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort imports by finish date
          name: sort[finishedOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort imports by campaign name
          name: sort[campaignName]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort imports by uploaded contact count
          name: sort[uploadedContacts]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort imports by updated contact count
          name: sort[updatedContacts]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort imports by inserted contact count
          name: sort[addedContacts]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort imports by invalid contact count
          name: sort[invalidContacts]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: >-
            Sort imports by status (uploaded, to_review, approved, finished,
            rejected, canceled)
          name: sort[status]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/ImportList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Imports
      summary: Schedule a new contact import
      operationId: Imports_scheduleNewContactImport
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        This endpoint lets you schedule a contact import. That way, you can add
        and update your contacts using a single API call. Since API imports are
        asynchronous, you should check periodically for updates while your
        original API request is being processed. To keep track of your import
        status, use [GET
        import](https://apireference.getresponse.com/#operation/getImportById)
        (provide the importId  from the response), or subscribe to an [import
        finished](https://apidocs.getresponse.com/v3/payloads#contacts-import-finished)
        webhook. For more information on imports, check our [API
        Docs](https://apidocs.getresponse.com/v3/case-study/create-import) or
        [Help
        Center](https://www.getresponse.com/help/how-do-i-prepare-a-file-for-import.html)
      requestBody:
        $ref: '#/components/requestBodies/NewImport'
      responses:
        '201':
          $ref: '#/components/responses/ImportDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 409
                    code: 1008
                    codeDescription: >-
                      There is another resource with the same value of unique
                      property
                    message: Property value is already taken
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1008
                    context: []
                    uuid: b89a0d53-67f6-4269-b207-223b42b6bfbd
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /statistics/ecommerce/revenue:
    get:
      tags:
        - Ecommerce
      summary: Get the ecommerce revenue statistics
      operationId: Ecommerce_getRevenueStatistics
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - description: Show statistics for orders from this date
          name: query[orderDate][from]
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Show statistics for orders to this date
          name: query[orderDate][to]
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: >-
            Search statistics by shop ID. You can get the shop ID by calling the
            `/v3/shops` endpoint. You can search for multiple shops using
            comma-separated values, for example, `pgIH, CNXF`
          name: query[shopId]
          in: query
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/RevenueStats'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /statistics/ecommerce/performance:
    get:
      tags:
        - Ecommerce
      summary: Get the ecommerce general performance statistics
      operationId: Ecommerce_getPerformanceStatistics
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - description: Show statistics for orders from this date
          name: query[orderDate][from]
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: Show statistics for orders to this date
          name: query[orderDate][to]
          in: query
          required: false
          schema:
            type: string
            format: date
        - description: >-
            Search statistics by shop ID. You can get the shop ID by calling the
            `/v3/shops` endpoint. You can search for multiple shops using
            comma-separated values, for example, `pgIH, CNXF`
          name: query[shopId]
          in: query
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/GeneralPerformanceStats'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /predefined-fields:
    get:
      tags:
        - Predefined Fields
      summary: Get the predefined fields list
      operationId: PredefinedFields_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Sort by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
          example: DESC
        - description: Search by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search by campaign ID
          name: query[campaignId]
          in: query
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/PredefinedFieldsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Predefined Fields
      summary: Create a predefined field
      operationId: PredefinedFields_createField
      security:
        - api-key: []
        - oauth2:
            - all
      description: Makes it possible to create a new predefined field.
      requestBody:
        $ref: '#/components/requestBodies/NewPredefinedField'
      responses:
        '201':
          $ref: '#/components/responses/PredefinedFieldDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 409
                    code: 1008
                    codeDescription: >-
                      There is another resource with the same value of unique
                      property
                    message: Property value is already taken
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1008
                    context: []
                    uuid: b89a0d53-67f6-4269-b207-223b42b6bfbd
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /suppressions:
    get:
      tags:
        - Suppressions
      summary: Get suppression lists
      operationId: Suppressions_getSuppressionLists
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - description: Search suppressions by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search suppressions created from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search suppressions created to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Sort by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by the createdOn date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/SuppressionsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Suppressions
      summary: Creates a new suppression list
      operationId: Suppressions_createNewSuppressionList
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        description: The suppression list to be added.
        $ref: '#/components/requestBodies/NewSuppression'
      responses:
        '201':
          $ref: '#/components/responses/SuppressionDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 409
                    code: 1008
                    codeDescription: >-
                      There is another resource with the same value of unique
                      property
                    message: Property value is already taken
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1008
                    context: []
                    uuid: b89a0d53-67f6-4269-b207-223b42b6bfbd
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /subscription-confirmations/body/{languageCode}:
    get:
      tags:
        - Subscription Confirmations
      summary: Get collection of SUBSCRIPTION CONFIRMATIONS bodies
      operationId: SubscriptionConfirmations_getCollectionOfBodies
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        Sending **GET** request to this url, returns collection of
        **SUBSCRIPTION CONFIRMATIONS** bodies.


        Language code used in url must be in ISO 639-1 Language Code Standard.

      parameters:
        - $ref: '#/components/parameters/languageCode'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/SubscriptionConfirmationBodyList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /subscription-confirmations/subject/{languageCode}:
    get:
      tags:
        - Subscription Confirmations
      summary: Get collection of SUBSCRIPTION CONFIRMATIONS subjects
      operationId: SubscriptionConfirmations_getSubjectCollection
      security:
        - api-key: []
        - oauth2:
            - all
      description: >+

        Sending **GET** request to this url, returns collection of
        **SUBSCRIPTION CONFIRMATIONS** subjects.


        Language code used in url must be in ISO 639-1 Language Code Standard.

      parameters:
        - $ref: '#/components/parameters/languageCode'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/SubscriptionConfirmationSubjectList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /shops:
    get:
      tags:
        - Shops
      summary: Get a list of shops
      operationId: Shops_getListOfShops
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-

        Sending a **GET** request to this URL returns a collection of shop
        resources.


        You can narrow down the list of resources by passing proper query
        parameters (the list of which you can find below in the request params
        section). You can basically search by:

         * name

        The `name` fields can be a pattern and we'll try to match this phrase.


         You can filter the resource using criteria specified as `query[*]`. You can provide multiple criteria, to use AND logic. You can sort the resource using parameters specified as `sort[*]`. You can specify multiple fields to sort by.
      parameters:
        - description: Search shop by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Sort by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/ShopList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Shops
      summary: Create shop
      operationId: Shops_createNewShop
      security:
        - api-key: []
        - oauth2:
            - all
      description: |+

        This method makes it possible to create a new shop.

      requestBody:
        $ref: '#/components/requestBodies/NewShop'
      responses:
        '201':
          $ref: '#/components/responses/ShopDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /popups:
    get:
      tags:
        - Forms and Popups
      summary: Get the list of forms and popups
      operationId: FormsAndPopups_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search forms and popups by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search forms and popups by status
          name: query[status]
          in: query
          required: false
          schema:
            type: string
            enum:
              - published
              - unpublished
        - description: Show statistics from this date
          name: stats[from]
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Show statistics to this date
          name: stats[to]
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Sort forms and popups by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort forms and popups by status
          name: sort[status]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort forms and popups by creation date
          name: sort[createdAt]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort forms and popups by modification date
          name: sort[updatedAt]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by number of views
          name: sort[views]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by number of unique visitors
          name: sort[uniqueVisitors]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by number of leads
          name: sort[leads]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by CTR (click-through rate)
          name: sort[ctr]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/PopupsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /splittests:
    get:
      tags:
        - A/B tests
      summary: The list of A/B tests.
      operationId: AbTests_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        The list of A/B tests. You can filter the resource using criteria
        specified as `query[*]`. You can provide multiple criteria, to use AND
        logic. You can sort the resource using parameters specified as
        `sort[*]`. You can specify multiple fields to sort by.
      parameters:
        - description: Search A/B tests by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search A/B tests by type
          name: query[type]
          in: query
          required: false
          schema:
            type: string
        - description: Search A/B tests by status
          name: query[status]
          in: query
          required: false
          schema:
            type: string
            default: active
            enum:
              - active
              - inactive
        - description: Search A/B tests created from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search A/B tests created to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Sort by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by creation date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/SplittestList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /file-library/quota:
    get:
      tags:
        - File Library
      summary: Get storage space information
      operationId: FileLibrary_getStorageInfo
      security:
        - api-key: []
        - oauth2:
            - all
      responses:
        '200':
          $ref: '#/components/responses/Quota'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /file-library/files:
    get:
      tags:
        - File Library
      summary: Get the list of files
      operationId: FileLibrary_getFileList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        By default, you can only search files in the root directory. To search
        for files in all folders, use the parameter `query[allFolders]=true`. To
        search for files in a specified folder, use the parameter
        `query[folderId]=<folderId>`. **Note: these two parameters can't be used
        together**. You can filter the resource using criteria specified as
        `query[*]`. You can provide multiple criteria, to use AND logic. You can
        sort the resource using parameters specified as `sort[*]`. You can
        specify multiple fields to sort by.
      parameters:
        - description: >-
            Return files from all folders, including the root folder. **This
            parameter can't be used together with ** `query[folderId]`
          name: query[allFolders]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/StringBooleanEnum'
        - description: >-
            Search for files in a specific folder. **This parameter can't be
            used together with ** `query[allFolders]`
          name: query[folderId]
          in: query
          required: false
          schema:
            type: string
        - description: Search for files by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search for files by group
          name: query[group]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/FileGroup'
        - description: Sort by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort files by group
          name: sort[group]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort files by size
          name: sort[size]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/FileList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - File Library
      summary: Create a file
      operationId: FileLibrary_createNewFile
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/NewFile'
      responses:
        '201':
          $ref: '#/components/responses/File'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /file-library/folders:
    get:
      tags:
        - File Library
      summary: Get the list of folders
      operationId: FileLibrary_listFolders
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search folders by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Sort folders by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort folders by size
          name: sort[size]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort folders by creation date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/FoldersList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - File Library
      summary: Create a folder
      operationId: FileLibrary_createFolder
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/NewFolder'
      responses:
        '201':
          $ref: '#/components/responses/Folder'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 409
                    code: 1008
                    codeDescription: >-
                      There is another resource with the same value of unique
                      property
                    message: Property value is already taken
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1008
                    context: []
                    uuid: b89a0d53-67f6-4269-b207-223b42b6bfbd
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /ab-tests/subject:
    get:
      tags:
        - A/B tests - subject
      summary: The list of A/B tests
      operationId: AbTestsSubject_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search A/B tests by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search A/B tests by stage
          name: query[stage]
          in: query
          required: false
          schema:
            type: string
            enum:
              - preparing
              - testing
              - finished
              - sending-winner
              - cancelled
              - draft
              - completed
        - description: Search A/B tests by ID
          name: query[abTestId]
          in: query
          required: false
          schema:
            type: string
        - description: Search A/B tests by list ID
          name: query[campaignId]
          in: query
          required: false
          schema:
            type: string
        - description: Sort by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by stage
          name: sort[stage]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by send date
          name: sort[sendOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by total delivered
          name: sort[totalDelivered]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/AbtestsSubjectGetList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - A/B tests - subject
      summary: Create a new A/B test
      operationId: AbTestsSubject_createNewTest
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/NewAbtestsSubject'
      responses:
        '201':
          $ref: '#/components/responses/AbtestsSubjectGetDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /click-tracks:
    get:
      tags:
        - Click Tracks
      summary: Get click tracked links list
      operationId: ClickTracks_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search click tracks from messages created from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search click tracks from messages created to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Sort by message date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/ClickTrackList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /newsletters:
    get:
      tags:
        - Newsletters
      summary: Get the newsletter list
      operationId: Newsletters_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search newsletters by subject
          name: query[subject]
          in: query
          required: false
          schema:
            type: string
        - description: Search newsletters by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search newsletters by status
          name: query[status]
          in: query
          required: false
          schema:
            type: string
            enum:
              - enabled
              - disabled
        - description: Search newsletters created from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search newsletters created to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search for newsletters sent from this date
          name: query[sendOn][from]
          in: query
          required: false
          schema:
            type: string
            format: date
            example: '2023-01-20'
        - description: Search for newsletters sent to this date
          name: query[sendOn][to]
          in: query
          required: false
          schema:
            type: string
            format: date
            example: '2023-01-20'
        - description: Search newsletters by type
          name: query[type]
          in: query
          required: false
          schema:
            type: string
            enum:
              - draft
              - broadcast
              - splittest
              - automation
        - description: Search newsletters by campaign ID
          name: query[campaignId]
          in: query
          required: false
          schema:
            type: string
        - description: Sort by date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by send on date
          name: sort[sendOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/NewsletterList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Newsletters
      summary: Create newsletter
      operationId: Newsletters_enqueueNewsletter
      security:
        - api-key: []
        - oauth2:
            - all
      description: |
        >
        This method creates a new newsletter and puts it in a queue to send.

        **NOTE: This method has a limit of 256 calls per day.**
      requestBody:
        $ref: '#/components/requestBodies/NewNewsletter'
      responses:
        '201':
          $ref: '#/components/responses/NewsletterDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 404
                    code: 1013
                    codeDescription: The requested resource was not found
                    message: Resource not found
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1013
                    context:
                      contactId: pVyRW
                    uuid: 87b90a96-5ee5-4ca4-8180-ac00adcf62c7
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /newsletters/send-draft:
    post:
      tags:
        - Newsletters
      summary: Send the newsletter draft
      operationId: Newsletters_sendDraft
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/SendNewsletterDraft'
      responses:
        '201':
          $ref: '#/components/responses/NewsletterDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: SendNewsletterDraft
  /newsletters/statistics:
    get:
      tags:
        - Newsletters
      summary: Total newsletter statistics
      operationId: Newsletters_getStatisticsBasedOnList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        >This makes it possible to fetch newsletter statistics based on the list
        of campaign or newsletter IDs

        (you can pass them in the query parameter - see the description below).
        Remember that all the statistics date ranges

        are returned in standard UTC period type objects. ([See ISO 8601
        standard](http://en.wikipedia.org/wiki/ISO_8601#Time_intervals)). You
        can filter the resource using criteria specified as `query[*]`. You can
        provide multiple criteria, to use AND logic. You can sort the resource
        using parameters specified as `sort[*]`. You can specify multiple fields
        to sort by.
      parameters:
        - description: Group results by time interval
          name: query[groupBy]
          in: query
          required: false
          schema:
            type: string
            enum:
              - total
              - hour
              - day
              - month
        - description: The list of newsletter resource IDs (string separated with '')
          name: query[newsletterId]
          in: query
          required: false
          schema:
            type: string
        - description: The list of campaign resource IDs (string separated with '')
          name: query[campaignId]
          in: query
          required: false
          schema:
            type: string
        - description: Count data from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Count data to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/MessageStatisticsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /tags:
    get:
      tags:
        - Tags
      summary: Get the list of tags
      operationId: Tags_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search tags by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search tags created from this date
          name: query[createdAt][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search tags created to this date
          name: query[createdAt][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Sort tags by creation date
          name: sort[createdAt]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/TagList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Tags
      summary: Add a new tag
      operationId: Tags_addNewTag
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/NewTag'
      responses:
        '201':
          $ref: '#/components/responses/TagDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /addresses:
    get:
      tags:
        - Addresses
      summary: Get a list of addresses
      operationId: Addresses_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-

        Sending a **GET** request to this URL returns collection of address
        resources.


        You can narrow down the list of resources by passing proper query
        parameters (the list of which you can find below in the request params
        section). You can basically search by:

        * name

        * firstName

        * lastName

        * address1

        * address2

        * city

        * zip

        * province

        * provinceCode

        * phone

        * company

        * createdOn


        The `name` field can be a pattern and we'll try to match this phrase.


        You can specify which page of the results you want and how many results
        per page to display. You can also specify the sort-order using one or
        more of the allowed fields (listed below in the request params section).


        Last but not least, you can even specify which fields from a resource
        you want to get. If you pass the param `fields` with the list of fields
        (separated by a comma [,]) we'll return the list of resources with only
        those fields (we'll always add a resource ID to ensure that you can use
        that data later on)
         You can filter the resource using criteria specified as `query[*]`. You can provide multiple criteria, to use AND logic. You can sort the resource using parameters specified as `sort[*]`. You can specify multiple fields to sort by.
      parameters:
        - description: Search addresses by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search addresses by first name
          name: query[firstName]
          in: query
          required: false
          schema:
            type: string
        - description: Search addresses by last name
          name: query[lastName]
          in: query
          required: false
          schema:
            type: string
        - description: Search addresses by address1 field
          name: query[address1]
          in: query
          required: false
          schema:
            type: string
        - description: Search addresses by address2 field
          name: query[address2]
          in: query
          required: false
          schema:
            type: string
        - description: Search addresses by city
          name: query[city]
          in: query
          required: false
          schema:
            type: string
        - description: Search addresses by ZIP
          name: query[zip]
          in: query
          required: false
          schema:
            type: string
        - description: Search addresses by province
          name: query[province]
          in: query
          required: false
          schema:
            type: string
        - description: Search addresses by province code
          name: query[provinceCode]
          in: query
          required: false
          schema:
            type: string
        - description: Search addresses by phone
          name: query[phone]
          in: query
          required: false
          schema:
            type: string
        - description: Search addresses by company
          name: query[company]
          in: query
          required: false
          schema:
            type: string
        - description: Search addresses created from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Search addresses created to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Sort by date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/AddressList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Addresses
      summary: Create address
      operationId: Addresses_createNewAddress
      security:
        - api-key: []
        - oauth2:
            - all
      description: ''
      requestBody:
        $ref: '#/components/requestBodies/NewAddress'
      responses:
        '201':
          $ref: '#/components/responses/AddressDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /accounts/blocklists:
    get:
      tags:
        - Accounts
      summary: Returns account blocklist masks
      operationId: Accounts_getBlocklistMasks
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - description: Blocklist mask to search for
          name: query[mask]
          in: query
          required: false
          schema:
            type: string
            example: '@somedomain.com'
      responses:
        '200':
          $ref: '#/components/responses/AccountBlocklist'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Accounts
      summary: Update account blocklist
      operationId: Accounts_updateBlocklist
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - description: >-
            The flag value `add` adds the masks provided in the request body to
            your blocklist. The flag value `delete` deletes the masks. The masks
            are replaced if there are no flag values in the request body. 

             For better performance, use the flag value `noResponse`. It removes the response body and can be used alone or combined with other flags. If multiple flags are used, separate them by a comma, like this: `additionalFlags=noResponse` or `additionalFlags=add,noResponse`.
          name: additionalFlags
          in: query
          required: false
          schema:
            type: string
            enum:
              - add
              - delete
              - noResponse
      requestBody:
        $ref: '#/components/requestBodies/UpdateAccountBlocklist'
      responses:
        '200':
          $ref: '#/components/responses/AccountBlocklist'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-type: update
  /custom-fields:
    get:
      tags:
        - Custom Fields
      summary: Get a list of custom fields
      operationId: CustomFields_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search custom fields by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Sort by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/CustomFieldList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Custom Fields
      summary: Create a custom field
      operationId: CustomFields_createNewField
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/NewCustomField'
      responses:
        '201':
          $ref: '#/components/responses/CustomFieldDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /lps:
    get:
      tags:
        - Landing Pages
      summary: Get the list of landing pages
      operationId: LandingPages_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search landing pages by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search landing pages by status
          name: query[status]
          in: query
          required: false
          schema:
            type: string
            enum:
              - published
              - unpublished
        - description: Show statistics for landing pages from this date
          name: stats[from]
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Show statistics for landing pages to this date
          name: stats[to]
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Sort landing pages by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort landing pages by creation date
          name: sort[createdAt]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort landing pages by modification date
          name: sort[updatedAt]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by number of page visits
          name: sort[visits]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort landing pages by number of leads
          name: sort[leads]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by subscription rate
          name: sort[subscriptionRate]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/LpsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /multimedia:
    get:
      tags:
        - Multimedia
      summary: Get images list
      operationId: Multimedia_getImageList
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/ImageList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Multimedia
      summary: Upload image
      operationId: Multimedia_uploadImage
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/CreateMultimedia'
      responses:
        '200':
          $ref: '#/components/responses/ImageDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: CreateMultimedia
      x-type: upload
  /tracking:
    get:
      tags:
        - Tracking
      summary: Get Tracking JavaScript code snippets
      operationId: Tracking_javascriptCodeSnippets
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        With code snippets you will be able to track Purchases, Abandoned carts,
        and Visited URLs. Find more in our [Help
        Center](https://www.getresponse.com/help/marketing-automation/ecommerce-conditions/how-do-i-add-the-tracking-javascript-code-to-my-website.html).
      responses:
        '200':
          $ref: '#/components/responses/Tracking'
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /tracking/facebook-pixels:
    get:
      tags:
        - Tracking
      summary: Get the list of "Facebook Pixels"
      operationId: Tracking_getFacebookPixels
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        Returns the name and ID of "Facebook Pixels" assigned to a user's
        account.
      responses:
        '200':
          $ref: '#/components/responses/FacebookPixelList'
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /accounts:
    get:
      tags:
        - Accounts
      summary: Account information
      operationId: Accounts_getInformation
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/AccountDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Accounts
      summary: Update account
      operationId: Accounts_updateAccountDetails
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/UpdateAccount'
      responses:
        '200':
          $ref: '#/components/responses/AccountDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: UpdateAccount
  /accounts/billing:
    get:
      tags:
        - Accounts
      summary: Billing information
      operationId: Accounts_getBillingInformation
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/AccountBillingDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /accounts/login-history:
    get:
      tags:
        - Accounts
      summary: History of logins
      operationId: Accounts_getLoginHistory
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/AccountLoginHistoryList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /accounts/badge:
    get:
      tags:
        - Accounts
      summary: Current status of your GetResponse badge
      operationId: Accounts_getCurrentStatusOfBadge
      security:
        - api-key: []
        - oauth2:
            - all
      responses:
        '200':
          $ref: '#/components/responses/AccountBadgeDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Accounts
      summary: Turn on/off the GetResponse Badge
      operationId: Accounts_toggleBadgeStatus
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/UpdateAccountBadge'
      responses:
        '200':
          $ref: '#/components/responses/AccountBadgeDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-type: update
  /accounts/industries:
    get:
      tags:
        - Accounts
      summary: List of Industry Tags
      operationId: Accounts_listIndustryTags
      security:
        - api-key: []
        - oauth2:
            - all
      description: List of Industry Tags in account's language context.
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/IndustryList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /accounts/timezones:
    get:
      tags:
        - Accounts
      summary: List of timezones
      operationId: Accounts_getTimezonesList
      security:
        - api-key: []
        - oauth2:
            - all
      description: List of timezones in account's language context.
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/AccountTimezoneList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /accounts/callbacks:
    get:
      tags:
        - Accounts
      summary: Get callbacks configuration
      operationId: Accounts_getConfiguration
      security:
        - api-key: []
        - oauth2:
            - all
      responses:
        '200':
          $ref: '#/components/responses/Callback'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '404':
          description: Callbacks are disabled for the account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Accounts
      summary: Enable or update callbacks configuration
      operationId: Accounts_enableCallbacksConfiguration
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/UpdateCallbacks'
      responses:
        '200':
          $ref: '#/components/responses/Callback'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: UpdateCallback
    delete:
      tags:
        - Accounts
      summary: Disable callbacks
      operationId: Accounts_disableCallbacks
      security:
        - api-key: []
        - oauth2:
            - all
      responses:
        '204':
          description: Empty response
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /accounts/sending-limits:
    get:
      tags:
        - Accounts
      summary: Send limits
      operationId: Accounts_getSendingLimits
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/SendingLimitsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /campaigns:
    get:
      tags:
        - Campaigns (Lists)
      summary: Get a list of campaigns
      operationId: CampaignsLists_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - name: query[name]
          in: query
          required: false
          schema:
            type: string
            example: campaign_name
        - name: query[isDefault]
          in: query
          required: false
          schema:
            type: boolean
            example: true
        - description: Sort by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/CampaignList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Campaigns (Lists)
      summary: Create a campaign
      operationId: CampaignsLists_createNewCampaign
      security:
        - api-key: []
        - oauth2:
            - all
      requestBody:
        $ref: '#/components/requestBodies/NewCampaign'
      responses:
        '201':
          $ref: '#/components/responses/Campaign'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 409
                    code: 1008
                    codeDescription: >-
                      There is another resource with the same value of unique
                      property
                    message: Property value is already taken
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1008
                    context: []
                    uuid: b89a0d53-67f6-4269-b207-223b42b6bfbd
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /campaigns/statistics/origins:
    get:
      tags:
        - Campaigns (Lists)
      summary: Get subscriber origin statistics
      operationId: CampaignsLists_getSubscriberOriginStatistics
      security:
        - api-key: []
        - oauth2:
            - all
      description: The results are indexed with the campaign ID.
      parameters:
        - $ref: '#/components/parameters/CampaignStatisticsIdQuery'
        - $ref: '#/components/parameters/CampaignStatisticsGroupByQuery'
        - $ref: '#/components/parameters/CampaignStatisticsDateFromQuery'
        - $ref: '#/components/parameters/CampaignStatisticsDateToQuery'
      responses:
        '200':
          $ref: '#/components/responses/CampaignOriginsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: GetCampaignStatisticsOrigins
  /campaigns/statistics/locations:
    get:
      tags:
        - Campaigns (Lists)
      summary: Get subscriber location statistics
      operationId: CampaignsLists_getSubscriberLocationStatistics
      security:
        - api-key: []
        - oauth2:
            - all
      description: The results are indexed with the location name (PL, EN, etc.).
      parameters:
        - $ref: '#/components/parameters/CampaignStatisticsIdQuery'
        - $ref: '#/components/parameters/CampaignStatisticsGroupByQuery'
        - $ref: '#/components/parameters/CampaignStatisticsDateFromQuery'
        - $ref: '#/components/parameters/CampaignStatisticsDateToQuery'
      responses:
        '200':
          $ref: '#/components/responses/CampaignLocationsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: GetCampaignStatisticsLocations
  /campaigns/statistics/list-size:
    get:
      tags:
        - Campaigns (Lists)
      summary: Get campaign size statistics
      operationId: CampaignsLists_getCampaignSizeStatistics
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        Returns the number of the total added and removed subscribers, grouped
        by default or by time period.
      parameters:
        - $ref: '#/components/parameters/CampaignStatisticsIdQuery'
        - $ref: '#/components/parameters/CampaignStatisticsGroupByQuery'
        - $ref: '#/components/parameters/CampaignStatisticsDateFromQuery'
        - $ref: '#/components/parameters/CampaignStatisticsDateToQuery'
      responses:
        '200':
          $ref: '#/components/responses/CampaignListSizesStatisticsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: GetCampaignStatisticsListSize
  /campaigns/statistics/subscriptions:
    get:
      tags:
        - Campaigns (Lists)
      summary: Get the number and origin of subscription statistics
      operationId: CampaignsLists_getSubscriptionStatistics
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        Returns the number and origin of subscriptions, grouped by a specified
        campaigns for each day on which any changes were made. Dates in the
        YYYY-MM-DD format are used as keys in the response.
      parameters:
        - $ref: '#/components/parameters/CampaignStatisticsIdQuery'
        - $ref: '#/components/parameters/CampaignStatisticsGroupByQuery'
        - $ref: '#/components/parameters/CampaignStatisticsDateFromQuery'
        - $ref: '#/components/parameters/CampaignStatisticsDateToQuery'
      responses:
        '200':
          $ref: '#/components/responses/SubscriptionsByDatesStatisticsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: GetCampaignStatisticsSubscriptions
  /campaigns/statistics/removals:
    get:
      tags:
        - Campaigns (Lists)
      summary: Get removal statistics
      operationId: CampaignsLists_getRemovalStatistics
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        Returns the number and reason for removed contacts. Dates in the
        YYYY-MM-DD format are used as keys in the response.
      parameters:
        - $ref: '#/components/parameters/CampaignStatisticsIdQuery'
        - $ref: '#/components/parameters/CampaignStatisticsGroupByQuery'
        - $ref: '#/components/parameters/CampaignStatisticsDateFromQuery'
        - $ref: '#/components/parameters/CampaignStatisticsDateToQuery'
      responses:
        '200':
          $ref: '#/components/responses/RemovalsByDatesStatisticsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: GetCampaignStatisticsRemovals
  /campaigns/statistics/balance:
    get:
      tags:
        - Campaigns (Lists)
      summary: Get balance statistics
      operationId: CampaignsLists_getBalanceStatistics
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        Returns the balance of subscriptions. Dates in the YYYY-MM-DD format are
        used as keys in the response.
      parameters:
        - $ref: '#/components/parameters/CampaignStatisticsIdQuery'
        - $ref: '#/components/parameters/CampaignStatisticsGroupByQuery'
        - $ref: '#/components/parameters/CampaignStatisticsDateFromQuery'
        - $ref: '#/components/parameters/CampaignStatisticsDateToQuery'
      responses:
        '200':
          $ref: '#/components/responses/BalanceByDatesStatisticsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: GetCampaignStatisticsBalance
  /campaigns/statistics/summary:
    get:
      tags:
        - Campaigns (Lists)
      summary: Get the statistics summary for selected campaigns
      operationId: CampaignsLists_getStatisticsSummary
      security:
        - api-key: []
        - oauth2:
            - all
      description: The results are indexed with the campaign ID.
      parameters:
        - name: query[campaignId]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/CampaignStatisticsIdQuery'
      responses:
        '200':
          $ref: '#/components/responses/CampaignSummaryList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: GetCampaignStatisticsSummary
  /webforms:
    get:
      tags:
        - Legacy Forms
      summary: Get Legacy Forms.
      operationId: LegacyForms_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        Get the list of Legacy Forms. You can filter the resource using criteria
        specified as `query[*]`. You can provide multiple criteria, to use AND
        logic. You can sort the resource using parameters specified as
        `sort[*]`. You can specify multiple fields to sort by.
      parameters:
        - description: Search Legacy Forms by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search Legacy Forms modified from this date
          name: query[modifiedOn][from]
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Search Legacy Forms modified to this date
          name: query[modifiedOn][to]
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: >-
            Search Legacy Forms by campaignId. Accepts multiple IDs separated
            with a comma
          name: query[campaignId]
          in: query
          required: false
          schema:
            type: string
        - description: Sort Legacy Forms by modification date
          name: sort[modifiedOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/LegacyFormList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /gdpr-fields:
    get:
      tags:
        - GDPR Fields
      summary: Get the GDPR fields list
      operationId: GdprFields_getList
      security:
        - api-key: []
        - oauth2:
            - all
      parameters:
        - description: Sort fields by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort fields by creation date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/GDPRFieldList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /workflow:
    get:
      tags:
        - Workflows
      summary: Get workflows
      operationId: Workflows_listWorkflows
      security:
        - api-key: []
        - oauth2:
            - all
      description: Get the list of workflows.
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/WorkflowList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: GetWorkflows
  /sms-automation:
    get:
      tags:
        - SMS Automation Messages
      summary: Get the list of automated SMS messages.
      operationId: SmsAutomationMessages_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search automated SMS messages by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search automated SMS messages by campaign (list) ID
          name: query[campaignId]
          in: query
          required: false
          schema:
            type: string
        - description: Search for automated SMS messages containing links
          name: query[hasLinks]
          in: query
          required: false
          schema:
            type: boolean
        - description: Sort by the status of the SMS message
          name: sort[status]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by the name of the automated SMS message
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by the date the SMS message was modified on
          name: sort[modifiedOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by the number of delivered SMS messages
          name: sort[delivered]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by the number of sent SMS messages
          name: sort[sent]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by the number of link clicks
          name: sort[clicks]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/SmsAutomationList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-labels:
        - content: GetResponse MAX
          class: primary
        - content: Add-on required
          class: warning
  /sms:
    get:
      tags:
        - SMS Messages
      summary: Get the list of SMS messages.
      operationId: SmsMessages_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search SMS messages by type
          name: query[type]
          in: query
          required: false
          schema:
            type: string
            enum:
              - sms
              - draft
        - description: Search SMS messages by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search SMS messages by status
          name: query[sendingStatus]
          in: query
          required: false
          schema:
            type: string
            enum:
              - scheduled
              - sending
              - sent
        - description: Search SMS messages by campaign (list) ID
          name: query[campaignId]
          in: query
          required: false
          schema:
            type: string
        - description: Search for SMS messages with links
          name: query[hasLinks]
          in: query
          required: false
          schema:
            type: boolean
        - description: Sort by sending status
          name: sort[sendingStatus]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by sending date
          name: sort[sendOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by modification date
          name: sort[modifiedOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by number of delivered messages
          name: sort[delivered]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by number of sent messages
          name: sort[sent]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by number of link clicks
          name: sort[clicks]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/SmsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-labels:
        - content: GetResponse MAX
          class: primary
        - content: Add-on required
          class: warning
  /autoresponders:
    get:
      tags:
        - Autoresponders
      summary: Get the list of autoresponders.
      operationId: Autoresponders_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search autoresponder by subject
          name: query[subject]
          in: query
          required: false
          schema:
            type: string
        - description: Search autoresponder by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search autoresponder by status
          name: query[status]
          in: query
          required: false
          schema:
            type: string
            enum:
              - enabled
              - disabled
        - description: Search autoresponder created from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search autoresponder created to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Search autoresponder by campaign ID
          name: query[campaignId]
          in: query
          required: false
          schema:
            type: string
        - description: Search autoresponder by type
          name: query[type]
          in: query
          required: false
          schema:
            type: string
            enum:
              - timebase
              - actionbase
        - description: Search autoresponder by triggerType
          name: query[triggerType]
          in: query
          required: false
          schema:
            type: string
            enum:
              - onday
        - description: Sort by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by subject
          name: sort[subject]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by cycle day
          name: sort[dayOfCycle]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by delivered
          name: sort[delivered]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by open rate
          name: sort[openRate]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by click rate
          name: sort[clickRate]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by date
          name: sort[createdOn]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/AutoresponderList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
    post:
      tags:
        - Autoresponders
      summary: Create autoresponder
      operationId: Autoresponders_createNewAutoresponder
      security:
        - api-key: []
        - oauth2:
            - all
      description: >
        >

        **The action-based autoresponder feature has been migrated over to
        marketing automation. Your existing autoresponders are

        now converted into workflows. You can no longer create and update
        action-based autoresponders using our API.**


        This request allows you to create an autoresponder. Remember to select
        the proper `sendSettings` - depending on `type` you need to fill
        corresponding setting (eg. if you selected type `delay`, then you MUST
        fill `delayInHours` field).
      requestBody:
        $ref: '#/components/requestBodies/NewAutoresponder'
      responses:
        '201':
          $ref: '#/components/responses/AutoresponderDetails'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 409
                    code: 1008
                    codeDescription: >-
                      There is another resource with the same value of unique
                      property
                    message: Property value is already taken
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1008
                    context: []
                    uuid: b89a0d53-67f6-4269-b207-223b42b6bfbd
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
  /autoresponders/statistics:
    get:
      tags:
        - Autoresponders
      summary: The statistics for all autoresponders
      operationId: Autoresponders_getAllStatistics
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        >

        This returns the statistics summary for selected autoresponders. You can
        select them by specifying the autoresponder or campaign IDs.

        As in all statistics, you can change the date and time range  (hourly
        daily monthly or total). Keep in mind

        that all statistics date ranges are given in standard UTC period type
        objects. ([See ISO 8601
        standard](http://en.wikipedia.org/wiki/ISO_8601#Time_intervals))


        (https://app.getresponse.com/statistics.html?t=followup#total).
         You can filter the resource using criteria specified as `query[*]`. You can provide multiple criteria, to use AND logic. You can sort the resource using parameters specified as `sort[*]`. You can specify multiple fields to sort by.
      parameters:
        - description: Group results by time interval
          name: query[groupBy]
          in: query
          required: false
          schema:
            type: string
            enum:
              - total
              - hour
              - day
              - month
        - description: The list of autoresponder resource IDs (string separated with '')
          name: query[autoreponderId]
          in: query
          required: false
          schema:
            type: string
        - description: The list of campaign resource IDs (string separated with '')
          name: query[campaignId]
          in: query
          required: false
          schema:
            type: string
        - description: Count data from this date
          name: query[createdOn][from]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - description: Count data to this date
          name: query[createdOn][to]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/DateOrDateTime'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/MessageStatisticsList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
      x-operation-class-name: GetAutorespondersStatistics
  /websites:
    get:
      tags:
        - Websites
      summary: Get the list of websites
      operationId: Websites_getList
      security:
        - api-key: []
        - oauth2:
            - all
      description: >-
        You can filter the resource using criteria specified as `query[*]`. You
        can provide multiple criteria, to use AND logic. You can sort the
        resource using parameters specified as `sort[*]`. You can specify
        multiple fields to sort by.
      parameters:
        - description: Search websites by name
          name: query[name]
          in: query
          required: false
          schema:
            type: string
        - description: Search websites by status
          name: query[status]
          in: query
          required: false
          schema:
            type: string
            enum:
              - published
              - unpublished
        - description: Show statistics for websites from this date
          name: stats[from]
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Show statistics for websites to this date
          name: stats[to]
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Sort websites by name
          name: sort[name]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort websites by creation date
          name: sort[createdAt]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort websites by modification date
          name: sort[updatedAt]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort websites by page views
          name: sort[pageViews]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by number of site visits
          name: sort[visits]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - description: Sort by number of unique visitors
          name: sort[uniqueVisitors]
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          $ref: '#/components/responses/WebsitesList'
        '400':
          description: Request validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 400
                    code: 1000
                    codeDescription: >-
                      General error of validation process, more details should
                      be in context section
                    message: Validation error, see context section for more information
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1000
                    context:
                      validationType: searchFilter[query]
                      fieldName: name
                      originalName: lorem-ipsum
                      errorDescription: Not allowed search field
                    uuid: 77dabfd1-1fa7-4f9f-8d3f-487b4403e3aa
        '401':
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 401
                    code: 1014
                    codeDescription: Problem during authentication process, check headers!
                    message: >-
                      Unable to authenticate request. Check credentials or
                      authentication method details
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1014
                    context:
                      authenticationType: auth_token
                    uuid: 62417847-4f12-4c25-9b3a-0b619a187efe
        '429':
          description: The throttling limit has been reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example:
                  value:
                    httpStatus: 429
                    code: 1015
                    codeDescription: >-
                      Too many request to API, quota reached, please wait till
                      next quota window
                    message: >-
                      You have reached your requests limit for this time window,
                      please wait...
                    moreInfo: https://apidocs.getresponse.com/en/v3/errors/1015
                    context:
                      currentLimit: 30000
                      timeToReset: 100 seconds
                    uuid: 510c6726-7f65-46b7-a798-ca403133924f
components:
  parameters:
    webinarId:
      description: The webinar ID
      name: webinarId
      in: path
      required: true
      schema:
        type: string
      example: yK6d
    contactId:
      description: The contact ID
      name: contactId
      in: path
      required: true
      schema:
        type: string
      example: pV3r
    searchContactId:
      description: The saved search contact identifier
      name: searchContactId
      in: path
      required: true
      schema:
        type: string
      example: pV3r
    transactionalTemplateId:
      description: Transactional emails template identifier
      name: transactionalTemplateId
      in: path
      required: true
      schema:
        type: string
      example: abc
    transactionalEmailId:
      name: transactionalEmailId
      in: path
      required: true
      schema:
        type: string
      example: tRe4i
    fromFieldId:
      description: The 'From' address ID
      name: fromFieldId
      in: path
      required: true
      schema:
        type: string
      example: TTzW
    rssNewsletterId:
      description: The RSS newsletter ID
      name: rssNewsletterId
      in: path
      required: true
      schema:
        type: string
      example: dGer
    taxId:
      description: The tax ID
      name: taxId
      in: path
      required: true
      schema:
        type: string
      example: Sk
    customEventId:
      description: The custom event ID
      name: customEventId
      in: path
      required: true
      schema:
        type: string
      example: hp2
    formId:
      description: The form ID
      name: formId
      in: path
      required: true
      schema:
        type: string
      example: pL4e
    landingPageId:
      description: The landing page ID.
      name: landingPageId
      in: path
      required: true
      schema:
        type: string
      example: avYn
    importId:
      description: The import ID
      name: importId
      in: path
      required: true
      schema:
        type: string
      example: o6gE
    predefinedFieldId:
      description: The predefined field identifier
      name: predefinedFieldId
      in: path
      required: true
      schema:
        type: string
      example: 6neM
    categoryId:
      description: The category ID
      name: categoryId
      in: path
      required: true
      schema:
        type: string
      example: C3s
    suppressionId:
      description: The suppression ID
      name: suppressionId
      in: path
      required: true
      schema:
        type: string
      example: pypF
    orderId:
      description: The order ID
      name: orderId
      in: path
      required: true
      schema:
        type: string
      example: fOh
    languageCode:
      description: ISO 639-1 Language Code Standard
      name: languageCode
      in: path
      required: true
      schema:
        type: string
      example: en
    productId:
      description: The product ID
      name: productId
      in: path
      required: true
      schema:
        type: string
      example: 9I
    shopId:
      description: The shop ID
      name: shopId
      in: path
      required: true
      schema:
        type: string
      example: pf3
    popupId:
      description: The form or popup ID
      name: popupId
      in: path
      required: true
      schema:
        type: string
      example: ce84fabc-1349-4992-a2d7-0c44c5534128
    splittestId:
      description: The send settings for the A/B test
      name: splittestId
      in: path
      required: true
      schema:
        type: string
      example: 9I
    cartId:
      description: The cart ID
      name: cartId
      in: path
      required: true
      schema:
        type: string
      example: V
    fileId:
      description: The file ID
      name: fileId
      in: path
      required: true
      schema:
        type: string
      example: 6Yh
    folderId:
      description: The folder ID
      name: folderId
      in: path
      required: true
      schema:
        type: string
      example: Pa5
    abTestId:
      description: A/B test ID
      name: abTestId
      in: path
      required: true
      schema:
        type: string
      example: xyz
    clickTrackId:
      name: clickTrackId
      in: path
      required: true
      schema:
        type: string
      example: C12t
    newsletterId:
      description: The newsletter ID
      name: newsletterId
      in: path
      required: true
      schema:
        type: string
      example: 'N'
    tagId:
      description: The tag ID
      name: tagId
      in: path
      required: true
      schema:
        type: string
      example: vBd5
    addressId:
      description: The address ID
      name: addressId
      in: path
      required: true
      schema:
        type: string
      example: k9
    customFieldId:
      description: The custom field ID
      name: customFieldId
      in: path
      required: true
      schema:
        type: string
      example: pas
    lpsId:
      description: The landing page ID
      name: lpsId
      in: path
      required: true
      schema:
        type: string
      example: ce84fabc-1349-4992-a2d7-0c44c5534128
    variantId:
      description: The variant ID
      name: variantId
      in: path
      required: true
      schema:
        type: string
      example: VTB
    campaignId:
      description: The campaign ID
      name: campaignId
      in: path
      required: true
      schema:
        type: string
      example: 3Va2e
    CampaignStatisticsIdQuery:
      name: query[campaignId]
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/CampaignStatisticsIdQuery'
    CampaignStatisticsGroupByQuery:
      name: query[groupBy]
      in: query
      required: false
      schema:
        type: string
        enum:
          - hour
          - day
          - month
          - total
        example: month
    CampaignStatisticsDateFromQuery:
      name: query[createdOn][from]
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/DateOrDateTime'
    CampaignStatisticsDateToQuery:
      name: query[createdOn][to]
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/DateOrDateTime'
    metaFieldId:
      description: The metafield ID
      name: metaFieldId
      in: path
      required: true
      schema:
        type: string
      example: hgF
    webformId:
      description: The webform (Legacy Form) ID
      name: webformId
      in: path
      required: true
      schema:
        type: string
      example: 3Va2e
    gdprFieldId:
      description: The GDPR field ID
      name: gdprFieldId
      in: path
      required: true
      schema:
        type: string
      example: MtY
    workflowId:
      description: The workflow ID
      name: workflowId
      in: path
      required: true
      schema:
        type: string
      example: 3Va2e
    smsId:
      description: The SMS message ID
      name: smsId
      in: path
      required: true
      schema:
        type: string
      example: 'N'
    autoresponderId:
      description: The autoresponder ID.
      name: autoresponderId
      in: path
      required: true
      schema:
        type: string
      example: Q
    websiteId:
      description: The website ID
      name: websiteId
      in: path
      required: true
      schema:
        type: string
      example: ce84fabc-1349-4992-a2d7-0c44c5534128
    PerPage:
      description: Requested number of results per page
      name: perPage
      in: query
      required: false
      schema:
        type: integer
        format: int32
        default: 100
        maximum: 1000
        minimum: 1
    Page:
      description: Page number
      name: page
      in: query
      required: false
      schema:
        type: integer
        format: int32
        default: 1
        minimum: 1
    Fields:
      description: >-
        List of fields that should be returned. Id is always returned. Fields
        should be separated by comma
      name: fields
      in: query
      required: false
      schema:
        type: string
  responses:
    WebinarDetails:
      description: The webinar details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Webinar'
    WebinarList:
      description: The list of webinars
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebinarsGetListResponse'
    UpsertContactTags:
      description: ' The list of contact tags.'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactsUpsertContactTagsResponse'
    ContactActivityList:
      description: The list of contact activities.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactsGetListOfActivitiesResponse'
    ContactCustomFieldList:
      description: The list of custom fields
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactCustomFieldList'
    ContactList:
      description: The list of contacts.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactsGetSingleCampaignContactsResponse'
    ContactDetails:
      description: The contact details.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactDetails'
    BaseSearchContactsList:
      description: The saved search contact.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchContactsSavedListResponse'
    SearchContactsDetails:
      description: Search contact details.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchContactsDetails'
    SearchedContactsList:
      description: The contact list.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchContactsByIdResponse'
    TransactionalEmailsTemplateDetails:
      description: Transactional emails template details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionalEmailsTemplateDetails'
    TransactionalEmailsTemplateList:
      description: Transactional email templates listing
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionalEmailsTemplatesGetListResponse'
    TransactionalEmailDetails:
      description: Transactional email details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionalEmail'
    TransactionalEmailStatistics:
      description: The overall statistics of transactional emails
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/TransactionalEmailsGetOverallStatisticsResponse
    TransactionalEmailList:
      description: The list of transactional emails
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionalEmailsGetListResponse'
    TransactionalEmail:
      description: Transactional email.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionalEmail'
    FromFieldList:
      description: The list of 'From' email addresses ('from fields').
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FromFieldsGetListResponse'
    FromFieldDetails:
      description: The 'From' address details.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FromField'
    RssNewsletterDetails:
      description: The RSS newsletter details.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RssNewsletter'
    RssNewsletterList:
      description: The list of RSS newsletters.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RssNewslettersGetListResponse'
    TaxDetails:
      description: The tax details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Tax'
    TaxList:
      description: The list of taxes
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaxesGetListResponse'
    CustomEventDetails:
      description: The custom event details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomEvent'
    CustomEventsList:
      description: The list of custom events
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomEventsGetListResponse'
    FormVariantList:
      description: The list of form variants.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FormsGetListOfVariantsResponse'
    FormDetails:
      description: The form details.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FormDetails'
    FormList:
      description: The list of forms.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FormsGetListResponse'
    LandingPageList:
      description: The list of landing pages.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegacyLandingPagesGetListResponse'
    LandingPageDetails:
      description: The landing pages details.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegacyLandingPagesGetByIdResponse'
    ImportList:
      description: The list of imports.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ImportsGetListResponse'
    ImportDetails:
      description: The import details.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Import'
    SmsStats:
      description: SMS statistics
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsStats'
    RevenueStats:
      description: Revenue statistics
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RevenueStatistics'
    GeneralPerformanceStats:
      description: General performance statistics
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralPerformanceStats'
    PredefinedFieldsList:
      description: The list of predefined fields.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PredefinedFieldsGetListResponse'
    PredefinedFieldDetails:
      description: The predefined field details.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PredefinedField'
    CategoryDetails:
      description: The category details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Category'
    CategoryList:
      description: The list of categories
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoriesListResponse'
    SuppressionsList:
      description: The suppressions list.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuppressionsGetSuppressionListsResponse'
    SuppressionDetails:
      description: The suppression details.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuppressionDetails'
    OrderList:
      description: The list of orders
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrdersGetListResponse'
    OrderDetails:
      description: The order details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
    SubscriptionConfirmationBodyList:
      description: List of subscription confirmation bodies
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/SubscriptionConfirmationsGetCollectionOfBodiesResponse
    SubscriptionConfirmationSubjectList:
      description: List of subscription confirmation subjects
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/SubscriptionConfirmationsGetSubjectCollectionResponse
    ProductList:
      description: The list of products
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductsGetListResponse'
    SimpleProductCategoryList:
      description: The list of product categories
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductsUpsertCategoriesResponse'
    ProductDetails:
      description: The product details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAndUpdate'
    ShopList:
      description: The list of shops
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShopsGetListOfShopsResponse'
    ShopDetails:
      description: The shop details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAndUpdate'
    PopupGeneralPerformance:
      description: Form or popup statistics
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PopupGeneralPerformanceStats'
    PopupDetails:
      description: Form or popup details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PopupDetails'
    PopupsList:
      description: The list of forms and popups
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FormsAndPopupsGetListResponse'
    SplittestList:
      description: The list of A/B tests.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AbTestsGetListResponse'
    Splittest:
      description: A/B test details.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Splittest'
    CartDetails:
      description: The cart details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAndUpdate'
    CartList:
      description: The list of carts
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CartsGetShopCartsResponse'
    Quota:
      description: Storage space information
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Quota'
    FileList:
      description: The list of files
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FileLibraryGetFileListResponse'
    File:
      description: The file details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseFile'
    Folder:
      description: The folder details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FileLibraryCreateFolderResponse'
    FoldersList:
      description: The list of folders
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FileLibraryListFoldersResponse'
    AbtestsSubjectGetDetails:
      description: A/B test details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AbtestsSubjectDetails'
    AbtestsSubjectGetList:
      description: The list of A/B tests
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AbTestsSubjectGetListResponse'
    ClickTrack:
      description: The click track details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClickTrackResource'
    ClickTrackList:
      description: The list of click tracks
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClickTracksGetListResponse'
    MessageStatisticsListElement:
      description: The message statistics.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageStatisticsListElement'
    NewsletterDetails:
      description: The newsletter details.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Newsletter'
    NewsletterList:
      description: The list of newsletters.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewslettersGetListResponse'
    NewsletterActivities:
      description: The list of newsletters activities
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewslettersGetActivitiesResponse'
    TagDetails:
      description: The tag details.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseTag'
    TagList:
      description: The list of tags
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TagsGetListResponse'
    AddressList:
      description: The list of addresses.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddressesGetListResponse'
    AddressDetails:
      description: The address details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAndUpdate'
    AccountBlocklist:
      description: Blocklist masks for the whole account.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Blocklist'
    CampaignBlocklist:
      description: Blocklist masks for the campaign.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Blocklist'
    CustomFieldDetails:
      description: The custom field details.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomField'
    CustomFieldList:
      description: The list of custom fields
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomFieldsGetListResponse'
    LpsList:
      description: The list of tags
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LandingPagesGetListResponse'
    LpsDetails:
      description: The landing page details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LpsDetails'
    LpsStats:
      description: Landing page statistics
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LpsStats'
    ImageList:
      description: Image list
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MultimediaGetImageListResponse'
    ImageDetails:
      description: Image details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ImageDetails'
    Tracking:
      description: The Tracking Snippets
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrackingJavascriptCodeSnippetsResponse'
    FacebookPixelList:
      description: '"Facebook Pixel" details'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TrackingGetFacebookPixelsResponse'
    ProductVariantDetails:
      description: The product variant details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductVariant'
    ProductVariantList:
      description: The list of product variants
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductVariantsGetProductVariantsListResponse'
    AccountBadgeDetails:
      description: Account badge status
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountBadgeDetails'
    SendingLimitsList:
      description: Send limits
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountsGetSendingLimitsResponse'
    IndustryList:
      description: Industry tags list
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountsListIndustryTagsResponse'
    AccountTimezoneList:
      description: List of time zones
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountsGetTimezonesListResponse'
    AccountLoginHistoryList:
      description: Login history information
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountsGetLoginHistoryResponse'
    Callback:
      description: Callback configuration
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Callback'
    AccountDetails:
      description: Your account information
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Account'
    AccountBillingDetails:
      description: Billing information.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountBilling'
    SubscriptionsByDatesStatisticsList:
      description: Subscription statistics by date
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubscriptionsByDatesStatisticsList'
    CampaignSummaryList:
      description: The summary list.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignSummaryList'
    CampaignLocationsList:
      description: The list of locations.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignLocationsList'
    RemovalsByDatesStatisticsList:
      description: Subscription statistics by date
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RemovalsByDatesStatisticsList'
    CampaignOriginsList:
      description: The list of origins.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignOriginsList'
    CampaignListSizesStatisticsList:
      description: The campaign data.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignListSizesStatisticsList'
    BalanceByDatesStatisticsList:
      description: The subscription statistics, shown by date.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BalanceByDatesStatisticsList'
    Campaign:
      description: The campaign data.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Campaign'
    CampaignList:
      description: The list of campaigns.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CampaignsListsGetListResponse'
    MetaFieldDetails:
      description: The meta field details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MetaField'
    MetaFieldList:
      description: The list of meta fields
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductsUpsertMetaFieldsResponse'
    LegacyForm:
      description: The Legacy Form.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegacyForm'
    LegacyFormList:
      description: The list of Legacy Forms.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegacyFormsGetListResponse'
    GDPRFieldList:
      description: The list of GDPR fields
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GdprFieldsGetListResponse'
    GDPRFieldDetails:
      description: The details of the GDPR field
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GDPRFieldDetails'
    Workflow:
      description: The workflow
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Workflow'
    WorkflowList:
      description: The list of workflows
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WorkflowsListWorkflowsResponse'
    SmsDetails:
      description: The SMS message details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsListItem'
    SmsAutomationList:
      description: The list of the automated SMS messages
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsAutomationListItem'
    SmsList:
      description: The SMS message listing
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SmsListItem'
    MessageStatisticsList:
      description: The list of autoresponders statistic split by time interval.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RssNewslettersGetStatisticsResponse'
    SingleMessageStatisticsList:
      description: The list of autoresponder statistics split by time interval.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RssNewslettersGetStatisticsByIdResponse'
    AutoresponderDetails:
      description: The autoresponder details'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Autoresponder'
    AutoresponderList:
      description: The list of autoresponders.
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AutoresponderList'
    WebsitesList:
      description: The list of tags
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        CurrentPage:
          $ref: '#/components/headers/CurrentPage'
        TotalPages:
          $ref: '#/components/headers/TotalPages'
        TotalCount:
          $ref: '#/components/headers/TotalCount'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebsitesGetListResponse'
    WebsiteStats:
      description: Website statistics
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebsiteStats'
    WebsiteDetails:
      description: The website details
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebsiteDetails'
  schemas:
    CreateAndUpdate:
      properties:
        createdOn:
          description: The creation date
          type: string
          format: date-time
          readOnly: true
        updatedOn:
          description: The date of the last update
          type: string
          format: date-time
          readOnly: true
      type: object
    BaseCategory:
      properties:
        categoryId:
          description: The category ID
          type: string
          readOnly: true
          example: atQ
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/shops/pf3/categories/atQ
        name:
          description: The name of the category
          type: string
          maxLength: 64
          minLength: 2
          example: Headwear
        parentId:
          description: The parent category ID
          type: string
          maxLength: 64
          minLength: 2
          example: amh
        isDefault:
          description: This is a default category
          type: boolean
          example: true
        url:
          description: The external URL to the category
          type: string
          format: uri
          maxLength: 2048
          example: https://somedomain.com/category/446
        externalId:
          description: >-
            The external ID is the identifying string or number of the category
            given by another software
          type: string
          maxLength: 255
          example: ext3343
      type: object
    Category:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseCategory'
        - $ref: '#/components/schemas/CreateAndUpdate'
    ProductCategory:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseCategory'
        - $ref: '#/components/schemas/CreateAndUpdate'
    BaseMetaField:
      properties:
        description:
          description: The meta field description
          type: string
          maxLength: 255
          minLength: 0
          example: Description of this meta field
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/shops/pf3/meta-fields/NoF
        metaFieldId:
          description: The meta field ID
          type: string
          readOnly: true
          example: NoF
        name:
          description: The meta field name
          type: string
          maxLength: 63
          minLength: 3
          example: Shoe size
        value:
          description: The meta field value
          type: string
          maxLength: 65000
          minLength: 0
          example: '11'
        valueType:
          description: The value type enumerable
          type: string
          enum:
            - string
            - integer
          example: integer
      type: object
    MetaField:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseMetaField'
        - $ref: '#/components/schemas/CreateAndUpdate'
    UpsertProductCategory:
      description: >-
        This method makes it possible to assign product categories, and to set a
        default product category. It doesn't remove or unassign product
        categories.
      required:
        - categories
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/UpsertSingleProductCategory'
      type: object
    UpsertSingleProductCategory:
      required:
        - categoryId
      properties:
        categoryId:
          description: The category ID
          type: string
          example: atQ
        isDefault:
          description: This is a default category
          type: boolean
          example: true
      type: object
    UpsertMetaField:
      description: This method assigns metafields. It doesn't unassign or delete them.
      required:
        - metaFields
      properties:
        metaFields:
          type: array
          items:
            $ref: '#/components/schemas/UpsertSingleMetaField'
      type: object
    UpsertSingleMetaField:
      required:
        - metaFieldId
      properties:
        metaFieldId:
          description: MetaField ID
          type: string
          example: NoF
      type: object
    BaseProductVariant:
      properties:
        description:
          description: The description of a variant
          type: string
          maxLength: 1000
          minLength: 2
          example: Red Cap with GetResponse Monster print
        variantId:
          description: The product ID
          type: string
          readOnly: true
          example: VTB
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/shops/pf3/products/9I/variants/VTB
        name:
          description: The product name
          type: string
          maxLength: 255
          minLength: 1
          example: Red Monster Cap
        url:
          description: The external URL to the product variant
          type: string
          format: uri
          maxLength: 2048
          example: https://somedomain.com/products-variants/986
        sku:
          description: >-
            The stock-keeping unit of a variant. Must be unique within the
            product
          type: string
          maxLength: 255
          minLength: 2
          example: SKU-1254-56-457-5689
        price:
          description: The price
          type: number
          format: double
          example: 20
        priceTax:
          description: The price including tax
          type: number
          format: double
          example: 27.5
        previousPrice:
          description: The price before the change
          type: number
          format: double
          example: 25
          nullable: true
        previousPriceTax:
          description: The price before the change including tax
          type: number
          format: double
          example: 33.6
          nullable: true
        quantity:
          description: The quantity of variant items
          type: integer
          format: int64
          default: 1
        position:
          description: The position of a variant
          type: integer
          format: int64
          example: 1
        barcode:
          description: The barcode of a variant
          type: string
          maxLength: 255
          minLength: 2
          example: '12455687'
        externalId:
          description: >-
            The external ID is the identifying string or number of the variant
            given by another software
          type: string
          maxLength: 255
          example: ext1456
        images:
          type: array
          items:
            $ref: '#/components/schemas/NewProductVariantImage'
        metaFields:
          type: array
          items:
            $ref: '#/components/schemas/BaseMetaField'
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/BaseTax'
      type: object
    ProductVariant:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseProductVariant'
        - $ref: '#/components/schemas/CreateAndUpdate'
    NewProductVariantImage:
      required:
        - src
        - position
      properties:
        imageId:
          description: The image ID
          type: string
          readOnly: true
          example: hY
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/shops/pf3/images/hY
        src:
          description: The source URL of an image
          type: string
          format: uri
          example: http://somedomain.com/images/src/img58db7ec64bab9.png
        position:
          description: The position of an image
          type: integer
          format: int32
          example: 1
      type: object
    BaseTax:
      properties:
        taxId:
          description: The tax ID
          type: string
          readOnly: true
          example: Sk
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/shops/pf3/taxes/Sk
        name:
          description: The tax name
          type: string
          maxLength: 255
          minLength: 2
          example: VAT
        rate:
          description: The rate value
          type: number
          format: double
          maximum: 99.9
          minimum: 0
          example: 23
      type: object
    Tax:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseTax'
        - $ref: '#/components/schemas/CreateAndUpdate'
    Order:
      properties:
        description:
          description: The order description
          type: string
          example: More information about order.
        orderId:
          description: The order ID
          type: string
          readOnly: true
          example: fOh
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/shops/pf3/orders/fOh
        contactId:
          description: >-
            Create a contact by using `POST /v3/contacts`. Or, if the contact
            already exists, using `GET /v3/contacts`
          type: string
          example: k8u
        orderUrl:
          description: The external URL for an order
          type: string
          format: uri
          maxLength: 2048
          example: https://somedomain.com/orders/order446
        externalId:
          description: >-
            The external ID is the identifying string or number of the order
            given by another software
          type: string
          maxLength: 255
          example: DH71239
        totalPrice:
          description: The total price of an order
          type: number
          format: double
          maximum: 999999999999.99
          minimum: 0
          example: 716
        totalPriceTax:
          description: The total price tax of an order
          type: number
          format: double
          maximum: 999999999999.99
          minimum: 0
          example: 358.67
        currency:
          description: The order currency code (ISO 4217)
          type: string
          example: PLN
        status:
          description: The status value
          type: string
          maxLength: 64
          example: NEW
        cartId:
          description: Create a cart by using `POST /v3/shops/{shopId}/carts`
          type: string
          example: QBNgBR
        shippingPrice:
          description: The shipping price for an order
          type: number
          format: double
          maximum: 999999999999.99
          minimum: 0
          example: 23
        shippingAddress:
          $ref: '#/components/schemas/CreateAndUpdate'
        billingStatus:
          description: The billing status of an order
          type: string
          example: PENDING
        billingAddress:
          $ref: '#/components/schemas/CreateAndUpdate'
        processedAt:
          description: The exact time an order was made
          type: string
          format: date-time
        metaFields:
          type: array
          items:
            $ref: '#/components/schemas/BaseMetaField'
      type: object
      x-konfig-properties:
        shippingAddress:
          description: The shipping address for an order
        billingAddress:
          description: The billing address for an order
    NewSelectedProductVariant:
      required:
        - variantId
        - price
        - quantity
      properties:
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/shops/aS/products/Rf/variants/aBc
        variantId:
          description: >-
            The ID of a selected variant. You must first create a variant
            using: 


            `POST` [Create
            product](https://apireference.getresponse.com/#operation/createProduct) 


            `POST` [Create product
            variant](https://apireference.getresponse.com/#operation/createProductVariant)

             or get ID from variants created already:

              `GET` [Get a list of product variants](https://apireference.getresponse.com/#operation/getProductVariantList)
          type: string
          example: p
        price:
          description: The product variant price
          type: number
          format: double
          maximum: 999999999999.99
          minimum: 0
          example: 840
        priceTax:
          description: The product variant price tax
          type: number
          format: double
          maximum: 999999999999.99
          minimum: 0
          example: 428
        quantity:
          description: The product variant quantity
          type: integer
          format: int32
          minimum: 1
          example: 2
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/BaseTax'
      type: object
    NewCartSelectedProductVariant:
      required:
        - variantId
        - quantity
        - price
        - priceTax
      properties:
        variantId:
          description: >-
            The ID of a selected variant. You must first create a variant
            using: 


            `POST` [Create
            product](https://apireference.getresponse.com/#operation/createProduct) 


            `POST` [Create product
            variant](https://apireference.getresponse.com/#operation/createProductVariant)

             or get ID from variants created already:

              `GET` [Get a list of product variants](https://apireference.getresponse.com/#operation/getProductVariantList)
          type: string
          example: VTB
        quantity:
          description: The quantity
          type: integer
          format: int64
          minimum: 1
          example: 3
        price:
          description: The price, tax excluded
          type: number
          format: double
          maximum: 999999999999.99
          minimum: 0
          example: 57
        priceTax:
          description: The price, tax included
          type: number
          format: double
          maximum: 999999999999.99
          minimum: 0
          example: 68
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/shops/pf3/products/9I/variants/VTB
      type: object
    Webinar:
      properties:
        webinarId:
          type: string
          readOnly: true
          example: yK6d
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/webinars/yK6d
        createdOn:
          type: string
          format: date-time
          readOnly: true
        startsOn:
          type: string
          format: date-time
        webinarUrl:
          description: The URL to the webinar room
          type: string
          format: uri
        status:
          type: string
          enum:
            - upcoming
            - finished
            - published
            - unpublished
          readOnly: true
        type:
          description: The webinar type
          type: string
          enum:
            - all
            - live
            - on_demand
          readOnly: true
        campaigns:
          type: array
          items:
            $ref: '#/components/schemas/CampaignReference'
        newsletters:
          description: The list of invitation messages
          type: array
          items:
            $ref: '#/components/schemas/WebinarNewsletter'
        statistics:
          type: object
          $ref: '#/components/schemas/WebinarStatistics'
      type: object
    WebinarStatistics:
      required:
        - registrants
        - visitors
        - attendees
      properties:
        registrants:
          type: integer
          format: int64
          example: 15
        visitors:
          type: integer
          format: int64
          example: 10
        attendees:
          type: integer
          format: int64
          example: 5
      type: object
    WebinarNewsletter:
      required:
        - newsletterId
        - href
      properties:
        newsletterId:
          description: The ID of the webinar invitation message
          type: string
          example: NuE4
        href:
          description: Direct hyperlink to a resource
          type: string
          example: https://api.getresponse.com/v3/newsletters/NuE4
      type: object
    ContactCustomField:
      properties:
        customFieldId:
          type: string
          example: kL6Nh
        values:
          type: array
          items:
            type: string
            example: 18-35
      type: object
    ContactActivity:
      properties:
        activity:
          description: The type of activity
          type: string
          enum:
            - send
            - open
            - click
          example: click
        subject:
          type: string
          example: Shop offer update!
        createdOn:
          description: The activity date
          type: string
          format: date-time
        previewUrl:
          description: >-
            This is only available for the `send` activity. It includes a link
            to the message preview
          type: string
          format: uri
          example: >-
            https://www.grnewsletters.com/archive/campaign_name55f6b0ff01/Test-2135303.html
          nullable: true
        resource:
          type: object
          $ref: '#/components/schemas/ContactActivityResource'
        clickTrack:
          description: >-
            This is only available for the `click` activity. It includes the
            clicked link data
          type: object
          nullable: true
          $ref: '#/components/schemas/ContactActivityClickTrack'
      type: object
      readOnly: true
    ContactActivityClickTrack:
      properties:
        id:
          description: The click tracking ID
          type: string
          example: 62WrE
        name:
          description: The name of the clicked link
          type: string
          example: Go to shop
        url:
          description: The URL of the clicked link
          type: string
          format: uri
          example: https://my-shop.example.com/
      type: object
    ContactActivityResource:
      properties:
        resourceId:
          type: string
          example: oY2n
          nullable: true
        resourceType:
          type: string
          enum:
            - newsletters
            - splittests
            - autoresponders
            - rss-newsletters
            - sms
          example: newsletters
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          example: https://api.getresponse.com/v3/newsletters/oY2n
      type: object
    ContactCustomFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ContactCustomField'
    ContactListElement:
      allOf:
        - $ref: '#/components/schemas/Contact'
        - properties:
            note:
              type: string
              maxLength: 255
              minLength: 0
              nullable: true
            ipAddress:
              description: The contact's IP address. IPv4 and IPv6 formats are accepted.
              example: 1.2.3.4
              oneOf:
                - type: string
                  format: ipv4
                - type: string
                  format: ipv6
          type: object
    ContactDetails:
      type: object
      allOf:
        - $ref: '#/components/schemas/ContactListElement'
        - properties:
            tags:
              description: The list of contact tags, limited to 500 tags.
              type: array
              items:
                $ref: '#/components/schemas/ContactTag'
            geolocation:
              type: object
              readOnly: true
              $ref: '#/components/schemas/ContactGeolocation'
            customFieldValues:
              type: array
              items:
                $ref: '#/components/schemas/ContactCustomFieldValue'
          type: object
    ContactCustomFieldValue:
      required:
        - customFieldId
        - name
        - type
        - value
        - values
      properties:
        customFieldId:
          description: Custom field ID
          type: string
          example: 4klkN
        name:
          type: string
          example: age
        value:
          type: array
          items:
            type: string
            example: 18-35
        values:
          type: array
          items:
            type: string
            example: 18-35
        type:
          type: string
          example: single_select
        fieldType:
          type: string
          example: single_select
        valueType:
          type: string
          example: string
      type: object
    ContactGeolocation:
      properties:
        latitude:
          type: string
          example: '54.35'
          nullable: true
        longitude:
          type: string
          example: '18.6667'
          nullable: true
        continentCode:
          type: string
          enum:
            - OC
            - AN
            - SA
            - NA
            - AS
            - EU
            - AF
          example: EU
          nullable: true
        countryCode:
          description: The country code, compliant with ISO 3166-1 alpha-2
          type: string
          example: PL
          nullable: true
        region:
          type: string
          example: '82'
          nullable: true
        postalCode:
          type: string
          example: 80-387
          nullable: true
        dmaCode:
          type: string
          nullable: true
        city:
          type: string
          example: Gdansk
          nullable: true
      type: object
    BaseSearchContacts:
      description: The short description of a saved search.
      properties:
        searchContactId:
          description: The unique search-contact identifier
          type: string
          readOnly: true
          example: pV3r
        name:
          description: The unique name of search-contact
          type: string
          example: custom test filter
        createdOn:
          description: The UTC date time format ISO 8601, e.g. 2018-04-10T10:02:57+0000
          type: string
          format: date-time
          readOnly: true
          example: 2018-04-10T10:02:57+0000
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://app.getresponse.com/v3/search-contacts/pV3r
      type: object
    SearchContactsDetails:
      description: Search contact details.
      required:
        - searchContactId
        - name
        - createdOn
        - href
      type: object
      allOf:
        - $ref: '#/components/schemas/SearchContactsConditionsDetails'
        - $ref: '#/components/schemas/BaseSearchContacts'
    SearchContactsConditionsDetails:
      required:
        - subscribersType
        - sectionLogicOperator
        - section
      properties:
        subscribersType:
          description: Only one subscription status
          type: array
          items:
            type: string
            enum:
              - subscribed
              - undelivered
              - removed
              - unconfirmed
            example:
              - subscribed
        sectionLogicOperator:
          description: >-
            Match 'any' (`or` value) or 'all' (`and` value) of the following
            conditions
          type: string
          enum:
            - or
            - and
          example: or
        section:
          type: array
          items:
            $ref: '#/components/schemas/SearchContactSection'
      type: object
      example:
        subscribersType:
          - subscribed
        sectionLogicOperator: or
        section:
          - campaignIdsList:
              - tamqY
            logicOperator: or
            subscriberCycle:
              - receiving_autoresponder
              - not_receiving_autoresponder
            subscriptionDate: all_time
            conditions:
              - conditionType: crm
                pipelineScope: PSVq
                stageScope: all
    NewSearchContacts:
      description: New search contacts.
      required:
        - name
        - subscribersType
        - sectionLogicOperator
        - section
      type: object
      allOf:
        - $ref: '#/components/schemas/SearchContactsConditionsDetails'
        - $ref: '#/components/schemas/BaseSearchContacts'
    UpdateSearchContacts:
      description: New search contacts.
      required:
        - name
        - subscribersType
        - sectionLogicOperator
        - section
      type: object
      allOf:
        - $ref: '#/components/schemas/SearchContactsConditionsDetails'
        - $ref: '#/components/schemas/BaseSearchContacts'
    SpecificDateEnum:
      description: The specific date.
      type: string
      enum:
        - today
        - yesterday
        - last_7_days
        - last_30_days
        - last_n_days
        - this_week
        - last_week
        - this_month
        - last_month
      example: last_30_days
    SpecificDateExtendedEnum:
      description: The specific date.
      type: string
      example: last_30_days
      oneOf:
        - $ref: '#/components/schemas/SpecificDateEnum'
        - description: The last 2 months specific date constant.
          enum:
            - last_2_months
          type: string
    RelationalNumericOperatorEnum:
      description: The relational operators.
      type: string
      enum:
        - numeric_lt
        - numeric_gt
        - numeric_eq
        - numeric_not_eq
        - numeric_lt_eq
        - numeric_gt_eq
      example: numeric_lt
    MessageTypeOperator:
      description: The type of message.
      type: string
      enum:
        - autoresponder
        - newsletter
        - splittest
        - automation
      example: autoresponder
    SearchedContactDetails:
      properties:
        contactId:
          description: The contact identifier
          type: string
          example: jtLF5i
        name:
          description: The contact description
          type: string
          example: John Doe
          nullable: true
        email:
          type: string
          format: email
          example: john.doe@example.com
        origin:
          type: string
          enum:
            - import
            - email
            - www
            - panel
            - leads
            - sale
            - api
            - forward
            - survey
            - iphone
            - copy
            - landing_page
            - webinar
          example: landing_page
        dayOfCycle:
          type: string
          format: integer
          example: '153'
          nullable: true
        createdOn:
          type: string
          format: date-time
          example: 2018-01-15T13:30:42+0000
        campaign:
          type: object
          example:
            campaignId: tamqY
            name: test_campaign
            href: https://api.getresponse.com/v3/campaigns/tamqY
          $ref: '#/components/schemas/CampaignReference'
        score:
          type: string
          format: integer
          example: '5'
          nullable: true
        reason:
          type: string
          enum:
            - api
            - automation
            - blacklisted
            - bounce
            - cleaner
            - complaint
            - support
            - unsubscribe
            - user
          example: support
          nullable: true
        deletedOn:
          type: string
          format: date-time
          example: 2024-02-12T11:00:00+0000
          nullable: true
      type: object
      readOnly: true
    SpecificDateType:
      description: The date formatted as yyyy-mm-dd
      type: string
      format: date
      example: '2018-04-01'
    SpecificDateTimeType:
      description: The date time string compliant with ISO 8601
      type: string
      format: date
      example: 2018-04-01T00:00:00+0000
    IntervalDateType:
      description: >-
        The date interval string compliant with ISO 8601, supported format:
        <start_date>/<end_date>
      type: string
      example: 2018-04-01/2018-04-10
    ConditionStringOperator:
      required:
        - operatorType
        - operator
        - value
      properties:
        operatorType:
          type: string
          enum:
            - string_operator
          example: string_operator
        operator:
          type: string
          enum:
            - is
            - is_not
            - contains
            - not_contains
            - starts
            - ends
            - not_starts
            - not_ends
          example: is_not
        value:
          type: string
          example: new
      type: object
      example:
        operatorType: string_operator
        operator: starts
        value: new
    ConditionStringOperatorList:
      description: Used with a custom field only.
      required:
        - operatorType
        - operator
      properties:
        operatorType:
          type: string
          enum:
            - string_operator_list
          example: string_operator_list
        operator:
          type: string
          enum:
            - is
            - is_not
            - contains
            - not_contains
            - starts
            - ends
            - not_starts
            - not_ends
            - assigned
            - not_assigned
          example: is
        value:
          description: The value of the search
          type: string
          example: 18-29
      type: object
      example:
        operatorType: string_operator_list
        operator: is
        value: 18-29
    ConditionMessageOperator:
      description: The operator allows searching by message type.
      required:
        - operatorType
        - operator
        - value
      properties:
        operatorType:
          type: string
          enum:
            - message_operator
          example: message_operator
        operator:
          $ref: '#/components/schemas/MessageTypeOperator'
        value:
          description: >-
            The identifier of a selected resource: autoresponder, newsletter,
            split test or automation message
          type: string
          example: SGNLr
      type: object
      example:
        operatorType: message_operator
        operator: autoresponder
        value: SGNLr
    CustomDateRange:
      required:
        - from
        - to
      properties:
        from:
          description: The UTC date format
          type: string
          format: date
          example: '2018-04-01'
        to:
          description: The UTC date format
          type: string
          format: date
          example: '2018-04-10'
      type: object
    SearchContactSection:
      required:
        - campaignIdsList
        - logicOperator
        - subscriberCycle
        - subscriptionDate
      properties:
        campaignIdsList:
          description: An array of campaign identifiers
          type: array
          items:
            type: string
            example: tamqY
          example:
            - tamqY
            - tuKd3
        logicOperator:
          type: string
          enum:
            - and
            - or
        subscriberCycle:
          description: Defining whether or not a subscriber is in an autoresponder cycle
          type: array
          items:
            type: string
            enum:
              - receiving_autoresponder
              - not_receiving_autoresponder
          example:
            - receiving_autoresponder
            - not_receiving_autoresponder
        conditions:
          description: One of the search contact conditions
          type: array
          items:
            $ref: '#/components/schemas/ConditionType'
        subscriptionDate:
          description: Matches the matching period
          type: string
          enum:
            - all_time
            - today
            - yesterday
            - last_7_days
            - last_30_days
            - this_week
            - last_week
            - this_month
            - last_month
            - last_2_months
            - custom
      type: object
      discriminator:
        propertyName: subscriptionDate
        mapping:
          all_time: '#/components/schemas/SectionAllTimeSubscriptionDate'
          today: '#/components/schemas/SectionTodaySubscriptionDate'
          yesterday: '#/components/schemas/SectionYesterdaySubscriptionDate'
          last_7_days: '#/components/schemas/SectionLast7DaysSubscriptionDate'
          last_30_days: '#/components/schemas/SectionLast30DaysSubscriptionDate'
          this_week: '#/components/schemas/SectionThisWeekSubscriptionDate'
          last_week: '#/components/schemas/SectionLastWeekSubscriptionDate'
          this_month: '#/components/schemas/SectionThisMonthSubscriptionDate'
          last_month: '#/components/schemas/SectionLastMonthSubscriptionDate'
          last_2_months: '#/components/schemas/SectionLast2MonthsSubscriptionDate'
          custom: '#/components/schemas/SectionCustomSubscriptionDate'
    ConditionType:
      required:
        - conditionType
      properties:
        conditionType:
          type: string
          enum:
            - name
            - email
            - custom
            - subscription_date
            - subscription_method
            - opened
            - not_opened
            - phase
            - last_send_date
            - last_click_date
            - last_open_date
            - webinar
            - clicked
            - not_clicked
            - sent
            - not_sent
            - geo
            - scoring
            - engagement_score
            - tag
            - goal
            - crm
            - ecommerce_number_of_purchases
            - ecommerce_total_spent
            - ecommerce_product_purchased
            - ecommerce_brand_purchased
            - ecommerce_abandoned_cart
            - sms_sent
            - sms_delivered
            - sms_link_clicked
            - sms_link_not_clicked
            - custom_event
      type: object
      discriminator:
        propertyName: conditionType
        mapping:
          name: '#/components/schemas/NameCondition'
          email: '#/components/schemas/EmailCondition'
          custom: '#/components/schemas/CustomFieldCondition'
          subscription_date: '#/components/schemas/SubscriptionDateCondition'
          subscription_method: '#/components/schemas/SubscriptionMethodCondition'
          opened: '#/components/schemas/OpenedCondition'
          not_opened: '#/components/schemas/NotOpenedCondition'
          phase: '#/components/schemas/AutoresponderDayCondition'
          last_send_date: '#/components/schemas/LastSendDateCondition'
          last_click_date: '#/components/schemas/LastClickDateCondition'
          last_open_date: '#/components/schemas/LastOpenDateCondition'
          webinar: '#/components/schemas/WebinarCondition'
          clicked: '#/components/schemas/LinkClickedCondition'
          not_clicked: '#/components/schemas/LinkNotClickedCondition'
          sent: '#/components/schemas/MessageSentCondition'
          not_sent: '#/components/schemas/MessageNotSentCondition'
          geo: '#/components/schemas/GeolocationCondition'
          scoring: '#/components/schemas/ScoringCondition'
          engagement_score: '#/components/schemas/EngagementScoreCondition'
          tag: '#/components/schemas/TagCondition'
          goal: '#/components/schemas/GoalCondition'
          crm: '#/components/schemas/CrmCondition'
          ecommerce_number_of_purchases: '#/components/schemas/ECommerceNumberOfPurchasesCondition'
          ecommerce_total_spent: '#/components/schemas/ECommerceTotalSpentCondition'
          ecommerce_product_purchased: '#/components/schemas/ECommerceProductPurchasedCondition'
          ecommerce_brand_purchased: '#/components/schemas/ECommerceBrandPurchasedCondition'
          sms_sent: '#/components/schemas/SmsSentCondition'
          sms_delivered: '#/components/schemas/SmsDeliveredCondition'
          sms_link_clicked: '#/components/schemas/SmsLinkClickedCondition'
          sms_link_not_clicked: '#/components/schemas/SmsLinkNotClickedCondition'
          ecommerce_abandoned_cart: '#/components/schemas/ECommerceAbandonedCartCondition'
          custom_event: '#/components/schemas/CustomEventCondition'
    NameCondition:
      type: object
      example:
        conditionType: name
        operatorType: string_operator
        operator: contains
        value: John
      allOf:
        - $ref: '#/components/schemas/ConditionType'
        - $ref: '#/components/schemas/ConditionStringOperator'
    EmailCondition:
      type: object
      example:
        conditionType: email
        operatorType: string_operator
        operator: contains
        value: john
      allOf:
        - $ref: '#/components/schemas/ConditionType'
        - $ref: '#/components/schemas/ConditionStringOperator'
    CustomFieldStringOperatorEnum:
      description: >-
        Allowed operators for `"operatorType":"string_operator"` and
        `"operatorType":"string_operator_list"`
      type: string
      enum:
        - is
        - is_not
        - contains
        - not_contains
        - starts
        - ends
        - not_starts
        - not_ends
        - assigned
        - not_assigned
      example: is
    CustomFieldNumericOperatorEnum:
      description: Allowed operators for `"operatorType":"numeric_operator"`
      type: string
      enum:
        - numeric_lt
        - numeric_gt
        - numeric_eq
        - numeric_not_eq
        - numeric_lt_eq
        - numeric_gt_eq
        - assigned'
        - not_assigned
      example: numeric_lt
    CustomFieldDateOperatorEnum:
      description: Allowed operators for `"operatorType":"date_operator"`
      type: string
      enum:
        - date_to
        - date_from
        - custom
        - specific_date
        - assigned
        - not_assigned
      example: date_to
    CustomFieldValueForStringOperatorTypes:
      description: >-
        Any string, allowed only for `"operatorType":"string_operator"` and
        `"operatorType":"string_operator_list"`
      type: string
      example: Canada
    CustomFieldValueForNumericOperatorType:
      description: Any number, allowed only for `"operatorType":"numeric_operator"`
      type: string
      example: '1'
    CustomFieldValueForOperatorTypeDateAndOperatorSpecificDate:
      description: >-
        Allowed values for `"operatorType":"date_operator"` with
        `"operator":"specific_date"`
      type: string
      enum:
        - today
        - yesterday
        - last_7_days
        - last_30_days
        - last_n_days
        - this_week
        - last_week
        - this_month
        - last_month
        - last_2_months
      example: today
    OpenedCondition:
      description: Search contacts who did open a message.
      type: object
      example:
        conditionType: opened
        operatorType: message_operator
        operator: autoresponder
        value: 'SGNLr:'
      allOf:
        - $ref: '#/components/schemas/ConditionType'
        - $ref: '#/components/schemas/ConditionMessageOperator'
    GeolocationCondition:
      description: Search contacts by geolocation.
      required:
        - operatorType
        - operator
        - value
        - scope
      properties:
        scope:
          description: Specify the search parameters
          type: string
          enum:
            - country
            - country_code
            - region
            - city
            - longitude
            - latitude
            - postal_code
            - dma_code
          example: city
      type: object
      example:
        conditionType: geo
        operatorType: string_operator
        operator: starts
        value: New
        scope: city
      allOf:
        - $ref: '#/components/schemas/ConditionType'
        - $ref: '#/components/schemas/ConditionStringOperator'
    CreateTransactionalEmail:
      required:
        - fromField
        - subject
        - recipients
        - contentType
      properties:
        fromField:
          $ref: '#/components/schemas/FromFieldReference'
        replyTo:
          $ref: '#/components/schemas/FromFieldReference'
        tag:
          $ref: '#/components/schemas/NewTransactionalEmailTag'
        recipients:
          $ref: '#/components/schemas/TransactionalEmailRecipients'
        contentType:
          description: The message content type
          type: string
          default: direct
          enum:
            - direct
            - template
      type: object
      discriminator:
        propertyName: contentType
        mapping:
          direct: '#/components/schemas/DirectContent'
          template: '#/components/schemas/TemplateContent'
      x-konfig-properties:
        fromField:
          description: The 'From' address ID to be used as the message sender
        replyTo:
          description: The 'From' address ID to be used as the Reply-to
        tag:
          description: The tag ID used for statistical data collection
    DirectContent:
      type: object
      allOf:
        - $ref: '#/components/schemas/CreateTransactionalEmail'
        - $ref: '#/components/schemas/TransactionalEmailContent'
    TemplateContent:
      type: object
      allOf:
        - $ref: '#/components/schemas/CreateTransactionalEmail'
        - $ref: '#/components/schemas/TransactionalEmailTemplate'
    NewTransactionalEmailTag:
      required:
        - tagId
      properties:
        tagId:
          type: string
          example: vBd5
      type: object
    TransactionalEmailContent:
      required:
        - content
      properties:
        subject:
          type: string
          maxLength: 512
          minLength: 1
          example: Order Confirmation - Example Shop
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/TransactionalEmailAttachment'
        content:
          description: >-
            The message content. At least one field is required. The maximum
            combined size of plain text and HTML is 16MB
          properties:
            plain:
              type: string
              example: Your order has been confirmed. Thank you for shopping with us!
            html:
              type: string
              example: >-
                <h1>Your order has been confirmed</h1><strong>Thank you for
                shopping with us!</strong>
          type: object
      type: object
    TransactionalEmailTemplate:
      description: The template content
      required:
        - template
      properties:
        template:
          description: The message template. At least templateId is required
          required:
            - templateId
          properties:
            templateId:
              description: Transactional emails template identifier
              type: string
              example: Ykz
            lexpad:
              description: Transactional email lexpad
              type: object
              example:
                some-key: some-value
          type: object
      type: object
    TransactionalEmailRecipients:
      required:
        - to
      properties:
        to:
          $ref: '#/components/schemas/TransactionalEmailRecipient'
        cc:
          type: array
          items:
            $ref: '#/components/schemas/TransactionalEmailRecipient'
        bcc:
          type: array
          items:
            $ref: '#/components/schemas/TransactionalEmailRecipient'
      type: object
    TransactionalEmailRecipient:
      required:
        - email
      properties:
        email:
          type: string
          format: email
          example: john.doe@example.com
        name:
          type: string
          maxLength: 128
          minLength: 1
          example: John Doe
        status:
          type: string
          enum:
            - unknown
            - sent
            - rejected
            - opened
            - bounced
            - reported_spam
          readOnly: true
      type: object
    TransactionalEmailAttachment:
      required:
        - fileName
        - content
        - mimeType
      properties:
        fileName:
          type: string
          maxLength: 128
          minLength: 3
          example: pixel.png
        mimeType:
          description: The MIME attachment type
          type: string
          maxLength: 128
          minLength: 3
          example: image/png
        content:
          description: The base64-encoded attachment
          type: string
          format: base64
          example: >-
            iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mOUua1dDwAD4AGjnrXmUAAAAABJRU5ErkJggg==
      type: object
    TransactionalEmailsTemplateDetails:
      type: object
      allOf:
        - $ref: '#/components/schemas/TransactionalEmailsTemplateListElement'
        - properties:
            content:
              $ref: '#/components/schemas/TransactionalEmailTemplateContent'
          type: object
    TransactionalEmailsTemplateListElement:
      properties:
        templateId:
          description: Transactional email template ID
          type: string
          readOnly: true
          example: p
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: >-
            https://api3.getresponse360.com/v3/transactional-emails/templates/tRe4i
        subject:
          description: The template subject
          type: string
          example: Order Confirmation Template
        createdOn:
          description: The creation date
          type: string
          format: date-time
        updatedOn:
          description: The date of the last template update
          type: string
          format: date-time
        editor:
          description: The Editor type
          allOf:
            - type: string
              enum:
                - html
                - wysiwyg
      type: object
    CreateTransactionalEmailTemplate:
      required:
        - subject
      properties:
        subject:
          description: The template subject
          type: string
          example: Order Confirmation - Example Shop
        content:
          $ref: '#/components/schemas/TransactionalEmailTemplateContent'
      type: object
    TransactionalEmailTemplateContent:
      description: The template content. At least one field is required
      properties:
        plain:
          description: The plain text equivalent of template content
          type: string
          example: Your order has been confirmed. Thank you for shopping with us!
        html:
          description: The template content in HTML
          type: string
          example: >-
            <h1>Your order has been confirmed</h1><strong>Thank you for shopping
            with us!</strong>
      type: object
    TransactionalEmailRecipientClickedLink:
      properties:
        url:
          type: string
          format: uri
          readOnly: true
          example: https://example.com
        clickedOn:
          type: string
          format: date-time
          readOnly: true
          example: 2019-06-02T09:31:20+0200
      type: object
    TransactionalEmailRecipientsDetails:
      required:
        - to
      properties:
        to:
          $ref: '#/components/schemas/TransactionalEmailRecipient'
        cc:
          type: array
          items:
            $ref: '#/components/schemas/TransactionalEmailRecipient'
        bcc:
          type: array
          items:
            $ref: '#/components/schemas/TransactionalEmailRecipient'
      type: object
    TransactionalEmailTag:
      required:
        - tagId
      properties:
        tagId:
          type: string
          example: vBd5
      type: object
    TransactionalEmailRecipientSentOnStatus:
      properties:
        sentOn:
          type: string
          format: date-time
          readOnly: true
          example: 2019-06-02T09:30:43+0200
          nullable: true
      type: object
    TransactionalEmailListElement:
      required:
        - transactionalEmailId
        - recipients
        - fromField
        - subject
      properties:
        transactionalEmailId:
          type: string
          readOnly: true
          example: tRe4i
        fromField:
          $ref: '#/components/schemas/FromFieldReference'
        recipients:
          allOf:
            - required:
                - to
              properties:
                to:
                  allOf:
                    - $ref: '#/components/schemas/TransactionalEmailRecipient'
                    - properties:
                        statuses:
                          $ref: >-
                            #/components/schemas/TransactionalEmailRecipientSentOnStatus
                      type: object
              type: object
        subject:
          type: string
          maxLength: 512
          minLength: 1
          example: Order Confirmation - Example Shop
        tag:
          $ref: '#/components/schemas/TransactionalEmailTag'
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api3.getresponse360.com/v3/transactional-emails/tRe4i
      type: object
    TransactionalEmailStatistics:
      properties:
        timeFrame:
          description: >-
            The statistics time frame in the ISO 8601 date format with duration
            interval
          type: string
          pattern: >-
            /^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?(\/)P(?=\w*\d)(?:\d+Y|Y)?(?:\d+M|M)?(?:\d+W|W)?(?:\d+D|D)?(?:T(?:\d+H|H)?(?:\d+M|M)?(?:\d+(?:\­.\d{1,2})?S|S)?)?$/
          example: 2014-09-20T00:00:00+0000/P2M18DT10H0M0S
        sent:
          type: integer
          format: int64
        opened:
          type: integer
          format: int64
        bounced:
          type: integer
          format: int64
        complaint:
          type: integer
          format: int64
      type: object
    TransactionalEmail:
      properties:
        transactionalEmailId:
          type: string
          readOnly: true
          example: tRe4i
      type: object
    FromField:
      properties:
        fromFieldId:
          description: The 'From' address ID
          type: string
          readOnly: true
          example: TTzW
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/from-fields/TTzW
        email:
          description: The email address
          type: string
          format: email
          example: jsmith@example.com
        rewrittenEmail:
          description: Email address used to send message.
          type: string
          format: email
          example: jsmith@example.com
          nullable: true
        name:
          description: The name connected to the email address
          type: string
          maxLength: 64
          minLength: 2
          example: John Smith
        isActive:
          $ref: '#/components/schemas/StringBooleanEnum'
        isDefault:
          $ref: '#/components/schemas/StringBooleanEnum'
        createdOn:
          description: The creation date
          type: string
          format: date-time
          readOnly: true
        domain:
          properties:
            status:
              description: Status of domain
              type: string
              enum:
                - confirmed
                - unconfirmed
                - deleted
                - can_not_be_used
                - dns_configuration_pending
              nullable: true
            DKIMWarning:
              description: DKIM warning status
              type: string
              enum:
                - not_recommended
                - can_not_be_used
                - not_authenticated
                - at_risk
              nullable: true
          type: object
      type: object
      x-konfig-properties:
        isActive:
          description: Flag if the 'From' address is active
          readOnly: true
          example: 'true'
        isDefault:
          description: Flag if the 'From' address is default for the account
          readOnly: true
          example: 'true'
    FromFieldReference:
      required:
        - fromFieldId
      properties:
        fromFieldId:
          description: The 'From' address ID
          type: string
          example: V
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/from-fields/V
      type: object
    RssNewsletterSendSettingsListing:
      required:
        - frequency
        - filter
      properties:
        frequency:
          description: When to send the message
          type: string
          example: asap
        filter:
          description: The filter settings for an RSS post
          type: string
          enum:
            - recent
            - engaged
            - shared
            - commented
        maxArticles:
          description: How many articles to display in a list
          type: integer
          format: int32
          maximum: 30
          minimum: 1
        selectedCampaigns:
          $ref: '#/components/schemas/MessageSendSettingSelectedCampaigns'
        selectedSegments:
          $ref: '#/components/schemas/MessageSendSettingSelectedSegments'
        selectedSuppressions:
          $ref: '#/components/schemas/MessageSendSettingSelectedSuppressions'
        excludedCampaigns:
          $ref: '#/components/schemas/MessageSendSettingExcludedCampaigns'
        excludedSegments:
          $ref: '#/components/schemas/MessageSendSettingExcludedSegments'
      type: object
      discriminator:
        propertyName: frequency
        mapping:
          asap: '#/components/schemas/RssNewsletterListSendAsapSettings'
          daily: '#/components/schemas/RssNewsletterListSendDailySettings'
          weekly: '#/components/schemas/RssNewsletterListSendWeeklySettings'
          monthly: '#/components/schemas/RssNewsletterListSendMonthlySettings'
    RssNewsletterListing:
      required:
        - rssNewsletterId
        - href
      properties:
        rssNewsletterId:
          description: The RSS newsletter ID
          type: string
          readOnly: true
          example: dGer
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/rss-newsletters/dGer
        rssFeedUrl:
          description: The URL for the RSS Feed
          type: string
          format: uri
          example: http://blog.getresponse.com
        subject:
          description: The RSS message subject
          type: string
          maxLength: 255
          minLength: 1
          example: My rss to newsletters
        name:
          description: How your newsletters will be seen inside the application
          type: string
          maxLength: 255
          minLength: 1
          example: rsstest0
        status:
          $ref: '#/components/schemas/StatusEnum'
        editor:
          $ref: '#/components/schemas/MessageEditorEnum'
        fromField:
          $ref: '#/components/schemas/FromFieldReference'
        replyTo:
          $ref: '#/components/schemas/FromFieldReference'
        content:
          $ref: '#/components/schemas/MessageContent'
        sendSettings:
          $ref: '#/components/schemas/RssNewsletterSendSettingsListing'
        createdOn:
          description: The creation date
          type: string
          format: date-time
          readOnly: true
      type: object
      x-konfig-properties:
        status:
          description: The status of the RSS newsletter
          example: enabled
        fromField:
          description: The 'From' email address used for the message
        replyTo:
          description: The email that will be used as a reply-to address
        sendSettings:
          description: How the message will be delivered to the subscriber
    MessageSendSettingSelectedCampaigns:
      description: The list of campaign IDs to choose subscribers from.
      items:
        type: string
        example: C
    MessageSendSettingSelectedSegments:
      description: The list of segment IDs to choose subscribers from.
      items:
        type: string
        example: Se
    MessageSendSettingSelectedSuppressions:
      description: The list of suppression IDs to exclude subscribers.
      items:
        type: string
        example: Ss
    MessageSendSettingExcludedCampaigns:
      description: The list of campaign IDs to exclude subscribers.
      items:
        type: string
        example: eC
    MessageSendSettingExcludedSegments:
      description: The list of segment IDs to exclude subscribers.
      items:
        type: string
        example: eSs
    MessageSendSettingSelectedContacts:
      description: The list of selected contacts.
      items:
        type: string
        example: eSs
    BaseCampaign:
      properties:
        campaignId:
          description: Campaign ID
          type: string
          readOnly: true
          example: V3J
        name:
          description: >-
            The campaign (list) name.


            * You can use each list name just once in your account.


            * The name must be between 3-64 characters.


            * All alphabets supported by GetResponse, including right-to-left
            ones, are allowed.


            * You can use upper and lower case letters, numbers, spaces and
            special characters apart from the ones listed below.


            * You can’t use emojis and the following special characters: `/`,
            `\`, `@`, and `[` or `]`.
          type: string
          maxLength: 64
          minLength: 3
          example: my_campaign
        techName:
          description: >-
            Tech name is a unique internal ID of a list used for [FTP
            imports](https://www.getresponse.com/help/how-to-import-files-via-ftp.html)
            (available in GetResponse MAX accounts only)
          type: string
          readOnly: true
          example: my_campaign
        languageCode:
          description: >-
            The campaign language code according to ISO 639-1, plus: zt -
            Chinese (Traditional), fs - Afghan Persian (Dari), md - Moldavian
          type: string
          example: EN
        isDefault:
          $ref: '#/components/schemas/StringBooleanEnum'
        createdOn:
          description: The date of creation
          type: string
          format: date-time
          readOnly: true
          example: 2014-02-12T15:19:21+0000
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/campaigns/V3J
      type: object
      x-konfig-properties:
        isDefault:
          description: Is the campaign default
          example: 'true'
    CampaignAdditionalProperties:
      properties:
        postal:
          $ref: '#/components/schemas/CampaignPostal'
        confirmation:
          $ref: '#/components/schemas/CampaignConfirmation'
        optinTypes:
          $ref: '#/components/schemas/CampaignOptinTypes'
        subscriptionNotifications:
          $ref: '#/components/schemas/CampaignSubscriptionNotifications'
        profile:
          $ref: '#/components/schemas/CampaignProfile'
      type: object
    Campaign:
      required:
        - name
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseCampaign'
        - $ref: '#/components/schemas/CampaignAdditionalProperties'
    CampaignConfirmation:
      properties:
        fromField:
          $ref: '#/components/schemas/FromFieldReference'
        redirectType:
          description: >-
            What will happen after email confirmation. The values allowed
            include: hosted (the subscriber will stay on the default GetResponse
            website), customUrl (the subscriber will be redirected to a custom
            URL provided by the user).
          type: string
          enum:
            - hosted
            - customUrl
          example: hosted
        mimeType:
          description: The MIME type for the confirmation message
          type: string
          enum:
            - text/html
            - text/plain
            - combo
          example: text/plain
        redirectUrl:
          description: >-
            Required if the redirectType is customUrl. The URL a subscriber will
            be redirected to if the redirectType is set to customUrl.
          type: string
          format: uri
          example: http://example.com
        replyTo:
          $ref: '#/components/schemas/FromFieldReference'
        subscriptionConfirmationBodyId:
          description: The subscription confirmation body ID
          type: string
          example: asS1
        subscriptionConfirmationSubjectId:
          description: Subscription confirmation subject ID
          type: string
          example: TEww
      type: object
    CampaignOptinTypes:
      properties:
        email:
          description: >-
            Single opt-in: confirmed opt-in disabled. Double opt-in: confirmed
            opt-in enabled. You can find more information
            [here](https://www.getresponse.com/resources/glossary/confirmed-opt-in.html)
          type: string
          enum:
            - single
            - double
          example: single
        api:
          description: >-
            Single opt-in: confirmed opt-in disabled. Double opt-in: confirmed
            opt-in enabled. You can find more information
            [here](https://www.getresponse.com/resources/glossary/confirmed-opt-in.html)
          type: string
          enum:
            - single
            - double
          example: single
        import:
          description: >-
            Single opt-in: confirmed opt-in disabled. Double opt-in: confirmed
            opt-in enabled. You can find more information
            [here](https://www.getresponse.com/resources/glossary/confirmed-opt-in.html)
          type: string
          enum:
            - single
          example: single
        webform:
          description: >-
            Single opt-in: confirmed opt-in disabled. Double opt-in: confirmed
            opt-in enabled. You can find more information
            [here](https://www.getresponse.com/resources/glossary/confirmed-opt-in.html)
          type: string
          enum:
            - single
            - double
          example: single
      type: object
    CampaignPostal:
      properties:
        addPostalToMessages:
          $ref: '#/components/schemas/StringBooleanEnum'
        city:
          description: The city, free-text
          type: string
          example: London
        companyName:
          description: The company name, free-text
          type: string
          example: Company Ltd.
        country:
          description: The country name, free-text
          type: string
          example: Great Britain
        design:
          description: >-
            How the postal address will display in messages. The available
            fields include: [[name]], [[address]], [[city]], [[state]] [[zip]],
            [[country]]
          type: string
          example: '[[name]] from [[city]] in [[country]]'
        state:
          description: The state, free-text
          type: string
          example: Shire
        street:
          description: The street, free-text
          type: string
          example: Bilbo Baggins Av
        zipCode:
          description: The ZIP code
          type: string
          example: 81-611
      type: object
      x-konfig-properties:
        addPostalToMessages:
          description: >-
            Should the postal address be included in all message footers for
            this campaign (mandatory for Canada and the US)
          example: 'true'
    CampaignProfile:
      properties:
        title:
          description: The profile title
          type: string
          maxLength: 64
          minLength: 2
          example: title
        description:
          description: The campaign description
          type: string
          maxLength: 255
          minLength: 2
          example: campaign description
        industryTagId:
          description: The industry tag ID
          type: string
          format: integer
          example: '1'
        logo:
          description: The logo URL
          type: string
          format: uri
          example: http://logos.com/imageupdated.jpg
        logoLinkUrl:
          description: The logo link URL
          type: string
          format: uri
          example: http://somePageLogoLinkUpdated.com
      type: object
    CampaignSubscriptionNotifications:
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
        recipients:
          type: array
          items:
            $ref: '#/components/schemas/FromFieldReference'
      type: object
      x-konfig-properties:
        status:
          description: >-
            Are notifications enabled. Possible values include: enabled,
            disabled.
          example: enabled
    Account:
      properties:
        accountId:
          description: Account ID
          type: string
          readOnly: true
          example: VfEy1
        email:
          description: Email
          type: string
          format: email
          readOnly: true
          example: john.smith@test.com
        countryCode:
          readOnly: true
          $ref: '#/components/schemas/AccountDetailsCountryCode'
        industryTag:
          readOnly: true
          $ref: '#/components/schemas/IndustryTagId'
        timeZone:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/TimezoneName'
            - $ref: '#/components/schemas/TimezoneOffset'
        href:
          description: Direct URL to resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/accounts
        firstName:
          description: First name
          type: string
          maxLength: 64
          minLength: 2
          example: John
        lastName:
          description: Last name
          type: string
          maxLength: 64
          minLength: 2
          example: Smith
        companyName:
          description: Company name
          type: string
          maxLength: 64
          minLength: 2
          example: MyBigCompany
        phone:
          description: Phone number
          type: string
          maxLength: 32
          minLength: 2
          example: '+00155555555'
        state:
          description: State
          type: string
          maxLength: 40
          minLength: 2
          example: Oklahoma
        city:
          description: City
          type: string
          example: Alderson
        street:
          description: Street
          type: string
          maxLength: 64
          minLength: 2
          example: Sunset blv.
        zipCode:
          description: ZIP Code
          type: string
          maxLength: 9
          minLength: 2
          example: 81-611
        numberOfEmployees:
          description: Numbers of employees
          type: string
          enum:
            - '50'
            - '250'
            - '500'
            - more
          example: '500'
        timeFormat:
          description: Account time notation
          type: string
          enum:
            - 12h
            - 24h
          example: 24h
      type: object
    AutoresponderTriggerSettings:
      required:
        - type
        - dayOfCycle
        - selectedCampaigns
      properties:
        type:
          description: The trigger type
          type: string
          items:
            type: string
            enum:
              - onday
          default: onday
        dayOfCycle:
          description: >-
            For onday type the day of the autoresponder cycle in the 0-9999
            format
          type: integer
          format: int32
          maximum: 9999
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
        autoresponder:
          type: string
          readOnly: true
          nullable: true
        newsletter:
          type: string
          readOnly: true
          nullable: true
        clickTrackId:
          type: string
          readOnly: true
          nullable: true
        goal:
          type: string
          readOnly: true
          nullable: true
        custom:
          type: string
          readOnly: true
          nullable: true
        newCustomValue:
          type: string
          readOnly: true
          nullable: true
        action:
          type: string
          readOnly: true
          nullable: true
        selectedCampaigns:
          $ref: '#/components/schemas/MessageSendSettingSelectedCampaigns'
        selectedSegments:
          $ref: '#/components/schemas/MessageSendSettingSelectedSegments'
      type: object
    AutoresponderSendSettings:
      required:
        - type
      properties:
        type:
          description: When to send the message
          type: string
          enum:
            - signup
            - immediately
            - delay
            - custom
        delayInHours:
          description: >-
            How many hours to delay the message after a trigger occured, in the
            0-23 format
          type: integer
          format: int32
          maximum: 23
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
        sendAtHour:
          description: >-
            The specific hour on which the message will be sent, in the 0-23
            format
          type: integer
          format: int32
          maximum: 23
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
        recurrence:
          $ref: '#/components/schemas/StringBooleanEnum'
        timeTravel:
          $ref: '#/components/schemas/StringBooleanEnum'
        excludedDaysOfWeek:
          description: >-
            The days of the week to exclude from message sending (the message
            will be sent on the next non-excluded day after the trigger)
          type: array
          items:
            type: string
            enum:
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
              - Sunday
        externalLexpad:
          description: >-
            External Lexpad settings for the message, read more: [External
            Lexpad](https://apidocs.getresponse.com/v3/dynamic-content/external-lexpad)
          nullable: true
          allOf:
            - $ref: '#/components/schemas/ExternalLexpad'
      type: object
      discriminator:
        propertyName: type
        mapping:
          signup: '#/components/schemas/AutoresponderSendSignupSettings'
          immediately: '#/components/schemas/AutoresponderSendImmediatelySettings'
          delay: '#/components/schemas/AutoresponderSendDelaySettings'
          custom: '#/components/schemas/AutoresponderSendCustomSettings'
      x-konfig-properties:
        recurrence:
          description: >-
            Should the message be sent every time the trigger occurs (example:
            each click)
          example: 'false'
        timeTravel:
          description: >-
            Should the message be sent in the user's or the subscriber's time
            zone
          example: 'true'
    Autoresponder:
      required:
        - autoresponderId
        - href
      properties:
        autoresponderId:
          description: The autoresponder ID
          type: string
          readOnly: true
          example: Q
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/autoresponders/Q
        name:
          description: The autoresponder name
          type: string
          maxLength: 128
          minLength: 2
          example: Message 2
        subject:
          description: The autoresponder message subject
          type: string
          maxLength: 128
          minLength: 2
          example: test12
        campaignId:
          description: >-
            The campaign ID. The system will assign the autoresponder to a
            default campaign if you don't provide a specific campaign ID.
          type: string
          example: V
        status:
          $ref: '#/components/schemas/StatusEnum'
        editor:
          $ref: '#/components/schemas/MessageEditorEnum'
        fromField:
          $ref: '#/components/schemas/FromFieldReference'
        replyTo:
          $ref: '#/components/schemas/FromFieldReference'
        content:
          $ref: '#/components/schemas/MessageContent'
        flags:
          $ref: '#/components/schemas/MessageFlagsArray'
        sendSettings:
          $ref: '#/components/schemas/AutoresponderSendSettings'
        triggerSettings:
          $ref: '#/components/schemas/AutoresponderTriggerSettings'
        statistics:
          description: The autoresponder statistics summary
          type: object
          readOnly: true
          allOf:
            - properties:
                delivered:
                  type: number
                  format: float
                  example: 0
                openRate:
                  type: number
                  format: float
                  example: 0
                clickRate:
                  type: number
                  format: float
                  example: 0
              type: object
        createdOn:
          description: The creation date
          type: string
          format: date-time
          readOnly: true
      type: object
      x-konfig-properties:
        status:
          description: The autoresponder status
          example: enabled
        fromField:
          description: The from email address used for the message
        replyTo:
          description: The email that will be used as a reply-to address
        sendSettings:
          description: How the message will be delivered to the subscriber
        triggerSettings:
          description: 'The conditions that will trigger the autoresponder '
    RssNewsletterSendSettingsDetails:
      required:
        - frequency
        - filter
      properties:
        frequency:
          description: When to send the message
          type: string
          example: asap
        filter:
          description: The filter settings for an RSS post
          type: string
          enum:
            - recent
            - engaged
            - shared
            - commented
        maxArticles:
          description: How many articles to display in a list
          type: integer
          format: int32
          maximum: 30
          exclusiveMaximum: false
          minimum: 1
          exclusiveMinimum: false
        selectedCampaigns:
          $ref: '#/components/schemas/MessageSendSettingSelectedCampaigns'
        selectedSegments:
          $ref: '#/components/schemas/MessageSendSettingSelectedSegments'
        selectedSuppressions:
          $ref: '#/components/schemas/MessageSendSettingSelectedSuppressions'
        excludedCampaigns:
          $ref: '#/components/schemas/MessageSendSettingExcludedCampaigns'
        excludedSegments:
          $ref: '#/components/schemas/MessageSendSettingExcludedSegments'
        selectedContacts:
          $ref: '#/components/schemas/MessageSendSettingSelectedContacts'
      type: object
      discriminator:
        propertyName: frequency
        mapping:
          asap: '#/components/schemas/RssNewsletterSendAsapSettings'
          daily: '#/components/schemas/RssNewsletterSendDailySettings'
          weekly: '#/components/schemas/RssNewsletterSendWeeklySettings'
          monthly: '#/components/schemas/RssNewsletterSendMonthlySettings'
    RssNewsletter:
      required:
        - rssNewsletterId
        - href
      properties:
        rssNewsletterId:
          description: The RSS newsletter ID
          type: string
          readOnly: true
          example: dGer
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/rss-newsletters/dGer
        rssFeedUrl:
          description: The URL for the RSS Feed
          type: string
          format: uri
          example: http://blog.getresponse.com
        subject:
          description: The RSS message subject
          type: string
          maxLength: 255
          minLength: 1
          example: My rss to newsletters
        name:
          description: How your newsletters will be seen inside the application
          type: string
          maxLength: 255
          minLength: 1
          example: rsstest0
        status:
          $ref: '#/components/schemas/StatusEnum'
        editor:
          $ref: '#/components/schemas/MessageEditorEnum'
        fromField:
          $ref: '#/components/schemas/FromFieldReference'
        replyTo:
          $ref: '#/components/schemas/FromFieldReference'
        content:
          $ref: '#/components/schemas/MessageContent'
        sendSettings:
          $ref: '#/components/schemas/RssNewsletterSendSettingsDetails'
        createdOn:
          description: The creation date
          type: string
          format: date-time
          readOnly: true
      type: object
      x-konfig-properties:
        status:
          description: The status of the RSS newsletter
          example: enabled
        fromField:
          description: The 'From' email address used for the message
        replyTo:
          description: The email that will be used as a reply-to address
        sendSettings:
          description: How the message will be delivered to the subscriber
    MessageFlagsArray:
      description: The message flags.
      type: array
      items:
        type: string
        enum:
          - openrate
          - clicktrack
          - google_analytics
    MessageFlagsString:
      description: >-
        Comma-separated list of message flags. The possible values are:
        `openrate`, `clicktrack`, and `google_analytics`.
      type: string
      example: openrate,clicktrack,google_analytics
    MessageEditorEnum:
      description: >-
        How the message was created: `custom` means a custom-made message,
        `text` means plain text content, `getresponse` means that the message
        was created using the GetResponse editor.
      type: string
      enum:
        - custom
        - text
        - getresponse
        - legacy
        - html2
    MessageContent:
      description: The message content.
      properties:
        html:
          description: The message content in HTML
          type: string
          maxLength: 524288
          example: >-
            <h1>test 12</h1><p>Some test <a
            href="http://example.com">http://example.com</a></p>
        plain:
          description: The plain text equivalent of the message content
          type: string
          maxLength: 524288
          example: test 12 Some test
      type: object
    Contact:
      required:
        - contactId
        - href
        - email
      properties:
        contactId:
          type: string
          readOnly: true
          example: pV3r
        name:
          type: string
          maxLength: 128
          minLength: 1
          example: John Doe
        origin:
          type: string
          enum:
            - import
            - email
            - www
            - panel
            - leads
            - sale
            - api
            - forward
            - survey
            - iphone
            - copy
            - landing_page
            - website_builder_elegant
          readOnly: true
        timeZone:
          description: >-
            The time zone of a contact, uses the time zone database format
            (https://www.iana.org/time-zones)
          type: string
          readOnly: true
          example: Europe/Warsaw
        activities:
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/contacts/pV3r/activities
        changedOn:
          type: string
          format: date-time
          readOnly: true
          example: 2017-12-19T13:11:48+0000
        createdOn:
          type: string
          format: date-time
          readOnly: true
          example: 2017-03-02T07:30:49+0000
        campaign:
          type: object
          $ref: '#/components/schemas/CampaignReference'
        email:
          type: string
          format: email
          example: john.doe@example.com
        dayOfCycle:
          description: >-
            The day on which the contact is in the Autoresponder cycle. `null`
            indicates the contacts is not in the cycle.
          type: string
          example: '42'
          nullable: true
        scoring:
          description: Contact scoring, pass null to remove the score from a contact
          type: number
          example: 8
          nullable: true
        engagementScore:
          description: >-
            Engagement Score is a feature that presents a visual estimate of a
            contact's engagement with mailings. The score is based on the
            contact's interactions with your e-mails. Via API, it's returned in
            the form of numbers ranging from 1 (Not Engaged) to 5 (Highly
            Engaged).
          type: integer
          format: int32
          maximum: 5
          minimum: 1
          readOnly: true
          example: 3
          nullable: true
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/contacts/pV3r
      type: object
    NewContactCustomFieldValue:
      required:
        - customFieldId
        - value
      properties:
        customFieldId:
          description: Custom field ID
          type: string
          example: kL6Nh
        value:
          type: array
          items:
            type: string
            example: 18-35
      type: object
    NewContactTag:
      required:
        - tagId
      properties:
        tagId:
          type: string
          example: m7E2
      type: object
    ContactTag:
      properties:
        tagId:
          type: string
          example: hR
        name:
          type: string
          example: super_promo
        href:
          type: string
          format: uri
          example: https://api.getresponse.com/v3/tags/hR
        color:
          type: string
          deprecated: true
      type: object
    NewContactTags:
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/NewContactTag'
      type: object
    NewContactCustomFieldValues:
      properties:
        customFieldValues:
          type: array
          items:
            $ref: '#/components/schemas/NewContactCustomFieldValue'
      type: object
    NewContact:
      required:
        - email
        - campaign
      type: object
      allOf:
        - $ref: '#/components/schemas/Contact'
        - properties:
            ipAddress:
              description: The contact's IP address. IPv4 and IPv6 formats are accepted.
              example: 1.2.3.4
              oneOf:
                - type: string
                  format: ipv4
                - type: string
                  format: ipv6
          type: object
        - $ref: '#/components/schemas/NewContactTags'
        - $ref: '#/components/schemas/NewContactCustomFieldValues'
    UpdateContact:
      type: object
      allOf:
        - $ref: '#/components/schemas/Contact'
        - properties:
            note:
              type: string
              maxLength: 255
              minLength: 0
              nullable: true
          type: object
        - $ref: '#/components/schemas/NewContactTags'
        - $ref: '#/components/schemas/NewContactCustomFieldValues'
    CustomFieldTypeEnum:
      type: string
      enum:
        - text
        - textarea
        - radio
        - checkbox
        - single_select
        - multi_select
        - number
        - date
        - datetime
        - country
        - currency
        - phone
        - gender
        - ip
        - url
    CustomFieldFormatEnum:
      type: string
      enum:
        - text
        - textarea
        - radio
        - checkbox
        - single_select
        - multi_select
    CustomField:
      properties:
        customFieldId:
          description: Custom field ID
          type: string
          readOnly: true
          example: pas
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/custom-fields/pas
        name:
          description: >-
            The name of the custom field. It must meet the following
            requirements:
             * be unique
             * use only lowercase letters, underscores and digits
             * not be equal to one of the merge words used in messages, i.e. `name, email, twitter, facebook, buzz, myspace, linkedin, digg, googleplus, pinterest, responder, campaign, change`.
          type: string
          maxLength: 128
          minLength: 1
          example: office_phone_number
        type:
          $ref: '#/components/schemas/CustomFieldTypeEnum'
        valueType:
          description: >-
            Type of returning value, it returns `format` options extended by a
            `string` option if the `format` was not defined
          type: string
          enum:
            - string
            - number
            - date
            - datetime
            - country
            - currency
            - phone
            - gender
            - ip
            - url
          readOnly: true
          example: phone
        format:
          $ref: '#/components/schemas/CustomFieldFormatEnum'
        fieldType:
          description: Returns the same data as `type`
          type: string
          readOnly: true
          example: text
          deprecated: true
        hidden:
          $ref: '#/components/schemas/StringBooleanEnum'
        values:
          description: >-
            The list of assigned values (zero or more - depending on the custom
            field type. Please see description)
          type: array
          items:
            type: string
            example: '+48600100200'
      type: object
      x-konfig-properties:
        type:
          description: |-
            The custom field `type` accepts the following values:
             * `text` - text input (doesn't require values in the `values` field, you can pass empty array)
             * `textarea` - textarea input (does n't require values in the `values` field, you can pass empty array)
             * `radio` - radio input (requires at least 2 values in the `values` field)
             * `checkbox` - checkbox input (requires at least 2 values in the `values` field)
             * `single_select` - single select input (requires at least 2 values in the `values` field)
             * `multi_select` - multi select input (requires at least 2 values in the `values` field)
             * `number` - text input for a numeric value (doesn't require values in the `values` field, you can pass empty array)
             * `date` - text input for a date (doesn't require values in the `values` field, you can pass empty array)
             * `datetime` - text input for date and time (doesn't require values in the `values` field, you can pass empty array)
             * `country` - multi select input for a country (requires at least 2 country names in the `values` field)
             * `currency` - multi select for a currency, allows all ISO 4217 currency codes (requires at least 2 currency codes in the `values` field)
             * `phone` - text input for a phone number (doesn't require values in the `values` field, you can pass empty array)
             * `gender` - radio input for gender (requires 2 values in the `values` field: `Male` and `Female`, that can be translated into one of the languages supported by GetResponse)
             * `ip` - text input for an IP address (doesn't require values in the `values` field, you can pass empty array)
             * `url` - text input for a URL (doesn't require values in the `values` field, you can pass empty array).
          example: phone
        format:
          description: |-
            The custom field `format` accepts following values:
             * `text` - text input (doesn't require values in the `values` field, you can pass empty array)
             * `textarea` - textarea input (doesn't require values in the `values` field, you can pass empty array)
             * `radio` - radio input (requires at least 2 values in the `values` field)
             * `checkbox` - checkbox input (requires at least 2 values in the `values` field)
             * `single_select` - single select input (requires at least 2 values in the `values` field)
             * `multi_select` - multi select input (requires at least 2 values in the `values` field).
          example: text
        hidden:
          description: Whether the custom field is visible to contacts
          example: 'false'
    UpdateCustomField:
      required:
        - hidden
        - values
      properties:
        hidden:
          $ref: '#/components/schemas/StringBooleanEnum'
        values:
          description: >-
            The list of assigned values (zero or more - depending on the custom
            field type. Please see description)
          type: array
          items:
            type: string
            example: '+48600100200'
      type: object
      x-konfig-properties:
        hidden:
          description: Whether the custom field is visible to contacts
          example: 'false'
    UpdatePredefinedField:
      required:
        - value
      properties:
        value:
          type: string
          maxLength: 350
          minLength: 1
          pattern: ^[A-Za-z_]{1,350}$
          example: my_new_value
      type: object
    UpdateCallbacks:
      properties:
        url:
          description: >-
            URL to use to post notifications, required if callbacks are not yet
            enabled
          type: string
          format: uri
          example: https://example.com/callback
        actions:
          type: object
          $ref: '#/components/schemas/CallbackActions'
      type: object
    TriggerCustomEvent:
      required:
        - name
        - contactId
      properties:
        name:
          description: >-
            The name of custom event. Custom event with this name must already
            exist
          type: string
          maxLength: 64
          minLength: 3
          pattern: ^[a-z0-9_]{3,64}$
          example: lesson_finished
        contactId:
          description: The contact ID
          type: string
          example: lTgH5
        attributes:
          description: The attributes for the trigger
          type: array
          items:
            $ref: '#/components/schemas/TriggerCustomEventAttribute'
      type: object
    TriggerCustomEventAttribute:
      required:
        - name
        - value
      properties:
        name:
          description: >-
            The name of the attribute. It must be already defined for the custom
            event
          type: string
          maxLength: 64
          minLength: 3
          example: lesson_name
        value:
          example: lesson_3
          $ref: '#/components/schemas/TriggerCustomEventAttributeValue'
      type: object
    TriggerCustomEventAttributeValue:
      description: >-
        The value of the attribute. Value type depends on the attribute
        definition
      oneOf:
        - type: string
          maxLength: 255
          minLength: 1
          example: lesson_3
        - $ref: '#/components/schemas/StringBooleanEnum'
        - type: boolean
        - description: 'Date in extended ISO 8601 datetime format: *2019-01-01T08:00:00+00*'
          type: string
          format: date-time
          example: 2019-01-01T08:00:00+0000
        - type: integer
          format: int64
          example: 1500
    CustomEvent:
      required:
        - name
        - attributes
      properties:
        name:
          description: Unique name of custom event
          type: string
          pattern: ^[a-z0-9_]{3,64}$
          example: sample_custom_event
        attributes:
          description: Optional collection of attributes
          type: array
          items:
            $ref: '#/components/schemas/CustomEventAttribute'
      type: object
    CustomEventAttribute:
      required:
        - name
        - type
      properties:
        name:
          description: Unique name of attribute
          type: string
          pattern: ^[a-z0-9_]{3,64}$
          example: sample_attribute
        type:
          description: Type of attribute
          enum:
            - string
            - number
            - datetime
            - boolean
          example: string
          type: string
      type: object
    FormVariant:
      properties:
        variant:
          description: The index of variants
          type: string
          readOnly: true
          example: '0'
        variantName:
          type: string
          example: Variant A
        winner:
          description: Is this variant the winner in the A/B test
          $ref: '#/components/schemas/StringBooleanEnum'
        status:
          type: string
          enum:
            - published
            - unpublished
            - disabled
        createdOn:
          type: string
          format: date-time
          example: 2018-07-11T13:37:25+0000
        statistics:
          $ref: '#/components/schemas/FormStatistics'
      type: object
    FormVariantDetails:
      properties:
        formId:
          type: string
          readOnly: true
          example: pL4e
        webformId:
          description: Same as `formId`
          type: string
          readOnly: true
          example: pL4e
        variant:
          description: The index of variants
          type: string
          readOnly: true
          example: '0'
        variantName:
          type: string
          example: Variant A
        winner:
          description: Is this variant the winner in the A/B test
          type: string
          enum:
            - 'yes'
            - 'no'
        status:
          type: string
          enum:
            - published
            - unpublished
            - disabled
        createdOn:
          type: string
          format: date-time
          example: 2018-07-09T15:45:12+0000
        numberOfVisitors:
          description: The total number of form visitors
          type: integer
          format: int64
          example: 152
        numberOfUniqueVisitors:
          description: The number of unique form visitors
          type: integer
          format: int64
          example: 136
        numberOfSubscribers:
          description: The number of visitors who subscribed through this form
          type: integer
          format: int64
          example: 94
        subscriptionRate:
          description: The ratio of `numberOfSubscribers` to `numberOfVisitors`
          type: number
          format: double
          example: 0.62
      type: object
    FormDetails:
      type: object
      allOf:
        - $ref: '#/components/schemas/Form'
        - properties:
            settings:
              $ref: '#/components/schemas/FormSettings'
            variants:
              type: array
              items:
                $ref: '#/components/schemas/FormVariant'
          type: object
    FormSettings:
      properties:
        optin:
          description: >-
            `single` - Single opt-in means that the contact will be added
            without confirming their subscription first. `double` - Double
            opt-in means that the contact will receive a subscription
            confirmation email.
          type: string
          enum:
            - single
            - double
          example: single
        phase:
          description: >-
            The contact who subscribed via this form will be added to the
            selected day in the autoresponder cycle. If null, the contact won't
            be added to the cycle.
          type: integer
          format: int32
          maximum: 9999
          minimum: 0
          example: 5
          nullable: true
        thankYouType:
          description: What should happen when a new contact subscribes via the form.
          type: string
          enum:
            - stay_on_page
            - default
            - custom_url
          example: stay_on_page
        thankYouUrl:
          description: >-
            The URL used to redirect the newly subscribed contacts when they
            complete this form. Used if `thankYouType` is `custom_url`.
          type: string
          format: uri
          example: https://example.com/thank-you
          nullable: true
        alreadySubscribedType:
          description: What to do when the address already exists in the campaign
          type: string
          enum:
            - stay_on_page
            - default
            - custom_url
          example: stay_on_page
        alreadySubscribedUrl:
          description: >-
            The URL used to redirect the already subscribed contacts when they
            complete this form. Used if `alreadySubscribedType` is `custom_url`.
          type: string
          format: uri
          example: https://example.com/thank-you
          nullable: true
        secondStageCaptcha:
          description: Is captcha enabled for the form
          $ref: '#/components/schemas/StringBooleanEnum'
        forwardDataRequestType:
          description: >-
            How to forward form data to a thank-you page. [Learn
            more](https://www.getresponse.com/help/building-contact-lists/forms-and-pop-ups/can-i-forward-subscriber-data-to-a-custom-thank-you-page.html).
            `null` means that the data forwarding is turned off.
          type: string
          enum:
            - GET
            - POST
          nullable: true
        trackingCustomField:
          description: >-
            Subscribers added via this form will have this custom field set with
            a value passed in `trackingCustomFieldValue`
          type: string
          nullable: true
          $ref: '#/components/schemas/CustomFieldReference'
        trackingCustomFieldValue:
          description: See the `trackingCustomField` description
          type: string
          example: '123'
          nullable: true
      type: object
    Form:
      properties:
        formId:
          type: string
          readOnly: true
          example: pL4e
        webformId:
          description: Same as `formId`
          type: string
          readOnly: true
          example: pL4e
        name:
          type: string
          example: My first form
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/forms/pL4e
        hasVariants:
          description: Indicates if the form has variants (A/B tests)
          type: boolean
          readOnly: true
          example: true
        scriptUrl:
          description: >-
            The URL to a JavaScript file of the form. This is used to embed the
            form within a web page.
          type: string
          format: uri
          readOnly: true
          example: >-
            https://app.getresponse.com/view_webform_v2.js?u=nTfa&webforms_id=123
        status:
          type: string
          enum:
            - published
            - unpublished
            - draft
          example: published
        createdOn:
          type: string
          format: date-time
          example: 2018-07-02T11:22:33+0000
        statistics:
          $ref: '#/components/schemas/FormStatistics'
        campaign:
          $ref: '#/components/schemas/CampaignReference'
      type: object
    FormStatistics:
      properties:
        visitors:
          description: The total number of form visitors
          type: integer
          format: int64
          example: 4371
        uniqueVisitors:
          description: The number of unique form visitors
          type: integer
          format: int64
          example: 3865
        subscribed:
          description: The number of visitors that subscribed using this form
          type: integer
          format: int64
          example: 2594
        subscriptionRate:
          description: The ratio of `subscribed` to `visitors`
          type: number
          format: double
          example: 0.59
      type: object
    BaseLandingPage:
      properties:
        landingPageId:
          description: The landing page ID
          type: string
          example: avYn
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          example: https://api.getresponse.com/v3/landing-pages/avYn
        metaTitle:
          description: The landing page meta title property
          type: string
          example: Some meta title
        domain:
          description: The domain where the landing page is hosted
          type: string
          example: gr8.new
        subdomain:
          description: The subdomain where the landing page is assigned
          type: string
          example: summer-sale
        userDomain:
          description: The private domain provided by the user
          type: string
          example: ''
        userDomainPath:
          description: The private domain path provided by the user
          type: string
          example: ''
        campaign:
          $ref: '#/components/schemas/CampaignReference'
        status:
          $ref: '#/components/schemas/StatusEnum'
        userDomainStatus:
          description: >-
            The DNS status for the user's private domain. Can be `null` if a
            private domain isn't assigned.
          type: string
          enum:
            - active
            - inactive
            - waiting
          nullable: true
        testAB:
          $ref: '#/components/schemas/StringBooleanEnum'
        createdOn:
          description: The creation date
          type: string
          format: date-time
          readOnly: true
        updatedOn:
          description: The date of the last page update
          type: string
          format: date-time
          readOnly: true
      type: object
      x-konfig-properties:
        campaign:
          description: The campaign to which the landing page is linked
        status:
          description: The landing page status
        testAB:
          description: Does the landing page have AB testing (variants) enabled
          example: 'true'
    LandingPageVariant:
      properties:
        variantId:
          description: The landing page variant ID.
          type: string
          example: PKxn
        variant:
          description: The variant index.
          type: string
          format: integer
          example: '0'
        winner:
          type: boolean
          example: true
        visitors:
          type: string
          format: integer
          example: '12'
        uniqueVisitors:
          type: string
          format: integer
          example: '2'
        subscribed:
          type: string
          format: integer
          example: '2'
      type: object
    NewImport:
      required:
        - campaignId
        - contacts
        - fieldMapping
      properties:
        campaignId:
          description: The ID of the destination campaign (list)
          type: string
          example: z5c
        fieldMapping:
          description: >-
            Mapping definition for such contact properties as email address,
            name, or custom fields. It's the equivalent of column headers in a
            CSV file used to import contacts in a GetResponse account. The
            `email` value is required. For custom fields, provide only custom
            fields name in the mapping. Include their values in the
            corresponding field in the contact array
          type: array
          items:
            type: string
            example: email
        contacts:
          description: >-
            Container for a contact definition. Include the values defined in
            the `fieldMapping` array
          type: array
          items:
            $ref: '#/components/schemas/NewImportContact'
      type: object
    NewImportContact:
      type: array
      items:
        type: string
        example: example@somedomain.com
    Import:
      properties:
        importId:
          description: The import ID
          type: string
          readOnly: true
          example: o6gE
        campaign:
          type: object
          $ref: '#/components/schemas/CampaignReference'
        status:
          type: string
          enum:
            - uploaded
            - review
            - approved
            - rejected
            - finished
            - canceled
            - to_review
          readOnly: true
        statistics:
          description: The import statistics
          type: object
          $ref: '#/components/schemas/ImportStatistics'
        errorStatistics:
          description: The detailed import error statistics
          type: object
          $ref: '#/components/schemas/ImportErrorStatistics'
        createdOn:
          type: string
          format: date-time
        finishedOn:
          type: string
          format: date-time
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/imports/o6gE
      type: object
    ImportStatistics:
      required:
        - uploaded
        - invalid
        - updated
        - addedToList
      properties:
        uploaded:
          description: The number of uploaded contacts
          type: integer
          format: int64
          readOnly: true
          example: 25
        invalid:
          description: The number of invalid contacts
          type: integer
          format: int64
          readOnly: true
          example: 5
        updated:
          description: The number of updated contacts
          type: integer
          format: int64
          readOnly: true
          example: 10
        addedToList:
          description: The number of added contacts
          type: integer
          format: int64
          readOnly: true
          example: 10
      type: object
    ImportErrorStatistics:
      properties:
        syntaxErrors:
          description: The number of contacts with a syntax error
          type: integer
          format: int64
          readOnly: true
          example: 2
        alreadyInQueue:
          description: The number of contacts already in queue
          type: integer
          format: int64
          readOnly: true
          example: 1
        invalidDomains:
          description: The number of contacts with invalid domains
          type: integer
          format: int64
          readOnly: true
          example: 1
        blacklist:
          description: The number of blocked contacts
          type: integer
          format: int64
          readOnly: true
          example: 1
        policyFailures:
          description: The number of contacts rejected for policy reasons
          type: integer
          format: int64
          readOnly: true
          example: 1
        mismatchedCriteria:
          description: >-
            The number of contacts rejected because of mismatched criteria,
            [learn
            more](https://www.getresponse.com/help/managing-contacts/working-with-contact-lists/where-can-i-find-import-statistics.html#what-do-the-numbers-for-uploaded-approved-and-import-errors-mean)
          type: integer
          format: int64
          readOnly: true
          example: 1
      type: object
    SmsStats:
      required:
        - smsId
      properties:
        smsId:
          description: The SMS message ID
          type: string
          example: PvLI8C
        totalSms:
          description: The number of SMS messages sent
          type: integer
          example: 1
        totalRecipients:
          description: The number of recipients
          type: integer
          example: 1
        totalClicks:
          description: The number of link clicks from an SMS message
          type: integer
          example: 1
        totalUnsubscribes:
          description: The number of opt-outs from an SMS message
          type: integer
          example: 1
        totalPrice:
          description: Cost details of a specific SMS
          type: object
          nullable: false
          allOf:
            - properties:
                amount:
                  description: Total SMS message cost
                  type: string
                  example: '0.0240'
                currency:
                  description: Pricing currency
                  type: string
                  example: USD
              type: object
        link:
          description: Link details
          type: object
          nullable: false
          allOf:
            - properties:
                url:
                  description: Link URL
                  type: string
                  example: https://getresponse.com
                clicks:
                  description: The number of link clicks from an SMS message
                  type: integer
                  example: 1
              type: object
        countryStatistics:
          description: SMS message statistics per country
          type: object
          nullable: false
          allOf:
            - properties:
                countryCode:
                  description: Country code
                  type: string
                  example: PL
                recipients:
                  description: The number of recipients
                  type: integer
                  example: 1
                smsCount:
                  description: The number of messages sent
                  type: integer
                  example: 1
                price:
                  description: Pricing details
                  type: object
                  allOf:
                    - properties:
                        price:
                          description: Total cost
                          type: string
                          example: '0.0240'
                        currency:
                          description: Pricing currency
                          type: string
                          example: USD
                      type: object
              type: object
      type: object
    RevenueStatistics:
      properties:
        currency:
          description: Statistics currency
          type: string
          example: USD
        timeSeries:
          type: array
          items:
            properties:
              timeInterval:
                description: >-
                  Orders and revenue are grouped by time intervals. Interval
                  length is set automatically and depends on the `orderDate`
                  parameter.
                type: string
                pattern: >-
                  /^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?(\/)P(?=\w*\d)(?:\d+Y|Y)?(?:\d+M|M)?(?:\d+W|W)?(?:\d+D|D)?(?:T(?:\d+H|H)?(?:\d+M|M)?(?:\d+(?:\­.\d{1,2})?S|S)?)?$/
                example: 2014-09-20T00:00:00+0000/P2M18DT10H0M0S
              revenue:
                description: Revenue
                type: number
                example: 2.45
              orders:
                description: Number of orders
                type: integer
                example: 5
            type: object
      type: object
    GeneralPerformanceStats:
      properties:
        currency:
          description: Statistics currency
          type: string
          example: USD
        order:
          description: Order statistics
          type: object
          nullable: false
          allOf:
            - properties:
                orders:
                  description: Number of orders
                  type: integer
                  example: 5
                ordersTrend:
                  description: Order trend
                  type: number
                  example: 1.23
                avgOrderRevenue:
                  description: Average order value
                  type: number
                  example: 1.23
                avgOrderRevenueTrend:
                  description: Average order value trend
                  type: number
                  example: 1.23
              type: object
        revenue:
          description: Revenue statistics
          type: object
          nullable: false
          allOf:
            - properties:
                revenue:
                  description: Revenue from orders
                  type: number
                  example: 1.23
                revenueTrend:
                  description: Revenue trend
                  type: number
                  example: 1.23
              type: object
      type: object
    PredefinedField:
      properties:
        predefinedFieldId:
          type: string
          readOnly: true
          example: 6neM
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/predefined-fields/6neM
        name:
          type: string
          maxLength: 32
          minLength: 1
          pattern: ^[A-Za-z0-9_]{1,32}$
          example: my_predefined_field_123
        value:
          type: string
          maxLength: 350
          minLength: 1
          example: my value
        campaign:
          type: object
          $ref: '#/components/schemas/CampaignReference'
      type: object
    Suppression:
      required:
        - suppressionId
      properties:
        suppressionId:
          description: The suppression ID
          type: string
          readOnly: true
          example: pypF
        name:
          description: The suppression name
          type: string
          example: suppression-name
        createdOn:
          description: Created on DateTime in the ISO8601 format
          type: string
          format: date-time
          readOnly: true
          example: 2018-07-26T06:33:13+0000
        href:
          description: Direct hyperlink to a resource
          type: string
          readOnly: true
          example: https://api.getresponse.com/v3/suppressions/pypF
      type: object
    BaseSuppression:
      properties:
        name:
          description: The name of the suppression list
          type: string
          example: suppression-name
        masks:
          type: array
          items:
            type: string
            example: '@example.com'
      type: object
    SuppressionDetails:
      type: object
      readOnly: true
      allOf:
        - $ref: '#/components/schemas/Suppression'
        - $ref: '#/components/schemas/BaseSuppression'
    SubscriptionConfirmationBody:
      properties:
        subscriptionConfirmationBodyId:
          description: Subscription confirmation subject ID
          type: string
          example: asS1
        name:
          description: Name
          type: string
          example: Database signup
        contentPlain:
          description: Plain text content equivalent of confirmation message
          type: string
          example: >

            Hello {{CONTACT \"subscriber_first_name\"}},       
            \r\n               \r\n{{INTERNAL \"body\"}}\r\n

            Your request to sign up to our\r\ndatabase has been received
            and\r\nrequires your confirmation.\r\n\r\n

            EASY 1-CLICK CONFIRMATION:\r\n{{LINK \"confirm\"}}\r\n\r\nYou will
            be added to the database\r\n

            instantly upon your confirmation.\r\n\r\n\r\nYou will be able to
            unsubscribe\r\nor change your details at any time.\r\n\r\n

            If you have received this email in\r\nerror and did not intend to
            join\r\nour database, no further action is\r\n

            required on your part.\r\n\r\nYou won't receive
            further\r\ninformation and you won't be\r\n

            subscribed to any list until you\r\nconfirm your request
            above.\r\n\r\n{{INTERNAL \"signature\"}}
        contentHtml:
          description: HTML content of confirmation message
          type: string
          example: '[HTML_CODE]'
      type: object
    SubscriptionConfirmationSubject:
      properties:
        subscriptionConfirmationSubjectId:
          description: Subscription confirmation subject ID
          type: string
          example: AS3A
        subject:
          description: Subject
          type: string
          example: Action Requested - please confirm your subscription.
        isPrivate:
          $ref: '#/components/schemas/StringBooleanEnum'
      type: object
      x-konfig-properties:
        isPrivate:
          description: Is private
          example: 'false'
    PopupGeneralPerformanceStats:
      required:
        - popupId
      properties:
        popupId:
          description: The form or popup ID
          type: string
          example: 7189c47e-e45f-4c45-a882-08649c48ff96
        views:
          description: The total number of times your popup was viewed by website visitors
          type: integer
          format: int64
          example: 9
        clicks:
          description: The number of clicks
          type: integer
          format: int64
          example: 2
        ctr:
          description: >-
            The number of clicks divided by the number of views, shown as a
            percentage
          type: integer
          format: int64
          example: 5
        leads:
          description: The number of leads
          type: integer
          format: int64
          example: 2
      type: object
    PopupDetails:
      properties:
        popupId:
          description: The form or popup ID
          type: string
          readOnly: true
          example: ce84fabc-1349-4992-a2d7-0c44c5534128
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: >-
            https://api.getresponse.com/v3/popups/ce84fabc-1349-4992-a2d7-0c44c5534128
        name:
          description: The form or popup name
          type: string
          example: My popup name
        status:
          description: The form or popup status
          type: string
          enum:
            - published
            - unpublished
          readOnly: true
        type:
          description: The form or popup type
          type: string
          enum:
            - popup
            - inline
          readOnly: true
        thumbnailUrl:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://us-wbe-img2.gr-cdn.com/user/X/Y.webp
        createdAt:
          description: >-
            The date the form or popup was created. Shown in format `ISO 8601`
            without timezone offset e.g. `2024-01-01T10:35:00`.
          type: string
          format: date-time
          example: '2024-01-01T10:35:00'
        updatedAt:
          description: >-
            The date the form or popup was updated. Shown in format `ISO 8601`
            without timezone offset e.g. `2024-01-10T10:00:00`.
          type: string
          format: date-time
          example: '2024-01-10T10:00:00'
      type: object
    PopupListItem:
      properties:
        popupId:
          description: The form or popup ID
          type: string
          readOnly: true
          example: ce84fabc-1349-4992-a2d7-0c44c5534128
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: >-
            https://api.getresponse.com/v3/popups/6b0d7d59-71d9-4708-80a6-aa0f13805111
        name:
          description: The form or popup name
          type: string
          example: My popup name
        status:
          description: The form or popup status
          type: string
          enum:
            - published
            - unpublished
          readOnly: true
        type:
          description: The form or popup type
          type: string
          enum:
            - popup
            - inline
          readOnly: true
        createdAt:
          description: >-
            The date the form or popup was created. Shown in format `ISO 8601`
            without timezone offset e.g. `2024-01-01T10:35:00`.
          type: string
          format: date-time
        updatedAt:
          description: >-
            The date the form or popup was updated. Shown in format `ISO 8601`
            without timezone offset e.g. `2024-01-10T10:00:00`.
          type: string
          format: date-time
        statistics:
          description: The landing page statistics
          $ref: '#/components/schemas/PopupListItemStatistics'
      type: object
    PopupListItemStatistics:
      properties:
        views:
          description: The total number of times your popup was viewed by website visitors
          type: integer
          format: int64
          example: 9
        uniqueVisitors:
          description: The total number of visitors
          type: integer
          format: int64
          example: 10
        leads:
          description: The number of leads
          type: integer
          format: int64
          example: 5
        ctr:
          description: >-
            The number of clicks divided by the number of views, shown as a
            percentage
          type: integer
          format: int64
          example: 52
      type: object
    SplittestNewsletter:
      properties:
        newsletterId:
          description: The newsletter ID
          type: string
          example: Z6e
        href:
          description: The direct newsletter URL
          type: string
          format: uri
          example: https://api.getresponse.com/v3/newsletters/B2fvv
        name:
          description: The newsletter name
          type: string
          example: Newsletter name
        subject:
          description: The newsletter subject
          type: string
          example: Example subject
        fromField:
          description: The \"From\" address for the newsletter
          type: object
          $ref: '#/components/schemas/FromFieldReference'
        status:
          description: The status of the newsletter
          type: string
          enum:
            - sampled
            - chosen
            - rejected
        sendOn:
          description: The date when the newsletter was sent
          type: string
          format: date-time
          example: 2015-06-25T20:05:10+0000
        samplingTargets:
          description: The newsletter sample targets
          type: string
          format: int32
          example: '2'
        samplingDelivered:
          description: The newsletter sample delivery
          type: string
          format: int32
          example: '2'
        scoreOpens:
          description: The newsletter open rate
          type: string
          format: int32
          example: '2'
        scoreClicks:
          description: The newsletter click rate
          type: string
          format: int32
          example: '2'
      type: object
    Splittest:
      properties:
        splittestId:
          description: A/B test ID
          type: string
          example: A3r
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          example: https://api.getresponse.com/v3/splittests/A3r
        name:
          description: A/B test name
          type: string
          example: A/B test
        campaign:
          description: A/B test campaign
          type: object
          $ref: '#/components/schemas/CampaignReference'
        status:
          description: A/B test status
          type: string
          enum:
            - active
            - inactive
        winningCriteria:
          description: A/B test winning criteria
          type: string
          enum:
            - open
            - click
          nullable: true
        winningTarget:
          description: A/B test wining target
          type: string
          format: int32
          example: '10'
        stage:
          description: A/B test stage
          type: string
          enum:
            - queued
            - schedule_sampling
            - evaluate_sampling
            - choose_winning
            - schedule_winning
            - send_winning
            - canceled_queued
            - canceled_sampling
            - canceled_winning
            - incomplete
            - finished
        type:
          description: A/B test type
          type: string
          enum:
            - content
            - subject
            - day
            - hour
            - from_field
        samplingPercentage:
          description: A/B test sample percentage
          type: string
          format: int32
          example: '18'
          nullable: true
        samplingTime:
          description: A/B test sampling time in seconds
          type: string
          format: int32
          example: '86400'
          nullable: true
        chooseWinning:
          description: The method of choosing the winning A/B test
          type: string
          enum:
            - automatic
            - manual
          nullable: true
        winningScoreOpens:
          description: The open rate of the winning A/B test
          type: string
          format: int32
          example: '5'
        winningScoreClicks:
          description: The click rate of the winning A/B test
          type: string
          format: int32
          example: '3'
        winningDelivered:
          description: The delivery rate of the winning A/B test
          type: string
          format: int32
          example: '12'
        winningScheduleOn:
          description: The date for wchich the winning A/B test was scheduled
          type: string
          format: date-time
          example: 2015-06-25T20:05:10+0000
          nullable: true
        nextStepOn:
          description: The date of the next step in the A/B test
          type: string
          format: date-time
          example: 2015-07-25T20:05:10+0000
          nullable: true
        evaluationSkippedOn:
          description: The date when the A/B test was skipped
          type: string
          format: date-time
          example: 2015-07-25T20:05:10+0000
          nullable: true
        canceledOn:
          description: The date when the A/B test was canceled
          type: string
          format: date-time
          example: 2015-07-25T20:05:10+0000
          nullable: true
        createdOn:
          description: The date when the A/B test was created
          type: string
          format: date-time
          example: 2015-07-25T20:05:10+0000
          nullable: true
        newsletters:
          description: The newsletters that are associated with the A/B test
          type: array
          items:
            $ref: '#/components/schemas/SplittestNewsletter'
        sendSettings:
          description: The send settings for the A/B test
          properties:
            selectedCampaigns:
              $ref: '#/components/schemas/MessageSendSettingSelectedCampaigns'
            selectedSegments:
              $ref: '#/components/schemas/MessageSendSettingSelectedSegments'
            selectedSupressions:
              $ref: '#/components/schemas/MessageSendSettingSelectedSuppressions'
            excludedCampaigns:
              $ref: '#/components/schemas/MessageSendSettingExcludedCampaigns'
            excludedSegments:
              $ref: '#/components/schemas/MessageSendSettingExcludedSegments'
          type: object
      type: object
    BaseFile:
      properties:
        name:
          description: The file name
          type: string
          maxLength: 255
          minLength: 1
          example: image
        extension:
          description: The file extension
          type: string
          example: jpg
        folder:
          description: The folder where the file is stored
          nullable: true
          allOf:
            - $ref: '#/components/schemas/FolderShort'
      type: object
    FileGroup:
      description: The file group
      type: string
      enum:
        - audio
        - video
        - photo
        - document
      example: photo
    FolderShort:
      required:
        - folderId
      properties:
        folderId:
          description: The folder ID
          type: string
          example: 4a9f
      type: object
    FileProperty:
      required:
        - name
        - value
      properties:
        name:
          type: string
          enum:
            - width
            - height
          readOnly: true
          example: width
        value:
          readOnly: true
          oneOf:
            - type: integer
              example: 1980
            - type: string
      type: object
    Quota:
      properties:
        limit:
          description: The total size of available storage space
          type: integer
          format: int64
          example: 1048576
        usage:
          description: The currently used storage space
          type: integer
          format: int64
          example: 1024
      type: object
    Folder:
      required:
        - folderId
      properties:
        folderId:
          description: The folder ID
          type: string
          readOnly: true
          example: t1G
        name:
          description: The folder name
          type: string
          maxLength: 128
          minLength: 1
          example: sample folder
        size:
          description: The size of all files in the directory
          type: integer
          format: int64
          example: 9564899
        createdOn:
          description: The creation date
          type: string
          format: date-time
          readOnly: true
          example: 2019-10-14T17:17:13+0000
      type: object
    NewFolder:
      required:
        - name
      properties:
        name:
          description: The folder name
          type: string
          maxLength: 128
          minLength: 1
          example: sample folder
      type: object
    AbtestsSubjectDetails:
      type: object
      allOf:
        - $ref: '#/components/schemas/AbtestsSubjectListItem'
        - properties:
            winnerSendingStart:
              description: Date the winning message was sent on
              type: string
              format: date-time
              example: 2015-07-25T20:05:10+0000
              nullable: true
            statistics:
              description: The statistics of A/B test
              properties:
                total:
                  type: object
                  $ref: '#/components/schemas/AbtestsSubjectStatistics'
                winner:
                  type: object
                  $ref: '#/components/schemas/AbtestsSubjectStatistics'
              type: object
              readOnly: true
            variants:
              type: array
              items:
                properties:
                  variantId:
                    description: >-
                      The message variant ID. A variant identifier from
                      https://apireference.getresponse.com/#operation/getAbtestsSubjectById.
                    type: string
                    readOnly: true
                    example: VpKJdr
                  subject:
                    description: Variant's subject
                    type: string
                    maximum: 150
                    minimum: 1
                    example: variant
                  isWinner:
                    description: Winning variant
                    type: boolean
                    readOnly: true
                    example: true
                  statistics:
                    $ref: '#/components/schemas/AbtestsSubjectStatistics'
                type: object
                x-konfig-properties:
                  statistics:
                    description: Variant's statistics
                    type: object
                    readOnly: true
            sendSettings:
              description: The send settings for the A/B test
              properties:
                selectedCampaigns:
                  $ref: '#/components/schemas/MessageSendSettingSelectedCampaigns'
                selectedSegments:
                  $ref: '#/components/schemas/MessageSendSettingSelectedSegments'
                selectedSupressions:
                  $ref: '#/components/schemas/MessageSendSettingSelectedSuppressions'
                excludedCampaigns:
                  $ref: '#/components/schemas/MessageSendSettingExcludedCampaigns'
                excludedSegments:
                  $ref: '#/components/schemas/MessageSendSettingExcludedSegments'
              type: object
            editor:
              description: The message editor used for the A/B test
              type: string
              enum:
                - html2
                - custom
                - text
                - editor_v3
                - getresponse
                - legacy
              nullable: true
            content:
              $ref: '#/components/schemas/MessageContent'
          type: object
    AbtestsSubjectStatistics:
      properties:
        delivered:
          description: >-
            The total number of delivered messages (winner and variants
            combined)
          type: integer
          example: 10
        openRate:
          description: The sum total of opens for the variants and the winner
          type: integer
          example: 8
        clickRate:
          description: The message click rate
          type: integer
          example: 8
      type: object
    AbtestsSubjectListItem:
      type: object
      allOf:
        - $ref: '#/components/schemas/AbtestsSubject'
        - properties:
            status:
              description: Newsletter status
              type: string
              enum:
                - active
                - inactive
                - deleted
              readOnly: true
            stage:
              description: A/B test stage
              type: string
              enum:
                - preparing
                - testing
                - finished
                - sending_winner
                - cancelled
                - draft
                - completed
              readOnly: true
            deliverySettings:
              description: The A/B test delivery settings
              properties:
                sendOn:
                  description: Date the newsletter was sent on
                  properties:
                    date:
                      description: Date the newsletter was sent on
                      type: string
                      format: date-time
                      example: 2015-07-25T20:05:10+0000
                      nullable: true
                    timeZone:
                      description: Time zone in which the newsletter was sent
                      properties:
                        timeZoneId:
                          description: ID of the time zone the newsletter was sent in
                          type: integer
                        timeZoneName:
                          description: Name of the time zone the newsletter was sent in
                          type: integer
                          nullable: true
                        timeZoneOffset:
                          description: >-
                            Time zone, or UTC, offset for when the newsletter
                            was sent
                          type: integer
                          nullable: true
                      type: object
                  type: object
                winnerMode:
                  description: A/B test winner selection mode
                  type: string
                  enum:
                    - automatic
                    - manual
                winningCriteria:
                  description: A/B test winning criteria
                  type: string
                  enum:
                    - open
                    - click
                samplingPercentage:
                  description: Size of the test (sampling) group, expressed as a percentage
                  type: integer
                  format: int32
                  maximum: 50
                  minimum: 1
                samplingTime:
                  description: >-
                    A/B testing phase duration. The time after which the
                    remaining recipients will be sent the winning message
                  type: string
                  format: ISO-8601 duration
                  example: '86400'
                  nullable: true
              type: object
            flags:
              type: array
              items:
                description: Tracking options enabled for the newsletter
                type: string
                enum:
                  - clicktrack
                  - subscription_reminder
                  - openrate
                  - google_analytics
                  - manual_list
                  - custom_footer
                  - ecommerce_tracking
                readOnly: true
            createdOn:
              description: Date the A/B test was created on
              type: string
              format: date-time
              example: 2015-07-25T20:05:10+0000
              nullable: true
            updatedOn:
              description: Date A/B test was updated on
              type: string
              format: date-time
              example: 2015-07-25T20:05:10+0000
              nullable: true
            href:
              description: Direct hyperlink to a resource
              type: string
              format: uri
              readOnly: true
              example: https://api.getresponse.com/v3/ab-tests/subject/A3r
          type: object
    AbtestsSubject:
      properties:
        abTestId:
          description: A/B test ID
          type: string
          readOnly: true
          example: A3r
        name:
          description: A/B test name
          type: string
          maxLength: 100
          minLength: 1
          example: A/B test
        campaign:
          description: List linked to A/B test
          properties:
            campaignId:
              description: Campaign ID
              type: string
              example: C
            href:
              description: Direct hyperlink to a resource
              type: string
              format: uri
              readOnly: true
              example: https://api.getresponse.com/v3/campaigns/C
            name:
              description: The campaign name
              type: string
              readOnly: true
              example: Promo campaign
              nullable: true
          type: object
        fromField:
          description: Newsletter's From" address"
          properties:
            fromFieldId:
              description: The 'From' address ID
              type: string
              example: V
            href:
              description: Direct hyperlink to a resource
              type: string
              format: uri
              readOnly: true
              example: https://api.getresponse.com/v3/from-fields/V
          type: object
        replyTo:
          description: Newsletter's reply-to address
          properties:
            fromFieldId:
              description: The 'From' address ID
              type: string
              example: V
            href:
              description: Direct hyperlink to a resource
              type: string
              format: uri
              readOnly: true
              example: https://api.getresponse.com/v3/from-fields/V
          type: object
      type: object
    NewAbtestsSubject:
      required:
        - name
        - href
      type: object
      allOf:
        - required:
            - name
            - campaign
            - fromField
          properties:
            abTestId:
              description: A/B test ID
              type: string
              readOnly: true
              example: A3r
            name:
              description: A/B test name
              type: string
              maxLength: 100
              minLength: 1
              example: A/B test
            campaign:
              description: List linked to A/B test
              type: object
              $ref: '#/components/schemas/CampaignReference'
            fromField:
              description: Newsletter's From" address"
              type: object
              $ref: '#/components/schemas/FromFieldReference'
            replyTo:
              description: Newsletter's reply-to address
              type: object
              $ref: '#/components/schemas/FromFieldReference'
          type: object
        - required:
            - deliverySettings
            - variants
            - sendSettings
            - content
          properties:
            deliverySettings:
              description: The A/B test delivery settings
              required:
                - samplingTime
                - winningCriteria
                - winnerMode
                - sendOn
              properties:
                sendOn:
                  description: Date the newsletter was sent on
                  required:
                    - sendingType
                  properties:
                    sendingType:
                      description: >-
                        Newsletter send type. Please note that date and timezone
                        are not allowed with the 'now' option
                      type: string
                      enum:
                        - now
                        - scheduled
                      example: scheduled
                    date:
                      description: Date the newsletter was sent on
                      type: string
                      format: Y-m-d H:i:s
                      example: '2015-07-25T20:05:10'
                      nullable: true
                    timeZone:
                      description: Time zone in which the newsletter was sent
                      required:
                        - date
                        - timeZoneId
                      properties:
                        timeZoneId:
                          description: ID of the time zone the newsletter was sent in
                          type: integer
                          example: 285
                      type: object
                  type: object
                winnerMode:
                  description: A/B test winner selection mode
                  type: string
                  enum:
                    - automatic
                    - manual
                winningCriteria:
                  description: A/B test winning criteria
                  type: string
                  enum:
                    - open
                    - click
                samplingPercentage:
                  description: Size of the test (sampling) group, expressed as a percentage
                  type: integer
                  format: int32
                  maximum: 50
                  minimum: 1
                samplingTime:
                  description: >-
                    A/B testing phase duration. The time after which the
                    remaining recipients will be sent the winning message
                  type: string
                  format: ISO-8601 duration
                  example: P0Y0M0DT5H30M0S
                  nullable: true
              type: object
            flags:
              type: array
              items:
                description: Tracking options enabled for the newsletter
                type: string
                enum:
                  - clicktrack
                  - google_analytics
                  - ecommerce_tracking
            variants:
              description: >-
                Message variants. Please note, the number of subject variants
                should be between 2 and 5
              required:
                - subject
              type: array
              items:
                properties:
                  subject:
                    description: Variant's subject
                    type: string
                    maximum: 150
                    minimum: 1
                    example: variant
                type: object
            sendSettings:
              description: The send settings for the A/B test
              properties:
                selectedCampaigns:
                  $ref: '#/components/schemas/MessageSendSettingSelectedCampaigns'
                selectedSegments:
                  $ref: '#/components/schemas/MessageSendSettingSelectedSegments'
                selectedSupressions:
                  $ref: '#/components/schemas/MessageSendSettingSelectedSuppressions'
                excludedCampaigns:
                  $ref: '#/components/schemas/MessageSendSettingExcludedCampaigns'
                excludedSegments:
                  $ref: '#/components/schemas/MessageSendSettingExcludedSegments'
              type: object
            content:
              $ref: '#/components/schemas/MessageContent'
          type: object
    ChooseWinnerAbtestsSubject:
      required:
        - variantId
      properties:
        variantId:
          description: >-
            The message variant ID. A variant identifier from
            https://apireference.getresponse.com/#operation/getAbtestsSubjectById.
          type: string
          example: VpKJdr
      type: object
    ClickTrackResource:
      properties:
        clickTrackId:
          type: string
          example: C12t
        name:
          description: The name (label) of a click track
          type: string
          example: Click here
        url:
          description: The link URL of a click track
          type: string
          format: uri
          example: https://example.com/shop
        clicks:
          description: The number of clicks counted for a click track
          type: integer
          format: int64
          example: 25951
        message:
          type: object
          $ref: '#/components/schemas/ClickTrackMessage'
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          example: https://api.getresponse.com/v3/click-tracks/C12t
      type: object
    ClickTrackMessage:
      description: The source message reference for a click track
      properties:
        resourceId:
          description: The ID identifying message resource
          type: string
          example: r35N
        type:
          description: The message type
          type: string
          enum:
            - broadcast
            - automation
            - autoresponder
            - rss
            - splittest
            - sms
          example: broadcast
        createdOn:
          description: The message creation date
          type: string
          format: date-time
          example: 2019-12-01T08:21:28+0000
        resourceType:
          description: Type of the resource that represents the message in the API
          type: string
          enum:
            - newsletters
            - autoresponders
            - rss-newsletters
            - splittests
            - sms
          example: newsletters
        href:
          description: Direct URL to the resource that represents the message
          type: string
          format: uri
          example: https://api.getresponse.com/v3/newsletters/r35N
      type: object
    MessageStatisticsListElement:
      properties:
        timeInterval:
          description: >-
            The statistics time frame in the ISO 8601 datetime format with
            duration interval
          type: string
          pattern: >-
            /^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?(\/)P(?=\w*\d)(?:\d+Y|Y)?(?:\d+M|M)?(?:\d+W|W)?(?:\d+D|D)?(?:T(?:\d+H|H)?(?:\d+M|M)?(?:\d+(?:\­.\d{1,2})?S|S)?)?$/
          example: 2014-09-20T00:00:00+0000/P2M18DT10H0M0S
        sent:
          type: integer
          format: int32
        totalOpened:
          type: integer
          format: int32
        uniqueOpened:
          type: integer
          format: int32
        totalClicked:
          type: integer
          format: int32
        uniqueClicked:
          type: integer
          format: int32
        goals:
          type: integer
          format: int32
        uniqueGoals:
          type: integer
          format: int32
        forwarded:
          type: integer
          format: int32
        unsubscribed:
          type: integer
          format: int32
        bounced:
          type: integer
          format: int32
        complaints:
          type: integer
          format: int32
      type: object
    SendNewsletterDraft:
      required:
        - messageId
        - sendSettings
      properties:
        messageId:
          description: The message identifier (equals to newsletterId)
          type: string
          example: 'N'
        sendOn:
          description: >-
            The scheduled send date for the message in the ISO 8601 format.
            **Please note:** To send your message immediately, omit the `sendOn`
            section
          type: string
          format: date-time
        sendSettings:
          $ref: '#/components/schemas/NewsletterSendSettingsDetails'
      type: object
      x-konfig-properties:
        sendSettings:
          description: How the message will be delivered to the subscriber
    NewsletterAttachment:
      properties:
        fileName:
          description: The file name
          type: string
          example: some_file.jpg
        content:
          description: The base64 encoded file content
          type: string
          format: byte
          example: sdfadsfetsdjfdskafdsaf==
        mimeType:
          description: The file mime type
          type: string
          example: image/jpeg
      type: object
    ExternalLexpad:
      description: >-
        External Lexpad settings for the message, read more: [External
        Lexpad](https://apidocs.getresponse.com/v3/dynamic-content/external-lexpad)
      required:
        - dataSourceUrl
      properties:
        dataSourceUrl:
          description: URL to the endpoint that will provide data for External Lexpad
          type: string
          format: uri
          maxLength: 2048
          minLength: 1
          example: https://example.com/external_lexpad
        dataSourceToken:
          description: >-
            Token that will be sent in `X-Auth-Token` header to authenticate the
            requests made to the endpoint
          type: string
          maxLength: 255
          minLength: 0
          example: cf4dfca78434bf927a7655c0c4d95a2a45c33b71
          nullable: true
      type: object
    NewsletterSendSettingsDetails:
      properties:
        selectedCampaigns:
          description: The list of selected campaigns
          items:
            type: string
            example: V
        selectedSegments:
          description: The list of selected segments
          items:
            type: string
            example: S
        selectedSuppressions:
          description: The list of selected suppressions (suppressions exclude contacts)
          items:
            type: string
            example: Se
        excludedCampaigns:
          description: The list of excluded campaigns
          items:
            type: string
            example: O
        excludedSegments:
          description: The list of excluded segments
          items:
            type: string
            example: R
        selectedContacts:
          description: The list of selected contacts
          items:
            type: string
            example: Qs
        timeTravel:
          $ref: '#/components/schemas/StringBooleanEnum'
        perfectTiming:
          $ref: '#/components/schemas/StringBooleanEnum'
        externalLexpad:
          description: >-
            External Lexpad settings for the message, read more: [External
            Lexpad](https://apidocs.getresponse.com/v3/dynamic-content/external-lexpad)
          nullable: true
          allOf:
            - $ref: '#/components/schemas/ExternalLexpad'
      type: object
      x-konfig-properties:
        timeTravel:
          description: >-
            Use the time travel functionality. This means that the system will
            match the scheduled sending hour for the message to the time zone of
            each recipient. As a result, sending may take up to 24 hours.
          example: 'true'
        perfectTiming:
          description: Use the perfect timing functionality
          example: 'false'
    Newsletter:
      required:
        - newsletterId
        - href
      properties:
        newsletterId:
          description: The newsletter ID
          type: string
          readOnly: true
          example: 'N'
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/newsletters/N
        name:
          description: The newsletter name
          type: string
          maxLength: 128
          minLength: 2
          example: New message
        type:
          description: The newsletter type
          type: string
          default: broadcast
          enum:
            - broadcast
            - draft
        status:
          $ref: '#/components/schemas/StatusEnum'
        editor:
          $ref: '#/components/schemas/MessageEditorEnum'
        subject:
          description: The message subject
          type: string
          maxLength: 128
          minLength: 2
          example: Annual report
        fromField:
          $ref: '#/components/schemas/FromFieldReference'
        replyTo:
          $ref: '#/components/schemas/FromFieldReference'
        campaign:
          $ref: '#/components/schemas/CampaignReference'
        sendOn:
          description: >-
            The scheduled send date and time for the newsletter in the ISO 8601
            format.
          type: string
          format: date-time
          readOnly: true
        attachments:
          description: >-
            The newsletter attachments. The size of all attachments combined
            can't exceed 400KB
          type: array
          items:
            $ref: '#/components/schemas/NewsletterAttachment'
        sendSettings:
          $ref: '#/components/schemas/NewsletterSendSettingsDetails'
        sendMetrics:
          description: The sending metrics
          type: object
          readOnly: true
          allOf:
            - properties:
                status:
                  type: string
                  default: finished
                  enum:
                    - scheduled
                    - in_progress
                    - finished
                sent:
                  description: Messages already sent
                  type: string
                  default: '0'
                total:
                  description: The total amount of messages to send
                  type: string
                  default: '0'
              type: object
        createdOn:
          description: The creation date
          type: string
          format: date-time
          readOnly: true
      type: object
      x-konfig-properties:
        status:
          description: The newsletter status
          readOnly: true
          example: enabled
        editor:
          description: This describes how the content of the message was created
        fromField:
          description: The 'From' email address used for the message
        replyTo:
          description: The email that will be used as the reply-to address
        campaign:
          description: The newsletter must be assigned to a campaign
        sendSettings:
          description: >-
            How the message will be delivered to the subscriber. You can specify
            multiple parameters. Then the system uses AND logic.
    NewNewsletter:
      required:
        - subject
        - fromField
        - campaign
        - content
        - sendSettings
      properties:
        content:
          $ref: '#/components/schemas/MessageContent'
        flags:
          $ref: '#/components/schemas/MessageFlagsArray'
        name:
          description: The newsletter name
          type: string
          maxLength: 128
          minLength: 2
          example: New message
        type:
          description: The newsletter type
          type: string
          default: broadcast
          enum:
            - broadcast
            - draft
        editor:
          $ref: '#/components/schemas/MessageEditorEnum'
        subject:
          description: The message subject
          type: string
          maxLength: 128
          minLength: 2
          example: Annual report
        fromField:
          $ref: '#/components/schemas/FromFieldReference'
        replyTo:
          $ref: '#/components/schemas/FromFieldReference'
        campaign:
          $ref: '#/components/schemas/CampaignReference'
        sendOn:
          description: >-
            The scheduled send date and time for the newsletter in the ISO 8601
            format. **Please note:** To send your message immediately, omit the
            `sendOn` section
          type: string
          format: date-time
        attachments:
          description: >-
            The newsletter attachments. The size of all attachments combined
            can't exceed 400KB
          type: array
          items:
            $ref: '#/components/schemas/NewsletterAttachment'
        sendSettings:
          $ref: '#/components/schemas/NewsletterSendSettingsDetails'
      type: object
      x-konfig-properties:
        editor:
          description: This describes how the content of the message was created
        fromField:
          description: The 'From' email address used for the message
        replyTo:
          description: The email that will be used as the reply-to address
        campaign:
          description: The newsletter must be assigned to a campaign
        sendSettings:
          description: >-
            How the message will be delivered to the subscriber. You can specify
            multiple parameters. Then the system uses AND logic.
    NewsletterListElement:
      required:
        - newsletterId
        - href
      properties:
        newsletterId:
          description: The newsletter ID
          type: string
          readOnly: true
          example: 'N'
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/newsletters/N
        name:
          description: The newsletter name
          type: string
          maxLength: 128
          minLength: 2
          example: New message
        type:
          description: The newsletter type
          type: string
          default: broadcast
          enum:
            - broadcast
            - draft
        status:
          $ref: '#/components/schemas/StatusEnum'
        editor:
          $ref: '#/components/schemas/MessageEditorEnum'
        subject:
          description: The message subject
          type: string
          maxLength: 128
          minLength: 2
          example: Annual report
        campaign:
          $ref: '#/components/schemas/CampaignReference'
        sendOn:
          description: >-
            The scheduled send date and time for the newsletter in the ISO 8601
            format.
          type: string
          format: date-time
        sendSettings:
          $ref: '#/components/schemas/NewsletterSendSettingsListing'
        sendMetrics:
          description: The sending metrics
          type: object
          readOnly: true
          allOf:
            - properties:
                status:
                  type: string
                  default: finished
                  enum:
                    - scheduled
                    - in_progress
                    - finished
                sent:
                  description: Messages already sent
                  type: string
                  default: '0'
                total:
                  description: The total amount of messages to send
                  type: string
                  default: '0'
              type: object
        createdOn:
          description: The creation date
          type: string
          format: date-time
          readOnly: true
        flags:
          $ref: '#/components/schemas/MessageFlagsString'
      type: object
      x-konfig-properties:
        status:
          description: The newsletter status
          readOnly: true
          example: enabled
        editor:
          description: This describes how the content of the message was created
        campaign:
          description: The newsletter must be assigned to a campaign
        sendSettings:
          description: >-
            How the message will be delivered to the subscriber. You can specify
            multiple parameters. Then the system uses AND logic.
    NewsletterSendSettingsListing:
      properties:
        timeTravel:
          $ref: '#/components/schemas/StringBooleanEnum'
        perfectTiming:
          $ref: '#/components/schemas/StringBooleanEnum'
      type: object
      x-konfig-properties:
        timeTravel:
          description: >-
            Use the time travel functionality. This means that the system will
            match the scheduled sending hour for the message to the time zone of
            each recipient. As a result, sending may take up to 24 hours.
          example: 'true'
        perfectTiming:
          description: Use the perfect timing functionality
          example: 'false'
    ClickTrack:
      properties:
        clickTrackId:
          type: string
          example: C
        url:
          description: The tracked link
          type: string
          format: uri
          example: https://example.com
        name:
          description: The tracked link name
          type: string
          example: press here
        amount:
          description: The number of clicks on a link in a message
          type: string
          example: '15'
      type: object
    NewsletterActivity:
      properties:
        activity:
          description: The type of activity
          type: string
          enum:
            - send
            - open
            - click
        createdOn:
          description: The date when activity occurred
          type: string
          format: date-time
          example: 2019-10-21T11:08:45+0000
        contact:
          $ref: '#/components/schemas/NewsletterActivityContactReference'
      type: object
      x-konfig-properties:
        contact:
          description: The contact ID
    NewsletterActivityContactReference:
      properties:
        contactId:
          description: The contact ID
          type: string
          example: pV3r
        email:
          description: The contact email
          type: string
          example: contact@domain.com
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          example: https://api.getresponse.com/v3/contacts/pV3r
      type: object
    BaseTag:
      properties:
        name:
          description: The tag name
          type: string
          maxLength: 255
          minLength: 2
          pattern: ^[_a-zA-Z0-9]{2,255}$
          example: My_Tag
        color:
          description: The tag color (deprecated)
          type: string
          readOnly: true
          deprecated: true
      type: object
    Blocklist:
      properties:
        masks:
          type: array
          items:
            type: string
            example: jack@somedomain.com
      type: object
    CustomFieldReference:
      required:
        - customField
      properties:
        customFieldId:
          type: string
          readOnly: true
          example: pas
        name:
          description: >-

            The name of the custom field. It must meet the following
            requirements:
             * be unique
             * use only lowercase letters, underscores and digits: [a-z0-9_]{1,128}
             * not be equal to one of the merge words used in messages, i.e. `name`, `email`, `twitter`, `facebook`, `buzz`, `myspace`, `linkedin`, `digg`, `googleplus`, `pinterest`, `responder`, `campaign`, `change`.
          type: string
          maxLength: 128
          minLength: 1
          example: color
        values:
          description: >-
            The list of assigned default values, starting from zero depending on
            the custom field type. (Please see description).
          type: array
          items:
            type: string
            example: red
      type: object
    Lps:
      type: object
      allOf:
        - $ref: '#/components/schemas/LpsListItem'
        - properties:
            statistics:
              description: The landing page statistics
              $ref: '#/components/schemas/LpsListItemStatistics'
          type: object
    LpsListItem:
      properties:
        lpsId:
          description: The landing page ID
          type: string
          readOnly: true
          example: ce84fabc-1349-4992-a2d7-0c44c5534128
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: >-
            https://api.getresponse.com/v3/lps/6b0d7d59-71d9-4708-80a6-aa0f13805111
        name:
          description: The landing page name
          type: string
          example: 'Predesigned #017'
        status:
          description: The landing page status
          type: string
          enum:
            - published
            - unpublished
          readOnly: true
        domainUrl:
          description: The landing page domain
          type: string
          format: uri
          readOnly: true
          example: predesigned-017-52612.grweb.site
        thumbnailUrl:
          description: The URL of a landing page thumbnail
          type: string
          format: uri
          readOnly: true
          example: >-
            https://us-wbe-img2.gr-cdn.com/user/e5c2094a-2354-459f-9b9f-6d0369ccae2c/6b0d7d59-71d9-4708-80a6-aa0f13805111.png?width=208
        isChatsEnabled:
          $ref: '#/components/schemas/StringBooleanEnum'
        createdAt:
          description: The date the landing page was created
          type: string
          format: date-time
        updatedAt:
          description: The date the landing page was updated
          type: string
          format: date-time
      type: object
      x-konfig-properties:
        isChatsEnabled:
          description: Chats is enabled on the landing page
          example: true
    LpsListItemStatistics:
      properties:
        visits:
          description: The number of browsing sessions initiated on your landing page
          type: integer
          format: int64
          example: 9
        leads:
          description: Number of leads
          type: integer
          format: int64
          example: 5
        subscriptionRate:
          description: >-
            The number of leads divided by the number of visitors, shown as a
            percentage
          type: integer
          format: int64
          example: 52
      type: object
    LpsDetails:
      type: object
      allOf:
        - $ref: '#/components/schemas/LpsListItem'
        - $ref: '#/components/schemas/LpsDetailsStatistics'
        - properties:
            pages:
              type: array
              items:
                $ref: '#/components/schemas/LpsPage'
          type: object
    LpsDetailsStatistics:
      properties:
        pageViews:
          description: The total number of times your landing page was viewed or refreshed
          type: integer
          format: int64
          example: 9
        visits:
          description: The number of browsing sessions initiated on your landing page
          type: integer
          format: int64
          example: 5
        uniqueVisitors:
          description: The number of people who visited your landing page
          type: integer
          format: int64
          example: 5
      type: object
    LpsPage:
      properties:
        uuid:
          description: >-
            The ID of a page associated with the landing page (i.e., 404 page
            and thank you page)
          type: string
          readOnly: true
          example: 6ee7597f-9bde-4b92-9411-2fb228c9fa34
        name:
          description: >-
            The name of a page associated with the landing page (i.e., 404 page
            and thank you page)
          type: string
          example: Home
        status:
          description: >-
            The status of a page associated with the landing page (i.e., 404
            page or thank you page)
          type: string
          enum:
            - active
            - inactive
        url:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: /terms-of-service
        redirectUrl:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: ''
        createdAt:
          description: >-
            The date a page associated with the landing page (i.e., 404 page or
            thank you page) was created
          type: string
          format: date-time
      type: object
    LpsStats:
      required:
        - lpsId
      properties:
        lpsId:
          description: The landing page ID
          type: string
          example: 6ee7597f-9bde-4b92-9411-2fb228c9fa34
        name:
          type: string
          example: Some example landing page
        pageViews:
          description: The total number of times your landing page was viewed or refreshed
          type: integer
          format: int64
          example: 9
        visits:
          description: The number of browsing sessions initiated on your landing page
          type: integer
          format: int64
          example: 5
        uniqueVisitors:
          description: The number of people who visited your landing page
          type: integer
          format: int64
          example: 5
        thumbnailUrl:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://us-wbe-img2.gr-cdn.com/user/X/Y.webp
      type: object
    ImageDetails:
      properties:
        imageId:
          description: Image ID
          type: string
          example: '123456'
        originalImageUrl:
          description: URL from which image was downloaded
          type: string
          format: uri
          example: http://somesite.example.com/my_image.jpg
          nullable: true
        size:
          description: Size in bytes
          type: string
          example: '1234567'
        name:
          description: Original name
          type: string
          example: original_image
        thumbnailUrl:
          description: Thumbnail URL
          type: string
          format: uri
          example: >-
            https://us-re.gr-cdn.com/114x/https://multimedia.getresponse.com/getresponse-hUXzv/photos/123456.jpg
        url:
          description: Asset URL
          type: string
          format: uri
          example: >-
            https://multimedia.getresponse.com/getresponse-hUXzv/photos/123456.jpg
        extension:
          description: File extension
          type: string
          enum:
            - jpg
            - gif
            - png
            - jpeg
            - bmp
          example: jpg
      type: object
    CreateMultimedia:
      properties:
        file:
          type: string
          format: binary
      type: object
    Tracking:
      properties:
        grid:
          type: string
          readOnly: true
          example: 2fEBK5kj4ReCxUvd
        snippet:
          type: string
          readOnly: true
          example: >-
            <script type="text/javascript" src="script_url_will_be_here"
            async></script>
        snippetV2:
          type: string
          readOnly: true
          example: <script type="text/javascript">function () {}</script>
      type: object
    FacebookPixel:
      properties:
        name:
          type: string
          readOnly: true
          example: integration-pixel
        pixelId:
          type: string
          readOnly: true
          example: '123'
      type: object
    StatusEnum:
      type: string
      enum:
        - enabled
        - disabled
    StringBooleanEnum:
      type: string
      enum:
        - 'true'
        - 'false'
    SortOrderEnum:
      type: string
      enum:
        - ASC
        - DESC
    DateOrDateTime:
      oneOf:
        - type: string
          format: date
          example: '2018-04-15'
        - type: string
          format: date-time
          example: 2018-01-15T13:30:42+0000
    ErrorResponse:
      required:
        - httpStatus
        - code
        - codeDescription
        - message
        - moreInfo
        - context
        - uuid
      properties:
        httpStatus:
          description: HTTP response code
          type: integer
          format: int32
        code:
          description: API error code
          type: integer
          format: int32
        codeDescription:
          description: API error code description
          type: string
        message:
          description: Error message
          type: string
        moreInfo:
          description: URL to error description in the API Docs
          type: string
        context:
          type: array
          items:
            type: string
        uuid:
          description: UUID of the error response
          type: string
      type: object
    AccountBadgeDetails:
      properties:
        status:
          description: Current badge status
          example: enabled
          $ref: '#/components/schemas/StatusEnum'
      type: object
    SendingLimitsListItem:
      properties:
        timeFrame:
          description: Time frame, measured in seconds
          type: integer
          example: 2592000
        limit:
          description: The number of email sends available within a given time frame
          type: integer
          example: 2500
        used:
          description: The number of email sends used within the given time frame
          type: integer
          example: 0
      type: object
    IndustryTagId:
      properties:
        industryTagId:
          description: Industry tag ID
          type: string
          format: integer
          example: '1'
      type: object
    IndustryTagProperties:
      properties:
        description:
          type: string
          readOnly: true
          example: Marketing agencies big and small, with fluent and wise agents...
        name:
          type: string
          readOnly: true
          example: Marketing agencies
      type: object
    IndustryTag:
      required:
        - industryTagId
      type: object
      allOf:
        - $ref: '#/components/schemas/IndustryTagId'
        - $ref: '#/components/schemas/IndustryTagProperties'
    TimezoneName:
      properties:
        name:
          description: >-
            Time zone name as defined by
            https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
          type: string
          example: Europe/Warsaw
      type: object
    TimezoneOffset:
      properties:
        offset:
          type: string
          pattern: /^(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])$/
          example: '+01:00'
      type: object
    TimezoneId:
      properties:
        timezoneId:
          type: integer
          format: int32
          example: 1
      type: object
    TimezoneCountry:
      properties:
        country:
          type: string
          example: Poland
      type: object
    Timezone:
      required:
        - timezoneId
      allOf:
        - $ref: '#/components/schemas/TimezoneId'
        - $ref: '#/components/schemas/TimezoneName'
        - $ref: '#/components/schemas/TimezoneOffset'
        - $ref: '#/components/schemas/TimezoneCountry'
    AccountsLoginHistoryListElement:
      properties:
        loginTime:
          description: Login time
          type: string
          format: date-time
          example: 2004-02-12T15:19:21+0000
        logoutTime:
          description: Logout time
          type: string
          format: date-time
          example: 2004-02-12T15:19:21+0000
          nullable: true
        isSuccessful:
          $ref: '#/components/schemas/StringBooleanEnum'
        ip:
          description: IP address
          type: string
          format: ipv4
          example: 192.0.0.1
      type: object
      x-konfig-properties:
        isSuccessful:
          description: Login was successful
          example: 'true'
    CallbackActions:
      properties:
        open:
          description: Is `open` callback enabled
          type: boolean
        click:
          description: Is `click` callback enabled
          type: boolean
        goal:
          description: Is `goal` callback enabled
          type: boolean
        subscribe:
          description: Is `subscribe` callback enabled
          type: boolean
        unsubscribe:
          description: Is `unsubscribe` callback enabled
          type: boolean
        survey:
          description: Is `survey` callback enabled
          type: boolean
      type: object
    Callback:
      properties:
        url:
          description: URL to use to post notifications
          format: uri
        actions:
          $ref: '#/components/schemas/CallbackActions'
      type: object
    AccountDetailsCountryCode:
      properties:
        countryCodeId:
          description: Country code ID
          type: string
          example: '175'
        countryCode:
          description: Country code
          type: string
          example: PL
      type: object
    AccountBilling:
      properties:
        listSize:
          description: Billing plan maximum list size
          type: string
          example: '2500'
        paymentPlan:
          description: Payment plan
          type: string
          enum:
            - Free Trial
            - Monthly
            - 12 Months
            - 24 Months
          example: Monthly
        subscriptionPrice:
          description: Subscription price
          type: integer
          example: 25
        renewalDate:
          description: Subscription reneval date
          type: string
          format: date
          example: '2017-01-01'
        currencyCode:
          description: Currency code compliant with ISO-4217
          type: string
          example: USD
        accountBalance:
          description: Account balance
          type: string
          example: '-15.00'
        price:
          description: Price
          type: integer
          example: 25
        paymentMethod:
          description: Payment method
          type: string
          enum:
            - outside_system
            - inside_system
            - credit_card
            - platnosci_pl
            - direct_debit
            - paypal
            - yandex
            - alipay
            - alipay_mobile
            - boleto
            - ideal
            - qiwi
            - sofort
            - webmoney
          example: credit_card
        creditCard:
          type: object
          nullable: true
          allOf:
            - properties:
                number:
                  description: Masked credit card number
                  type: string
                  example: XXXXXXXXX0123
              type: object
            - properties:
                expirationDate:
                  description: Expiration date
                  type: string
                  format: date
                  example: '2014-01-01'
              type: object
        addons:
          description: Addons
          type: array
          items:
            properties:
              name:
                description: Addon name
                type: string
                example: Landing Page Creator
              price:
                description: Addon price
                type: integer
                example: 15
              active:
                $ref: '#/components/schemas/StringBooleanEnum'
            type: object
            x-konfig-properties:
              active:
                description: Addon active status
                example: 'true'
      type: object
    SubscriptionsByDatesStatisticsList:
      type: array
      items:
        $ref: '#/components/schemas/CampaignSubscriptionStatisticsList'
    CampaignSubscriptionStatisticsList:
      description: Dates in the YYYY-MM-DD format are used as keys.
      type: object
      example:
        '2014-12-15':
          V:
            summary: 99
            import: 10
            email: 11
            www: 10
            panel: 14
            leads: 3
            sale: 3
            api: 1
            forward: 15
            survey: 6
            mobile: 12
            copy: 7
            landing_page: 4
          p:
            summary: 93
            import: 9
            email: 7
            www: 9
            panel: 5
            leads: 3
            sale: 3
            api: 8
            forward: 10
            survey: 8
            mobile: 10
            copy: 10
            landing_page: 7
      additionalProperties:
        $ref: '#/components/schemas/CampaignSubscriptionStatisticsItemByCampaign'
    CampaignRemovalsStatisticsItem:
      type: object
      anyOf:
        - properties:
            api:
              type: integer
              example: 1
          type: object
        - properties:
            automation:
              type: integer
              example: 1
          type: object
        - properties:
            blacklisted:
              type: integer
              example: 1
          type: object
        - properties:
            bounce:
              type: integer
              example: 1
          type: object
        - properties:
            cleaner:
              type: integer
              example: 1
          type: object
        - properties:
            compliant:
              type: integer
              example: 1
          type: object
        - properties:
            support:
              type: integer
              example: 1
          type: object
        - properties:
            unsubscribe:
              type: integer
              example: 1
          type: object
        - properties:
            user:
              type: integer
              example: 1
          type: object
    CampaignSubscriptionStatisticsItemByCampaign:
      description: The properties of the result are indexed with the campaign ID.
      type: object
      example:
        V:
          summary: 99
          import: 10
          email: 11
          www: 10
          panel: 14
          leads: 3
          sale: 3
          api: 1
          forward: 15
          survey: 6
          mobile: 12
          copy: 7
          landing_page: 4
          webinar: 3
        p:
          summary: 93
          import: 9
          email: 7
          www: 9
          panel: 5
          leads: 3
          sale: 3
          api: 8
          forward: 10
          survey: 8
          mobile: 10
          copy: 10
          landing_page: 7
          webinar: 4
      additionalProperties:
        description: The properties of the result are indexed with the campaign ID
        $ref: '#/components/schemas/CampaignSubscriptionStatisticsItem'
    CampaignSubscriptionStatisticsItem:
      properties:
        summary:
          type: integer
          example: 0
        import:
          type: integer
          example: 0
        email:
          type: integer
          example: 0
        www:
          type: integer
          example: 0
        panel:
          type: integer
          example: 0
        leads:
          type: integer
          example: 0
        sale:
          type: integer
          example: 0
        api:
          type: integer
          example: 0
        forward:
          type: integer
          example: 0
        survey:
          type: integer
          example: 0
        mobile:
          type: integer
          example: 0
        copy:
          type: integer
          example: 0
        landing_page:
          type: integer
          example: 0
        webinar:
          type: integer
          example: 0
      type: object
    CampaignSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CampaignSummaryItem'
    CampaignLocationsList:
      type: array
      items:
        $ref: '#/components/schemas/CampaignLocationItem'
    RemovalsByDatesStatisticsList:
      type: array
      items:
        $ref: '#/components/schemas/CampaignRemovalsStatisticsList'
    CampaignRemovalsStatisticsList:
      type: object
      example:
        '2014-12-05':
          user: 5
        '2015-01-22':
          user: 12
          bounce: 2
      additionalProperties:
        description: Dates in YYYY-MM-DD format are used as keys
        $ref: '#/components/schemas/CampaignRemovalsStatisticsItem'
    CampaignLocationItem:
      type: object
      example:
        others:
          amount: '6'
          continentCode: ''
          countryCode: ''
        PL:
          amount: '45'
          continentCode: EU
          countryCode: PL
      additionalProperties:
        description: The results are indexed with the location name (PL, EN, etc.)
        properties:
          amount:
            description: The amount of subscribers from a given location
            type: string
            format: number
            example: '0'
          continentalCode:
            description: The region code
            type: string
            example: EU
          countryCode:
            description: The country code
            type: string
            example: PL
        type: object
    CampaignOriginsList:
      type: array
      items:
        $ref: '#/components/schemas/CampaignSubscriptionStatisticsItemByCampaign'
    CampaignListSizesStatisticsElement:
      properties:
        totalSubscribers:
          description: The total amount of subscribers for a given datetime and grouping
          type: integer
          format: int64
        addedSubscribers:
          description: The amount of subscribers added since the previous statistics frame
          type: integer
          format: int64
        removedSubscribers:
          description: >-
            The amount of subscribers removed since the previous statistics
            frame
          type: integer
          format: int64
        createdOn:
          description: >-
            The statistics frame timestamp. The value depends on the groupBy
            parameter. For the hour, use datetime in the format YYYY-mm-dd
            HH:mm:ss; for the day, use date in the format YYYY-mm-dd; for the
            month, use a string in the format YYYY-mm; and for the total, use
            the string total.
          type: string
      type: object
    CampaignListSizesStatisticsList:
      type: array
      items:
        $ref: '#/components/schemas/CampaignListSizesStatisticsElement'
    BalanceByDatesStatisticsList:
      type: array
      items:
        $ref: '#/components/schemas/CampaignBalanceStatisticsList'
    CampaignBalanceStatisticsList:
      type: object
      example:
        '2014-12-05':
          removals:
            user: 5
          subscriptions:
            summary: 7
            import: 0
            email: 0
            www: 0
            panel: 0
            leads: 0
            sale: 0
            api: 7
            forward: 0
            survey: 0
            mobile: 0
            copy: 0
            landing_page: 0
        '2015-01-21':
          removals:
            user: 10
      additionalProperties:
        description: Dates in YYYY-MM-DD format are used as keys
        anyOf:
          - properties:
              removals:
                $ref: '#/components/schemas/CampaignRemovalsStatisticsItem'
            type: object
            x-konfig-properties:
              removals:
                type: object
          - properties:
              subscriptions:
                $ref: '#/components/schemas/CampaignSubscriptionStatisticsItem'
            type: object
            x-konfig-properties:
              subscriptions:
                type: object
    CampaignSummaryItem:
      description: >-
        The properties of the result are indexed with the location name (PL, EN,
        etc.).
      type: object
      example:
        o5lx:
          totalSubscribers: '4'
          totalNewsletters: '129'
          totalTriggers: '0'
          totalLandingPages: '1'
          totalWebforms: '3'
        CC9F:
          totalSubscribers: '0'
          totalNewsletters: '0'
          totalTriggers: '0'
          totalLandingPages: '5'
          totalWebforms: '0'
        V6OeR:
          totalSubscribers: '0'
          totalNewsletters: '0'
          totalTriggers: '0'
          totalLandingPages: '0'
          totalWebforms: '0'
      additionalProperties:
        properties:
          totalSubscribers:
            description: The total number of subscribers
            type: string
            format: number
            example: '0'
          totalNewsletters:
            description: The total number of newsletters
            type: string
            format: number
            example: '0'
          totalTriggers:
            description: The total number of triggers
            type: string
            format: number
            example: '0'
          totalLandingPages:
            description: The total number of landing pages
            type: string
            format: number
            example: '0'
          totalWebforms:
            description: The total number of webforms
            type: string
            format: number
            example: '0'
        type: object
    CampaignReference:
      required:
        - campaignId
      properties:
        campaignId:
          description: Campaign ID
          type: string
          example: C
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/campaigns/C
        name:
          description: The campaign name
          type: string
          readOnly: true
          example: Promo campaign
          nullable: true
      type: object
    CampaignStatisticsIdQuery:
      type: string
      example: 3Va2e
    LegacyForm:
      properties:
        webformId:
          description: The webform (Legacy Form) ID
          type: string
          example: NPKx
        name:
          type: string
          example: Webform 2010/7/5
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          example: https://api.getresponse.com/v3/webforms/NPKx
        scriptUrl:
          description: The URL of the script that displays the Legacy Form
          type: string
          format: uri
          example: https://app.getresponse.com/view_webform.js?u=VfEy1&wid=11774901
        status:
          $ref: '#/components/schemas/StatusEnum'
        modifiedOn:
          description: The modification date
          type: string
          format: date-time
        statistics:
          $ref: '#/components/schemas/LegacyFormStatistics'
        campaign:
          $ref: '#/components/schemas/CampaignReference'
      type: object
    LegacyFormStatistics:
      properties:
        opened:
          description: The number of Legacy Form views
          type: integer
          format: int64
          example: 1234
        subscribed:
          description: The number of contacts that subscribed using this Legacy Form
          type: integer
          format: int64
          example: 100
      type: object
    GDPRField:
      properties:
        gdprFieldId:
          type: string
          readOnly: true
          example: MtY
        name:
          description: The name of the GDPR field
          type: string
          example: 'Consent #1'
        createdOn:
          type: string
          format: date-time
          example: 2018-08-01T09:18:00+0000
        href:
          description: The direct hyperlink to the resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/gdpr-fields/MtY
      type: object
    GDPRFieldLatestVersion:
      properties:
        gdprFieldVersionId:
          type: string
          readOnly: true
          example: yRI
        content:
          description: The content of the GDPR field
          type: string
          readOnly: true
          example: '1st version of Consent #1'
        createdOn:
          type: string
          format: date-time
          example: 2018-08-02T11:12:00+0000
      type: object
    GDPRFieldDetails:
      type: object
      allOf:
        - $ref: '#/components/schemas/GDPRField'
        - properties:
            latestVersion:
              $ref: '#/components/schemas/GDPRFieldLatestVersion'
          type: object
    UpdateWorkflow:
      required:
        - status
      properties:
        status:
          description: >-
            An 'incomplete' status means that the workflow is a 'draft' in the
            web panel
          type: string
          enum:
            - active
            - inactive
            - incomplete
          example: active
      type: object
    Workflow:
      required:
        - workflowId
        - name
        - status
        - subscriberStatistics
      properties:
        workflowId:
          description: The workflow ID
          type: string
          readOnly: true
          example: pxs
        name:
          type: string
          example: My draft
        status:
          type: string
          enum:
            - active
            - inactive
            - incomplete
          example: active
        dateStart:
          type: string
          format: date-time
          example: 2014-02-12T15:19:21+0000
        dateStop:
          type: string
          format: date-time
          example: 2014-04-12T15:19:21+0000
        subscriberStatistics:
          $ref: '#/components/schemas/WorkflowSubscriberStatistics'
      type: object
    WorkflowSubscriberStatistics:
      required:
        - completedCount
        - inProgressCount
      properties:
        completedCount:
          description: The number of subscribers that completed the workflow
          type: integer
          format: int64
          readOnly: true
          example: 4
        inProgressCount:
          description: The number of subscribers that are in progress in the workflow
          type: integer
          format: int64
          readOnly: true
          example: 3
      type: object
    SmsAutomationListItem:
      required:
        - smsId
      properties:
        smsId:
          description: The automated SMS message ID
          type: string
          readOnly: true
          example: 'N'
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/sms-automation/N
        name:
          description: The automated SMS message name
          type: string
          maxLength: 128
          minLength: 2
          example: New message
        campaign:
          $ref: '#/components/schemas/CampaignReference'
        modifiedOn:
          description: >-
            The date the automated SMS message was last modified on, shown in
            `ISO 8601` date and time format. e.g. `2022-04-10T10:02:57+0000`
          type: string
          format: date-time
        status:
          description: The status of of the automated SMS message
          type: string
          enum:
            - ready
            - in_use
        statistics:
          description: Automate SMS message statistics
          allOf:
            - properties:
                sent:
                  description: The number od sent automated SMS messages
                  type: integer
                  example: 12
                delivered:
                  description: The number of delivered automated SMS messages
                  type: integer
                  example: 10
                clicks:
                  description: The number of automated SMS link clicks
                  type: integer
                  example: 8
              type: object
        senderName:
          description: The name of the sender of the automated SMS message
          type: string
          readOnly: true
        hasLinks:
          description: Information is the automated SMS message contains links
          type: boolean
          readOnly: true
      type: object
      x-konfig-properties:
        campaign:
          description: The campaign the SMS message is in
    SmsListItem:
      required:
        - newsletterId
        - href
      properties:
        smsId:
          description: The SMS message ID
          type: string
          readOnly: true
          example: 'N'
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/sms/N
        name:
          description: The SMS message name
          type: string
          maxLength: 128
          minLength: 2
          example: New message
        campaign:
          $ref: '#/components/schemas/CampaignReference'
        modifiedOn:
          description: >-
            The date the SMS message was last modified on, shown in `ISO 8601`
            date and time format. e.g. `2022-04-10T10:02:57+0000`
          type: string
          format: date-time
        type:
          description: The SMS message type
          type: string
          enum:
            - sms
            - draft
          readOnly: true
        sendOn:
          description: SMS message send date details
          type: object
          nullable: true
          allOf:
            - properties:
                date:
                  description: >-
                    Send date. Shown in format `ISO 8601` without timezone
                    offset e.g. `2022-04-10T10:02:57`.
                  type: string
                  format: date-time
                  example: '2022-03-26T10:35:00'
                timeZone:
                  description: Time zone details
                  type: object
                  allOf:
                    - properties:
                        timeZoneId:
                          description: Time zone ID
                          type: integer
                          example: 123
                        timeZoneName:
                          description: Time zone name
                          type: string
                          example: America/New_York
                        timeZoneOffset:
                          description: Time zone offset
                          type: string
                          example: '-05:00'
                      type: object
              type: object
        recipientsType:
          description: Type of SMS message recipients
          type: string
          enum:
            - contacts
            - importedNumbers
          readOnly: true
          example: contacts
        senderName:
          description: The SMS message sender name
          type: string
          readOnly: true
        content:
          description: The SMS message content
          type: string
          example: This is my SMS content
        sendMetrics:
          description: Information about sending process
          type: object
          allOf:
            - properties:
                progress:
                  description: Sending progress
                  type: string
                status:
                  description: Sending status
                  type: string
                  enum:
                    - scheduled
                    - sending
                    - sent
              type: object
        statistics:
          description: Message statistics
          allOf:
            - properties:
                sent:
                  description: Number of sent messages
                  type: integer
                  example: 12
                delivered:
                  description: Number of delivered messages
                  type: integer
                  example: 10
                clicks:
                  description: Number of clicked messages
                  type: integer
                  example: 8
              type: object
      type: object
      x-konfig-properties:
        campaign:
          description: The SMS message campaign
    AutoresponderList:
      type: array
      items:
        $ref: '#/components/schemas/Autoresponder'
    Website:
      properties:
        websiteId:
          description: The website ID
          type: string
          readOnly: true
          example: ce84fabc-1349-4992-a2d7-0c44c5534128
        href:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: >-
            https://api.getresponse.com/v3/websites/6b0d7d59-71d9-4708-80a6-aa0f13805111
        name:
          description: The website name
          type: string
          example: 'Predesigned #017'
        status:
          description: The website status
          type: string
          enum:
            - published
            - unpublished
          readOnly: true
        domainUrl:
          description: The website domain
          type: string
          format: uri
          readOnly: true
          example: predesigned-017-52612.grweb.site
        thumbnailUrl:
          description: The URL of a website thumbnail
          type: string
          format: uri
          readOnly: true
          example: >-
            https://us-wbe-img2.gr-cdn.com/user/e5c2094a-2354-459f-9b9f-6d0369ccae2c/6b0d7d59-71d9-4708-80a6-aa0f13805111.png?width=208
        isChatsEnabled:
          $ref: '#/components/schemas/StringBooleanEnum'
        createdAt:
          description: The date the website was created
          type: string
          format: date-time
        updatedAt:
          description: The date the website was updated
          type: string
          format: date-time
        statistics:
          description: The website statistics
          $ref: '#/components/schemas/WebsiteStatistics'
      type: object
      x-konfig-properties:
        isChatsEnabled:
          description: Chats is enabled on the website
          example: true
    WebsiteStatistics:
      properties:
        pageViews:
          description: Number of page views
          type: integer
          format: int64
          example: 9
        visits:
          description: Number of site visits
          type: integer
          format: int64
          example: 5
        uniqueVisitors:
          description: Number of unique visitors
          type: integer
          format: int64
          example: 5
      type: object
    WebsiteStats:
      required:
        - websiteId
      properties:
        websiteId:
          description: The website ID
          type: string
          example: PvLI8C
        name:
          type: string
          example: Variant A
        pageViews:
          description: The number of page views
          type: integer
          example: 1
        visits:
          description: The number of visits
          type: integer
          example: 1
        uniqueVisitors:
          description: The number of unique visitors
          type: integer
          example: 1
        thumbnailUrl:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: https://api.getresponse.com/v3/wbe/N
      type: object
    WebsiteDetails:
      type: object
      allOf:
        - $ref: '#/components/schemas/Website'
        - properties:
            pages:
              type: array
              items:
                $ref: '#/components/schemas/WebsitePage'
          type: object
    WebsitePage:
      properties:
        uuid:
          description: The website page ID
          type: string
          readOnly: true
          example: 6ee7597f-9bde-4b92-9411-2fb228c9fa34
        name:
          description: The website page name
          type: string
          example: Home
        status:
          description: The website page status
          type: string
          enum:
            - active
            - inactive
        url:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: /terms-of-service
        redirectUrl:
          description: Direct hyperlink to a resource
          type: string
          format: uri
          readOnly: true
          example: ''
        createdAt:
          description: The date the website page was created
          type: string
          format: date-time
      type: object
    TransactionalEmailsTemplatesUpdateTemplateRequest:
      properties:
        subject:
          description: The template subject
          type: string
          example: Order Confirmation - Example Shop
        content:
          $ref: '#/components/schemas/TransactionalEmailTemplateContent'
      type: object
    ContactsCreateBatchContactsRequest:
      required:
        - campaignId
        - contacts
      properties:
        campaignId:
          description: ID of the destination campaign (list).
          type: string
          example: C
        contacts:
          description: Contacts that will be created.
          type: array
          items:
            required:
              - email
            properties:
              tags:
                required:
                  - ids
                properties:
                  ids:
                    description: List of tag IDs.
                    type: array
                    items:
                      type: string
                      example: kL6Nh
                type: object
              email:
                type: string
                format: email
                example: john.doe@example.com
              name:
                type: string
                maxLength: 128
                minLength: 1
                example: John Doe
              dayOfCycle:
                description: The day a contact is on in an autoresponder cycle.
                type: string
                example: '42'
              scoring:
                description: Contact's score
                type: number
                example: 8
              ipAddress:
                description: Contact's IP address. IPv4 and IPv6 formats are accepted.
                example: 1.2.3.4
                oneOf:
                  - type: string
                    format: ipv4
                  - type: string
                    format: ipv6
              customFieldValues:
                type: array
                items:
                  required:
                    - customFieldId
                    - value
                  properties:
                    customFieldId:
                      description: Custom field ID.
                      type: string
                      example: kL6Nh
                    value:
                      type: array
                      items:
                        type: string
                        example: 18-35
                  type: object
            type: object
      type: object
    ContactsGetListOfActivitiesResponse:
      type: array
      items:
        $ref: '#/components/schemas/ContactActivity'
    ContactsGetSingleCampaignContactsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ContactListElement'
    ContactsUpsertContactTagsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ContactTag'
    SearchContactsByIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/SearchedContactDetails'
    RssNewslettersGetStatisticsByIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/MessageStatisticsListElement'
    TaxesGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Tax'
    FormsGetListOfVariantsResponse:
      type: array
      items:
        $ref: '#/components/schemas/FormVariantDetails'
    LegacyLandingPagesGetByIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/BaseLandingPage'
    CategoriesListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Category'
    OrdersGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Order'
    ProductsGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/CreateAndUpdate'
    ProductsUpsertCategoriesResponse:
      type: array
      items:
        $ref: '#/components/schemas/BaseCategory'
    ProductsUpsertMetaFieldsResponse:
      type: array
      items:
        $ref: '#/components/schemas/MetaField'
    CartsGetShopCartsResponse:
      type: array
      items:
        $ref: '#/components/schemas/CreateAndUpdate'
    NewslettersGetActivitiesResponse:
      type: array
      items:
        $ref: '#/components/schemas/NewsletterActivity'
    NewslettersGetThumbnailResponse:
      type: string
      format: binary
    ProductVariantsGetProductVariantsListResponse:
      type: array
      items:
        $ref: '#/components/schemas/ProductVariant'
    AutorespondersGetThumbnailResponse:
      type: string
      format: binary
    WebinarsGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Webinar'
    SearchContactsSavedListResponse:
      type: array
      items:
        $ref: '#/components/schemas/BaseSearchContacts'
    TransactionalEmailsTemplatesGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/TransactionalEmailsTemplateListElement'
    TransactionalEmailsGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/TransactionalEmailListElement'
    TransactionalEmailsGetOverallStatisticsResponse:
      type: array
      items:
        $ref: '#/components/schemas/TransactionalEmailStatistics'
    FromFieldsGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/FromField'
    RssNewslettersGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/RssNewsletterListing'
    RssNewslettersGetStatisticsResponse:
      type: array
      items:
        $ref: '#/components/schemas/MessageStatisticsListElement'
    CustomEventsGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/CustomEvent'
    FormsGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Form'
    LegacyLandingPagesGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/BaseLandingPage'
    ImportsGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Import'
    PredefinedFieldsGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/PredefinedField'
    SuppressionsGetSuppressionListsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Suppression'
    SubscriptionConfirmationsGetCollectionOfBodiesResponse:
      type: array
      items:
        $ref: '#/components/schemas/SubscriptionConfirmationBody'
    SubscriptionConfirmationsGetSubjectCollectionResponse:
      type: array
      items:
        $ref: '#/components/schemas/SubscriptionConfirmationSubject'
    ShopsGetListOfShopsResponse:
      type: array
      items:
        $ref: '#/components/schemas/CreateAndUpdate'
    FormsAndPopupsGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/PopupListItem'
    AbTestsGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Splittest'
    FileLibraryGetFileListResponse:
      type: array
      items:
        $ref: '#/components/schemas/BaseFile'
    FileLibraryListFoldersResponse:
      type: array
      items:
        $ref: '#/components/schemas/Folder'
    FileLibraryCreateFolderResponse:
      type: array
      items:
        $ref: '#/components/schemas/Folder'
    AbTestsSubjectGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/AbtestsSubjectListItem'
    ClickTracksGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/ClickTrackResource'
    NewslettersGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/NewsletterListElement'
    TagsGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/BaseTag'
    AddressesGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/CreateAndUpdate'
    CustomFieldsGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/CustomField'
    LandingPagesGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Lps'
    MultimediaGetImageListResponse:
      type: array
      items:
        $ref: '#/components/schemas/ImageDetails'
    TrackingJavascriptCodeSnippetsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Tracking'
    TrackingGetFacebookPixelsResponse:
      type: array
      items:
        $ref: '#/components/schemas/FacebookPixel'
    AccountsGetLoginHistoryResponse:
      type: array
      items:
        $ref: '#/components/schemas/AccountsLoginHistoryListElement'
    AccountsListIndustryTagsResponse:
      type: array
      items:
        $ref: '#/components/schemas/IndustryTag'
    AccountsGetTimezonesListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Timezone'
    AccountsGetSendingLimitsResponse:
      type: array
      items:
        $ref: '#/components/schemas/SendingLimitsListItem'
    CampaignsListsGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/BaseCampaign'
    LegacyFormsGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/LegacyForm'
    GdprFieldsGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/GDPRField'
    WorkflowsListWorkflowsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Workflow'
    WebsitesGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Website'
  requestBodies:
    NewShop:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAndUpdate'
    NewCategory:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Category'
    UpdateCategory:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Category'
    UpdateShop:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAndUpdate'
    NewMetaField:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseMetaField'
    NewProduct:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAndUpdate'
    UpdateProduct:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAndUpdate'
    UpsertProductCategory:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpsertProductCategory'
    UpsertMetaField:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpsertMetaField'
    UpdateMetaField:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MetaField'
    NewProductVariant:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseProductVariant'
    UpdateProductVariant:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductVariant'
    NewTax:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseTax'
    UpdateTax:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseTax'
    NewAddress:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAndUpdate'
    UpdateAddress:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAndUpdate'
    NewOrder:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
    UpdateOrder:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
    NewCart:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAndUpdate'
    UpdateCart:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAndUpdate'
    NewSearchContacts:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewSearchContacts'
    UpdateSearchContacts:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateSearchContacts'
    SearchContactsConditionsDetails:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SearchContactsConditionsDetails'
    CreateTransactionalEmail:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateTransactionalEmail'
    CreateTransactionalEmailTemplate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateTransactionalEmailTemplate'
    updateTransactionalEmailsTemplate:
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/TransactionalEmailsTemplatesUpdateTemplateRequest
    NewFromField:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FromField'
    NewCampaign:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Campaign'
    UpdateCampaign:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Campaign'
    UpdateAccount:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Account'
    NewAutoresponder:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Autoresponder'
    UpdateAutoresponder:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Autoresponder'
    NewRssNewsletter:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RssNewsletter'
    UpdateRssNewsletter:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RssNewsletter'
    NewContact:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewContact'
    UpsertContactCustomFields:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewContactCustomFieldValues'
    UpsertContactTags:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewContactTags'
    UpdateContact:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateContact'
    NewCustomField:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomField'
    UpdateCustomField:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCustomField'
    NewSuppression:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseSuppression'
    UpdateSuppression:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseSuppression'
    NewPredefinedField:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PredefinedField'
    UpdatePredefinedField:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePredefinedField'
    UpdateCallbacks:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCallbacks'
    TriggerCustomEvent:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TriggerCustomEvent'
    NewCustomEvent:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomEvent'
    UpdateCustomEvent:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomEvent'
    NewImport:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewImport'
    NewFile:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseFile'
    NewFolder:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewFolder'
    NewAbtestsSubject:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewAbtestsSubject'
    ChooseWinnerAbtestsSubject:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChooseWinnerAbtestsSubject'
    SendNewsletterDraft:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SendNewsletterDraft'
    NewNewsletter:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewNewsletter'
    NewTag:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseTag'
    UpdateTag:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseTag'
    UpdateAccountBlocklist:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Blocklist'
    UpdateCampaignBlocklist:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Blocklist'
    CreateMultimedia:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/CreateMultimedia'
    UpdateAccountBadge:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountBadgeDetails'
    UpdateWorkflow:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateWorkflow'
  headers:
    CurrentPage:
      description: The current page number
      schema:
        type: integer
        format: int32
    TotalPages:
      description: The total number of pages
      schema:
        type: integer
        format: int32
    TotalCount:
      description: The total number of resources found for the specified conditions
      schema:
        type: integer
        format: int32
    RateLimitLimit:
      description: The total number of requests available per time frame
      schema:
        type: integer
        format: int32
    RateLimitRemaining:
      description: The number of requests left in the current time frame
      schema:
        type: integer
        format: int32
    RateLimitReset:
      description: Seconds left in the current time frame, e.g. "432 seconds"
      schema:
        type: string
  securitySchemes:
    api-key:
      description: Header value must be prefixed with api-key
      type: apiKey
      name: X-Auth-Token
      in: header
    oauth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://app.getresponse.com/oauth2_authorize.html
          scopes:
            all: all data access
        authorizationCode:
          authorizationUrl: https://app.getresponse.com/oauth2_authorize.html
          tokenUrl: https://api.getresponse.com/v3/token
          scopes:
            all: all data access
        clientCredentials:
          tokenUrl: https://api.getresponse.com/v3/token
          scopes:
            all: all data access
externalDocs:
  description: Find out more about API
  url: https://apidocs.getresponse.com
x-tagGroups:
  - tags:
      - Accounts
      - Multimedia
      - File Library
    name: User
  - tags:
      - Campaigns (Lists)
      - Contacts
      - Custom Fields
      - Search Contacts
      - Subscription Confirmations
      - Predefined Fields
      - Suppressions
      - Imports
    name: Contacts
  - tags:
      - Newsletters
      - Autoresponders
      - RSS Newsletters
      - Legacy Landing Pages
      - From Fields
      - A/B tests
      - A/B tests - subject
      - Click Tracks
    name: Email Marketing
  - tags:
      - Tags
    name: Tags
  - tags:
      - GDPR Fields
    name: GDPR Fields
  - tags:
      - Legacy Forms
      - Forms
    name: Forms and surveys
  - tags:
      - Workflows
      - Custom Events
      - Tracking
    name: Automation
  - tags:
      - Addresses
      - Carts
      - Categories
      - Meta Fields
      - Orders
      - Products
      - Product Variants
      - Shops
      - Taxes
    name: Ecommerce
  - tags:
      - Transactional Emails
      - Transactional Emails Templates
    name: Transactional Emails
  - tags:
      - SMS Messages
      - SMS Automation Messages
    name: SMS
  - tags:
      - Ecommerce
      - Sms
      - Website
      - Landing Page
      - Form and Popup
    name: Statistics
  - tags:
      - Webinars
    name: Webinars
  - tags:
      - Websites
      - Landing Pages
    name: Websites
  - tags:
      - Forms and Popups
    name: Forms and Popups
