openapi: 3.0.3
info:
  title: Baserow API spec
  description: >-
    For more information about our REST API, please visit [this
    page](https://baserow.io/docs/apis%2Frest-api).


    For more information about our deprecation policy, please visit [this
    page](https://baserow.io/docs/apis%2Fdeprecations).
  version: 1.23.2
  contact:
    url: https://baserow.io/contact
  license:
    name: MIT
    url: https://gitlab.com/baserow/baserow/-/blob/master/LICENSE
  x-konfig-ignore:
    object-with-no-properties: true
servers:
  - url: api.baserow.io
tags:
  - name: Admin
  - name: Database table rows
  - name: Database table views
  - name: User
  - name: Applications
  - name: Auth
  - name: Teams
  - name: Groups
  - name: Workspaces
  - name: User sources
  - name: Audit log
  - name: Database tables
  - name: Database table view filters
  - name: Group invitations
  - name: Workspace invitations
  - name: Database table fields
  - name: Builder data sources
  - name: Builder elements
  - name: Builder domains
  - name: Builder workflow actions
  - name: Trash
  - name: Database table webhooks
  - name: Database tokens
  - name: Role assignments
  - name: Templates
  - name: Integrations
  - name: Database table view sortings
  - name: Database table view decorations
  - name: Database table view groupings
  - name: Database table grid view
  - name: Builder pages
  - name: Snapshots
  - name: Notifications
  - name: Settings
  - name: Jobs
  - name: Database table form view
  - name: User files
  - name: Database table gallery view
  - name: Database table kanban view
  - name: Database table calendar view
  - name: Database table export
  - name: Builder public
  - name: Health
  - name: Builder theme
paths:
  /api/database/view/{view_id}/premium:
    patch:
      tags:
        - Database table views
      operationId: DatabaseTableViews_setPremiumAttributes
      security:
        - JWT: []
      description: Sets view attributes only available for premium users.
      parameters:
        - description: Sets show_logo of this view.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePremiumViewAttributes'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePremiumViewAttributes'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePremiumViewAttributes'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewsSetPremiumAttributesResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewsSetPremiumAttributes404Response
  /api/user-source/{user_source_id}/force-token-auth:
    post:
      tags:
        - User sources
      operationId: UserSources_forceTokenAuth
      security:
        - JWT: []
      description: >-
        Force authenticates an existing user based on their ID. If successful,
        an access token and a refresh token will be returned.
      parameters:
        - description: The user source to use to authenticate the user.
          in: path
          name: user_source_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSourcesForceTokenAuthResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSourcesForceTokenAuth401Response'
  /api/user-source/{user_source_id}/token-auth:
    post:
      tags:
        - User sources
      operationId: UserSources_authenticateUserWithToken
      security:
        - JWT: []
        - {}
      description: >-
        Authenticates an existing user against a user source based on their
        credentials. If successful, an access token and a refresh token will be
        returned.
      parameters:
        - description: The id of the user_source to move
          in: path
          name: user_source_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UserSourcesAuthenticateUserWithTokenResponse
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UserSourcesAuthenticateUserWithToken401Response
  /api/_health/email:
    post:
      tags:
        - Health
      operationId: email_tester
      security:
        - JWT: []
      description: >-
        Sends a test email to the provided email address. Useful for testing
        Baserow's email configuration as errors are clearly returned.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTesterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailTesterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailTesterRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTesterResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTester400Response'
  /api/_health/full:
    get:
      tags:
        - Health
      operationId: Health_runFullCheck
      security:
        - JWT: []
      description: >-
        Runs a full health check testing as many services and systems as
        possible. These health checks can be expensive operations such as
        writing files to storage etc.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullHealthCheck'
  /api/admin/audit-log:
    get:
      tags:
        - Audit log
      operationId: AuditLog_listEntriesForWorkspace
      security:
        - JWT: []
      description: |-
        Lists all audit log entries for the given workspace id.

        This is a **enterprise** feature.
      parameters:
        - description: Filter the audit log entries by action type.
          in: query
          name: action_type
          schema:
            type: string
        - description: The ISO timestamp to filter the audit log entries from.
          in: query
          name: from_timestamp
          schema:
            type: string
        - description: Defines which page should be returned.
          in: query
          name: page
          schema:
            type: integer
        - description: Defines how many audit log entries should be returned per page.
          in: query
          name: size
          schema:
            type: integer
        - description: >-
            A comma separated string of attributes to sort by, each attribute
            must be prefixed with `+` for a descending sort or a `-` for an
            ascending sort. The accepted attribute names are: `user, workspace,
            type, timestamp, ip_address`. For example `sorts=-user,-workspace`
            will sort the audit log entries first by descending user and then
            ascending workspace. A sortparameter with multiple instances of the
            same sort attribute will respond with the
            ERROR_INVALID_SORT_ATTRIBUTE error.
          in: query
          name: sorts
          schema:
            type: string
        - description: The ISO timestamp to filter the audit log entries to.
          in: query
          name: to_timestamp
          schema:
            type: string
        - description: Filter the audit log entries by user id.
          in: query
          name: user_id
          schema:
            type: integer
        - description: >-
            Filter the audit log entries by workspace id. This filter works only
            for the admin audit log.
          in: query
          name: workspace_id
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerAuditLog'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogListEntriesForWorkspaceResponse'
        '401':
          description: No response body
  /api/admin/audit-log/action-types:
    get:
      tags:
        - Audit log
      operationId: AuditLog_listActionTypes
      security:
        - JWT: []
      description: |-
        List all distinct action types related to an audit log entry.

        This is a **enterprise** feature.
      parameters:
        - description: >-
            If provided only action_types with name that match the query will be
            returned.
          in: query
          name: search
          schema:
            type: string
        - description: Return action types related to the workspace.
          in: query
          name: workspace_id
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogListActionTypesResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogListActionTypes400Response'
        '401':
          description: No response body
  /api/admin/audit-log/export:
    post:
      tags:
        - Audit log
      operationId: AuditLog_createExportJob
      security:
        - JWT: []
      description: |-
        Creates a job to export the filtered audit log to a CSV file.

        This is a **enterprise** feature.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleAuditLogExportJobRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SingleAuditLogExportJobRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SingleAuditLogExportJobRequest'
      responses:
        '202':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleAuditLogExportJobResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogCreateExportJobResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogCreateExportJob404Response'
  /api/admin/audit-log/users:
    get:
      tags:
        - Audit log
      operationId: AuditLog_listUsers
      security:
        - JWT: []
      description: |-
        List all users that have performed an action in the audit log.

        This is a **enterprise** feature.
      parameters:
        - description: Defines which page should be returned.
          in: query
          name: page
          schema:
            type: integer
        - description: >-
            If provided only users with email that match the query will be
            returned.
          in: query
          name: search
          schema:
            type: string
        - description: Defines how many users should be returned per page.
          in: query
          name: size
          schema:
            type: integer
        - description: Return users belonging to the given workspace_id.
          in: query
          name: workspace_id
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerAuditLogUser'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogListUsersResponse'
        '401':
          description: No response body
  /api/admin/audit-log/workspaces:
    get:
      tags:
        - Audit log
      operationId: AuditLog_listDistinctWorkspaceNames
      security:
        - JWT: []
      description: |-
        List all distinct workspace names related to an audit log entry.

        This is a **enterprise** feature.
      parameters:
        - description: Defines which page should be returned.
          in: query
          name: page
          schema:
            type: integer
        - description: >-
            If provided only workspaces with name that match the query will be
            returned.
          in: query
          name: search
          schema:
            type: string
        - description: Defines how many workspaces should be returned per page.
          in: query
          name: size
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerAuditLogWorkspace'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AuditLogListDistinctWorkspaceNamesResponse
        '401':
          description: No response body
  /api/admin/auth-provider:
    get:
      tags:
        - Auth
      operationId: Auth_listProviders
      security:
        - JWT: []
      description: List all the available authentication providers.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthListProvidersResponse'
    post:
      tags:
        - Auth
      operationId: Auth_registerAuthProvider
      security:
        - JWT: []
      description: >-
        Creates a new authentication provider. This can be used to enable
        authentication with a third party service like Google or Facebook.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication_ProviderAuthProvider'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthRegisterAuthProviderResponse'
  /api/admin/auth-provider/{auth_provider_id}:
    get:
      tags:
        - Auth
      operationId: Auth_getAuthProvider
      security:
        - JWT: []
      description: Get an authentication provider.
      parameters:
        - description: The authentication provider id to fetch.
          in: path
          name: auth_provider_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication_ProviderAuthProvider'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthGetAuthProviderResponse'
    patch:
      tags:
        - Auth
      operationId: Auth_updateAuthProvider
      security:
        - JWT: []
      description: >-
        Updates a new authentication provider. This can be used to enable
        authentication with a third party service like Google or Facebook.
      parameters:
        - description: The authentication provider id to update.
          in: path
          name: auth_provider_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication_ProviderAuthProvider'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUpdateAuthProviderResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUpdateAuthProvider404Response'
    delete:
      tags:
        - Auth
      operationId: Auth_deleteAuthProvider
      security:
        - JWT: []
      description: Delete an authentication provider.
      parameters:
        - description: The authentication provider id to delete.
          in: path
          name: auth_provider_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthDeleteAuthProviderResponse'
  /api/admin/dashboard:
    get:
      tags:
        - Admin
      operationId: admin_dashboard
      security:
        - JWT: []
      description: >-
        Returns the new and active users for the last 24 hours, 7 days and 30
        days. The `previous_` values are the values of the period before, so for
        example `previous_new_users_last_24_hours` are the new users that signed
        up from 48 to 24 hours ago. It can be used to calculate an increase or
        decrease in the amount of signups. A list of the new and active users
        for every day for the last 30 days is also included.


        This is a **premium** feature.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminDashboard'
        '401':
          description: No response body
  /api/admin/groups:
    get:
      tags:
        - Admin
      operationId: Admin_getAllGroups
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [admin_list_workspaces](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Returns all groups with detailed information on each group, if the requesting user is staff.

        This is a **premium** feature.
      parameters:
        - description: Defines which page should be returned.
          in: query
          name: page
          schema:
            type: integer
        - description: >-
            If provided only groups with id or name that match the query will be
            returned.
          in: query
          name: search
          schema:
            type: string
        - description: Defines how many groups should be returned per page.
          in: query
          name: size
          schema:
            type: integer
        - description: >-
            A comma separated string of attributes to sort by, each attribute
            must be prefixed with `+` for a descending sort or a `-` for an
            ascending sort. The accepted attribute names are: `id, name,
            application_count, created_on, row_count, storage_usage`. For
            example `sorts=-id,-name` will sort the groups first by descending
            id and then ascending name. A sortparameter with multiple instances
            of the same sort attribute will respond with the
            ERROR_INVALID_SORT_ATTRIBUTE error.
          in: query
          name: sorts
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaginationSerializerWorkspacesAdminResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminGetAllGroupsResponse'
        '401':
          description: No response body
      deprecated: true
  /api/admin/groups/{group_id}:
    delete:
      tags:
        - Admin
      operationId: Admin_deleteGroup
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [admin_delete_workspace](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Deletes the specified group and the applications inside that group, if the requesting user is staff. 

        This is a **premium** feature.
      parameters:
        - description: The id of the group to delete
          in: path
          name: group_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminDeleteGroupResponse'
        '401':
          description: No response body
      deprecated: true
  /api/admin/users:
    get:
      tags:
        - Admin
      operationId: Admin_getUsersDetail
      security:
        - JWT: []
      description: >-
        Returns all users with detailed information on each user, if the
        requesting user is staff. 


        This is a **premium** feature.
      parameters:
        - description: Defines which page should be returned.
          in: query
          name: page
          schema:
            type: integer
        - description: >-
            If provided only users with username that match the query will be
            returned.
          in: query
          name: search
          schema:
            type: string
        - description: Defines how many users should be returned per page.
          in: query
          name: size
          schema:
            type: integer
        - description: >-
            A comma separated string of attributes to sort by, each attribute
            must be prefixed with `+` for a descending sort or a `-` for an
            ascending sort. The accepted attribute names are: `id, is_active,
            name, username, date_joined, last_login`. For example
            `sorts=-id,-is_active` will sort the users first by descending id
            and then ascending is_active. A sortparameter with multiple
            instances of the same sort attribute will respond with the
            ERROR_INVALID_SORT_ATTRIBUTE error.
          in: query
          name: sorts
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerUserAdminResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminGetUsersDetailResponse'
        '401':
          description: No response body
    post:
      tags:
        - Admin
      operationId: Admin_createNewUser
      security:
        - JWT: []
      description: >-
        Creates and returns a new user if the requesting user is staff. This
        works even if new signups are disabled. 


        This is a **premium** feature.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAdminCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAdminCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAdminCreate'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAdminResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCreateNewUserResponse'
  /api/admin/users/{user_id}:
    patch:
      tags:
        - Admin
      operationId: Admin_updateUserAttributes
      security:
        - JWT: []
      description: >-
        Updates specified user attributes and returns the updated user if the
        requesting user is staff. You cannot update yourself to no longer be an
        admin or active. 


        This is a **premium** feature.
      parameters:
        - description: The id of the user to edit
          in: path
          name: user_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAdminUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserAdminUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserAdminUpdate'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAdminResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUpdateUserAttributesResponse'
        '401':
          description: No response body
    delete:
      tags:
        - Admin
      operationId: Admin_deleteUserPremium
      security:
        - JWT: []
      description: >-
        Deletes the specified user, if the requesting user has admin
        permissions. You cannot delete yourself. 


        This is a **premium** feature.
      parameters:
        - description: The id of the user to delete
          in: path
          name: user_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminDeleteUserPremiumResponse'
        '401':
          description: No response body
  /api/admin/users/impersonate:
    post:
      tags:
        - Admin
      operationId: Admin_impersonateUser
      security:
        - JWT: []
      description: >-
        This endpoint allows staff to impersonate another user by requesting a
        JWT token and user object. The requesting user must have staff access in
        order to do this. It's not possible to impersonate a superuser or staff.


        This is a **premium** feature.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaserowImpersonateAuthToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaserowImpersonateAuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaserowImpersonateAuthToken'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminImpersonateUserResponse'
  /api/admin/workspaces:
    get:
      tags:
        - Admin
      operationId: Admin_getWorkspaceDetails
      security:
        - JWT: []
      description: >-
        Returns all workspaces with detailed information on each workspace, if
        the requesting user is staff.


        This is a **premium** feature.
      parameters:
        - description: Defines which page should be returned.
          in: query
          name: page
          schema:
            type: integer
        - description: >-
            If provided only workspaces with id or name that match the query
            will be returned.
          in: query
          name: search
          schema:
            type: string
        - description: Defines how many workspaces should be returned per page.
          in: query
          name: size
          schema:
            type: integer
        - description: >-
            A comma separated string of attributes to sort by, each attribute
            must be prefixed with `+` for a descending sort or a `-` for an
            ascending sort. The accepted attribute names are: `id, name,
            application_count, created_on, row_count, storage_usage`. For
            example `sorts=-id,-name` will sort the workspaces first by
            descending id and then ascending name. A sortparameter with multiple
            instances of the same sort attribute will respond with the
            ERROR_INVALID_SORT_ATTRIBUTE error.
          in: query
          name: sorts
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaginationSerializerWorkspacesAdminResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminGetWorkspaceDetailsResponse'
        '401':
          description: No response body
  /api/admin/workspaces/{workspace_id}:
    delete:
      tags:
        - Admin
      operationId: Admin_deleteWorkspaceAndApplications
      security:
        - JWT: []
      description: >-
        Deletes the specified workspace and the applications inside that
        workspace, if the requesting user is staff. 


        This is a **premium** feature.
      parameters:
        - description: The id of the workspace to delete
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AdminDeleteWorkspaceAndApplicationsResponse
        '401':
          description: No response body
  /api/application/{application_id}/integrations:
    get:
      tags:
        - Integrations
      operationId: Integrations_listApplicationIntegrations
      security:
        - JWT: []
      description: >-
        Lists all the integrations of the application related to the provided
        parameter if the user has access to the related application's workspace.
        If the workspace is related to a template, then this endpoint will be
        publicly accessible.
      parameters:
        - description: >-
            Returns only the integrations of the application related to the
            provided Id.
          in: path
          name: application_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationsListApplicationIntegrationsResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationsListApplicationIntegrations404Response
    post:
      tags:
        - Integrations
      operationId: Integrations_createNewIntegration
      security:
        - JWT: []
      description: Creates a new integration
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            Creates an integration for the application related to the provided
            value.
          in: path
          name: application_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationCreateIntegration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IntegrationCreateIntegration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IntegrationCreateIntegration'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationIntegration'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationsCreateNewIntegrationResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationsCreateNewIntegration404Response
  /api/application/{application_id}/list-user-source-users:
    get:
      tags:
        - User sources
      operationId: UserSources_listAvailableUsers
      security:
        - JWT: []
      description: List per user sources the first 5 users available.
      parameters:
        - description: The application we want the users for.
          in: path
          name: application_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPerUserSource'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSourcesListAvailableUsersResponse'
  /api/application/{application_id}/user-sources:
    get:
      tags:
        - User sources
      operationId: UserSources_list
      security:
        - JWT: []
      description: >-
        Lists all the user_sources of the application related to the provided
        parameter if the user has access to the related application's workspace.
        If the workspace is related to a template, then this endpoint will be
        publicly accessible.
      parameters:
        - description: >-
            Returns only the user_sources of the application related to the
            provided Id.
          in: path
          name: application_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSourcesListResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSourcesList404Response'
    post:
      tags:
        - User sources
      operationId: UserSources_createNewUserSource
      security:
        - JWT: []
      description: Creates a new user_source
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            Creates an user_source for the application related to the provided
            value.
          in: path
          name: application_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User_SourceCreateUserSource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User_SourceCreateUserSource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User_SourceCreateUserSource'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_SourceUserSource'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSourcesCreateNewUserSourceResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSourcesCreateNewUserSource404Response'
  /api/applications:
    get:
      tags:
        - Applications
      operationId: Applications_listUserApplications
      security:
        - JWT: []
      description: >-
        Lists all the applications that the authorized user has access to. The
        properties that belong to the application can differ per type. An
        application always belongs to a single workspace. All the applications
        of the workspaces that the user has access to are going to be listed
        here.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsListUserApplicationsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsListUserApplications400Response
  /api/applications/{application_id}:
    get:
      tags:
        - Applications
      operationId: Applications_getApplicationById
      security:
        - JWT: []
      description: >-
        Returns the requested application if the authorized user is in the
        application's workspace. The properties that belong to the application
        can differ per type.
      parameters:
        - description: Returns the application related to the provided value.
          in: path
          name: application_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationApplication'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsGetApplicationByIdResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsGetApplicationById404Response'
    patch:
      tags:
        - Applications
      operationId: update_application
      security:
        - JWT: []
      description: >-
        Updates the existing application related to the provided
        `application_id` param if the authorized user is in the application's
        workspace. It is not possible to change the type, but properties like
        the name can be changed.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Updates the application related to the provided value.
          in: path
          name: application_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/PatchedApplicationBaseApplicationUpdatePolymorphic
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/PatchedApplicationBaseApplicationUpdatePolymorphic
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/PatchedApplicationBaseApplicationUpdatePolymorphic
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationApplication'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApplicationResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateApplication404Response'
    delete:
      tags:
        - Applications
      operationId: delete_application
      security:
        - JWT: []
      description: >-
        Deletes an application if the authorized user is in the application's
        workspace. All the related children are also going to be deleted. For
        example in case of a database application all the underlying tables,
        fields, views and rows are going to be deleted.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Deletes the application related to the provided value.
          in: path
          name: application_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteApplicationResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteApplication404Response'
  /api/applications/{application_id}/duplicate/async:
    post:
      tags:
        - Applications
      operationId: Applications_duplicateAsync
      security:
        - JWT: []
      description: >-
        Duplicate an application if the authorized user is in the application's
        workspace. All the related children are also going to be duplicated. For
        example in case of a database application all the underlying tables,
        fields, views and rows are going to be duplicated.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: The id of the application to duplicate.
          in: path
          name: application_id
          schema:
            type: integer
          required: true
      responses:
        '202':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleDuplicateApplicationJobType'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsDuplicateAsyncResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsDuplicateAsync404Response'
  /api/applications/group/{group_id}:
    get:
      tags:
        - Applications
      operationId: Applications_listGroupApplications
      security:
        - JWT: []
        - {}
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [workspace_list_applications](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Lists all the applications of the group related to the provided `group_id` parameter if the authorized user is in that group. If the group is related to a template, then this endpoint will be publicly accessible. The properties that belong to the application can differ per type. An application always belongs to a single group.
      parameters:
        - description: >-
            Returns only applications that are in the group related to the
            provided value.
          in: path
          name: group_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsListGroupApplicationsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsListGroupApplications400Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsListGroupApplications404Response
      deprecated: true
    post:
      tags:
        - Applications
      operationId: Applications_createGroupApplication
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [workspace_create_application](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Creates a new application based on the provided type. The newly created application is going to be added to the group related to the provided `group_id` parameter. If the authorized user does not belong to the group an error will be returned.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Creates an application for the group related to the provided value.
          in: path
          name: group_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationBaseApplicationCreatePolymorphic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationBaseApplicationCreatePolymorphic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationBaseApplicationCreatePolymorphic'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationApplication'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsCreateGroupApplicationResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsCreateGroupApplication404Response
      deprecated: true
  /api/applications/group/{group_id}/order:
    post:
      tags:
        - Applications
      operationId: Applications_changeOrderOfGroupApplications
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [workspace_order_applications](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Changes the order of the provided application ids to the matching position that the id has in the list. If the authorized user does not belong to the group it will be ignored. The order of the not provided tables will be set to `0`.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: >-
            Updates the order of the applications in the group related to the
            provided value.
          in: path
          name: group_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderApplications'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderApplications'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderApplications'
        required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsChangeOrderOfGroupApplicationsResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsChangeOrderOfGroupApplications404Response
      deprecated: true
  /api/applications/workspace/{workspace_id}:
    get:
      tags:
        - Applications
      operationId: Applications_listUserApplications
      security:
        - JWT: []
        - {}
      description: >-
        Lists all the applications of the workspace related to the provided
        `workspace_id` parameter if the authorized user is in that workspace. If
        theworkspace is related to a template, then this endpoint will be
        publicly accessible. The properties that belong to the application can
        differ per type. An application always belongs to a single workspace.
      parameters:
        - description: >-
            Returns only applications that are in the workspace related to the
            provided value.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsListUserApplications200Response
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsListUserApplications400Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsListUserApplications404Response
    post:
      tags:
        - Applications
      operationId: Applications_createApplicationInWorkspace
      security:
        - JWT: []
      description: >-
        Creates a new application based on the provided type. The newly created
        application is going to be added to the workspace related to the
        provided `workspace_id` parameter. If the authorized user does not
        belong to the workspace an error will be returned.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: >-
            Creates an application for the workspace related to the provided
            value.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationBaseApplicationCreatePolymorphic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationBaseApplicationCreatePolymorphic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationBaseApplicationCreatePolymorphic'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationApplication'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsCreateApplicationInWorkspaceResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsCreateApplicationInWorkspace404Response
  /api/applications/workspace/{workspace_id}/order:
    post:
      tags:
        - Applications
      operationId: Applications_changeApplicationOrder
      security:
        - JWT: []
      description: >-
        Changes the order of the provided application ids to the matching
        position that the id has in the list. If the authorized user does not
        belong to the workspace it will be ignored. The order of the not
        provided tables will be set to `0`.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: >-
            Updates the order of the applications in the workspace related to
            the provided value.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderApplications'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderApplications'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderApplications'
        required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsChangeApplicationOrderResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationsChangeApplicationOrder404Response
  /api/audit-log:
    get:
      tags:
        - Audit log
      operationId: AuditLog_listEntries
      security:
        - JWT: []
      description: |-
        Lists all audit log entries for the given workspace id.

        This is a **enterprise** feature.
      parameters:
        - description: Filter the audit log entries by action type.
          in: query
          name: action_type
          schema:
            type: string
        - description: The ISO timestamp to filter the audit log entries from.
          in: query
          name: from_timestamp
          schema:
            type: string
        - description: Defines which page should be returned.
          in: query
          name: page
          schema:
            type: integer
        - description: Defines how many audit log entries should be returned per page.
          in: query
          name: size
          schema:
            type: integer
        - description: >-
            A comma separated string of attributes to sort by, each attribute
            must be prefixed with `+` for a descending sort or a `-` for an
            ascending sort. The accepted attribute names are: `user, workspace,
            type, timestamp, ip_address`. For example `sorts=-user,-workspace`
            will sort the audit log entries first by descending user and then
            ascending workspace. A sortparameter with multiple instances of the
            same sort attribute will respond with the
            ERROR_INVALID_SORT_ATTRIBUTE error.
          in: query
          name: sorts
          schema:
            type: string
        - description: The ISO timestamp to filter the audit log entries to.
          in: query
          name: to_timestamp
          schema:
            type: string
        - description: Filter the audit log entries by user id.
          in: query
          name: user_id
          schema:
            type: integer
        - description: >-
            Filter the audit log entries by workspace id. This filter works only
            for the admin audit log.
          in: query
          name: workspace_id
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerAuditLog'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogListEntriesResponse'
        '401':
          description: No response body
  /api/audit-log/action-types:
    get:
      tags:
        - Audit log
      operationId: AuditLog_listActionTypes
      security:
        - JWT: []
      description: |-
        List all distinct action types related to an audit log entry.

        This is a **enterprise** feature.
      parameters:
        - description: >-
            If provided only action_types with name that match the query will be
            returned.
          in: query
          name: search
          schema:
            type: string
        - description: Return action types related to the workspace.
          in: query
          name: workspace_id
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogListActionTypes200Response'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogListActionTypes400Response'
        '401':
          description: No response body
  /api/audit-log/export:
    post:
      tags:
        - Audit log
      operationId: AuditLog_exportJob
      security:
        - JWT: []
      description: |-
        Creates a job to export the filtered audit log to a CSV file.

        This is a **enterprise** feature.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleAuditLogExportJobRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SingleAuditLogExportJobRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SingleAuditLogExportJobRequest'
      responses:
        '202':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleAuditLogExportJobResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogExportJobResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogExportJob404Response'
  /api/audit-log/users:
    get:
      tags:
        - Audit log
      operationId: AuditLog_listUsers
      security:
        - JWT: []
      description: |-
        List all users that have performed an action in the audit log.

        This is a **enterprise** feature.
      parameters:
        - description: Defines which page should be returned.
          in: query
          name: page
          schema:
            type: integer
        - description: >-
            If provided only users with email that match the query will be
            returned.
          in: query
          name: search
          schema:
            type: string
        - description: Defines how many users should be returned per page.
          in: query
          name: size
          schema:
            type: integer
        - description: Return users belonging to the given workspace_id.
          in: query
          name: workspace_id
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerAuditLogUser'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogListUsers400Response'
        '401':
          description: No response body
  /api/audit-log/workspaces:
    get:
      tags:
        - Audit log
      operationId: AuditLog_listDistinctWorkspaceNames
      security:
        - JWT: []
      description: |-
        List all distinct workspace names related to an audit log entry.

        This is a **enterprise** feature.
      parameters:
        - description: Defines which page should be returned.
          in: query
          name: page
          schema:
            type: integer
        - description: >-
            If provided only workspaces with name that match the query will be
            returned.
          in: query
          name: search
          schema:
            type: string
        - description: Defines how many workspaces should be returned per page.
          in: query
          name: size
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerAuditLogWorkspace'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AuditLogListDistinctWorkspaceNames400Response
        '401':
          description: No response body
  /api/auth-provider/login-options:
    get:
      tags:
        - Auth
      operationId: Auth_listLoginOptions
      security:
        - JWT: []
        - {}
      description: >-
        Lists the available login options for the configured authentication
        providers.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthListLoginOptionsResponse'
  /api/builder/{builder_id}/domains:
    get:
      tags:
        - Builder domains
      operationId: BuilderDomains_getAll
      security:
        - JWT: []
      description: Gets all the domains of a builder
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: Gets all the domains for the specified builder
          in: path
          name: builder_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderDomainsGetAllResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderDomainsGetAll400Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderDomainsGetAll404Response'
    post:
      tags:
        - Builder domains
      operationId: BuilderDomains_createNewDomain
      security:
        - JWT: []
      description: Creates a new domain for an application builder
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            Creates a domain for the application builder related tothe provided
            value
          in: path
          name: builder_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain_TypeCreateDomain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Domain_TypeCreateDomain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Domain_TypeCreateDomain'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain_TypeDomain'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderDomainsCreateNewDomainResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderDomainsCreateNewDomain404Response'
  /api/builder/{builder_id}/domains/order:
    post:
      tags:
        - Builder domains
      operationId: BuilderDomains_applyOrder
      security:
        - JWT: []
      description: Apply a new order to the domains of a builder
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The builder the domain belongs to
          in: path
          name: builder_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDomains'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderDomains'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderDomains'
        required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderDomainsApplyOrderResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderDomainsApplyOrder404Response'
  /api/builder/{builder_id}/pages:
    post:
      tags:
        - Builder pages
      operationId: BuilderPages_createNewPage
      security:
        - JWT: []
      description: Creates a new page for an application builder
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            Creates a page for the application builder related to the provided
            value.
          in: path
          name: builder_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreatePage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreatePage'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderPagesCreateNewPageResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderPagesCreateNewPage404Response'
  /api/builder/{builder_id}/pages/order:
    post:
      tags:
        - Builder pages
      operationId: BuilderPages_applyOrderToPages
      security:
        - JWT: []
      description: Apply a new order to the pages of a builder
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The builder the page belongs to
          in: path
          name: builder_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPages'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderPages'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderPages'
        required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderPagesApplyOrderToPagesResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderPagesApplyOrderToPages404Response'
  /api/builder/{builder_id}/theme:
    patch:
      tags:
        - Builder theme
      operationId: BuilderTheme_updateProperties
      security:
        - JWT: []
      description: Updates the theme properties for the provided id.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            Updates the theme for the application builder related to the
            provided value.
          in: path
          name: builder_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCombinedThemeConfigBlocks'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCombinedThemeConfigBlocks'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCombinedThemeConfigBlocks'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CombinedThemeConfigBlocks'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderThemeUpdatePropertiesResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderThemeUpdateProperties404Response'
  /api/builder/data-source/{data_source_id}:
    patch:
      tags:
        - Builder data sources
      operationId: BuilderDataSources_updateExistingDataSource
      security:
        - JWT: []
      description: Updates an existing builder data_source.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the data_source
          in: path
          name: data_source_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIntegration_ServiceUpdateDataSource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIntegration_ServiceUpdateDataSource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIntegration_ServiceUpdateDataSource'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration_ServiceDataSource'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderDataSourcesUpdateExistingDataSourceResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderDataSourcesUpdateExistingDataSource404Response
    delete:
      tags:
        - Builder data sources
      operationId: BuilderDataSources_deleteById
      security:
        - JWT: []
      description: Deletes the data_source related by the given id.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the data_source
          in: path
          name: data_source_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderDataSourcesDeleteByIdResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderDataSourcesDeleteById404Response'
  /api/builder/data-source/{data_source_id}/dispatch:
    post:
      tags:
        - Builder data sources
      operationId: BuilderDataSources_dispatchServiceResult
      security:
        - JWT: []
        - {}
      description: >-
        Dispatches the service of the related data_source and returns the
        result.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the data_source you want to call the dispatch for
          in: path
          name: data_source_id
          schema:
            type: integer
          required: true
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderDataSourcesDispatchServiceResultResponse
  /api/builder/data_source/{data_source_id}/move:
    patch:
      tags:
        - Builder data sources
      operationId: BuilderDataSources_moveDataSource
      security:
        - JWT: []
      description: >-
        Moves the data_source in the page before another data_source or at the
        end of the page if no before data_source is given. The data_sources must
        belong to the same page.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the data_source to move
          in: path
          name: data_source_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMoveDataSource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMoveDataSource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMoveDataSource'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration_ServiceDataSource'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderDataSourcesMoveDataSourceResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderDataSourcesMoveDataSource404Response
  /api/builder/domains/{domain_id}:
    patch:
      tags:
        - Builder domains
      operationId: BuilderDomains_updateExistingDomain
      security:
        - JWT: []
      description: Updates an existing domain of an application builder
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the domain
          in: path
          name: domain_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateDomain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateDomain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateDomain'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain_TypeDomain'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderDomainsUpdateExistingDomainResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderDomainsUpdateExistingDomain404Response
    delete:
      tags:
        - Builder domains
      operationId: BuilderDomains_removeExistingDomain
      security:
        - JWT: []
      description: Deletes an existing domain of an application builder
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the domain
          in: path
          name: domain_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderDomainsRemoveExistingDomainResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderDomainsRemoveExistingDomain404Response
  /api/builder/domains/{domain_id}/publish/async:
    post:
      tags:
        - Builder domains
      operationId: BuilderDomains_startPublishJob
      security:
        - JWT: []
      description: >-
        This endpoint starts an asynchronous job to publish the builder. The job
        clones the current version of the given builder and publish it for the
        given domain.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The builder application id the user wants to publish.
          in: path
          name: domain_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderDomainsStartPublishJobResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderDomainsStartPublishJob404Response'
  /api/builder/domains/ask-public-domain-exists:
    get:
      tags:
        - Builder domains
      operationId: BuilderDomains_checkDomainExists
      security:
        - JWT: []
        - {}
      description: >-
        This endpoint can be used to check whether a domain exists for SSL
        certificate purposes. It's compatible with the Caddy on_demand TLS as
        described here:
        https://caddyserver.com/docs/json/apps/tls/automation/on_demand/ask/. It
        will respond with a 200 status code if it exists or a 404 if it doesn't
        exist.
      parameters:
        - description: The domain name for which
          in: query
          name: domain
          schema:
            type: integer
      responses:
        '200':
          description: No response body
        '404':
          description: No response body
  /api/builder/domains/published/by_id/{builder_id}:
    get:
      tags:
        - Builder public
      operationId: BuilderPublic_serializedVersionById
      security:
        - JWT: []
        - {}
      description: >-
        Returns the public serialized version of the builder and its pages for
        the given builder id.
      parameters:
        - description: Returns the builder related to the provided Id and its pages.
          in: path
          name: builder_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicBuilder'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderPublicSerializedVersionByIdResponse
  /api/builder/domains/published/by_name/{domain_name}:
    get:
      tags:
        - Builder public
      operationId: BuilderPublic_serializedVersion
      security:
        - JWT: []
        - {}
      description: >-
        Returns the public serialized version of the builder for the given
        domain name and its pages .
      parameters:
        - description: Returns the builder published for the given domain name.
          in: path
          name: domain_name
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicBuilder'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderPublicSerializedVersionResponse'
  /api/builder/domains/published/page/{page_id}/data_sources:
    get:
      tags:
        - Builder data sources
      operationId: BuilderDataSources_listPageDataSources
      security:
        - JWT: []
        - {}
      description: >-
        Lists all the data_sources of the page related to the provided parameter
        if the builder is public.
      parameters:
        - description: >-
            Returns only the data_sources of the page related to the provided Id
            if the related builder is public.
          in: path
          name: page_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderDataSourcesListPageDataSourcesResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderDataSourcesListPageDataSources404Response
  /api/builder/domains/published/page/{page_id}/elements:
    get:
      tags:
        - Builder elements
      operationId: BuilderElements_getPageElements
      security:
        - JWT: []
        - {}
      description: >-
        Lists all the elements of the page related to the provided parameter. If
        the user is Anonymous, the page must belong to a published builder
        instance to being accessible.
      parameters:
        - description: Returns the elements of the page related to the provided Id.
          in: path
          name: page_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderElementsGetPageElementsResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderElementsGetPageElements404Response'
  /api/builder/domains/published/page/{page_id}/workflow_actions:
    get:
      tags:
        - Builder workflow actions
      operationId: BuilderWorkflowActions_listPageWorkflowActions
      security:
        - JWT: []
        - {}
      description: >-
        Lists all the workflow actions with their public accessible data. Some
        configuration might be omitted for security reasons such as passwords or
        PII.
      parameters:
        - description: >-
            Returns only the public workflow actions of the page related to the
            provided Id.
          in: path
          name: page_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderWorkflowActionsListPageWorkflowActionsResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderWorkflowActionsListPageWorkflowActions404Response
  /api/builder/element/{element_id}:
    patch:
      tags:
        - Builder elements
      operationId: BuilderElements_updateExistingElement
      security:
        - JWT: []
      description: Updates an existing builder element.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the element
          in: path
          name: element_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedElement_TypeUpdateElement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedElement_TypeUpdateElement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedElement_TypeUpdateElement'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Element_TypeElement'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderElementsUpdateExistingElementResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderElementsUpdateExistingElement404Response
    delete:
      tags:
        - Builder elements
      operationId: BuilderElements_removeElementById
      security:
        - JWT: []
      description: Deletes the element related by the given id.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the element
          in: path
          name: element_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderElementsRemoveElementByIdResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderElementsRemoveElementById404Response
  /api/builder/element/{element_id}/duplicate:
    post:
      tags:
        - Builder elements
      operationId: BuilderElements_duplicateElementChildren
      security:
        - JWT: []
      description: >-
        Duplicates an element and all of the elements children and the
        associated workflow actions as well.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the element to duplicate
          in: path
          name: element_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateElement'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderElementsDuplicateElementChildrenResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderElementsDuplicateElementChildren404Response
  /api/builder/element/{element_id}/move:
    patch:
      tags:
        - Builder elements
      operationId: BuilderElements_moveElement
      security:
        - JWT: []
      description: >-
        Moves the element in the page before another element or at the end of
        the page if no before element is given. The elements must belong to the
        same page.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the element to move
          in: path
          name: element_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMoveElement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMoveElement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMoveElement'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Element_TypeElement'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderElementsMoveElementResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderElementsMoveElement404Response'
  /api/builder/page/{page_id}/data-sources:
    get:
      tags:
        - Builder data sources
      operationId: BuilderDataSources_listPageDataSources
      security:
        - JWT: []
      description: >-
        Lists all the data_sources of the page related to the provided parameter
        if the user has access to the related builder's workspace. If the
        workspace is related to a template, then this endpoint will be publicly
        accessible.
      parameters:
        - description: >-
            Returns only the data_sources of the page related to the provided
            Id.
          in: path
          name: page_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderDataSourcesListPageDataSources200Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderDataSourcesListPageDataSources404Response
    post:
      tags:
        - Builder data sources
      operationId: BuilderDataSources_createNew
      security:
        - JWT: []
      description: Creates a new builder data_source
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            Creates a data_source for the builder page related to the provided
            value.
          in: path
          name: page_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Integration_ServiceCreateDataSource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Integration_ServiceCreateDataSource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Integration_ServiceCreateDataSource'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration_ServiceDataSource'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderDataSourcesCreateNewResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderDataSourcesCreateNew404Response'
  /api/builder/page/{page_id}/dispatch-data-sources:
    post:
      tags:
        - Builder data sources
      operationId: BuilderDataSources_dispatchPageDataSources
      security:
        - JWT: []
        - {}
      description: Dispatches the service of the related page data_sources
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The page we want to dispatch the data source for.
          in: path
          name: page_id
          schema:
            type: integer
          required: true
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderDataSourcesDispatchPageDataSourcesResponse
  /api/builder/page/{page_id}/elements:
    get:
      tags:
        - Builder elements
      operationId: BuilderElements_getPageElements
      security:
        - JWT: []
      description: >-
        Lists all the elements of the page related to the provided parameter if
        the user has access to the related builder's workspace. If the workspace
        is related to a template, then this endpoint will be publicly
        accessible.
      parameters:
        - description: Returns only the elements of the page related to the provided Id.
          in: path
          name: page_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderElementsGetPageElements200Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderElementsGetPageElements404Response'
    post:
      tags:
        - Builder elements
      operationId: BuilderElements_createNewElement
      security:
        - JWT: []
      description: Creates a new builder element
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            Creates an element for the builder page related to the provided
            value.
          in: path
          name: page_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Element_TypeCreateElement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Element_TypeCreateElement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Element_TypeCreateElement'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Element_TypeElement'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderElementsCreateNewElementResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderElementsCreateNewElement404Response
  /api/builder/page/{page_id}/workflow_actions:
    get:
      tags:
        - Builder workflow actions
      operationId: BuilderWorkflowActions_listPageWorkflowActions
      security:
        - JWT: []
      description: >-
        Lists all the workflow actions of the page related to the provided
        parameter if the user has access to the related builder's workspace. If
        the workspace is related to a template, then this endpoint will be
        publicly accessible.
      parameters:
        - description: >-
            Returns only the workflow actions of the page related to the
            provided Id.
          in: path
          name: page_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderWorkflowActionsListPageWorkflowActions200Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderWorkflowActionsListPageWorkflowActions404Response
    post:
      tags:
        - Builder workflow actions
      operationId: BuilderWorkflowActions_createNewAction
      security:
        - JWT: []
      description: Creates a new builder workflow action
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            Creates a workflow action for the builder page related to the
            provided value.
          in: path
          name: page_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Builder_Workflow_Action_TypeCreateBuilderWorkflowAction
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/Builder_Workflow_Action_TypeCreateBuilderWorkflowAction
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/Builder_Workflow_Action_TypeCreateBuilderWorkflowAction
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Builder_Workflow_Action_TypeBuilderWorkflowAction
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderWorkflowActionsCreateNewActionResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderWorkflowActionsCreateNewAction404Response
  /api/builder/page/{page_id}/workflow_actions/order:
    post:
      tags:
        - Builder workflow actions
      operationId: BuilderWorkflowActions_applyNewOrder
      security:
        - JWT: []
      description: Apply a new order to the workflow actions of a page
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The page the workflow actions belong to
          in: path
          name: page_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderWorkflowActions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderWorkflowActions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderWorkflowActions'
        required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderWorkflowActionsApplyNewOrderResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderWorkflowActionsApplyNewOrder404Response
  /api/builder/pages/{page_id}:
    patch:
      tags:
        - Builder pages
      operationId: BuilderPages_updateExistingPage
      security:
        - JWT: []
      description: Updates an existing page of an application builder
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the page
          in: path
          name: page_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePage'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderPagesUpdateExistingPageResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderPagesUpdateExistingPage404Response'
    delete:
      tags:
        - Builder pages
      operationId: BuilderPages_deletePage
      security:
        - JWT: []
      description: Deletes an existing page of an application builder
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the page
          in: path
          name: page_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderPagesDeletePageResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderPagesDeletePage404Response'
  /api/builder/pages/{page_id}/duplicate/async:
    post:
      tags:
        - Builder pages
      operationId: BuilderPages_startDuplicationJob
      security:
        - JWT: []
      description: >-
        Start a job to duplicate the page with the provided `page_id` parameter
        if the authorized user has access to the builder's workspace.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The page to duplicate.
          in: path
          name: page_id
          schema:
            type: integer
          required: true
      responses:
        '202':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleDuplicatePageJobType'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderPagesStartDuplicationJobResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderPagesStartDuplicationJob404Response
  /api/builder/workflow_action/{workflow_action_id}:
    patch:
      tags:
        - Builder workflow actions
      operationId: BuilderWorkflowActions_updateExistingAction
      security:
        - JWT: []
      description: Updates an existing builder workflow action.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the workflow action
          in: path
          name: workflow_action_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/PatchedBuilder_Workflow_Action_TypeUpdateBuilderWorkflowActions
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/PatchedBuilder_Workflow_Action_TypeUpdateBuilderWorkflowActions
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/PatchedBuilder_Workflow_Action_TypeUpdateBuilderWorkflowActions
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Builder_Workflow_Action_TypeBuilderWorkflowAction
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderWorkflowActionsUpdateExistingActionResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderWorkflowActionsUpdateExistingAction404Response
    delete:
      tags:
        - Builder workflow actions
      operationId: BuilderWorkflowActions_deleteWorkflowActionById
      security:
        - JWT: []
      description: Deletes the workflow action related by the given id.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the workflow action
          in: path
          name: workflow_action_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderWorkflowActionsDeleteWorkflowActionByIdResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderWorkflowActionsDeleteWorkflowActionById404Response
  /api/builder/workflow_action/{workflow_action_id}/dispatch:
    post:
      tags:
        - Builder workflow actions
      operationId: BuilderWorkflowActions_dispatchServiceResult
      security:
        - JWT: []
        - {}
      description: >-
        Dispatches the service of the related workflow_action and returns the
        result.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the workflow_action you want to call the dispatch for.
          in: path
          name: workflow_action_id
          schema:
            type: integer
          required: true
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuilderWorkflowActionsDispatchServiceResultResponse
  /api/database/export/{job_id}:
    get:
      tags:
        - Database table export
      operationId: DatabaseTableExport_exportJobDetails
      security:
        - JWT: []
      description: >-
        Returns information such as export progress and state or the url of the
        exported file for the specified export job, only if the requesting user
        has access.
      parameters:
        - description: The job id to lookup information about.
          in: path
          name: job_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportJob'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableExportExportJobDetailsResponse
  /api/database/export/table/{table_id}:
    post:
      tags:
        - Database table export
      operationId: export_table
      security:
        - JWT: []
      description: >-
        Creates and starts a new export job for a table given some exporter
        options. Returns an error if the requesting user does not have
        permissionsto view the table.
      parameters:
        - description: The table id to create and start an export job for
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Export'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Export'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Export'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportJob'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportTableResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportTable404Response'
  /api/database/fields/{field_id}:
    get:
      tags:
        - Database table fields
      operationId: DatabaseTableFields_getFieldProperties
      security:
        - JWT: []
      description: >-
        Returns the existing field if the authorized user has access to the
        related database's workspace. Depending on the type different properties
        could be returned.
      parameters:
        - description: Returns the field related to the provided value.
          in: path
          name: field_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldField'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableFieldsGetFieldPropertiesResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableFieldsGetFieldProperties404Response
    patch:
      tags:
        - Database table fields
      operationId: DatabaseTableFields_updateField
      security:
        - JWT: []
      description: >-
        Updates the existing field if the authorized user has access to the
        related database's workspace. The type can also be changed and depending
        on that type, different additional properties can optionally be set. If
        you change the field type it could happen that the data conversion
        fails, in that case the `ERROR_CANNOT_CHANGE_FIELD_TYPE` is returned,
        but this rarely happens. If a data value cannot be converted it is set
        to `null` so data might go lost.If updated the field causes other fields
        to change then the specificinstances of those fields will be included in
        the related fields response key.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Updates the field related to the provided value.
          in: path
          name: field_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFieldUpdateField'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFieldUpdateField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFieldUpdateField'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldFieldSerializerWithRelatedFields'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableFieldsUpdateFieldResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableFieldsUpdateField404Response'
    delete:
      tags:
        - Database table fields
      operationId: DatabaseTableFields_deleteField
      security:
        - JWT: []
      description: >-
        Deletes the existing field if the authorized user has access to the
        related database's workspace. Note that all the related data to that
        field is also deleted. Primary fields cannot be deleted because their
        value represents the row. If deleting the field causes other fields to
        change then the specificinstances of those fields will be included in
        the related fields response key.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Deletes the field related to the provided value.
          in: path
          name: field_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedFields'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableFieldsDeleteFieldResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableFieldsDeleteField404Response'
  /api/database/fields/{field_id}/duplicate/async:
    post:
      tags:
        - Database table fields
      operationId: DatabaseTableFields_duplicateAsync
      security:
        - JWT: []
      description: >-
        Duplicates the table with the provided `table_id` parameter if the
        authorized user has access to the database's workspace.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: The field to duplicate.
          in: path
          name: field_id
          schema:
            type: integer
          required: true
      responses:
        '202':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleDuplicateFieldJobType'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableFieldsDuplicateAsyncResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableFieldsDuplicateAsync404Response
  /api/database/fields/{field_id}/unique_row_values:
    get:
      tags:
        - Database table fields
      operationId: DatabaseTableFields_getUniqueRowValues
      security:
        - JWT: []
      description: >-
        Returns a list of all the unique row values for an existing field,
        sorted in order of frequency.
      parameters:
        - description: Returns the values related to the provided field.
          in: path
          name: field_id
          schema:
            type: integer
          required: true
        - description: Defines how many values should be returned.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Indicates whether the original column values must be splitted by
            comma.
          in: query
          name: split_comma_separated
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniqueRowValues'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableFieldsGetUniqueRowValuesResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableFieldsGetUniqueRowValues404Response
  /api/database/fields/table/{table_id}:
    get:
      tags:
        - Database table fields
      operationId: DatabaseTableFields_getTableFields
      security:
        - JWT: []
        - Database token: []
        - {}
      description: >-
        Lists all the fields of the table related to the provided parameter if
        the user has access to the related database's workspace. If the
        workspace is related to a template, then this endpoint will be publicly
        accessible. A table consists of fields and each field can have a
        different type. Each type can have different properties. A field is
        comparable with a regular table's column.
      parameters:
        - description: Returns only the fields of the table related to the provided value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableFieldsGetTableFieldsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableFieldsGetTableFields400Response
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableFieldsGetTableFields401Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableFieldsGetTableFields404Response
    post:
      tags:
        - Database table fields
      operationId: DatabaseTableFields_createNewField
      security:
        - JWT: []
        - Database token: []
      description: >-
        Creates a new field for the table related to the provided `table_id`
        parameter if the authorized user has access to the related database's
        workspace. Depending on the type, different properties can optionally be
        set.If creating the field causes other fields to change then the
        specificinstances of those fields will be included in the related fields
        response key.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Creates a new field for the provided table related to the value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldCreateField'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FieldCreateField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FieldCreateField'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldFieldSerializerWithRelatedFields'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableFieldsCreateNewFieldResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableFieldsCreateNewField401Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableFieldsCreateNewField404Response
  /api/database/formula/{table_id}/type:
    post:
      tags:
        - Database table fields
      operationId: DatabaseTableFields_calculateFormulaType
      security:
        - JWT: []
      description: >-
        Calculates and returns the type of the specified formula value. Does not
        change the state of the field in any way.
      parameters:
        - description: The table id of the formula field to type.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeFormulaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeFormulaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeFormulaRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeFormulaResult'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableFieldsCalculateFormulaTypeResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableFieldsCalculateFormulaType404Response
  /api/database/rows/names:
    get:
      tags:
        - Database table rows
      operationId: DatabaseTableRows_getNamesOfRow
      security:
        - JWT: []
        - Database token: []
      description: >-
        Returns the names of the given row of the given tables. The nameof a row
        is the primary field value for this row. The result can be usedfor
        example, when you want to display the name of a linked row from another
        table.
      parameters:
        - description: >-
            A list of comma separated row ids to query from the table with id
            {id}. For example, if you want the name of row `42` and `43` from
            table `28` this parameter will be `table__28=42,43`. You can specify
            multiple rows for different tables but every tables must be in the
            same database. You need at least read permission on all specified
            tables.
          in: query
          name: table__{id}
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsGetNamesOfRowResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsGetNamesOfRow400Response'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsGetNamesOfRow401Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsGetNamesOfRow404Response'
  /api/database/rows/table/{table_id}:
    get:
      tags:
        - Database table rows
      operationId: DatabaseTableRows_listTableRows
      security:
        - JWT: []
        - Database token: []
      description: >-
        Lists all the rows of the table related to the provided parameter if the
        user has access to the related database's workspace. The response is
        paginated by a page/size style. It is also possible to provide an
        optional search query, only rows where the data matches the search query
        are going to be returned then. The properties of the returned rows
        depends on which fields the table has. For a complete overview of fields
        use the **list_database_table_fields** endpoint to list them all. In the
        example all field types are listed, but normally the number in
        field_{id} key is going to be the id of the field. Or if the GET
        parameter `user_field_names` is provided then the keys will be the name
        of the field. The value is what the user has provided and the format of
        it depends on the fields type.
      parameters:
        - description: >-
            All the fields are included in the response by default. You can
            select a subset of fields by providing the exclude query parameter.
            If you for example provide the following GET parameter
            `exclude=field_1,field_2` then the fields with id `1` and id `2` are
            going to be excluded from the selection and response. If the
            `user_field_names` parameter is provided then instead exclude should
            be a comma separated list of the actual field names. For field names
            with commas you should surround the name with quotes like so:
            `exclude=My Field,"Field With , "`. A backslash can be used to
            escape field names which contain double quotes like so: `exclude=My
            Field,Field with \"`.
          in: query
          name: exclude
          schema:
            type: string
        - description: >-
            The rows can optionally be filtered by the same view filters
            available for the views. Multiple filters can be provided if they
            follow the same format. The field and filter variable indicate how
            to filter and the value indicates where to filter on.


            Please note that if the `filters` parameter is provided, this
            parameter will be ignored. 


            For example if you provide the following GET parameter
            `filter__field_1__equal=test` then only rows where the value of
            field_1 is equal to test are going to be returned.


            The following filters are available: equal, not_equal,
            filename_contains, files_lower_than, has_file_type, contains,
            contains_not, contains_word, doesnt_contain_word,
            length_is_lower_than, higher_than, lower_than, is_even_and_whole,
            date_equal, date_before, date_before_or_equal, date_after_days_ago,
            date_after, date_after_or_equal, date_not_equal, date_equals_today,
            date_before_today, date_after_today, date_within_days,
            date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week,
            date_equals_month, date_equals_day_of_month, date_equals_year,
            single_select_equal, single_select_not_equal, link_row_has,
            link_row_has_not, link_row_contains, link_row_not_contains, boolean,
            empty, not_empty, multiple_select_has, multiple_select_has_not,
            multiple_collaborators_has, multiple_collaborators_has_not, user_is,
            user_is_not.
          in: query
          name: filter__{field}__{filter}
          schema:
            type: string
        - description: >+
            `AND`: Indicates that the rows must match all the provided filters.

            `OR`: Indicates that the rows only have to match one of the filters.


            This works only if two or more filters are provided.Please note that
            if the `filters` parameter is provided, this parameter will be
            ignored. 

          in: query
          name: filter_type
          schema:
            type: string
        - description: >-
            A JSON serialized string containing the filter tree to apply to this
            view. The filter tree is a nested structure containing the filters
            that need to be applied. 


            Please note that if this parameter is provided, all other
            `filter__{field}__{filter}` will be ignored, as well as the
            `filter_type` parameter. 


            An example of a valid filter tree is the following:`{"filter_type":
            "AND", "filters": [{"field": 1, "type": "equal", "value":
            "test"}]}`. The `field` value must be the ID of the field to filter
            on, or the name of the field if `user_field_names` is true.


            The following filters are available: equal, not_equal,
            filename_contains, files_lower_than, has_file_type, contains,
            contains_not, contains_word, doesnt_contain_word,
            length_is_lower_than, higher_than, lower_than, is_even_and_whole,
            date_equal, date_before, date_before_or_equal, date_after_days_ago,
            date_after, date_after_or_equal, date_not_equal, date_equals_today,
            date_before_today, date_after_today, date_within_days,
            date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week,
            date_equals_month, date_equals_day_of_month, date_equals_year,
            single_select_equal, single_select_not_equal, link_row_has,
            link_row_has_not, link_row_contains, link_row_not_contains, boolean,
            empty, not_empty, multiple_select_has, multiple_select_has_not,
            multiple_collaborators_has, multiple_collaborators_has_not, user_is,
            user_is_not.
          in: query
          name: filters
          schema:
            type: string
        - description: >-
            All the fields are included in the response by default. You can
            select a subset of fields by providing the include query parameter.
            If you for example provide the following GET parameter
            `include=field_1,field_2` then only the fields withid `1` and id `2`
            are going to be selected and included in the response. If the
            `user_field_names` parameter is provided then instead include should
            be a comma separated list of the actual field names. For field names
            with commas you should surround the name with quotes like so:
            `include=My Field,"Field With , "`. A backslash can be used to
            escape field names which contain double quotes like so: `include=My
            Field,Field with \"`.
          in: query
          name: include
          schema:
            type: string
        - description: >-
            Optionally the rows can be ordered by provided field ids separated
            by comma. By default a field is ordered in ascending (A-Z) order,
            but by prepending the field with a '-' it can be ordered descending
            (Z-A). If the `user_field_names` parameter is provided then instead
            order_by should be a comma separated list of the actual field names.
            For field names with commas you should surround the name with quotes
            like so: `order_by=My Field,"Field With , "`. A backslash can be
            used to escape field names which contain double quotes like so:
            `order_by=My Field,Field with \"`.
          in: query
          name: order_by
          schema:
            type: string
        - description: Defines which page of rows should be returned.
          in: query
          name: page
          schema:
            type: integer
        - description: >-
            If provided only rows with data that matches the search query are
            going to be returned.
          in: query
          name: search
          schema:
            type: string
        - description: >-
            If provided, allows API consumers to determine what kind of search
            experience they wish to have. If the default `full-text-with-count`
            is used, then Postgres full-text search is used. If `compat` is
            provided then the search term will be exactly searched for including
            whitespace on each cell. This is the Baserow legacy search
            behaviour.
          in: query
          name: search_mode
          schema:
            type: string
        - description: Defines how many rows should be returned per page.
          in: query
          name: size
          schema:
            type: integer
        - description: Returns the rows of the table related to the provided value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
        - description: >-
            A flag query parameter which if provided the returned json will use
            the user specified field names instead of internal Baserow field
            names (field_123 etc). 
          in: query
          name: user_field_names
          schema:
            type: boolean
        - description: Includes all the filters and sorts of the provided view.
          in: query
          name: view_id
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaginationSerializerExampleRowResponseSerializerWithUserFieldNames
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsListTableRowsResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsListTableRows401Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsListTableRows404Response'
    post:
      tags:
        - Database table rows
      operationId: DatabaseTableRows_createRow
      security:
        - JWT: []
        - Database token: []
      description: >-
        Creates a new row in the table if the user has access to the related
        table's workspace. The accepted body fields are depending on the fields
        that the table has. For a complete overview of fields use the
        **list_database_table_fields** to list them all. None of the fields are
        required, if they are not provided the value is going to be `null` or
        `false` or some default value is that is set. If you want to add a value
        for the field with for example id `10`, the key must be named
        `field_10`. Or instead if the `user_field_names` GET param is provided
        the key must be the name of the field. Of course multiple fields can be
        provided in one request. In the examples below you will find all the
        different field types, the numbers/ids in the example are just there for
        example purposes, the field_ID must be replaced with the actual id of
        the field or the name of the field if `user_field_names` is provided.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: >-
            If provided then the newly created row will be positioned before the
            row with the provided id.
          in: query
          name: before
          schema:
            type: integer
        - description: Creates a row in the table related to the provided value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
        - description: >-
            A flag query parameter which if provided this endpoint will expect
            and return the user specified field names instead of internal
            Baserow field names (field_123 etc).
          in: query
          name: user_field_names
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ExampleRowRequestSerializerWithUserFieldNames
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/ExampleRowRequestSerializerWithUserFieldNames
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/ExampleRowRequestSerializerWithUserFieldNames
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExampleRowResponseSerializerWithUserFieldNames
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsCreateRowResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsCreateRow401Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsCreateRow404Response'
  /api/database/rows/table/{table_id}/{row_id}:
    get:
      tags:
        - Database table rows
      operationId: DatabaseTableRows_getRowByTableIdAndRowId
      security:
        - JWT: []
        - Database token: []
      description: >-
        Fetches an existing row from the table if the user has access to the
        related table's workspace. The properties of the returned row depend on
        which fields the table has. For a complete overview of fields use the
        **list_database_table_fields** endpoint to list them all. In the example
        all field types are listed, but normally the number in field_{id} key is
        going to be the id of the field of the field. Or if the GET parameter
        `user_field_names` is provided then the keys will be the name of the
        field. The value is what the user has provided and the format of it
        depends on the fields type.
      parameters:
        - description: Returns the row related the provided value.
          in: path
          name: row_id
          schema:
            type: integer
          required: true
        - description: Returns the row of the table related to the provided value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
        - description: >-
            A flag query parameter which if provided the returned json will use
            the user specified field names instead of internal Baserow field
            names (field_123 etc). 
          in: query
          name: user_field_names
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExampleRowResponseSerializerWithUserFieldNames
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableRowsGetRowByTableIdAndRowIdResponse
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableRowsGetRowByTableIdAndRowId401Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableRowsGetRowByTableIdAndRowId404Response
    patch:
      tags:
        - Database table rows
      operationId: DatabaseTableRows_updateRow
      security:
        - JWT: []
        - Database token: []
      description: >-
        Updates an existing row in the table if the user has access to the
        related table's workspace. The accepted body fields are depending on the
        fields that the table has. For a complete overview of fields use the
        **list_database_table_fields** endpoint to list them all. None of the
        fields are required, if they are not provided the value is not going to
        be updated. When you want to update a value for the field with id `10`,
        the key must be named `field_10`. Or if the GET parameter
        `user_field_names` is provided the key of the field to update must be
        the name of the field. Multiple different fields to update can be
        provided in one request. In the examples below you will find all the
        different field types, the numbers/ids in the example are just there for
        example purposes, the field_ID must be replaced with the actual id of
        the field or the name of the field if `user_field_names` is provided.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Updates the row related to the value.
          in: path
          name: row_id
          schema:
            type: integer
          required: true
        - description: Updates the row in the table related to the value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
        - description: >-
            A flag query parameter which if provided this endpoint will expect
            and return the user specified field names instead of internal
            Baserow field names (field_123 etc).
          in: query
          name: user_field_names
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/PatchedExampleUpdateRowRequestSerializerWithUserFieldNames
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/PatchedExampleUpdateRowRequestSerializerWithUserFieldNames
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/PatchedExampleUpdateRowRequestSerializerWithUserFieldNames
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExampleRowResponseSerializerWithUserFieldNames
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsUpdateRowResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsUpdateRow401Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsUpdateRow404Response'
    delete:
      tags:
        - Database table rows
      operationId: DatabaseTableRows_deleteRow
      security:
        - JWT: []
        - Database token: []
      description: >-
        Deletes an existing row in the table if the user has access to the
        table's workspace.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Deletes the row related to the value.
          in: path
          name: row_id
          schema:
            type: integer
          required: true
        - description: Deletes the row in the table related to the value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsDeleteRowResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsDeleteRow404Response'
  /api/database/rows/table/{table_id}/{row_id}/adjacent:
    get:
      tags:
        - Database table rows
      operationId: DatabaseTableRows_getAdjacentRow
      security:
        - JWT: []
      description: >-
        Fetches the adjacent row to a given row_id in the table with the given
        table_id. If the previous flag is set it will return the previous row,
        otherwise it will return the next row. You can specifya view_id and it
        will apply the filters and sorts of the provided view.
      parameters:
        - description: >-
            A flag query parameter which if provided returns theprevious row to
            the specified row_id. If it's not setit will return the next row.
          in: query
          name: previous
          schema:
            type: boolean
        - description: Returns the row adjacent the provided value.
          in: path
          name: row_id
          schema:
            type: integer
          required: true
        - description: >-
            If provided, the adjacent row will be one that matchesthe search
            query.
          in: query
          name: search
          schema:
            type: string
        - description: >-
            If provided, allows API consumers to determine what kind of search
            experience they wish to have. If the default `full-text-with-count`
            is used, then Postgres full-text search is used. If `compat` is
            provided then the search term will be exactly searched for including
            whitespace on each cell. This is the Baserow legacy search
            behaviour.
          in: query
          name: search_mode
          schema:
            type: string
        - description: Returns the row of the table related to the provided value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
        - description: >-
            A flag query parameter which if provided the returned json will use
            the user specified field names instead of internal Baserow field
            names (field_123 etc). 
          in: query
          name: user_field_names
          schema:
            type: boolean
        - description: Applies the filters and sorts of the provided view.
          in: query
          name: view_id
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExampleRowResponseSerializerWithUserFieldNames
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsGetAdjacentRowResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableRowsGetAdjacentRow404Response
  /api/database/rows/table/{table_id}/{row_id}/history:
    get:
      tags:
        - Database table rows
      operationId: DatabaseTableRows_getRowChangeHistory
      security:
        - JWT: []
      description: >-
        Fetches the row change history of a given row_id in the table with the
        given table_id. The row change history is paginated and can be limited
        with the limit and offset query parameters.
      parameters:
        - description: The maximum number of row change history entries to return.
          in: query
          name: limit
          schema:
            type: integer
        - description: The offset of the row change history entries to return.
          in: query
          name: offset
          schema:
            type: integer
        - description: The id of the row to fetch the change history from.
          in: path
          name: row_id
          schema:
            type: integer
          required: true
        - description: The id of the table to fetch the row change history from.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerRowHistory'
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableRowsGetRowChangeHistoryResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableRowsGetRowChangeHistory404Response
  /api/database/rows/table/{table_id}/{row_id}/move:
    patch:
      tags:
        - Database table rows
      operationId: DatabaseTableRows_moveRowTo
      security:
        - JWT: []
        - Database token: []
      description: >-
        Moves the row related to given `row_id` parameter to another position.
        It is only possible to move the row before another existing row or to
        the end. If the `before_id` is provided then the row related to the
        `row_id` parameter is moved before that row. If the `before_id`
        parameter is not provided, then the row will be moved to the end.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: >-
            Moves the row related to the given `row_id` before the row related
            to the provided value. If not provided, then the row will be moved
            to the end.
          in: query
          name: before_id
          schema:
            type: integer
        - description: Moves the row related to the value.
          in: path
          name: row_id
          schema:
            type: integer
          required: true
        - description: Moves the row in the table related to the value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
        - description: >-
            A flag query parameter which if provided the returned json will use
            the user specified field names instead of internal Baserow field
            names (field_123 etc). 
          in: query
          name: user_field_names
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ExampleRowResponseSerializerWithUserFieldNames
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsMoveRowToResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsMoveRowTo401Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsMoveRowTo404Response'
  /api/database/rows/table/{table_id}/batch:
    post:
      tags:
        - Database table rows
      operationId: DatabaseTableRows_createBatchRows
      security:
        - JWT: []
        - Database token: []
      description: >-
        Creates new rows in the table if the user has access to the related
        table's workspace. The accepted body fields are depending on the fields
        that the table has. For a complete overview of fields use the
        **list_database_table_fields** to list them all. None of the fields are
        required, if they are not provided the value is going to be `null` or
        `false` or some default value is that is set. If you want to add a value
        for the field with for example id `10`, the key must be named
        `field_10`. Or instead if the `user_field_names` GET param is provided
        the key must be the name of the field. Of course multiple fields can be
        provided in one request. In the examples below you will find all the
        different field types, the numbers/ids in the example are just there for
        example purposes, the field_ID must be replaced with the actual id of
        the field or the name of the field if `user_field_names` is provided.

         **WARNING:** This endpoint doesn't yet work with row created webhooks.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: >-
            If provided then the newly created rows will be positioned before
            the row with the provided id.
          in: query
          name: before
          schema:
            type: integer
        - description: Creates the rows in the table.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
        - description: >-
            A flag query parameter which if provided this endpoint will expect
            and return the user specified field names instead of internal
            Baserow field names (field_123 etc).
          in: query
          name: user_field_names
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExampleBatchRowsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExampleBatchRowsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExampleBatchRowsRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleBatchRowsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsCreateBatchRowsResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableRowsCreateBatchRows401Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableRowsCreateBatchRows404Response
    patch:
      tags:
        - Database table rows
      operationId: DatabaseTableRows_updateBatchRows
      security:
        - JWT: []
        - Database token: []
      description: >-
        Updates existing rows in the table if the user has access to the related
        table's workspace. The accepted body fields are depending on the fields
        that the table has. For a complete overview of fields use the
        **list_database_table_fields** endpoint to list them all. None of the
        fields are required, if they are not provided the value is not going to
        be updated. When you want to update a value for the field with id `10`,
        the key must be named `field_10`. Or if the GET parameter
        `user_field_names` is provided the key of the field to update must be
        the name of the field. Multiple different fields to update can be
        provided for each row. In the examples below you will find all the
        different field types, the numbers/ids in the example are just there for
        example purposes, the field_ID must be replaced with the actual id of
        the field or the name of the field if `user_field_names` is provided.

         **WARNING:** This endpoint doesn't yet work with row updated webhooks.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Updates the rows in the table.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
        - description: >-
            A flag query parameter which if provided this endpoint will expect
            and return the user specified field names instead of internal
            Baserow field names (field_123 etc).
          in: query
          name: user_field_names
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExampleBatchUpdateRowsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExampleBatchUpdateRowsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExampleBatchUpdateRowsRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleBatchRowsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsUpdateBatchRowsResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableRowsUpdateBatchRows401Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableRowsUpdateBatchRows404Response
  /api/database/rows/table/{table_id}/batch-delete:
    post:
      tags:
        - Database table rows
      operationId: DatabaseTableRows_batchDelete
      security:
        - JWT: []
        - Database token: []
      description: >-
        Deletes existing rows in the table if the user has access to the table's
        workspace.

         **WARNING:**  This endpoint doesn't yet work with row deleted webhooks.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Deletes the rows in the table related to the value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteRows'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchDeleteRows'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchDeleteRows'
        required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsBatchDeleteResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsBatchDelete404Response'
  /api/database/tables/{table_id}:
    get:
      tags:
        - Database tables
      operationId: DatabaseTables_getTable
      security:
        - JWT: []
      description: >-
        Returns the requested table if the authorized user has access to the
        related database's workspace.
      parameters:
        - description: Returns the table related to the provided value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTablesGetTableResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTablesGetTable404Response'
    patch:
      tags:
        - Database tables
      operationId: DatabaseTables_updateTable
      security:
        - JWT: []
      description: >-
        Updates the existing table if the authorized user has access to the
        related database's workspace.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Updates the table related to the provided value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTableUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTableUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTableUpdate'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTablesUpdateTableResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTablesUpdateTable404Response'
    delete:
      tags:
        - Database tables
      operationId: DatabaseTables_deleteTable
      security:
        - JWT: []
      description: >-
        Deletes the existing table if the authorized user has access to the
        related database's workspace.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Deletes the table related to the provided value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTablesDeleteTableResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTablesDeleteTable404Response'
  /api/database/tables/{table_id}/duplicate/async:
    post:
      tags:
        - Database tables
      operationId: DatabaseTables_duplicateAsyncJob
      security:
        - JWT: []
      description: >-
        Start a job to duplicate the table with the provided `table_id`
        parameter if the authorized user has access to the database's workspace.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: The table to duplicate.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      responses:
        '202':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleDuplicateTableJobType'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTablesDuplicateAsyncJobResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTablesDuplicateAsyncJob404Response
  /api/database/tables/{table_id}/import/async:
    post:
      tags:
        - Database tables
      operationId: DatabaseTables_importAsyncJob
      security:
        - JWT: []
      description: >-
        Import data in the specified table if the authorized user has access to
        the related database's workspace. This endpoint is asynchronous and
        return the created job to track the progress of the task.
      parameters:
        - description: Import data into the table related to the provided value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableImport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TableImport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TableImport'
        required: true
      responses:
        '202':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFileImportJobSerializerClass'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTablesImportAsyncJobResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTablesImportAsyncJob404Response'
  /api/database/tables/database/{database_id}:
    get:
      tags:
        - Database tables
      operationId: DatabaseTables_listByDatabaseId
      security:
        - JWT: []
      description: >-
        Lists all the tables that are in the database related to the
        `database_id` parameter if the user has access to the database's
        workspace. A table is exactly as the name suggests. It can hold multiple
        fields, each having their own type and multiple rows. They can be added
        via the **create_database_table_field** and
        **create_database_table_row** endpoints.
      parameters:
        - description: Returns only tables that are related to the provided value.
          in: path
          name: database_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTablesListByDatabaseIdResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTablesListByDatabaseId400Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTablesListByDatabaseId404Response'
    post:
      tags:
        - Database tables
      operationId: DatabaseTables_createTable
      security:
        - JWT: []
      description: >-
        Creates synchronously a new table for the database related to the
        provided `database_id` parameter if the authorized user has access to
        the database's workspace.


        As an alternative you can use the `create_async_database_table` for
        better performances and importing bigger files.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Creates a table for the database related to the provided value.
          in: path
          name: database_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TableCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TableCreate'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTablesCreateTableResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTablesCreateTable404Response'
  /api/database/tables/database/{database_id}/async:
    post:
      tags:
        - Database tables
      operationId: DatabaseTables_createTableJob
      security:
        - JWT: []
      description: >-
        Creates a job that creates a new table for the database related to the
        provided `database_id` parameter if the authorized user has access to
        the database's workspace. This endpoint is asynchronous and return the
        created job to track the progress of the task.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: Creates a table for the database related to the provided value.
          in: path
          name: database_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TableCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TableCreate'
        required: true
      responses:
        '202':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFileImportJobSerializerClass'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTablesCreateTableJobResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTablesCreateTableJob404Response'
  /api/database/tables/database/{database_id}/order:
    post:
      tags:
        - Database tables
      operationId: DatabaseTables_updateTableOrder
      security:
        - JWT: []
      description: >-
        Changes the order of the provided table ids to the matching position
        that the id has in the list. If the authorized user does not belong to
        the workspace it will be ignored. The order of the not provided tables
        will be set to `0`.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: >-
            Updates the order of the tables in the database related to the
            provided value.
          in: path
          name: database_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderTables'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderTables'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderTables'
        required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTablesUpdateTableOrderResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTablesUpdateTableOrder404Response'
  /api/database/tokens:
    get:
      tags:
        - Database tokens
      operationId: DatabaseTokens_list
      security:
        - JWT: []
      description: >-
        Lists all the database tokens that belong to the authorized user. A
        token can be used to create, read, update and delete rows in the tables
        of the token's workspace. It only works on the tables if the token has
        the correct permissions. The **Database table rows** endpoints can be
        used for these operations.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTokensListResponse'
    post:
      tags:
        - Database tokens
      operationId: DatabaseTokens_createNewToken
      security:
        - JWT: []
      description: >-
        Creates a new database token for a given workspace and for the
        authorized user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTokensCreateNewTokenResponse'
  /api/database/tokens/{token_id}:
    get:
      tags:
        - Database tokens
      operationId: DatabaseTokens_getToken
      security:
        - JWT: []
      description: >-
        Returns the requested database token if it is owned by the authorized
        user andif the user has access to the related workspace.
      parameters:
        - description: Returns the database token related to the provided value.
          in: path
          name: token_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTokensGetTokenResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTokensGetToken404Response'
    patch:
      tags:
        - Database tokens
      operationId: DatabaseTokens_updateTokenOwnership
      security:
        - JWT: []
      description: >-
        Updates the existing database token if it is owned by the authorized
        user and ifthe user has access to the related workspace.
      parameters:
        - description: Updates the database token related to the provided value.
          in: path
          name: token_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTokenUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTokenUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTokenUpdate'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTokensUpdateTokenOwnershipResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTokensUpdateTokenOwnership404Response
    delete:
      tags:
        - Database tokens
      operationId: DatabaseTokens_deleteToken
      security:
        - JWT: []
      description: >-
        Deletes the existing database token if it is owned by the authorized
        user and ifthe user has access to the related workspace.
      parameters:
        - description: Deletes the database token related to the provided value.
          in: path
          name: token_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTokensDeleteTokenResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTokensDeleteToken404Response'
  /api/database/tokens/check:
    get:
      tags:
        - Database tokens
      operationId: DatabaseTokens_verifyTokenValidity
      security:
        - Database token: []
      description: >-
        This endpoint check be used to check if the provided personal API token
        is valid. If returns a `200` response if so and a `403` is not. This can
        be used by integrations like Zapier or n8n to test if a token is valid.
      responses:
        '200':
          description: No response body
        '403':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTokensVerifyTokenValidityResponse'
  /api/database/views/{slug}/link-row-field-lookup/{field_id}:
    get:
      tags:
        - Database table views
      operationId: DatabaseTableViews_getLinkRowFieldValue
      security:
        - JWT: []
        - {}
      description: >-
        If the view is publicly shared or if an authenticated user has access to
        the related workspace, then this endpoint can be used to do a value
        lookup of the link row fields that are included in the view. Normally it
        is not possible for a not authenticated visitor to fetch the rows of a
        table. This endpoint makes it possible to fetch the id and primary field
        value of the related table of a link row included in the view.
      parameters:
        - description: The field id of the link row field.
          in: path
          name: field_id
          schema:
            type: integer
          required: true
        - description: >-
            If provided only rows with data that matches the search query are
            going to be returned.
          in: query
          name: search
          schema:
            type: string
        - description: >-
            If provided, allows API consumers to determine what kind of search
            experience they wish to have. If the default `full-text-with-count`
            is used, then Postgres full-text search is used. If `compat` is
            provided then the search term will be exactly searched for including
            whitespace on each cell. This is the Baserow legacy search
            behaviour.
          in: query
          name: search_mode
          schema:
            type: string
        - description: The slug related to the view.
          in: path
          name: slug
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerLinkRowValue'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewsGetLinkRowFieldValueResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewsGetLinkRowFieldValue404Response
  /api/database/views/{slug}/public/auth:
    post:
      tags:
        - Database table views
      operationId: DatabaseTableViews_generateToken
      security:
        - JWT: []
        - {}
      description: >-
        Returns a valid never-expiring JWT token for this public shared view if
        the password provided matches with the one saved by the view's owner.
      parameters:
        - description: The slug of the grid view to get public information about.
          in: path
          name: slug
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicViewAuthRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicViewAuthRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicViewAuthRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicViewAuthResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewsGenerateTokenResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewsGenerateToken404Response
  /api/database/views/{slug}/public/info:
    get:
      tags:
        - Database table views
      operationId: DatabaseTableViews_getPublicInfo
      security:
        - JWT: []
        - {}
      description: Returns the required public information to display a single shared view.
      parameters:
        - description: The slug of the view to get public information about.
          in: path
          name: slug
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicViewInfo'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewsGetPublicInfoResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewsGetPublicInfo401Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewsGetPublicInfo404Response
  /api/database/views/{view_id}:
    get:
      tags:
        - Database table views
      operationId: DatabaseTableViews_getViewById
      security:
        - JWT: []
      description: >-
        Returns the existing view. Depending on the type different
        propertiescould be returned.
      parameters:
        - description: >-
            A comma separated list of extra attributes to include on the
            returned view. The supported attributes are `filters`, `sortings`
            and `decorations`. For example `include=filters,sortings` will add
            the attributes `filters` and `sortings` to every returned view,
            containing a list of the views filters and sortings respectively.
          in: query
          name: include
          schema:
            type: string
        - description: Returns the view related to the provided value.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewView'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewsGetViewByIdResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewsGetViewById404Response'
    patch:
      tags:
        - Database table views
      operationId: DatabaseTableViews_updateView
      security:
        - JWT: []
      description: >-
        Updates the existing view. The type cannot be changed. It depends on the
        existing type which properties can be changed.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: >-
            A comma separated list of extra attributes to include on the
            returned view. The supported attributes are `filters`, `sortings`
            and `decorations`. For example `include=filters,sortings` will add
            the attributes `filters` and `sortings` to every returned view,
            containing a list of the views filters and sortings respectively.
          in: query
          name: include
          schema:
            type: string
        - description: Updates the view related to the provided value.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedViewUpdateView'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedViewUpdateView'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedViewUpdateView'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewView'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewsUpdateViewResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewsUpdateView404Response'
    delete:
      tags:
        - Database table views
      operationId: DatabaseTableViews_deleteView
      security:
        - JWT: []
      description: >-
        Deletes the existing view. Note that all the related settings of the
        view are going to be deleted also. The data stays intact after deleting
        the view because this is related to the table and not the view.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Deletes the view related to the provided value.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewsDeleteViewResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewsDeleteView404Response'
  /api/database/views/{view_id}/decorations:
    get:
      tags:
        - Database table view decorations
      operationId: DatabaseTableViewDecorations_list
      security:
        - JWT: []
      description: >-
        Lists all decorations of the view related to the provided `view_id` if
        the user has access to the related database's workspace. A view can have
        multiple decorations. View decorators can be used to decorate rows. This
        can, for example, be used to change the border or background color of a
        row if it matches certain conditions.
      parameters:
        - description: Returns only decoration of the view given to the provided value.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewDecorationsListResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewDecorationsList400Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewDecorationsList404Response
    post:
      tags:
        - Database table view decorations
      operationId: DatabaseTableViewDecorations_createNew
      security:
        - JWT: []
      description: >-
        Creates a new decoration for the view related to the provided `view_id`
        parameter if the authorized user has access to the related database's
        workspace.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Creates a decoration for the view related to the given value.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Decorator_Value_Provider_TypeCreateViewDecoration
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/Decorator_Value_Provider_TypeCreateViewDecoration
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/Decorator_Value_Provider_TypeCreateViewDecoration
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decorator_Value_Provider_TypeViewDecoration
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewDecorationsCreateNewResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewDecorationsCreateNew404Response
  /api/database/views/{view_id}/duplicate:
    post:
      tags:
        - Database table views
      operationId: DatabaseTableViews_duplicateView
      security:
        - JWT: []
      description: >-
        Duplicates an existing view if the user has access to it. When a view is
        duplicated everything is copied except:

        - The name is appended with the copy number. Ex:
        `ViewName`->`ViewName(2)` and `View(2)`->`View(3)`

        - If the original view is publicly shared, the new view will not be
        shared anymore
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Duplicates the view related to the provided value.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewView'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewsDuplicateViewResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewsDuplicateView404Response
  /api/database/views/{view_id}/field-options:
    get:
      tags:
        - Database table views
      operationId: DatabaseTableViews_getFieldOptions
      security:
        - JWT: []
        - {}
      description: >-
        Responds with the fields options of the provided view if the
        authenticated user has access to the related workspace.
      parameters:
        - description: Responds with field options related to the provided value.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewFieldOptions'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewsGetFieldOptionsResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewsGetFieldOptions404Response
    patch:
      tags:
        - Database table views
      operationId: DatabaseTableViews_updateFieldOptions
      security:
        - JWT: []
      description: >-
        Updates the field options of a view. The field options differ per field
        type  This could for example be used to update the field width of a
        `grid` view if the user changes it.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Updates the field options related to the provided value.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedViewFieldOptions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedViewFieldOptions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedViewFieldOptions'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewFieldOptions'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewsUpdateFieldOptionsResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewsUpdateFieldOptions404Response
  /api/database/views/{view_id}/filter-groups:
    post:
      tags:
        - Database table view filters
      operationId: DatabaseTableViewFilters_createNewFilterGroup
      security:
        - JWT: []
      description: >-
        Creates a new filter group for the view related to the provided
        `view_id` parameter.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: The ID of the view where create the new filter group.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateViewFilterGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateViewFilterGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateViewFilterGroup'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewFilterGroup'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewFiltersCreateNewFilterGroupResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewFiltersCreateNewFilterGroup404Response
  /api/database/views/{view_id}/filters:
    get:
      tags:
        - Database table view filters
      operationId: DatabaseTableViewFilters_getList
      security:
        - JWT: []
      description: >-
        Lists all filters of the view related to the provided `view_id`. A view
        can have multiple filters. When all the rows are requested for the view
        only those that apply to the filters are returned.
      parameters:
        - description: Returns only filters of the view related to the provided value.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewFiltersGetListResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewFiltersGetList400Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewFiltersGetList404Response
    post:
      tags:
        - Database table view filters
      operationId: DatabaseTableViewFilters_createNewFilter
      security:
        - JWT: []
      description: >-
        Creates a new filter for the view related to the provided `view_id`
        parameter. When the rows of a view are requested, for example via the
        `list_database_table_grid_view_rows` endpoint, then only the rows that
        apply to all the filters are going to be returned. A filter compares the
        value of a field to the value of a filter. It depends on the type how
        values are going to be compared.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Creates a filter for the view related to the provided value.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateViewFilter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateViewFilter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateViewFilter'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewFilter'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewFiltersCreateNewFilterResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewFiltersCreateNewFilter404Response
  /api/database/views/{view_id}/group_bys:
    get:
      tags:
        - Database table view groupings
      operationId: DatabaseTableViewGroupings_list
      security:
        - JWT: []
      description: >-
        Lists all groupings of the view related to the provided `view_id` if the
        user has access to the related database's workspace. A view can have
        multiple groupings.
      parameters:
        - description: Returns only groupings of the view related to the provided value.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewGroupingsListResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewGroupingsList400Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewGroupingsList404Response'
    post:
      tags:
        - Database table view groupings
      operationId: DatabaseTableViewGroupings_createNewGrouping
      security:
        - JWT: []
      description: >-
        Creates a new group by for the view related to the provided `view_id`
        parameter if the authorized user has access to the related database's
        workspace.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Creates a group by for the view related to the provided value.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateViewGroupBy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateViewGroupBy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateViewGroupBy'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewGroupBy'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewGroupingsCreateNewGroupingResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewGroupingsCreateNewGrouping404Response
  /api/database/views/{view_id}/rotate-slug:
    post:
      tags:
        - Database table views
      operationId: DatabaseTableViews_rotateSlug
      security:
        - JWT: []
      description: >-
        Rotates the unique slug of the view by replacing it with a new value.
        This would mean that the publicly shared URL of the view will change.
        Anyone with the old URL won't be able to access the viewanymore. Only
        view types which are sharable can have their slugs rotated.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Rotates the slug of the view related to the provided value.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewView'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewsRotateSlugResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewsRotateSlug404Response'
  /api/database/views/{view_id}/sortings:
    get:
      tags:
        - Database table view sortings
      operationId: DatabaseTableViewSortings_list
      security:
        - JWT: []
      description: >-
        Lists all sortings of the view related to the provided `view_id` if the
        user has access to the related database's workspace. A view can have
        multiple sortings. When all the rows are requested they will be in the
        desired order.
      parameters:
        - description: Returns only sortings of the view related to the provided value.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewSortingsListResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewSortingsList400Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewSortingsList404Response'
    post:
      tags:
        - Database table view sortings
      operationId: DatabaseTableViewSortings_createNewSort
      security:
        - JWT: []
      description: >-
        Creates a new sort for the view related to the provided `view_id`
        parameter if the authorized user has access to the related database's
        workspace. When the rows of a view are requested, for example via the
        `list_database_table_grid_view_rows` endpoint, they will be returned in
        the respected order defined by all the sortings.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Creates a sort for the view related to the provided value.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateViewSort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateViewSort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateViewSort'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewSort'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewSortingsCreateNewSortResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewSortingsCreateNewSort404Response
  /api/database/views/calendar/{slug}/public/rows:
    get:
      tags:
        - Database table calendar view
      operationId: DatabaseTableCalendarView_getPublicRows
      security:
        - JWT: []
        - {}
      description: >-
        Responds with serialized rows grouped by the view's date field options
        related to the `slug` if the calendar view is publicly shared.
        Additional query parameters can be provided to control the `limit` and
        `offset` per select option. 


        This is a **premium** feature.
      parameters:
        - description: Restricts results based on the calendar date field.
          in: query
          name: from_timestamp
          schema:
            type: string
            format: date-time
          required: true
        - description: >-
            Defines how many rows should be returned by default. This value can
            be overwritten per select option.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Defines from which offset the rows should be returned.This value can
            be overwritten per select option.
          in: query
          name: offset
          schema:
            type: integer
        - description: Returns only rows that belong to the related view.
          in: path
          name: slug
          schema:
            type: string
          required: true
        - description: Restricts results based on the calendar date field.
          in: query
          name: to_timestamp
          schema:
            type: string
            format: date-time
          required: true
        - description: >-
            User's timezone will be taken into account for date fieldtypes that
            have a time and don't enforce a timezone. The timezone will be used
            for aggregating the dates. For date fields without a time this will
            be ignored and UTC will be forced. 
          in: query
          name: user_timezone
          schema:
            type: string
            default: UTC
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarViewExampleResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableCalendarViewGetPublicRowsResponse
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableCalendarViewGetPublicRows401Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableCalendarViewGetPublicRows404Response
  /api/database/views/calendar/{view_id}:
    get:
      tags:
        - Database table calendar view
      operationId: DatabaseTableCalendarView_getGroupedRows
      security:
        - JWT: []
        - {}
      description: >-
        Responds with serialized rows grouped by date regarding view's date
        fieldif the user is authenticated and has access to the related
        workspace.


        This is a **premium** feature.
      parameters:
        - description: Restricts results based on the calendar date field.
          in: query
          name: from_timestamp
          schema:
            type: string
            format: date-time
          required: true
        - description: >-
            A comma separated list allowing the values of `field_options` and
            `row_metadata` which will add the object/objects with the same name
            to the response if included. The `field_options` object contains
            user defined view settings for each field. For example the field's
            width is included in here. The `row_metadata` object includes extra
            row specific data on a per row basis.
          in: query
          name: include
          schema:
            type: string
        - description: Defines how many rows should be returned by default.
          in: query
          name: limit
          schema:
            type: integer
        - description: Defines from which offset the rows should be returned.
          in: query
          name: offset
          schema:
            type: integer
            default: 0
        - description: >-
            If provided only rows with data that matches the search query are
            going to be returned.
          in: query
          name: search
          schema:
            type: string
        - description: >-
            If provided, allows API consumers to determine what kind of search
            experience they wish to have. If the default `full-text-with-count`
            is used, then Postgres full-text search is used. If `compat` is
            provided then the search term will be exactly searched for including
            whitespace on each cell. This is the Baserow legacy search
            behaviour.
          in: query
          name: search_mode
          schema:
            type: string
        - description: Restricts results based on the calendar date field.
          in: query
          name: to_timestamp
          schema:
            type: string
            format: date-time
          required: true
        - description: >-
            User's timezone will be taken into account for date fieldtypes that
            have a time and don't enforce a timezone. The timezone will be used
            for aggregating the dates. For date fields without a time this will
            be ignored and UTC will be forced. 
          in: query
          name: user_timezone
          schema:
            type: string
            default: UTC
        - description: Returns only rows that belong to the related view's table.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarViewExampleResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableCalendarViewGetGroupedRowsResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableCalendarViewGetGroupedRows404Response
  /api/database/views/decoration/{view_decoration_id}:
    get:
      tags:
        - Database table view decorations
      operationId: DatabaseTableViewDecorations_getViewDecoration
      security:
        - JWT: []
      description: >-
        Returns the existing view decoration if the current user has access to
        the related database's workspace.
      parameters:
        - description: Returns the view decoration related to the provided id.
          in: path
          name: view_decoration_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decorator_Value_Provider_TypeViewDecoration
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewDecorationsGetViewDecorationResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewDecorationsGetViewDecoration404Response
    patch:
      tags:
        - Database table view decorations
      operationId: DatabaseTableViewDecorations_updateDecoration
      security:
        - JWT: []
      description: >-
        Updates the existing decoration if the authorized user has access to the
        related database's workspace.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Updates the view decoration related to the provided value.
          in: path
          name: view_decoration_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/PatchedDecorator_Value_Provider_TypeUpdateViewDecoration
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/PatchedDecorator_Value_Provider_TypeUpdateViewDecoration
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/PatchedDecorator_Value_Provider_TypeUpdateViewDecoration
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Decorator_Value_Provider_TypeViewDecoration
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewDecorationsUpdateDecorationResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewDecorationsUpdateDecoration404Response
    delete:
      tags:
        - Database table view decorations
      operationId: DatabaseTableViewDecorations_deleteExistingDecoration
      security:
        - JWT: []
      description: >-
        Deletes the existing decoration if the authorized user has access to the
        related database's workspace.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Deletes the decoration related to the provided value.
          in: path
          name: view_decoration_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewDecorationsDeleteExistingDecorationResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewDecorationsDeleteExistingDecoration404Response
  /api/database/views/filter-group/{filter_group_id}:
    get:
      tags:
        - Database table view filters
      operationId: DatabaseTableViewFilters_getFilterGroupById
      security:
        - JWT: []
      description: >-
        Returns the existing view filter group with the given
        `view_filter_group_id`.
      parameters:
        - in: path
          name: filter_group_id
          schema:
            type: string
            pattern: ^[0-9]+$
          required: true
        - description: Teh ID of the view filter group to return.
          in: path
          name: view_filter_group_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewFilterGroup'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewFiltersGetFilterGroupByIdResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewFiltersGetFilterGroupById404Response
    patch:
      tags:
        - Database table view filters
      operationId: DatabaseTableViewFilters_updateFilterGroup
      security:
        - JWT: []
      description: Updates the existing filter group with the given `view_filter_group_id`.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - in: path
          name: filter_group_id
          schema:
            type: string
            pattern: ^[0-9]+$
          required: true
        - description: The ID of the view filter group to update.
          in: path
          name: view_filter_group_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewFilterGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewFilterGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewFilterGroup'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewFilterGroup'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewFiltersUpdateFilterGroupResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewFiltersUpdateFilterGroup404Response
    delete:
      tags:
        - Database table view filters
      operationId: DatabaseTableViewFilters_deleteFilterGroup
      security:
        - JWT: []
      description: Deletes the existing filter group with the given `view_filter_group_id`.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - in: path
          name: filter_group_id
          schema:
            type: string
            pattern: ^[0-9]+$
          required: true
        - description: The ID of the view filter group to delete.
          in: path
          name: view_filter_group_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewFiltersDeleteFilterGroupResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewFiltersDeleteFilterGroup404Response
  /api/database/views/filter/{view_filter_id}:
    get:
      tags:
        - Database table view filters
      operationId: DatabaseTableViewFilters_getViewFilter
      security:
        - JWT: []
      description: Returns the existing view filter.
      parameters:
        - description: The ID of the view filter to return.
          in: path
          name: view_filter_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewFilter'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewFiltersGetViewFilterResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewFiltersGetViewFilter404Response
    patch:
      tags:
        - Database table view filters
      operationId: DatabaseTableViewFilters_updateExistingFilter
      security:
        - JWT: []
      description: Updates the existing filter.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: The ID of the view filter to update.
          in: path
          name: view_filter_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewFilter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewFilter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewFilter'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewFilter'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewFiltersUpdateExistingFilterResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewFiltersUpdateExistingFilter404Response
    delete:
      tags:
        - Database table view filters
      operationId: DatabaseTableViewFilters_deleteFilter
      security:
        - JWT: []
      description: >-
        Deletes the existing filter if the authorized user has access to the
        related database's workspace.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: The ID of the view filter to delete.
          in: path
          name: view_filter_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewFiltersDeleteFilterResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewFiltersDeleteFilter404Response
  /api/database/views/form/{slug}/submit:
    get:
      tags:
        - Database table form view
      operationId: DatabaseTableFormView_getFormMetadataBySlug
      security:
        - JWT: []
        - {}
      description: >-
        Returns the metadata related to the form view if the form is publicly
        shared or if the user has access to the related workspace. This data can
        be used to construct a form with the right fields.
      parameters:
        - description: The slug related to the form form.
          in: path
          name: slug
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicFormView'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableFormViewGetFormMetadataBySlugResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableFormViewGetFormMetadataBySlug404Response
    post:
      tags:
        - Database table form view
      operationId: DatabaseTableFormView_submitForm
      security:
        - JWT: []
        - {}
      description: >-
        Submits the form if the form is publicly shared or if the user has
        access to the related workspace. The provided data will be validated
        based on the fields that are in the form and the rules per field. If
        valid, a new row will be created in the table.
      parameters:
        - description: The slug related to the form.
          in: path
          name: slug
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExampleRowRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExampleRowRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExampleRowRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormViewSubmitted'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableFormViewSubmitFormResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableFormViewSubmitForm404Response
  /api/database/views/form/{slug}/upload-file:
    post:
      tags:
        - Database table form view
      operationId: DatabaseTableFormView_uploadFile
      security:
        - JWT: []
        - {}
      description: >-
        Uploads a file anonymously to Baserow by uploading the file contents
        directly. A `file` multipart is expected containing the file contents.
      parameters:
        - description: >-
            Submits files only if the view with the provided slughas a public
            file field.
          in: path
          name: slug
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFile'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableFormViewUploadFileResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableFormViewUploadFile401Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableFormViewUploadFile404Response
  /api/database/views/gallery/{slug}/public/rows:
    get:
      tags:
        - Database table gallery view
      operationId: DatabaseTableGalleryView_listPublicRows
      security:
        - JWT: []
        - {}
      description: >+
        Lists the requested rows of the view's table related to the provided
        `slug` if the gallery view is public.The response is paginated either by
        a limit/offset or page/size style. The style depends on the provided GET
        parameters. The properties of the returned rows depends on which fields
        the table has. For a complete overview of fields use the
        **list_database_table_fields** endpoint to list them all. In the example
        all field types are listed, but normally the number in field_{id} key is
        going to be the id of the field. The value is what the user has provided
        and the format of it depends on the fields type.

      parameters:
        - description: If provided only the count will be returned.
          in: query
          name: count
          schema:
            type: boolean
        - description: >-
            All the fields are included in the response by default. You can
            select a subset of fields by providing the exclude_fields query
            parameter. If you for example provide the following GET parameter
            `exclude_fields=field_1,field_2` then the fields with id `1` and id
            `2` are going to be excluded from the selection and response. 
          in: query
          name: exclude_fields
          schema:
            type: string
        - description: >-
            The rows can optionally be filtered by the same view filters
            available for the views. Multiple filters can be provided if they
            follow the same format. The field and filter variable indicate how
            to filter and the value indicates where to filter on.


            Please note that if the `filters` parameter is provided, this
            parameter will be ignored. 


            For example if you provide the following GET parameter
            `filter__field_1__equal=test` then only rows where the value of
            field_1 is equal to test are going to be returned.


            The following filters are available: equal, not_equal,
            filename_contains, files_lower_than, has_file_type, contains,
            contains_not, contains_word, doesnt_contain_word,
            length_is_lower_than, higher_than, lower_than, is_even_and_whole,
            date_equal, date_before, date_before_or_equal, date_after_days_ago,
            date_after, date_after_or_equal, date_not_equal, date_equals_today,
            date_before_today, date_after_today, date_within_days,
            date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week,
            date_equals_month, date_equals_day_of_month, date_equals_year,
            single_select_equal, single_select_not_equal, link_row_has,
            link_row_has_not, link_row_contains, link_row_not_contains, boolean,
            empty, not_empty, multiple_select_has, multiple_select_has_not,
            multiple_collaborators_has, multiple_collaborators_has_not, user_is,
            user_is_not.
          in: query
          name: filter__{field}__{filter}
          schema:
            type: string
        - description: >+
            `AND`: Indicates that the rows must match all the provided filters.

            `OR`: Indicates that the rows only have to match one of the filters.


            This works only if two or more filters are provided.Please note that
            if the `filters` parameter is provided, this parameter will be
            ignored. 

          in: query
          name: filter_type
          schema:
            type: string
        - description: >-
            A JSON serialized string containing the filter tree to apply to this
            view. The filter tree is a nested structure containing the filters
            that need to be applied. 


            Please note that if this parameter is provided, all other
            `filter__{field}__{filter}` will be ignored, as well as the
            `filter_type` parameter. 


            An example of a valid filter tree is the following:`{"filter_type":
            "AND", "filters": [{"field": 1, "type": "equal", "value":
            "test"}]}`.


            The following filters are available: equal, not_equal,
            filename_contains, files_lower_than, has_file_type, contains,
            contains_not, contains_word, doesnt_contain_word,
            length_is_lower_than, higher_than, lower_than, is_even_and_whole,
            date_equal, date_before, date_before_or_equal, date_after_days_ago,
            date_after, date_after_or_equal, date_not_equal, date_equals_today,
            date_before_today, date_after_today, date_within_days,
            date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week,
            date_equals_month, date_equals_day_of_month, date_equals_year,
            single_select_equal, single_select_not_equal, link_row_has,
            link_row_has_not, link_row_contains, link_row_not_contains, boolean,
            empty, not_empty, multiple_select_has, multiple_select_has_not,
            multiple_collaborators_has, multiple_collaborators_has_not, user_is,
            user_is_not.
          in: query
          name: filters
          schema:
            type: string
        - description: >-
            A comma separated list allowing the values of `field_options` which
            will add the object/objects with the same name to the response if
            included. The `field_options` object contains user defined view
            settings for each field. For example the field's width is included
            in here.
          in: query
          name: include
          schema:
            type: string
        - description: >-
            All the fields are included in the response by default. You can
            select a subset of fields by providing the fields query parameter.
            If you for example provide the following GET parameter
            `include_fields=field_1,field_2` then only the fields with id `1`
            and id `2` are going to be selected and included in the response.
          in: query
          name: include_fields
          schema:
            type: string
        - description: Defines how many rows should be returned.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Can only be used in combination with the `limit` parameter and
            defines from which offset the rows should be returned.
          in: query
          name: offset
          schema:
            type: integer
        - description: >-
            Optionally the rows can be ordered by provided field ids separated
            by comma. By default a field is ordered in ascending (A-Z) order,
            but by prepending the field with a '-' it can be ordered descending
            (Z-A).
          in: query
          name: order_by
          schema:
            type: string
        - description: >-
            Defines which page of rows should be returned. Either the `page` or
            `limit` can be provided, not both.
          in: query
          name: page
          schema:
            type: integer
        - description: >-
            If provided only rows with data that matches the search query are
            going to be returned.
          in: query
          name: search
          schema:
            type: string
        - description: >-
            If provided, allows API consumers to determine what kind of search
            experience they wish to have. If the default `full-text-with-count`
            is used, then Postgres full-text search is used. If `compat` is
            provided then the search term will be exactly searched for including
            whitespace on each cell. This is the Baserow legacy search
            behaviour.
          in: query
          name: search_mode
          schema:
            type: string
        - description: >-
            Can only be used in combination with the `page` parameter and
            defines how many rows should be returned.
          in: query
          name: size
          schema:
            type: integer
        - description: Returns only rows that belong to the related view.
          in: path
          name: slug
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PublicPaginationSerializerWithGalleryViewFieldOptionsExampleRowResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableGalleryViewListPublicRowsResponse
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableGalleryViewListPublicRows401Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableGalleryViewListPublicRows404Response
  /api/database/views/gallery/{view_id}:
    get:
      tags:
        - Database table gallery view
      operationId: DatabaseTableGalleryView_listRowsByViewId
      security:
        - JWT: []
        - {}
      description: >-
        Lists the requested rows of the view's table related to the provided
        `view_id` if the authorized user has access to the database's workspace.
        The response is paginated by a limit/offset style.
      parameters:
        - description: If provided only the count will be returned.
          in: query
          name: count
          schema:
            type: boolean
        - description: >-
            The rows can optionally be filtered by the same view filters
            available for the views. Multiple filters can be provided if they
            follow the same format. The field and filter variable indicate how
            to filter and the value indicates where to filter on.


            Please note that if the `filters` parameter is provided, this
            parameter will be ignored. 


            For example if you provide the following GET parameter
            `filter__field_1__equal=test` then only rows where the value of
            field_1 is equal to test are going to be returned.


            The following filters are available: equal, not_equal,
            filename_contains, files_lower_than, has_file_type, contains,
            contains_not, contains_word, doesnt_contain_word,
            length_is_lower_than, higher_than, lower_than, is_even_and_whole,
            date_equal, date_before, date_before_or_equal, date_after_days_ago,
            date_after, date_after_or_equal, date_not_equal, date_equals_today,
            date_before_today, date_after_today, date_within_days,
            date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week,
            date_equals_month, date_equals_day_of_month, date_equals_year,
            single_select_equal, single_select_not_equal, link_row_has,
            link_row_has_not, link_row_contains, link_row_not_contains, boolean,
            empty, not_empty, multiple_select_has, multiple_select_has_not,
            multiple_collaborators_has, multiple_collaborators_has_not, user_is,
            user_is_not.Please note that by passing the filter parameters the
            view filters saved for the view itself will be ignored.
          in: query
          name: filter__{field}__{filter}
          schema:
            type: string
        - description: >+
            `AND`: Indicates that the rows must match all the provided filters.

            `OR`: Indicates that the rows only have to match one of the filters.


            This works only if two or more filters are provided.Please note that
            if the `filters` parameter is provided, this parameter will be
            ignored. 

          in: query
          name: filter_type
          schema:
            type: string
        - description: >-
            A JSON serialized string containing the filter tree to apply to this
            view. The filter tree is a nested structure containing the filters
            that need to be applied. 


            An example of a valid filter tree is the following:`{"filter_type":
            "AND", "filters": [{"field": 1, "type": "equal", "value":
            "test"}]}`.


            The following filters are available: equal, not_equal,
            filename_contains, files_lower_than, has_file_type, contains,
            contains_not, contains_word, doesnt_contain_word,
            length_is_lower_than, higher_than, lower_than, is_even_and_whole,
            date_equal, date_before, date_before_or_equal, date_after_days_ago,
            date_after, date_after_or_equal, date_not_equal, date_equals_today,
            date_before_today, date_after_today, date_within_days,
            date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week,
            date_equals_month, date_equals_day_of_month, date_equals_year,
            single_select_equal, single_select_not_equal, link_row_has,
            link_row_has_not, link_row_contains, link_row_not_contains, boolean,
            empty, not_empty, multiple_select_has, multiple_select_has_not,
            multiple_collaborators_has, multiple_collaborators_has_not, user_is,
            user_is_not.Please note that by passing the filters parameter the
            view filters saved for the view itself will be ignored.
          in: query
          name: filters
          schema:
            type: string
        - description: >-
            A comma separated list allowing the values of `field_options` and
            `row_metadata` which will add the object/objects with the same name
            to the response if included. The `field_options` object contains
            user defined view settings for each field. For example the field's
            width is included in here. The `row_metadata` object includes extra
            row specific data on a per row basis.
          in: query
          name: include
          schema:
            type: string
        - description: Defines how many rows should be returned.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Can only be used in combination with the `limit` parameter and
            defines from which offset the rows should be returned.
          in: query
          name: offset
          schema:
            type: integer
        - description: >-
            Optionally the rows can be ordered by provided field ids separated
            by comma. By default a field is ordered in ascending (A-Z) order,
            but by prepending the field with a '-' it can be ordered descending
            (Z-A).
          in: query
          name: order_by
          schema:
            type: string
        - description: >-
            If provided only rows with data that matches the search query are
            going to be returned.
          in: query
          name: search
          schema:
            type: string
        - description: >-
            If provided, allows API consumers to determine what kind of search
            experience they wish to have. If the default `full-text-with-count`
            is used, then Postgres full-text search is used. If `compat` is
            provided then the search term will be exactly searched for including
            whitespace on each cell. This is the Baserow legacy search
            behaviour.
          in: query
          name: search_mode
          schema:
            type: string
        - description: Returns only rows that belong to the related view's table.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaginationSerializerWithGalleryViewFieldOptionsExampleRowResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableGalleryViewListRowsByViewIdResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableGalleryViewListRowsByViewId404Response
  /api/database/views/grid/{slug}/public/rows:
    get:
      tags:
        - Database table grid view
      operationId: DatabaseTableGridView_listPublicRows
      security:
        - JWT: []
        - {}
      description: >+
        Lists the requested rows of the view's table related to the provided
        `slug` if the grid view is public.The response is paginated either by a
        limit/offset or page/size style. The style depends on the provided GET
        parameters. The properties of the returned rows depends on which fields
        the table has. For a complete overview of fields use the
        **list_database_table_fields** endpoint to list them all. In the example
        all field types are listed, but normally the number in field_{id} key is
        going to be the id of the field. The value is what the user has provided
        and the format of it depends on the fields type.

      parameters:
        - description: If provided only the count will be returned.
          in: query
          name: count
          schema:
            type: boolean
        - description: >-
            All the fields are included in the response by default. You can
            select a subset of fields by providing the exclude_fields query
            parameter. If you for example provide the following GET parameter
            `exclude_fields=field_1,field_2` then the fields with id `1` and id
            `2` are going to be excluded from the selection and response. 
          in: query
          name: exclude_fields
          schema:
            type: string
        - description: >-
            The rows can optionally be filtered by the same view filters
            available for the views. Multiple filters can be provided if they
            follow the same format. The field and filter variable indicate how
            to filter and the value indicates where to filter on.


            Please note that if the `filters` parameter is provided, this
            parameter will be ignored. 


            For example if you provide the following GET parameter
            `filter__field_1__equal=test` then only rows where the value of
            field_1 is equal to test are going to be returned.


            The following filters are available: equal, not_equal,
            filename_contains, files_lower_than, has_file_type, contains,
            contains_not, contains_word, doesnt_contain_word,
            length_is_lower_than, higher_than, lower_than, is_even_and_whole,
            date_equal, date_before, date_before_or_equal, date_after_days_ago,
            date_after, date_after_or_equal, date_not_equal, date_equals_today,
            date_before_today, date_after_today, date_within_days,
            date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week,
            date_equals_month, date_equals_day_of_month, date_equals_year,
            single_select_equal, single_select_not_equal, link_row_has,
            link_row_has_not, link_row_contains, link_row_not_contains, boolean,
            empty, not_empty, multiple_select_has, multiple_select_has_not,
            multiple_collaborators_has, multiple_collaborators_has_not, user_is,
            user_is_not.
          in: query
          name: filter__{field}__{filter}
          schema:
            type: string
        - description: >+
            `AND`: Indicates that the rows must match all the provided filters.

            `OR`: Indicates that the rows only have to match one of the filters.


            This works only if two or more filters are provided.Please note that
            if the `filters` parameter is provided, this parameter will be
            ignored. 

          in: query
          name: filter_type
          schema:
            type: string
        - description: >-
            A JSON serialized string containing the filter tree to apply to this
            view. The filter tree is a nested structure containing the filters
            that need to be applied. 


            Please note that if this parameter is provided, all other
            `filter__{field}__{filter}` will be ignored, as well as the
            `filter_type` parameter. 


            An example of a valid filter tree is the following:`{"filter_type":
            "AND", "filters": [{"field": 1, "type": "equal", "value":
            "test"}]}`.


            The following filters are available: equal, not_equal,
            filename_contains, files_lower_than, has_file_type, contains,
            contains_not, contains_word, doesnt_contain_word,
            length_is_lower_than, higher_than, lower_than, is_even_and_whole,
            date_equal, date_before, date_before_or_equal, date_after_days_ago,
            date_after, date_after_or_equal, date_not_equal, date_equals_today,
            date_before_today, date_after_today, date_within_days,
            date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week,
            date_equals_month, date_equals_day_of_month, date_equals_year,
            single_select_equal, single_select_not_equal, link_row_has,
            link_row_has_not, link_row_contains, link_row_not_contains, boolean,
            empty, not_empty, multiple_select_has, multiple_select_has_not,
            multiple_collaborators_has, multiple_collaborators_has_not, user_is,
            user_is_not.
          in: query
          name: filters
          schema:
            type: string
        - description: >-
            Optionally the rows can be grouped by provided field ids separated
            by comma. By default no groups are applied. This doesn't actually
            responds with the rows groups, this is just what's needed for the
            Baserow group by feature.
          in: query
          name: group_by
          schema:
            type: string
        - description: >-
            A comma separated list allowing the values of `field_options` which
            will add the object/objects with the same name to the response if
            included. The `field_options` object contains user defined view
            settings for each field. For example the field's width is included
            in here.
          in: query
          name: include
          schema:
            type: string
        - description: >-
            All the fields are included in the response by default. You can
            select a subset of fields by providing the fields query parameter.
            If you for example provide the following GET parameter
            `include_fields=field_1,field_2` then only the fields with id `1`
            and id `2` are going to be selected and included in the response.
          in: query
          name: include_fields
          schema:
            type: string
        - description: Defines how many rows should be returned.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Can only be used in combination with the `limit` parameter and
            defines from which offset the rows should be returned.
          in: query
          name: offset
          schema:
            type: integer
        - description: >-
            Optionally the rows can be ordered by provided field ids separated
            by comma. By default a field is ordered in ascending (A-Z) order,
            but by prepending the field with a '-' it can be ordered descending
            (Z-A).
          in: query
          name: order_by
          schema:
            type: string
        - description: >-
            Defines which page of rows should be returned. Either the `page` or
            `limit` can be provided, not both.
          in: query
          name: page
          schema:
            type: integer
        - description: >-
            If provided only rows with data that matches the search query are
            going to be returned.
          in: query
          name: search
          schema:
            type: string
        - description: >-
            If provided, allows API consumers to determine what kind of search
            experience they wish to have. If the default `full-text-with-count`
            is used, then Postgres full-text search is used. If `compat` is
            provided then the search term will be exactly searched for including
            whitespace on each cell. This is the Baserow legacy search
            behaviour.
          in: query
          name: search_mode
          schema:
            type: string
        - description: >-
            Can only be used in combination with the `page` parameter and
            defines how many rows should be returned.
          in: query
          name: size
          schema:
            type: integer
        - description: Returns only rows that belong to the related view.
          in: path
          name: slug
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PublicPaginationSerializerWithGridViewFieldOptionsExampleRowResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableGridViewListPublicRowsResponse
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableGridViewListPublicRows401Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableGridViewListPublicRows404Response
  /api/database/views/grid/{view_id}:
    get:
      tags:
        - Database table grid view
      operationId: DatabaseTableGridView_getViewRows
      security:
        - JWT: []
        - {}
      description: >-
        Lists the requested rows of the view's table related to the provided
        `view_id` if the authorized user has access to the database's workspace.
        The response is paginated either by a limit/offset or page/size style.
        The style depends on the provided GET parameters. The properties of the
        returned rows depends on which fields the table has. For a complete
        overview of fields use the **list_database_table_fields** endpoint to
        list them all. In the example all field types are listed, but normally
        the number in field_{id} key is going to be the id of the field. The
        value is what the user has provided and the format of it depends on the
        fields type.


        The filters and sortings are automatically applied. To get a full
        overview of the applied filters and sortings you can use the
        `list_database_table_view_filters` and
        `list_database_table_view_sortings` endpoints.
      parameters:
        - description: If provided only the count will be returned.
          in: query
          name: count
          schema:
            type: boolean
        - description: >-
            All the fields are included in the response by default. You can
            select a subset of fields by providing the exclude_fields query
            parameter. If you for example provide the following GET parameter
            `exclude_fields=field_1,field_2` then the fields with id `1` and id
            `2` are going to be excluded from the selection and response. 
          in: query
          name: exclude_fields
          schema:
            type: string
        - description: >-
            The rows can optionally be filtered by the same view filters
            available for the views. Multiple filters can be provided if they
            follow the same format. The field and filter variable indicate how
            to filter and the value indicates where to filter on.


            Please note that if the `filters` parameter is provided, this
            parameter will be ignored. 


            For example if you provide the following GET parameter
            `filter__field_1__equal=test` then only rows where the value of
            field_1 is equal to test are going to be returned.


            The following filters are available: equal, not_equal,
            filename_contains, files_lower_than, has_file_type, contains,
            contains_not, contains_word, doesnt_contain_word,
            length_is_lower_than, higher_than, lower_than, is_even_and_whole,
            date_equal, date_before, date_before_or_equal, date_after_days_ago,
            date_after, date_after_or_equal, date_not_equal, date_equals_today,
            date_before_today, date_after_today, date_within_days,
            date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week,
            date_equals_month, date_equals_day_of_month, date_equals_year,
            single_select_equal, single_select_not_equal, link_row_has,
            link_row_has_not, link_row_contains, link_row_not_contains, boolean,
            empty, not_empty, multiple_select_has, multiple_select_has_not,
            multiple_collaborators_has, multiple_collaborators_has_not, user_is,
            user_is_not.Please note that by passing the filter parameters the
            view filters saved for the view itself will be ignored.
          in: query
          name: filter__{field}__{filter}
          schema:
            type: string
        - description: >+
            `AND`: Indicates that the rows must match all the provided filters.

            `OR`: Indicates that the rows only have to match one of the filters.


            This works only if two or more filters are provided.Please note that
            if the `filters` parameter is provided, this parameter will be
            ignored. 

          in: query
          name: filter_type
          schema:
            type: string
        - description: >-
            A JSON serialized string containing the filter tree to apply to this
            view. The filter tree is a nested structure containing the filters
            that need to be applied. 


            An example of a valid filter tree is the following:`{"filter_type":
            "AND", "filters": [{"field": 1, "type": "equal", "value":
            "test"}]}`.


            The following filters are available: equal, not_equal,
            filename_contains, files_lower_than, has_file_type, contains,
            contains_not, contains_word, doesnt_contain_word,
            length_is_lower_than, higher_than, lower_than, is_even_and_whole,
            date_equal, date_before, date_before_or_equal, date_after_days_ago,
            date_after, date_after_or_equal, date_not_equal, date_equals_today,
            date_before_today, date_after_today, date_within_days,
            date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week,
            date_equals_month, date_equals_day_of_month, date_equals_year,
            single_select_equal, single_select_not_equal, link_row_has,
            link_row_has_not, link_row_contains, link_row_not_contains, boolean,
            empty, not_empty, multiple_select_has, multiple_select_has_not,
            multiple_collaborators_has, multiple_collaborators_has_not, user_is,
            user_is_not.Please note that by passing the filters parameter the
            view filters saved for the view itself will be ignored.
          in: query
          name: filters
          schema:
            type: string
        - description: >-
            A comma separated list allowing the values of `field_options` and
            `row_metadata` which will add the object/objects with the same name
            to the response if included. The `field_options` object contains
            user defined view settings for each field. For example the field's
            width is included in here. The `row_metadata` object includes extra
            row specific data on a per row basis.
          in: query
          name: include
          schema:
            type: string
        - description: >-
            All the fields are included in the response by default. You can
            select a subset of fields by providing the fields query parameter.
            If you for example provide the following GET parameter
            `include_fields=field_1,field_2` then only the fields with id `1`
            and id `2` are going to be selected and included in the response.
          in: query
          name: include_fields
          schema:
            type: string
        - description: Defines how many rows should be returned.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Can only be used in combination with the `limit` parameter and
            defines from which offset the rows should be returned.
          in: query
          name: offset
          schema:
            type: integer
        - description: >-
            Optionally the rows can be ordered by provided field ids separated
            by comma. By default a field is ordered in ascending (A-Z) order,
            but by prepending the field with a '-' it can be ordered descending
            (Z-A).
          in: query
          name: order_by
          schema:
            type: string
        - description: >-
            Defines which page of rows should be returned. Either the `page` or
            `limit` can be provided, not both.
          in: query
          name: page
          schema:
            type: integer
        - description: >-
            If provided only rows with data that matches the search query are
            going to be returned.
          in: query
          name: search
          schema:
            type: string
        - description: >-
            If provided, allows API consumers to determine what kind of search
            experience they wish to have. If the default `full-text-with-count`
            is used, then Postgres full-text search is used. If `compat` is
            provided then the search term will be exactly searched for including
            whitespace on each cell. This is the Baserow legacy search
            behaviour.
          in: query
          name: search_mode
          schema:
            type: string
        - description: >-
            Can only be used in combination with the `page` parameter and
            defines how many rows should be returned.
          in: query
          name: size
          schema:
            type: integer
        - description: Returns only rows that belong to the related view's table.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaginationSerializerWithGridViewFieldOptionsExampleRowResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableGridViewGetViewRowsResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableGridViewGetViewRows404Response
    post:
      tags:
        - Database table grid view
      operationId: DatabaseTableGridView_getFilteredData
      security:
        - JWT: []
      description: >-
        Lists only the rows and fields that match the request. Only the rows
        with the ids that are in the `row_ids` list are going to be returned.
        Same goes for the fields, only the fields with the ids in the
        `field_ids` are going to be returned. This endpoint could be used to
        refresh data after changes something. For example in the web frontend
        after changing a field type, the data of the related cells will be
        refreshed using this endpoint. In the example all field types are
        listed, but normally  the number in field_{id} key is going to be the id
        of the field. The value is what the user has provided and the format of
        it depends on the fields type.
      parameters:
        - description: Returns only rows that belong to the related view's table.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GridViewFilter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GridViewFilter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GridViewFilter'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableGridViewGetFilteredDataResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableGridViewGetFilteredData400Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableGridViewGetFilteredData404Response
  /api/database/views/grid/{view_id}/aggregation/{field_id}:
    get:
      tags:
        - Database table grid view
      operationId: DatabaseTableGridView_computeAggregation
      security:
        - JWT: []
        - {}
      description: >-
        Computes the aggregation of all the values for a specified field from
        the selected grid view. You must select the aggregation type by setting
        the `type` GET parameter. If filters are configured for the selected
        view, the aggregation is calculated only on filtered rows. You need to
        have read permissions on the view to request an aggregation.
      parameters:
        - description: The field id you want to aggregate
          in: path
          name: field_id
          schema:
            type: integer
          required: true
        - description: >-
            if `include` is set to `total`, the total row count will be returned
            with the result.
          in: query
          name: include
          schema:
            type: string
        - description: >-
            The aggregation type you want. Available aggregation types:
            empty_count, not_empty_count, unique_count, min, max, sum, average,
            median, decile, variance, std_dev
          in: query
          name: type
          schema:
            type: string
        - description: Select the view you want the aggregation for.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableGridViewComputeAggregationResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableGridViewComputeAggregation400Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableGridViewComputeAggregation404Response
  /api/database/views/grid/{view_id}/aggregations:
    get:
      tags:
        - Database table grid view
      operationId: DatabaseTableGridView_getFieldAggregations
      security:
        - JWT: []
        - {}
      description: >-
        Returns all field aggregations values previously defined for this grid
        view. If filters exist for this view, the aggregations are computed only
        on filtered rows.You need to have read permissions on the view to
        request aggregations.
      parameters:
        - description: >-
            The aggregation can optionally be filtered by the same view filters
            available for the views. Multiple filters can be provided if they
            follow the same format. The field and filter variable indicate how
            to filter and the value indicates where to filter on.


            Please note that if the `filters` parameter is provided, this
            parameter will be ignored. 


            For example if you provide the following GET parameter
            `filter__field_1__equal=test` then only rows where the value of
            field_1 is equal to test are going to be returned.


            The following filters are available: equal, not_equal,
            filename_contains, files_lower_than, has_file_type, contains,
            contains_not, contains_word, doesnt_contain_word,
            length_is_lower_than, higher_than, lower_than, is_even_and_whole,
            date_equal, date_before, date_before_or_equal, date_after_days_ago,
            date_after, date_after_or_equal, date_not_equal, date_equals_today,
            date_before_today, date_after_today, date_within_days,
            date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week,
            date_equals_month, date_equals_day_of_month, date_equals_year,
            single_select_equal, single_select_not_equal, link_row_has,
            link_row_has_not, link_row_contains, link_row_not_contains, boolean,
            empty, not_empty, multiple_select_has, multiple_select_has_not,
            multiple_collaborators_has, multiple_collaborators_has_not, user_is,
            user_is_not.Please note that by passing the filter parameters the
            view filters saved for the view itself will be ignored.
          in: query
          name: filter__{field}__{filter}
          schema:
            type: string
        - description: >+
            `AND`: Indicates that the aggregated rows must match all the
            provided filters.

            `OR`: Indicates that the aggregated rows only have to match one of
            the filters.


            This works only if two or more filters are provided.Please note that
            if the `filters` parameter is provided, this parameter will be
            ignored. 

          in: query
          name: filter_type
          schema:
            type: string
        - description: >-
            A JSON serialized string containing the filter tree to apply for the
            aggregation. The filter tree is a nested structure containing the
            filters that need to be applied. 


            An example of a valid filter tree is the following:`{"filter_type":
            "AND", "filters": [{"field": 1, "type": "equal", "value":
            "test"}]}`.


            The following filters are available: equal, not_equal,
            filename_contains, files_lower_than, has_file_type, contains,
            contains_not, contains_word, doesnt_contain_word,
            length_is_lower_than, higher_than, lower_than, is_even_and_whole,
            date_equal, date_before, date_before_or_equal, date_after_days_ago,
            date_after, date_after_or_equal, date_not_equal, date_equals_today,
            date_before_today, date_after_today, date_within_days,
            date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week,
            date_equals_month, date_equals_day_of_month, date_equals_year,
            single_select_equal, single_select_not_equal, link_row_has,
            link_row_has_not, link_row_contains, link_row_not_contains, boolean,
            empty, not_empty, multiple_select_has, multiple_select_has_not,
            multiple_collaborators_has, multiple_collaborators_has_not, user_is,
            user_is_not.Please note that by passing the filters parameter the
            view filters saved for the view itself will be ignored.
          in: query
          name: filters
          schema:
            type: string
        - description: >-
            if `include` is set to `total`, the total row count will be returned
            with the result.
          in: query
          name: include
          schema:
            type: string
        - description: If provided the aggregations are calculated only for matching rows.
          in: query
          name: search
          schema:
            type: string
        - description: >-
            If provided, allows API consumers to determine what kind of search
            experience they wish to have. If the default `full-text-with-count`
            is used, then Postgres full-text search is used. If `compat` is
            provided then the search term will be exactly searched for including
            whitespace on each cell. This is the Baserow legacy search
            behaviour.
          in: query
          name: search_mode
          schema:
            type: string
        - description: Select the view you want the aggregations for.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableGridViewGetFieldAggregationsResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableGridViewGetFieldAggregations400Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableGridViewGetFieldAggregations404Response
  /api/database/views/group_by/{view_group_by_id}:
    get:
      tags:
        - Database table view groupings
      operationId: DatabaseTableViewGroupings_getViewGroupBy
      security:
        - JWT: []
      description: >-
        Returns the existing view group by if the authorized user has access to
        the related database's workspace.
      parameters:
        - description: Returns the view group by related to the provided value.
          in: path
          name: view_group_by_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewGroupBy'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewGroupingsGetViewGroupByResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewGroupingsGetViewGroupBy404Response
    patch:
      tags:
        - Database table view groupings
      operationId: DatabaseTableViewGroupings_updateGroupBy
      security:
        - JWT: []
      description: >-
        Updates the existing group by if the authorized user has access to the
        related database's workspace.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Updates the view group by related to the provided value.
          in: path
          name: view_group_by_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewGroupBy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewGroupBy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewGroupBy'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewGroupBy'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewGroupingsUpdateGroupByResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewGroupingsUpdateGroupBy404Response
    delete:
      tags:
        - Database table view groupings
      operationId: DatabaseTableViewGroupings_deleteGroupBy
      security:
        - JWT: []
      description: >-
        Deletes the existing group by if the authorized user has access to the
        related database's workspace.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Deletes the group by related to the provided value.
          in: path
          name: view_group_by_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewGroupingsDeleteGroupByResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewGroupingsDeleteGroupBy404Response
  /api/database/views/kanban/{slug}/public/rows:
    get:
      tags:
        - Database table kanban view
      operationId: DatabaseTableKanbanView_getPublicRowsBySlug
      security:
        - JWT: []
        - {}
      description: >-
        Responds with serialized rows grouped by the view's single select field
        options related to the `slug` if the kanban view is publicly shared.
        Additional query parameters can be provided to control the `limit` and
        `offset` per select option. 


        This is a **premium** feature.
      parameters:
        - description: >-
            The rows can optionally be filtered by the same view filters
            available for the views. Multiple filters can be provided if they
            follow the same format. The field and filter variable indicate how
            to filter and the value indicates where to filter on.


            Please note that if the `filters` parameter is provided, this
            parameter will be ignored. 


            For example if you provide the following GET parameter
            `filter__field_1__equal=test` then only rows where the value of
            field_1 is equal to test are going to be returned.


            The following filters are available: equal, not_equal,
            filename_contains, files_lower_than, has_file_type, contains,
            contains_not, contains_word, doesnt_contain_word,
            length_is_lower_than, higher_than, lower_than, is_even_and_whole,
            date_equal, date_before, date_before_or_equal, date_after_days_ago,
            date_after, date_after_or_equal, date_not_equal, date_equals_today,
            date_before_today, date_after_today, date_within_days,
            date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week,
            date_equals_month, date_equals_day_of_month, date_equals_year,
            single_select_equal, single_select_not_equal, link_row_has,
            link_row_has_not, link_row_contains, link_row_not_contains, boolean,
            empty, not_empty, multiple_select_has, multiple_select_has_not,
            multiple_collaborators_has, multiple_collaborators_has_not, user_is,
            user_is_not.
          in: query
          name: filter__{field}__{filter}
          schema:
            type: string
        - description: >+
            `AND`: Indicates that the rows must match all the provided filters.

            `OR`: Indicates that the rows only have to match one of the filters.


            This works only if two or more filters are provided.Please note that
            if the `filters` parameter is provided, this parameter will be
            ignored. 

          in: query
          name: filter_type
          schema:
            type: string
        - description: >-
            A JSON serialized string containing the filter tree to apply to this
            view. The filter tree is a nested structure containing the filters
            that need to be applied. 


            Please note that if this parameter is provided, all other
            `filter__{field}__{filter}` will be ignored, as well as the
            `filter_type` parameter. 


            An example of a valid filter tree is the following:`{"filter_type":
            "AND", "filters": [{"field": 1, "type": "equal", "value":
            "test"}]}`.


            The following filters are available: equal, not_equal,
            filename_contains, files_lower_than, has_file_type, contains,
            contains_not, contains_word, doesnt_contain_word,
            length_is_lower_than, higher_than, lower_than, is_even_and_whole,
            date_equal, date_before, date_before_or_equal, date_after_days_ago,
            date_after, date_after_or_equal, date_not_equal, date_equals_today,
            date_before_today, date_after_today, date_within_days,
            date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week,
            date_equals_month, date_equals_day_of_month, date_equals_year,
            single_select_equal, single_select_not_equal, link_row_has,
            link_row_has_not, link_row_contains, link_row_not_contains, boolean,
            empty, not_empty, multiple_select_has, multiple_select_has_not,
            multiple_collaborators_has, multiple_collaborators_has_not, user_is,
            user_is_not.
          in: query
          name: filters
          schema:
            type: string
        - description: >-
            Defines how many rows should be returned by default. This value can
            be overwritten per select option.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Defines from which offset the rows should be returned.This value can
            be overwritten per select option.
          in: query
          name: offset
          schema:
            type: integer
        - description: >-
            Accepts multiple `select_option` parameters. If not provided, the
            rows of all select options will be returned. If one or more
            `select_option` parameters are provided, then only the rows of those
            will be included in the response.
            `?select_option=1&select_option=null` will only include the rows for
            both select option with id `1` and `null`. `?select_option=1,10,20`
            will only include the rows of select option id `1` with a limit of
            `10` and and offset of `20`.
          in: query
          name: select_option
          schema:
            type: string
        - description: Returns only rows that belong to the related view.
          in: path
          name: slug
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KanbanViewExampleResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableKanbanViewGetPublicRowsBySlugResponse
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableKanbanViewGetPublicRowsBySlug401Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableKanbanViewGetPublicRowsBySlug404Response
  /api/database/views/kanban/{view_id}:
    get:
      tags:
        - Database table kanban view
      operationId: DatabaseTableKanbanView_getSerializedRowsByViewId
      security:
        - JWT: []
        - {}
      description: >-
        Responds with serialized rows grouped by the view's single select field
        options if the user is authenticated and has access to the related
        workspace. Additional query parameters can be provided to control the
        `limit` and `offset` per select option.


        This is a **premium** feature.
      parameters:
        - description: >-
            The rows can optionally be filtered by the same view filters
            available for the views. Multiple filters can be provided if they
            follow the same format. The field and filter variable indicate how
            to filter and the value indicates where to filter on.


            Please note that if the `filters` parameter is provided, this
            parameter will be ignored. 


            For example if you provide the following GET parameter
            `filter__field_1__equal=test` then only rows where the value of
            field_1 is equal to test are going to be returned.


            The following filters are available: equal, not_equal,
            filename_contains, files_lower_than, has_file_type, contains,
            contains_not, contains_word, doesnt_contain_word,
            length_is_lower_than, higher_than, lower_than, is_even_and_whole,
            date_equal, date_before, date_before_or_equal, date_after_days_ago,
            date_after, date_after_or_equal, date_not_equal, date_equals_today,
            date_before_today, date_after_today, date_within_days,
            date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week,
            date_equals_month, date_equals_day_of_month, date_equals_year,
            single_select_equal, single_select_not_equal, link_row_has,
            link_row_has_not, link_row_contains, link_row_not_contains, boolean,
            empty, not_empty, multiple_select_has, multiple_select_has_not,
            multiple_collaborators_has, multiple_collaborators_has_not, user_is,
            user_is_not.Please note that by passing the filter parameters the
            view filters saved for the view itself will be ignored.
          in: query
          name: filter__{field}__{filter}
          schema:
            type: string
        - description: >+
            `AND`: Indicates that the rows must match all the provided filters.

            `OR`: Indicates that the rows only have to match one of the filters.


            This works only if two or more filters are provided.Please note that
            if the `filters` parameter is provided, this parameter will be
            ignored. 

          in: query
          name: filter_type
          schema:
            type: string
        - description: >-
            A JSON serialized string containing the filter tree to apply to this
            view. The filter tree is a nested structure containing the filters
            that need to be applied. 


            An example of a valid filter tree is the following:`{"filter_type":
            "AND", "filters": [{"field": 1, "type": "equal", "value":
            "test"}]}`.


            The following filters are available: equal, not_equal,
            filename_contains, files_lower_than, has_file_type, contains,
            contains_not, contains_word, doesnt_contain_word,
            length_is_lower_than, higher_than, lower_than, is_even_and_whole,
            date_equal, date_before, date_before_or_equal, date_after_days_ago,
            date_after, date_after_or_equal, date_not_equal, date_equals_today,
            date_before_today, date_after_today, date_within_days,
            date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week,
            date_equals_month, date_equals_day_of_month, date_equals_year,
            single_select_equal, single_select_not_equal, link_row_has,
            link_row_has_not, link_row_contains, link_row_not_contains, boolean,
            empty, not_empty, multiple_select_has, multiple_select_has_not,
            multiple_collaborators_has, multiple_collaborators_has_not, user_is,
            user_is_not.Please note that by passing the filters parameter the
            view filters saved for the view itself will be ignored.
          in: query
          name: filters
          schema:
            type: string
        - description: >-
            A comma separated list allowing the values of `field_options` and
            `row_metadata` which will add the object/objects with the same name
            to the response if included. The `field_options` object contains
            user defined view settings for each field. For example the field's
            width is included in here. The `row_metadata` object includes extra
            row specific data on a per row basis.
          in: query
          name: include
          schema:
            type: string
        - description: >-
            Defines how many rows should be returned by default. This value can
            be overwritten per select option.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Defines from which offset the rows should be returned.This value can
            be overwritten per select option.
          in: query
          name: offset
          schema:
            type: integer
        - description: >-
            Accepts multiple `select_option` parameters. If not provided, the
            rows of all select options will be returned. If one or more
            `select_option` parameters are provided, then only the rows of those
            will be included in the response.
            `?select_option=1&select_option=null` will only include the rows for
            both select option with id `1` and `null`. `?select_option=1,10,20`
            will only include the rows of select option id `1` with a limit of
            `10` and and offset of `20`.
          in: query
          name: select_option
          schema:
            type: string
        - description: Returns only rows that belong to the related view's table.
          in: path
          name: view_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KanbanViewExampleResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableKanbanViewGetSerializedRowsByViewIdResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableKanbanViewGetSerializedRowsByViewId404Response
  /api/database/views/sort/{view_sort_id}:
    get:
      tags:
        - Database table view sortings
      operationId: DatabaseTableViewSortings_getSortById
      security:
        - JWT: []
      description: >-
        Returns the existing view sort if the authorized user has access to the
        related database's workspace.
      parameters:
        - description: Returns the view sort related to the provided value.
          in: path
          name: view_sort_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewSort'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewSortingsGetSortByIdResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewSortingsGetSortById404Response
    patch:
      tags:
        - Database table view sortings
      operationId: DatabaseTableViewSortings_updateById
      security:
        - JWT: []
      description: >-
        Updates the existing sort if the authorized user has access to the
        related database's workspace.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Updates the view sort related to the provided value.
          in: path
          name: view_sort_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewSort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewSort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewSort'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewSort'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewSortingsUpdateByIdResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewSortingsUpdateById404Response
    delete:
      tags:
        - Database table view sortings
      operationId: DatabaseTableViewSortings_deleteById
      security:
        - JWT: []
      description: >-
        Deletes the existing sort if the authorized user has access to the
        related database's workspace.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Deletes the sort related to the provided value.
          in: path
          name: view_sort_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewSortingsDeleteByIdResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewSortingsDeleteById404Response
  /api/database/views/table/{table_id}:
    get:
      tags:
        - Database table views
      operationId: DatabaseTableViews_listTableViews
      security:
        - JWT: []
        - {}
      description: >-
        Lists all views of the table related to the provided `table_id`. If the
        workspace is related to a template, then this endpoint will be publicly
        accessible. A table can have multiple views. Each view can display the
        data in a different way. For example the `grid` view shows the in a
        spreadsheet like way. That type has custom endpoints for data retrieval
        and manipulation. In the future other views types like a calendar or
        Kanban are going to be added. Each type can have different properties.
      parameters:
        - description: >-
            A comma separated list of extra attributes to include on each view
            in the response. The supported attributes are `filters`, `sortings`
            and `decorations`. For example `include=filters,sortings` will add
            the attributes `filters` and `sortings` to every returned view,
            containing a list of the views filters and sortings respectively.
          in: query
          name: include
          schema:
            type: string
        - description: >-
            The maximum amount of views that must be returned. This endpoint
            doesn't support pagination, but if you for example just need to
            fetch the first view, you can do that by setting a limit. There
            isn't a limit by default.
          in: query
          name: limit
          schema:
            type: integer
        - description: Returns only views of the table related to the provided value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
        - description: >-
            Optionally filter on the view type. If provided, only views of that
            type will be returned.
          in: query
          name: type
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewsListTableViewsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewsListTableViews400Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewsListTableViews404Response
    post:
      tags:
        - Database table views
      operationId: DatabaseTableViews_createNewView
      security:
        - JWT: []
      description: >-
        Creates a new view for the table related to the provided `table_id`
        parameter. Depending on the type, different properties can optionally be
        set.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: >-
            A comma separated list of extra attributes to include on each view
            in the response. The supported attributes are `filters`, `sortings`
            and `decorations`. For example `include=filters,sortings` will add
            the attributes `filters` and `sortings` to every returned view,
            containing a list of the views filters and sortings respectively.
          in: query
          name: include
          schema:
            type: string
        - description: Creates a view for the table related to the provided value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewCreateView'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ViewCreateView'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ViewCreateView'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewView'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableViewsCreateNewViewResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewsCreateNewView404Response
  /api/database/views/table/{table_id}/order:
    post:
      tags:
        - Database table views
      operationId: DatabaseTableViews_reorderTableOrder
      security:
        - JWT: []
      description: >-
        Changes the order of the provided view ids to the matching position that
        the id has in the list. The order of the not provided views will be set
        to `0`.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: >-
            Updates the order of the views in the table related to the provided
            value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderViews'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderViews'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderViews'
        required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewsReorderTableOrderResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableViewsReorderTableOrder404Response
  /api/database/webhooks/{webhook_id}:
    get:
      tags:
        - Database table webhooks
      operationId: DatabaseTableWebhooks_getExistingWebhook
      security:
        - JWT: []
      description: >-
        Returns the existing webhook if the authorized user has access to the
        related database workspace.
      parameters:
        - description: Returns the webhook related to the provided value.
          in: path
          name: webhook_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableWebhook'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableWebhooksGetExistingWebhookResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableWebhooksGetExistingWebhook404Response
    patch:
      tags:
        - Database table webhooks
      operationId: DatabaseTableWebhooks_updateView
      security:
        - JWT: []
      description: >-
        Updates the existing view if the authorized user has access to the
        related database workspace.
      parameters:
        - description: Updates the webhook related to the provided value.
          in: path
          name: webhook_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTableWebhookUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTableWebhookUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTableWebhookUpdateRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableWebhook'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableWebhooksUpdateViewResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableWebhooksUpdateView404Response
    delete:
      tags:
        - Database table webhooks
      operationId: DatabaseTableWebhooks_deleteWebhook
      security:
        - JWT: []
      description: >-
        Deletes the existing webhook if the authorized user has access to the
        related database's workspace.
      parameters:
        - description: Deletes the webhook related to the provided value.
          in: path
          name: webhook_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableWebhooksDeleteWebhookResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableWebhooksDeleteWebhook404Response
  /api/database/webhooks/table/{table_id}:
    get:
      tags:
        - Database table webhooks
      operationId: DatabaseTableWebhooks_list
      security:
        - JWT: []
      description: >-
        Lists all webhooks of the table related to the provided `table_id` if
        the user has access to the related database workspace.
      parameters:
        - description: Returns only webhooks of the table related to this value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableWebhooksListResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableWebhooksList400Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableWebhooksList404Response'
    post:
      tags:
        - Database table webhooks
      operationId: DatabaseTableWebhooks_createWebhook
      security:
        - JWT: []
      description: >-
        Creates a new webhook for the table related to the provided `table_id`
        parameter if the authorized user has access to the related database
        workspace.
      parameters:
        - description: Creates a webhook for the table related to the provided value.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableWebhookCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TableWebhookCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TableWebhookCreateRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableWebhook'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableWebhooksCreateWebhookResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableWebhooksCreateWebhook404Response
  /api/database/webhooks/table/{table_id}/test-call:
    post:
      tags:
        - Database table webhooks
      operationId: DatabaseTableWebhooks_triggerTestCall
      security:
        - JWT: []
      description: >-
        This endpoint triggers a test call based on the provided data if the
        user has access to the workspace related to the table. The test call
        will be made immediately and a copy of the request, response and status
        will be included in the response.
      parameters:
        - description: The id of the table that must be tested.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableWebhookTestCallRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TableWebhookTestCallRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TableWebhookTestCallRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableWebhookTestCallResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableWebhooksTriggerTestCallResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableWebhooksTriggerTestCall404Response
  /api/groups:
    get:
      tags:
        - Groups
      operationId: list_groups
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [list_workspaces](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Lists all the groups of the authorized user. A group can contain multiple applications like a database. Multiple users can have access to a group. For example each company could have their own group containing databases related to that company. The order of the groups are custom for each user. The order is configurable via the **order_groups** endpoint.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGroupsResponse'
      deprecated: true
    post:
      tags:
        - Groups
      operationId: create_group
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [create_workspace](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Creates a new group where only the authorized user has access to. No initial data like database applications are added, they have to be created via other endpoints.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workspace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workspace'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceUserWorkspace'
      deprecated: true
  /api/groups/{group_id}:
    patch:
      tags:
        - Groups
      operationId: update_group
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [update_workspace](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Updates the existing group related to the provided `group_id` parameter if the authorized user belongs to the group. It is not yet possible to add additional users to a group.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Updates the group related to the provided value.
          in: path
          name: group_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkspace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkspace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkspace'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGroupResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGroup404Response'
      deprecated: true
    delete:
      tags:
        - Groups
      operationId: delete_group
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [delete_workspace](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Deletes an existing group if the authorized user belongs to the group. All the applications, databases, tables etc that were in the group are going to be deleted also.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Deletes the group related to the provided value.
          in: path
          name: group_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGroupResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGroup404Response'
      deprecated: true
  /api/groups/{group_id}/leave:
    post:
      tags:
        - Groups
      operationId: leave_group
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [leave_workspace](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Makes the authenticated user leave the group related to the provided `group_id` if the user is in that group. If the user is the last admin in the group, they will not be able to leave it. There must always be one admin in the group, otherwise it will be left without control. If that is the case, they must either delete the group or give another member admin permissions first.
      parameters:
        - description: Leaves the group related to the value.
          in: path
          name: group_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveGroupResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveGroup404Response'
      deprecated: true
  /api/groups/{group_id}/permissions:
    get:
      tags:
        - Groups
      operationId: group_permissions
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [workspace_permissions](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Returns a the permission data necessary to determine the permissions of a specific user over a specific group.
         See `core.handler.CoreHandler.get_permissions()` for more details.
      parameters:
        - description: The group id we want the permission object for.
          in: path
          name: group_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPermissionsResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPermissions404Response'
      deprecated: true
  /api/groups/invitations/{group_invitation_id}:
    get:
      tags:
        - Group invitations
      operationId: GroupInvitations_getById
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [get_workspace_invitation](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Returns the requested group invitation if the authorized user has admin right to the related group
      parameters:
        - description: Returns the group invitation related to the provided value.
          in: path
          name: group_invitation_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInvitation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInvitationsGetByIdResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInvitationsGetById404Response'
      deprecated: true
    patch:
      tags:
        - Group invitations
      operationId: GroupInvitations_updateRelatedInvitation
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [update_workspace_invitation](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Updates the existing group invitation related to the provided `group_invitation_id` param if the authorized user has admin rights to the related group.
      parameters:
        - description: Updates the group invitation related to the provided value.
          in: path
          name: group_invitation_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateWorkspaceInvitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateWorkspaceInvitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateWorkspaceInvitation'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInvitation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GroupInvitationsUpdateRelatedInvitationResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GroupInvitationsUpdateRelatedInvitation404Response
      deprecated: true
    delete:
      tags:
        - Group invitations
      operationId: GroupInvitations_deleteInvitation
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [delete_workspace_invitation](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Deletes a group invitation if the authorized user has admin rights to the related group.
      parameters:
        - description: Deletes the group invitation related to the provided value.
          in: path
          name: group_invitation_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInvitationsDeleteInvitationResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GroupInvitationsDeleteInvitation404Response
      deprecated: true
  /api/groups/invitations/{group_invitation_id}/accept:
    post:
      tags:
        - Group invitations
      operationId: GroupInvitations_acceptGroupInvitation
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [accept_workspace_invitation](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Accepts a group invitation with the given id if the email address of the user matches that of the invitation.
      parameters:
        - description: Accepts the group invitation related to the provided value.
          in: path
          name: group_invitation_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceUserWorkspace'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GroupInvitationsAcceptGroupInvitationResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GroupInvitationsAcceptGroupInvitation404Response
      deprecated: true
  /api/groups/invitations/{group_invitation_id}/reject:
    post:
      tags:
        - Group invitations
      operationId: GroupInvitations_rejectGroupInvitation
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [reject_workspace_invitation](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Rejects a group invitation with the given id if the email address of the user matches that of the invitation.
      parameters:
        - description: Rejects the group invitation related to the provided value.
          in: path
          name: group_invitation_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GroupInvitationsRejectGroupInvitationResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GroupInvitationsRejectGroupInvitation404Response
      deprecated: true
  /api/groups/invitations/group/{group_id}:
    get:
      tags:
        - Group invitations
      operationId: GroupInvitations_listForGroup
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [list_workspace_invitations](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Lists all the group invitations of the group related to the provided `group_id` parameter if the authorized user has admin rights to that group.
      parameters:
        - description: >-
            Returns only invitations that are in the group related to the
            provided value.
          in: path
          name: group_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInvitationsListForGroupResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInvitationsListForGroup400Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInvitationsListForGroup404Response'
      deprecated: true
    post:
      tags:
        - Group invitations
      operationId: GroupInvitations_createNewInvitation
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [create_workspace_invitation](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Creates a new group invitations for an email address if the authorized user has admin rights to the related group. An email containing a sign up link will be send to the user.
      parameters:
        - description: >-
            Creates a group invitation to the group related to the provided
            value.
          in: path
          name: group_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceInvitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceInvitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceInvitation'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInvitation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GroupInvitationsCreateNewInvitationResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GroupInvitationsCreateNewInvitation404Response
      deprecated: true
  /api/groups/invitations/token/{token}:
    get:
      tags:
        - Group invitations
      operationId: GroupInvitations_findByToken
      security:
        - JWT: []
        - {}
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [get_workspace_invitation_by_token](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Responds with the serialized group invitation if an invitation with the provided token is found.
      parameters:
        - description: Returns the group invitation related to the provided token.
          in: path
          name: token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWorkspaceInvitation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInvitationsFindByTokenResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInvitationsFindByToken404Response'
      deprecated: true
  /api/groups/order:
    post:
      tags:
        - Groups
      operationId: order_groups
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [order_workspaces](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Changes the order of the provided group ids to the matching position that the id has in the list. If the authorized user does not belong to the group it will be ignored. The order will be custom for each user.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderWorkspaces'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderWorkspaces'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderWorkspaces'
        required: true
      responses:
        '204':
          description: No response body
      deprecated: true
  /api/groups/users/{group_user_id}:
    patch:
      tags:
        - Groups
      operationId: Groups_updateGroupUser
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [update_workspace_user](https://api.baserow.io).**

         Updates the existing group user related to the provided `group_user_id` param if the authorized user has admin rights to the related group.
      parameters:
        - description: Updates the group user related to the provided value.
          in: path
          name: group_user_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateWorkspaceUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateWorkspaceUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateWorkspaceUser'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceUser'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsUpdateGroupUserResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsUpdateGroupUser404Response'
      deprecated: true
    delete:
      tags:
        - Groups
      operationId: Groups_deleteGroupUser
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [delete_workspace_user](https://api.baserow.io).**

         Deletes a group user if the authorized user has admin rights to the related group.
      parameters:
        - description: Deletes the group user related to the provided value.
          in: path
          name: group_user_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsDeleteGroupUserResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsDeleteGroupUser404Response'
      deprecated: true
  /api/groups/users/group/{group_id}:
    get:
      tags:
        - Groups
      operationId: Groups_listGroupUsers
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [list_workspace_users](https://api.baserow.io).**

         Lists all the users that are in a group if the authorized user has admin permissions to the related group. To add a user to a group an invitation must be sent first.
      parameters:
        - description: Lists group users related to the provided group value.
          in: path
          name: group_id
          schema:
            type: integer
          required: true
        - description: Search for group users by username, or email.
          in: query
          name: search
          schema:
            type: string
        - description: Sort group users by name, email or role.
          in: query
          name: sorts
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsListGroupUsersResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsListGroupUsers400Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsListGroupUsers404Response'
      deprecated: true
  /api/integration/{integration_id}:
    patch:
      tags:
        - Integrations
      operationId: Integrations_updateExistingIntegration
      security:
        - JWT: []
      description: Updates an existing integration.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the integration
          in: path
          name: integration_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIntegrationUpdateIntegration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIntegrationUpdateIntegration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIntegrationUpdateIntegration'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationIntegration'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationsUpdateExistingIntegrationResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationsUpdateExistingIntegration404Response
    delete:
      tags:
        - Integrations
      operationId: Integrations_deleteById
      security:
        - JWT: []
      description: Deletes the integration related by the given id.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the integration
          in: path
          name: integration_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationsDeleteByIdResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationsDeleteById404Response'
  /api/integration/{integration_id}/move:
    patch:
      tags:
        - Integrations
      operationId: Integrations_moveIntegration
      security:
        - JWT: []
      description: >-
        Moves the integration in the application before another integration or
        at the end of the application if no before integration is given. The
        integrations must belong to the same application.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the integration to move
          in: path
          name: integration_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMoveIntegration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMoveIntegration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMoveIntegration'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationIntegration'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationsMoveIntegrationResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationsMoveIntegration404Response'
  /api/jobs:
    get:
      tags:
        - Jobs
      operationId: list_job
      security:
        - JWT: []
      description: >-
        List all existing jobs. Jobs are task executed asynchronously in the
        background. You can use the `get_job` endpoint to read the
        currentprogress of a the job.
      parameters:
        - description: >-
            A comma separated list of job ids in the desired order.The jobs will
            be returned in the same order as the ids.If a job id is not found it
            will be ignored.
          in: query
          name: job_ids
          schema:
            type: string
        - description: >-
            A comma separated list of jobs state to look for. The only possible
            values are: `pending`, `finished` and `failed`. It's possible to
            exclude a state by prefixing it with a `!`. 
          in: query
          name: states
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobResponse'
    post:
      tags:
        - Jobs
      operationId: create_job
      security:
        - JWT: []
      description: >-
        Creates a new job. This job runs asynchronously in the background and
        execute the task specific to the provided typeparameters. The `get_job`
        can be used to get the current state of the job.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job_TypeCreateJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job_TypeCreateJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job_TypeCreateJob'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job_TypeJob'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateJobResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateJob404Response'
  /api/jobs/{job_id}:
    get:
      tags:
        - Jobs
      operationId: get_job
      security:
        - JWT: []
      description: >-
        Returns the information related to the provided job id. This endpoint
        can for example be polled to get the state and progress of the job in
        real time.
      parameters:
        - description: The job id to lookup information about.
          in: path
          name: job_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job_TypeJob'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobResponse'
  /api/licenses:
    get:
      tags:
        - Admin
      operationId: admin_licenses
      security:
        - JWT: []
      description: >-
        Lists all the valid licenses that are registered to this instance. A
        premium license can be used to unlock the premium features for a fixed
        amount of users. An enterprise license can similarly be used to unlock
        enterpise features. More information about self hosted licenses can be
        found on our pricing page https://baserow.io/pricing.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminLicensesResponse'
    post:
      tags:
        - Admin
      operationId: Admin_registerLicense
      security:
        - JWT: []
      description: >-
        Registers a new license. After registering you can assign users to the
        license that will be able to use the license's features while the
        license is active. If an existing license with the same `license_id`
        already exists and the provided license has been issued later than that
        one, the existing one will be upgraded.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterLicense'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterLicense'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterLicense'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRegisterLicenseResponse'
  /api/licenses/{id}:
    get:
      tags:
        - Admin
      operationId: Admin_getLicenseDetails
      security:
        - JWT: []
      description: >-
        Responds with detailed information about the license related to the
        provided parameter.
      parameters:
        - description: The internal identifier of the license.
          in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseWithUsers'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminGetLicenseDetailsResponse'
    delete:
      tags:
        - Admin
      operationId: Admin_removeLicense
      security:
        - JWT: []
      description: >-
        Removes the existing license related to the provided parameter. If the
        license is active, then all the users that are using the license will
        lose access to the features granted by that license.
      parameters:
        - description: >-
            The internal identifier of the license, this is `id` and not
            `license_id`.
          in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRemoveLicenseResponse'
  /api/licenses/{id}/{user_id}:
    post:
      tags:
        - Admin
      operationId: Admin_addUserToLicense
      security:
        - JWT: []
      description: >-
        Adds the user related to the provided parameter and to the license
        related to the parameter. This only happens if there are enough seats
        left on the license and if the user is not already on the license.
      parameters:
        - description: >-
            The internal identifier of the license, this is `id` and not
            `license_id`.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: The ID of the user that must be added to the license.
          in: path
          name: user_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseUser'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminAddUserToLicenseResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminAddUserToLicense404Response'
    delete:
      tags:
        - Admin
      operationId: Admin_removeUserFromLicense
      security:
        - JWT: []
      description: >-
        Removes the user related to the provided parameter and to the license
        related to the parameter. This only happens if the user is on the
        license, otherwise nothing will happen.
      parameters:
        - description: >-
            The internal identifier of the license, this is `id` and not
            `license_id`.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: The ID of the user that must be removed from the license.
          in: path
          name: user_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRemoveUserFromLicenseResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRemoveUserFromLicense404Response'
  /api/licenses/{id}/check:
    get:
      tags:
        - Admin
      operationId: Admin_checkLicenseStatus
      security:
        - JWT: []
      description: >-
        This endpoint checks with the authority if the license needs to be
        updated. It also checks if the license is operating within its limits
        and might take action on that. It could also happen that the license has
        been deleted because there is an instance id mismatch or because it's
        invalid. In that case a `204` status code is returned.
      parameters:
        - description: >-
            The internal identifier of the license, this is `id` and not
            `license_id`.
          in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseWithUsers'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCheckLicenseStatusResponse'
  /api/licenses/{id}/fill-seats:
    post:
      tags:
        - Admin
      operationId: Admin_fillSeatsLicense
      security:
        - JWT: []
      description: >-
        Fills the remaining empty seats of the license with the first users that
        are found.
      parameters:
        - description: >-
            The internal identifier of the license, this is `id` and not
            `license_id`.
          in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminFillSeatsLicenseResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminFillSeatsLicense400Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminFillSeatsLicense404Response'
  /api/licenses/{id}/lookup-users:
    get:
      tags:
        - Admin
      operationId: Admin_lookupUsers
      security:
        - JWT: []
      description: >-
        This endpoint can be used to lookup users that can be added to a 
        license. Users that are already in the license are not returned here.
        Optionally a `search` query parameter can be provided to filter the
        results.
      parameters:
        - description: >-
            The internal identifier of the license, this is `id` and not
            `license_id`.
          in: path
          name: id
          schema:
            type: integer
          required: true
        - description: Defines which page of users should be returned.
          in: query
          name: page
          schema:
            type: integer
        - description: >-
            If provided, only users where the name or email contains the value
            are returned.
          in: query
          name: search
          schema:
            type: string
        - description: Defines how many users should be returned per page.
          in: query
          name: size
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerLicenseUserLookup'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminLookupUsersResponse'
  /api/licenses/{id}/remove-all-users:
    post:
      tags:
        - Admin
      operationId: Admin_removeAllUsers
      security:
        - JWT: []
      description: >-
        Removes all the users that are on the license. This will empty all the
        seats.
      parameters:
        - description: >-
            The internal identifier of the license, this is `id` and not
            `license_id`.
          in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRemoveAllUsersResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRemoveAllUsers404Response'
  /api/notifications/{workspace_id}:
    get:
      tags:
        - Notifications
      operationId: Notifications_listForWorkspaceAndUser
      security:
        - JWT: []
      description: >-
        Lists the notifications for the given workspace and the current user.
        The response is paginated and the limit and offset parameters can be
        controlled using the query parameters.
      parameters:
        - description: Defines how many notifications should be returned.
          in: query
          name: limit
          schema:
            type: integer
        - description: Defines the offset of the notifications that should be returned.
          in: query
          name: offset
          schema:
            type: integer
        - description: The workspace id that the notifications belong to.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerNotificationRecipient'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationsListForWorkspaceAndUserResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationsListForWorkspaceAndUser404Response
    delete:
      tags:
        - Notifications
      operationId: Notifications_clearWorkspaceNotifications
      security:
        - JWT: []
      description: Clear all the notifications for the given workspace and user.
      parameters:
        - description: The workspace the notifications are in.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationsClearWorkspaceNotificationsResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/NotificationsClearWorkspaceNotifications404Response
  /api/notifications/{workspace_id}/{notification_id}:
    patch:
      tags:
        - Notifications
      operationId: Notifications_markAsRead
      security:
        - JWT: []
      description: Marks a notification as read.
      parameters:
        - description: The notification id to update.
          in: path
          name: notification_id
          schema:
            type: integer
          required: true
        - description: The workspace the notification is in.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRecipient'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsMarkAsReadResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsMarkAsRead404Response'
  /api/notifications/{workspace_id}/mark-all-as-read:
    post:
      tags:
        - Notifications
      operationId: Notifications_markAllAsRead
      security:
        - JWT: []
      description: Mark as read all the notifications for the given workspace and user.
      parameters:
        - description: The workspace the notifications are in.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsMarkAllAsReadResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsMarkAllAsRead404Response'
  /api/role/{group_id}:
    get:
      tags:
        - Role assignments
      operationId: RoleAssignments_listWithinGroup
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [workspace_assign_role](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         You can list the role assignments within a group, optionally filtered down to a specific scope inside of that group. If the scope isn't specified,the group will be considered the scope.
      parameters:
        - description: The group in which the role assignments are related to.
          in: path
          name: group_id
          schema:
            type: integer
          required: true
        - description: The id of the scope you are trying to get all roleassignments for.
          in: query
          name: scope_id
          schema:
            type: integer
        - description: The type of scope you are trying to get all roleassignments for.
          in: query
          name: scope_type
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentsListWithinGroupResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentsListWithinGroup400Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentsListWithinGroup404Response'
      deprecated: true
    post:
      tags:
        - Role assignments
      operationId: RoleAssignments_assignRoleToGroup
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [workspace_assign_role](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         You can assign a role to a subject into the given group for the given scope with this endpoint. If you want to remove the role you can omit the role property.
      parameters:
        - description: The group in which the role assignment takes place.
          in: path
          name: group_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleAssignment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateRoleAssignment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateRoleAssignment'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenApiRoleAssignment'
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentsAssignRoleToGroupResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoleAssignmentsAssignRoleToGroup404Response
      deprecated: true
  /api/role/{group_id}/batch:
    post:
      tags:
        - Role assignments
      operationId: RoleAssignments_assignMultipleSubjectsToGroup
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [workspace_batch_assign_role](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         You can assign a role to a multiple subjects into the given group for the given scope with this endpoint. If you want to remove the role you can omit the role property.
      parameters:
        - description: The group in which the role assignment takes place.
          in: path
          name: group_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreateRoleAssignment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchCreateRoleAssignment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchCreateRoleAssignment'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoleAssignmentsAssignMultipleSubjectsToGroupResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoleAssignmentsAssignMultipleSubjectsToGroup400Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoleAssignmentsAssignMultipleSubjectsToGroup404Response
      deprecated: true
  /api/role/{workspace_id}:
    get:
      tags:
        - Role assignments
      operationId: RoleAssignments_listWithinWorkspaceScope
      security:
        - JWT: []
      description: >-
        You can list the role assignments within a workspace, optionally
        filtered downto a specific scope inside of that workspace. If the scope
        isn't specified,the workspace will be considered the scope.
      parameters:
        - description: The id of the scope you are trying to get all roleassignments for.
          in: query
          name: scope_id
          schema:
            type: integer
        - description: The type of scope you are trying to get all roleassignments for.
          in: query
          name: scope_type
          schema:
            type: string
        - description: The workspace in which the role assignments are related to.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoleAssignmentsListWithinWorkspaceScopeResponse
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoleAssignmentsListWithinWorkspaceScope400Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoleAssignmentsListWithinWorkspaceScope404Response
    post:
      tags:
        - Role assignments
      operationId: assign_role
      security:
        - JWT: []
      description: >-
        You can assign a role to a subject into the given workspace for the
        given scope with this endpoint. If you want to remove the role you can
        omit the role property.
      parameters:
        - description: The workspace in which the role assignment takes place.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleAssignment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateRoleAssignment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateRoleAssignment'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenApiRoleAssignment'
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignRoleResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignRole404Response'
  /api/role/{workspace_id}/batch:
    post:
      tags:
        - Role assignments
      operationId: RoleAssignments_assignRoleToGroup
      security:
        - JWT: []
      description: >-
        You can assign a role to a multiple subjects into the given workspace
        for the given scopes with this endpoint. If you want to remove the role
        you can omit the role property.
      parameters:
        - description: The workspace in which the role assignment takes place.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreateRoleAssignment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchCreateRoleAssignment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchCreateRoleAssignment'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoleAssignmentsAssignRoleToGroup200Response
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoleAssignmentsAssignRoleToGroup400Response
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoleAssignmentsAssignRoleToGroup404Response
  /api/row_comments/{table_id}/{row_id}:
    get:
      tags:
        - Database table rows
      operationId: DatabaseTableRows_getAllComments
      security:
        - JWT: []
      description: |-
        Returns all row comments for the specified table and row.

        This is a **premium** feature.
      parameters:
        - description: Defines how many rows should be returned.
          in: query
          name: limit
          schema:
            type: integer
        - description: >-
            Can only be used in combination with the `limit` parameter and
            defines from which offset the rows should be returned.
          in: query
          name: offset
          schema:
            type: integer
        - description: >-
            Defines which page of rows should be returned. Either the `page` or
            `limit` can be provided, not both.
          in: query
          name: page
          schema:
            type: integer
        - description: The row to get row comments for.
          in: path
          name: row_id
          schema:
            type: integer
          required: true
        - description: >-
            Can only be used in combination with the `page` parameter and
            defines how many rows should be returned.
          in: query
          name: size
          schema:
            type: integer
        - description: The table the row is in.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerRowComment'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsGetAllCommentsResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableRowsGetAllComments404Response
    post:
      tags:
        - Database table rows
      operationId: DatabaseTableRows_createComment
      security:
        - JWT: []
      description: |-
        Creates a comment on the specified row.

        This is a **premium** feature.
      parameters:
        - description: The row to create a comment for.
          in: path
          name: row_id
          schema:
            type: integer
          required: true
        - description: The table to find the row to comment on in.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RowCommentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RowCommentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RowCommentCreate'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowComment'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsCreateCommentResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsCreateComment404Response'
  /api/row_comments/{table_id}/{row_id}/notification-mode:
    put:
      tags:
        - Database table rows
      operationId: DatabaseTableRows_updateNotificationMode
      security:
        - JWT: []
      description: >-
        Updates the user's notification preferences for comments made on a
        specified table row.


        This is a **premium** feature.
      parameters:
        - description: The row on which to manage the comment subscription.
          in: path
          name: row_id
          schema:
            type: integer
          required: true
        - description: The table id where the row is in.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RowCommentsNotificationMode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RowCommentsNotificationMode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RowCommentsNotificationMode'
        required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableRowsUpdateNotificationModeResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DatabaseTableRowsUpdateNotificationMode404Response
  /api/row_comments/{table_id}/comment/{comment_id}:
    patch:
      tags:
        - Database table rows
      operationId: DatabaseTableRows_updateComment
      security:
        - JWT: []
      description: |-
        Update a row comment.

        This is a **premium** feature.
      parameters:
        - description: The row comment to update.
          in: path
          name: comment_id
          schema:
            type: integer
          required: true
        - description: The table the row is in.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowComment'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsUpdateCommentResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsUpdateComment401Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsUpdateComment404Response'
    delete:
      tags:
        - Database table rows
      operationId: DatabaseTableRows_deleteComment
      security:
        - JWT: []
      description: |-
        Delete a row comment.

        This is a **premium** feature.
      parameters:
        - description: The row comment to delete.
          in: path
          name: comment_id
          schema:
            type: integer
          required: true
        - description: The table the row is in.
          in: path
          name: table_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowComment'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsDeleteCommentResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsDeleteComment401Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseTableRowsDeleteComment404Response'
  /api/settings:
    get:
      tags:
        - Settings
      operationId: get_settings
      description: Responds with all the admin configured settings.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
  /api/settings/instance-id:
    get:
      tags:
        - Settings
      operationId: Settings_getInstanceId
      security:
        - JWT: []
      description: >-
        Responds with the self hosted instance id. Only a user with staff
        permissions can request it.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceId'
  /api/settings/update:
    patch:
      tags:
        - Settings
      operationId: update_settings
      security:
        - JWT: []
      description: Updates the admin configured settings if the user has admin permissions.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSettings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSettings'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
  /api/snapshots/{snapshot_id}:
    delete:
      tags:
        - Snapshots
      operationId: delete_snapshot
      security:
        - JWT: []
      description: >-
        Deletes a snapshot. Deleting a snapshot doesn't affect the application
        that the snapshot is made from and doesn't affect any applications that
        were created by restoring it. Snapshot deletion is permanent and can't
        be undone.
      parameters:
        - description: Id of the snapshot to delete.
          in: path
          name: snapshot_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSnapshotResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSnapshot404Response'
  /api/snapshots/{snapshot_id}/restore:
    post:
      tags:
        - Snapshots
      operationId: restore_snapshot
      security:
        - JWT: []
      description: >-
        Restores a snapshot. When an application snapshot is restored, a new
        application will be created in the same workspace that the original
        application was placed in with the name of the snapshot and data that
        were in the original application at the time the snapshot was taken. The
        original application that the snapshot was taken from is unaffected.
        Snapshots can be restored multiple times and a number suffix is added to
        the new application name in the case of a collision.
      parameters:
        - description: Id of the snapshot to restore.
          in: path
          name: snapshot_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoreSnapshotResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoreSnapshot404Response'
  /api/snapshots/application/{application_id}:
    get:
      tags:
        - Snapshots
      operationId: list_snapshots
      security:
        - JWT: []
      description: Lists snapshots that were created for a given application.
      parameters:
        - description: Application ID for which to list snapshots.
          in: path
          name: application_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshotsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshots400Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSnapshots404Response'
    post:
      tags:
        - Snapshots
      operationId: create_snapshot
      security:
        - JWT: []
      description: >-
        Creates a new application snapshot. Snapshots represent a state of an
        application at a specific point in time and can be restored later,
        making it easy to create backups of entire applications.
      parameters:
        - description: Application ID for which to list snapshots.
          in: path
          name: application_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Snapshot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Snapshot'
        required: true
      responses:
        '202':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSnapshotResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSnapshot404Response'
  /api/sso/oauth2/callback/{provider_id}:
    get:
      tags:
        - Auth
      operationId: Auth_completeProviderCallback
      description: >-
        Processes callback from OAuth2 provider and logs the user in if
        successful.
      parameters:
        - description: The id of the provider for which to process the callback.
          in: query
          name: code
          schema:
            type: integer
        - description: The id of the provider for which to process the callback.
          in: path
          name: provider_id
          schema:
            type: integer
          required: true
      responses:
        default:
          description: No response body
  /api/sso/oauth2/login/{provider_id}:
    get:
      tags:
        - Auth
      operationId: Auth_redirectToProvider
      description: >-
        Redirects to the OAuth2 provider's authentication URL based on the
        provided auth provider's id.
      parameters:
        - description: >-
            Please use the functionally identical `workspace_invitation_token`
            instead as this querystring is being removed in the future.
          in: query
          name: group_invitation_token
          schema:
            type: string
          deprecated: true
        - description: The relative part of URL that the user wanted to access.
          in: query
          name: original
          schema:
            type: integer
        - description: The id of the provider for redirect.
          in: path
          name: provider_id
          schema:
            type: integer
          required: true
        - description: The invitation token sent to the user to join a specific workspace.
          in: query
          name: workspace_invitation_token
          schema:
            type: string
      responses:
        default:
          description: No response body
  /api/sso/saml/acs:
    post:
      tags:
        - Auth
      operationId: Auth_completeSamlAuthenticationFlow
      description: >-
        Complete the SAML authentication flow by validating the SAML response.
        Sign in the user if already exists in Baserow or create a new one
        otherwise. Once authenticated, the user will be redirected to the
        original URL they were trying to access. If the response is invalid, the
        user will be redirected to an error page with a specific error
        message.It accepts the language code and the workspace invitation token
        as query parameters if provided.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMLResponse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SAMLResponse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SAMLResponse'
        required: true
      responses:
        default:
          description: No response body
  /api/sso/saml/login:
    get:
      tags:
        - Auth
      operationId: Auth_initiateSsoSamlLogin
      description: >-
        This is the endpoint that is called when the user wants to initiate a
        SSO SAML login from Baserow (the service provider). The user will be
        redirected to the SAML identity provider (IdP) where the user can
        authenticate. Once logged in in the IdP, the user will be redirected
        back to the assertion consumer service endpoint (ACS) where the SAML
        response will be validated and a new JWT session token will be provided
        to work with Baserow APIs.
      parameters:
        - description: The email address of the user that want to sign in using SAML.
          in: query
          name: email
          schema:
            type: string
        - description: >-
            Please use the functionally identical `workspace_invitation_token`
            instead as this querystring is being removed in the future
          in: query
          name: group_invitation_token
          schema:
            type: string
          deprecated: true
        - description: >-
            An ISO 639 language code (with optional variant) selected by the
            user. Ex: en-GB.
          in: query
          name: language
          schema:
            type: string
        - description: >-
            The url to which the user should be redirected after a successful
            login or sign up.
          in: query
          name: original
          schema:
            type: string
        - description: >-
            If provided and valid, the user accepts the workspace invitation and
            will have access to the workspace after login or signing up.
          in: query
          name: workspace_invitation_token
          schema:
            type: string
      responses:
        default:
          description: No response body
  /api/sso/saml/login-url:
    get:
      tags:
        - Auth
      operationId: Auth_getSamlLoginUrl
      description: >-
        Return the correct redirect_url to initiate the SSO SAML login. It needs
        an email address if multiple SAML providers are configured otherwise the
        only configured SAML provider signup URL will be returned.
      parameters:
        - description: The email address of the user that want to sign in using SAML.
          in: query
          name: email
          schema:
            type: string
        - description: >-
            Please use the functionally identical `workspace_invitation_token`
            instead as this querystring is being removed in the future.
          in: query
          name: group_invitation_token
          schema:
            type: string
          deprecated: true
        - description: >-
            An ISO 639 language code (with optional variant) selected by the
            user. Ex: en-GB.
          in: query
          name: language
          schema:
            type: string
        - description: >-
            The url to which the user should be redirected after a successful
            login.
          in: query
          name: original
          schema:
            type: string
        - description: >-
            If provided and valid, the user accepts the workspace invitation and
            will have access to the workspace after login or signing up.
          in: query
          name: workspace_invitation_token
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthGetSamlLoginUrlResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthGetSamlLoginUrl400Response'
  /api/teams/{team_id}:
    get:
      tags:
        - Teams
      operationId: get_team
      security:
        - JWT: []
      description: Returns the information related to the provided team id.
      parameters:
        - description: Returns the team related to the provided value.
          in: path
          name: team_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTeamResponse'
    put:
      tags:
        - Teams
      operationId: update_team
      security:
        - JWT: []
      description: Updates an existing team with a new name.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - in: path
          name: team_id
          schema:
            type: string
            pattern: ^[0-9]+$
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTeamResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTeam404Response'
    delete:
      tags:
        - Teams
      operationId: delete_team
      security:
        - JWT: []
      description: >-
        Deletes a team if the authorized user is in the team's workspace. All
        the related children (e.g. subjects) are also going to be deleted.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: Deletes the team related to the provided value.
          in: path
          name: team_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTeamResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTeam404Response'
  /api/teams/{team_id}/subjects:
    get:
      tags:
        - Teams
      operationId: Teams_listSubjects
      security:
        - JWT: []
      description: Lists all team subjects in a given team.
      parameters:
        - in: path
          name: team_id
          schema:
            type: string
            pattern: ^[0-9]+$
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsListSubjectsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsListSubjects400Response'
    post:
      tags:
        - Teams
      operationId: create_subject
      security:
        - JWT: []
      description: Creates a new team subject.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - in: path
          name: team_id
          schema:
            type: string
            pattern: ^[0-9]+$
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamSubject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TeamSubject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TeamSubject'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamSubjectResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSubjectResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSubject404Response'
  /api/teams/{team_id}/subjects/{subject_id}:
    get:
      tags:
        - Teams
      operationId: get_subject
      security:
        - JWT: []
      description: Returns the information related to the provided subject id
      parameters:
        - description: Returns the subject related to the provided value.
          in: path
          name: subject_id
          schema:
            type: integer
          required: true
        - in: path
          name: team_id
          schema:
            type: string
            pattern: ^[0-9]+$
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamSubjectResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubjectResponse'
    delete:
      tags:
        - Teams
      operationId: delete_subject
      security:
        - JWT: []
      description: Deletes a subject if the authorized user is in the team's workspace.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The subject id to remove from the team.
          in: path
          name: subject_id
          schema:
            type: integer
          required: true
        - description: The team id which the subject will be removed from.
          in: path
          name: team_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSubjectResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSubject404Response'
  /api/teams/group/{group_id}:
    get:
      tags:
        - Teams
      operationId: Teams_getAllInGroup
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [workspace_list_teams](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Lists all teams in a given group.
      parameters:
        - description: Lists all teams in a given group.
          in: path
          name: group_id
          schema:
            type: integer
          required: true
        - description: Search for teams by their name.
          in: query
          name: search
          schema:
            type: string
        - description: Sort teams by name or subjects.
          in: query
          name: sorts
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsGetAllInGroupResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsGetAllInGroup404Response'
      deprecated: true
    post:
      tags:
        - Teams
      operationId: Teams_createInGroup
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [workspace_create_team](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Creates a new team in a given group.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - in: path
          name: group_id
          schema:
            type: string
            pattern: ^[0-9]+$
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsCreateInGroupResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsCreateInGroup404Response'
      deprecated: true
  /api/teams/workspace/{workspace_id}:
    get:
      tags:
        - Teams
      operationId: Teams_listInWorkspace
      security:
        - JWT: []
      description: Lists all teams in a given workspace.
      parameters:
        - description: Search for teams by their name.
          in: query
          name: search
          schema:
            type: string
        - description: Sort teams by name or subjects.
          in: query
          name: sorts
          schema:
            type: string
        - description: Lists all teams in a given workspace.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsListInWorkspaceResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsListInWorkspace404Response'
    post:
      tags:
        - Teams
      operationId: Teams_createNewTeam
      security:
        - JWT: []
      description: Creates a new team.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - in: path
          name: workspace_id
          schema:
            type: string
            pattern: ^[0-9]+$
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsCreateNewTeamResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsCreateNewTeam404Response'
  /api/templates:
    get:
      tags:
        - Templates
      operationId: list_templates
      security:
        - JWT: []
        - {}
      description: >-
        Lists all the template categories and the related templates that are in
        that category. The template's `workspace_id` can be used for previewing
        purposes because that workspace contains the applications that are in
        the template. All the `get` and `list` endpoints related to that
        workspace are publicly accessible.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTemplatesResponse'
  /api/templates/install/{group_id}/{template_id}:
    post:
      tags:
        - Templates
      operationId: Templates_installApplications
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [workspace_install_template](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Installs the applications of the given template into the given group if the user has access to that group. The response contains those newly created applications.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: >-
            The id related to the group where the template applications must be
            installed into.
          in: path
          name: group_id
          schema:
            type: integer
          required: true
        - description: The id related to the template that must be installed.
          in: path
          name: template_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesInstallApplicationsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesInstallApplications400Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesInstallApplications404Response'
      deprecated: true
  /api/templates/install/{group_id}/{template_id}/async:
    post:
      tags:
        - Templates
      operationId: Templates_startAsyncJob
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [workspace_install_template_async](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Start an async job to install the applications of the given template into the given group if the user has access to that group. The response contains those newly created applications.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: >-
            The id related to the group where the template applications must be
            installed into.
          in: path
          name: group_id
          schema:
            type: integer
          required: true
        - description: The id related to the template that must be installed.
          in: path
          name: template_id
          schema:
            type: integer
          required: true
      responses:
        '202':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleInstallTemplateJobType'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesStartAsyncJobResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesStartAsyncJob404Response'
      deprecated: true
  /api/templates/install/{workspace_id}/{template_id}:
    post:
      tags:
        - Templates
      operationId: install_template
      security:
        - JWT: []
      description: >-
        (Deprecated) Installs the applications of the given template into the
        given workspace if the user has access to that workspace. The response
        contains those newly created applications.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: The id related to the template that must be installed.
          in: path
          name: template_id
          schema:
            type: integer
          required: true
        - description: >-
            The id related to the workspace where the template applications must
            be installed into.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallTemplateResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallTemplate400Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallTemplate404Response'
  /api/templates/install/{workspace_id}/{template_id}/async:
    post:
      tags:
        - Templates
      operationId: Templates_startAsyncJob
      security:
        - JWT: []
      description: >-
        Start an async job to install the applications of the given template
        into the given workspace if the user has access to that workspace. The
        response contains those newly created applications.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: The id related to the template that must be installed.
          in: path
          name: template_id
          schema:
            type: integer
          required: true
        - description: >-
            The id related to the workspace where the template applications must
            be installed into.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      responses:
        '202':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleInstallTemplateJobType'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesStartAsyncJob400Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesStartAsyncJob404Response'
  /api/trash:
    get:
      tags:
        - Trash
      operationId: Trash_inspectTrashContents
      security:
        - JWT: []
      description: >-
        Responds with the workspaces and applications available for the
        requesting user to inspect the trash contents of.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrashStructure'
  /api/trash/group/{group_id}:
    get:
      tags:
        - Trash
      operationId: Trash_getGroupContents
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [workspace_get_contents](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Responds with trash contents for a group optionally filtered to a specific application.
      parameters:
        - description: >-
            Optionally filters down the trash to only items for this application
            in the group.
          in: query
          name: application_id
          schema:
            type: integer
        - description: Returns the trash for the group with this id.
          in: path
          name: group_id
          schema:
            type: integer
          required: true
        - description: Selects which page of trash contents should be returned.
          in: query
          name: page
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerTrashContents'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrashGetGroupContentsResponse'
      deprecated: true
    delete:
      tags:
        - Trash
      operationId: Trash_emptyGroupContents
      security:
        - JWT: []
      description: >-
        **This endpoint has been deprecated and replaced with a new endpoint,
        [workspace_empty_contents](https://api.baserow.io).**


        **Support for this endpoint will end in 2024.**

         Empties the specified group and/or application of trash, including the group and application themselves if they are trashed also.
      parameters:
        - description: >-
            Optionally filters down the trash to delete to only items for this
            application in the group.
          in: query
          name: application_id
          schema:
            type: integer
        - description: >-
            The group whose trash contents to empty, including the group itself
            if it is also trashed.
          in: path
          name: group_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrashEmptyGroupContentsResponse'
      deprecated: true
  /api/trash/restore:
    patch:
      tags:
        - Trash
      operationId: Trash_restoreItem
      security:
        - JWT: []
      description: Restores the specified trashed item back into baserow.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTrashEntryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTrashEntryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTrashEntryRequest'
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrashRestoreItemResponse'
  /api/trash/workspace/{workspace_id}:
    get:
      tags:
        - Trash
      operationId: Trash_getWorkspaceTrashContents
      security:
        - JWT: []
      description: >-
        Responds with trash contents for a workspace optionally filtered to a
        specific application.
      parameters:
        - description: >-
            Optionally filters down the trash to only items for this application
            in the workspace.
          in: query
          name: application_id
          schema:
            type: integer
        - description: Selects which page of trash contents should be returned.
          in: query
          name: page
          schema:
            type: integer
        - description: Returns the trash for the workspace with this id.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerTrashContents'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrashGetWorkspaceTrashContentsResponse'
    delete:
      tags:
        - Trash
      operationId: Trash_emptyWorkspace
      security:
        - JWT: []
      description: >-
        Empties the specified workspace and/or application of trash, including
        the workspace and application themselves if they are trashed also.
      parameters:
        - description: >-
            Optionally filters down the trash to delete to only items for this
            application in the workspace.
          in: query
          name: application_id
          schema:
            type: integer
        - description: >-
            The workspace whose trash contents to empty, including the workspace
            itself if it is also trashed.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrashEmptyWorkspaceResponse'
  /api/user:
    post:
      tags:
        - User
      operationId: create_user
      description: >-
        Creates a new user based on the provided values. If desired an
        authentication JWT can be generated right away. After creating an
        account the initial workspace containing a database is created.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUser400Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUser404Response'
  /api/user-files/upload-file:
    post:
      tags:
        - User files
      operationId: upload_file
      security:
        - JWT: []
        - Database token: []
      description: >-
        Uploads a file to Baserow by uploading the file contents directly. A
        `file` multipart is expected containing the file contents.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFile'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadFileResponse'
  /api/user-files/upload-via-url:
    post:
      tags:
        - User files
      operationId: UserFiles_uploadViaUrl
      security:
        - JWT: []
        - Database token: []
      description: Uploads a file to Baserow by downloading it from the provided URL.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFileUploadViaURLRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserFileUploadViaURLRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserFileUploadViaURLRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFile'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFilesUploadViaUrlResponse'
  /api/user-source-auth-refresh:
    post:
      tags:
        - User sources
      operationId: UserSources_refreshAccessToken
      security:
        - JWT: []
        - {}
      description: >-
        Generate a new access_token that can be used to continue operating on
        Baserow with a user source user starting from a valid refresh token.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSourcesRefreshAccessTokenResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSourcesRefreshAccessToken401Response'
  /api/user-source-token-blacklist:
    post:
      tags:
        - User sources
      operationId: UserSources_blacklistToken
      description: >-
        Blacklists the provided user source token. This can be used the sign the
        user off.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
        required: true
      responses:
        '204':
          description: No response body
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSourcesBlacklistTokenResponse'
  /api/user-source/{user_source_id}:
    patch:
      tags:
        - User sources
      operationId: UserSources_updateExistingUserSource
      security:
        - JWT: []
      description: Updates an existing user_source.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the user_source
          in: path
          name: user_source_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser_SourceUpdateUserSource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser_SourceUpdateUserSource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser_SourceUpdateUserSource'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_SourceUserSource'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UserSourcesUpdateExistingUserSourceResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UserSourcesUpdateExistingUserSource404Response
    delete:
      tags:
        - User sources
      operationId: UserSources_removeById
      security:
        - JWT: []
      description: Deletes the user_source related by the given id.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the user_source
          in: path
          name: user_source_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSourcesRemoveByIdResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSourcesRemoveById404Response'
  /api/user-source/{user_source_id}/move:
    patch:
      tags:
        - User sources
      operationId: UserSources_rearrangeUserSource
      security:
        - JWT: []
      description: >-
        Moves the user_source in the application before another user_source or
        at the end of the application if no before user_source is given. The
        user_sources must belong to the same application.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: The id of the user_source to move
          in: path
          name: user_source_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMoveUserSource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMoveUserSource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMoveUserSource'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_SourceUserSource'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSourcesRearrangeUserSourceResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSourcesRearrangeUserSource404Response'
  /api/user/account:
    patch:
      tags:
        - User
      operationId: update_account
      security:
        - JWT: []
      description: Updates the account information of the authenticated user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountResponse'
  /api/user/change-password:
    post:
      tags:
        - User
      operationId: change_password
      security:
        - JWT: []
      description: >-
        Changes the password of an authenticated user, but only if the old
        password matches.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordBodyValidation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePasswordBodyValidation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePasswordBodyValidation'
        required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordResponse'
  /api/user/dashboard:
    get:
      tags:
        - User
      operationId: User_viewPendingWorkspaceInvitations
      security:
        - JWT: []
      description: >-
        Lists all the relevant user information that for example could be shown
        on a dashboard. It will contain all the pending workspace invitations
        for that user.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
  /api/user/redo:
    patch:
      tags:
        - User
      operationId: User_redoAction
      security:
        - JWT: []
      description: >-
        Redoes the latest redoable action performed by the user making the
        request. a ClientSessionId header must be provided and only actions
        which were performed the same user with the same ClientSessionId value
        set on the api request that performed the action will be
        redone.Additionally the ClientSessionId header must be between 1 and 256
        characters long and must only contain alphanumeric or the - characters.
      parameters:
        - description: >-
            The particular client session to redo actions for. The actions must
            have been performed with this same header set with the same value
            for them to be redoable by this endpoint.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUndoRedoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUndoRedoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUndoRedoRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UndoRedoResponse'
  /api/user/reset-password:
    post:
      tags:
        - User
      operationId: reset_password
      description: >-
        Changes the password of a user if the reset token is valid. The
        **send_password_reset_email** endpoint sends an email to the user
        containing the token. That token can be used to change the password here
        without providing the old password.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordBodyValidation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPasswordBodyValidation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPasswordBodyValidation'
        required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
  /api/user/schedule-account-deletion:
    post:
      tags:
        - User
      operationId: User_scheduleAccountDeletion
      security:
        - JWT: []
      description: >-
        Schedules the account deletion of the authenticated user. The user will
        be permanently deleted after the grace delay defined by the instance
        administrator.
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserScheduleAccountDeletionResponse'
  /api/user/send-reset-password-email:
    post:
      tags:
        - User
      operationId: User_sendResetPasswordEmail
      description: >-
        Sends an email containing the password reset link to the email address
        of the user. This will only be done if a user is found with the given
        email address. The endpoint will not fail if the email address is not
        found. The link is going to the valid for 48 hours.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendResetPasswordEmailBodyValidation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendResetPasswordEmailBodyValidation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendResetPasswordEmailBodyValidation'
        required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSendResetPasswordEmailResponse'
  /api/user/token-auth:
    post:
      tags:
        - User
      operationId: token_auth
      description: >-
        Authenticates an existing user based on their email and their password.
        If successful, an access token and a refresh token will be returned.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairWithUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairWithUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairWithUser'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenAuthResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenAuth401Response'
  /api/user/token-blacklist:
    post:
      tags:
        - User
      operationId: token_blacklist
      description: Blacklists the provided token. This can be used the sign the user off.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
        required: true
      responses:
        '204':
          description: No response body
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBlacklistResponse'
  /api/user/token-refresh:
    post:
      tags:
        - User
      operationId: token_refresh
      description: >-
        Generate a new access_token that can be used to continue operating on
        Baserow starting from a valid refresh token.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshWithUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshWithUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshWithUser'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefreshResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh401Response'
  /api/user/token-verify:
    post:
      tags:
        - User
      operationId: token_verify
      description: >-
        Verifies if the refresh token is valid and can be used to generate a new
        access_token.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerifyWithUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerifyWithUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerifyWithUser'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerifyResponse'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify401Response'
  /api/user/undo:
    patch:
      tags:
        - User
      operationId: User_undoLatestUndoableAction
      security:
        - JWT: []
      description: >-
        undoes the latest undoable action performed by the user making the
        request. a ClientSessionId header must be provided and only actions
        which were performed the same user with the same ClientSessionId value
        set on the api request that performed the action will be
        undone.Additionally the ClientSessionId header must be between 1 and 256
        characters long and must only contain alphanumeric or the - characters.
      parameters:
        - description: >-
            The particular client session to undo actions for. The actions must
            have been performed with this same header set with the same value
            for them to be undoable by this endpoint.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUndoRedoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUndoRedoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUndoRedoRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UndoRedoResponse'
  /api/workspaces:
    get:
      tags:
        - Workspaces
      operationId: list_workspaces
      security:
        - JWT: []
      description: >-
        Lists all the workspaces of the authorized user. A workspace can contain
        multiple applications like a database. Multiple users can have access to
        a workspace. For example each company could have their own workspace
        containing databases related to that company. The order of the
        workspaces are custom for each user. The order is configurable via the
        **order_workspaces** endpoint.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkspacesResponse'
    post:
      tags:
        - Workspaces
      operationId: create_workspace
      security:
        - JWT: []
      description: >-
        Creates a new workspace where only the authorized user has access to. No
        initial data like database applications are added, they have to be
        created via other endpoints.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workspace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workspace'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceUserWorkspace'
  /api/workspaces/{workspace_id}:
    patch:
      tags:
        - Workspaces
      operationId: update_workspace
      security:
        - JWT: []
      description: >-
        Updates the existing workspace related to the provided `workspace_id`
        parameter if the authorized user belongs to the workspace. It is not yet
        possible to add additional users to a workspace.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Updates the workspace related to the provided value.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkspace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkspace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkspace'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkspaceResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkspace404Response'
    delete:
      tags:
        - Workspaces
      operationId: delete_workspace
      security:
        - JWT: []
      description: >-
        Deletes an existing workspace if the authorized user belongs to the
        workspace. All the applications, databases, tables etc that were in the
        workspace are going to be deleted also.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
        - description: Deletes the workspace related to the provided value.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkspaceResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWorkspace404Response'
  /api/workspaces/{workspace_id}/leave:
    post:
      tags:
        - Workspaces
      operationId: leave_workspace
      security:
        - JWT: []
      description: >-
        Makes the authenticated user leave the workspace related to the provided
        `workspace_id` if the user is in that workspace. If the user is the last
        admin in the workspace, they will not be able to leave it. There must
        always be one admin in the workspace, otherwise it will be left without
        control. If that is the case, they must either delete the workspace or
        give another member admin permissions first.
      parameters:
        - description: Leaves the workspace related to the value.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveWorkspaceResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveWorkspace404Response'
  /api/workspaces/{workspace_id}/permissions:
    get:
      tags:
        - Workspaces
      operationId: workspace_permissions
      security:
        - JWT: []
      description: >-
        Returns a the permission data necessary to determine the permissions of
        a specific user over a specific workspace. 

        See `core.handler.CoreHandler.get_permissions()` for more details.
      parameters:
        - description: The workspace id we want the permission object for.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspacePermissionsResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspacePermissions404Response'
  /api/workspaces/invitations/{workspace_invitation_id}:
    get:
      tags:
        - Workspace invitations
      operationId: WorkspaceInvitations_getById
      security:
        - JWT: []
      description: >-
        Returns the requested workspace invitation if the authorized user has
        admin right to the related workspace
      parameters:
        - description: Returns the workspace invitation related to the provided value.
          in: path
          name: workspace_invitation_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInvitation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInvitationsGetByIdResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInvitationsGetById404Response'
    patch:
      tags:
        - Workspace invitations
      operationId: WorkspaceInvitations_updateExistingInvitation
      security:
        - JWT: []
      description: >-
        Updates the existing workspace invitation related to the provided
        `workspace_invitation_id` param if the authorized user has admin rights
        to the related workspace.
      parameters:
        - description: Updates the workspace invitation related to the provided value.
          in: path
          name: workspace_invitation_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateWorkspaceInvitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateWorkspaceInvitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateWorkspaceInvitation'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInvitation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/WorkspaceInvitationsUpdateExistingInvitationResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/WorkspaceInvitationsUpdateExistingInvitation404Response
    delete:
      tags:
        - Workspace invitations
      operationId: WorkspaceInvitations_deleteInvitation
      security:
        - JWT: []
      description: >-
        Deletes a workspace invitation if the authorized user has admin rights
        to the related workspace.
      parameters:
        - description: Deletes the workspace invitation related to the provided value.
          in: path
          name: workspace_invitation_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/WorkspaceInvitationsDeleteInvitationResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/WorkspaceInvitationsDeleteInvitation404Response
  /api/workspaces/invitations/{workspace_invitation_id}/accept:
    post:
      tags:
        - Workspace invitations
      operationId: WorkspaceInvitations_acceptInvitation
      security:
        - JWT: []
      description: >-
        Accepts a workspace invitation with the given id if the email address of
        the user matches that of the invitation.
      parameters:
        - description: Accepts the workspace invitation related to the provided value.
          in: path
          name: workspace_invitation_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceUserWorkspace'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/WorkspaceInvitationsAcceptInvitationResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/WorkspaceInvitationsAcceptInvitation404Response
  /api/workspaces/invitations/{workspace_invitation_id}/reject:
    post:
      tags:
        - Workspace invitations
      operationId: WorkspaceInvitations_rejectInvitation
      security:
        - JWT: []
      description: >-
        Rejects a workspace invitation with the given id if the email address of
        the user matches that of the invitation.
      parameters:
        - description: Rejects the workspace invitation related to the provided value.
          in: path
          name: workspace_invitation_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/WorkspaceInvitationsRejectInvitationResponse
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/WorkspaceInvitationsRejectInvitation404Response
  /api/workspaces/invitations/token/{token}:
    get:
      tags:
        - Workspace invitations
      operationId: WorkspaceInvitations_getByToken
      security:
        - JWT: []
        - {}
      description: >-
        Responds with the serialized workspace invitation if an invitation with
        the provided token is found.
      parameters:
        - description: Returns the workspace invitation related to the provided token.
          in: path
          name: token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWorkspaceInvitation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInvitationsGetByTokenResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInvitationsGetByToken404Response'
  /api/workspaces/invitations/workspace/{workspace_id}:
    get:
      tags:
        - Workspace invitations
      operationId: WorkspaceInvitations_list
      security:
        - JWT: []
      description: >-
        Lists all the workspace invitations of the workspace related to the
        provided `workspace_id` parameter if the authorized user has admin
        rights to that workspace.
      parameters:
        - description: >-
            Returns only invitations that are in the workspace related to the
            provided value.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInvitationsListResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInvitationsList400Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInvitationsList404Response'
    post:
      tags:
        - Workspace invitations
      operationId: WorkspaceInvitations_createInvite
      security:
        - JWT: []
      description: >-
        Creates a new workspace invitations for an email address if the
        authorized user has admin rights to the related workspace. An email
        containing a sign up link will be send to the user.
      parameters:
        - description: >-
            Creates a workspace invitation to the workspace related to the
            provided value.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceInvitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceInvitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceInvitation'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInvitation'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInvitationsCreateInviteResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/WorkspaceInvitationsCreateInvite404Response
  /api/workspaces/order:
    post:
      tags:
        - Workspaces
      operationId: order_workspaces
      security:
        - JWT: []
      description: >-
        Changes the order of the provided workspace ids to the matching position
        that the id has in the list. If the authorized user does not belong to
        the workspace it will be ignored. The order will be custom for each
        user.
      parameters:
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular client session. Then using the
            undo/redo endpoints with the same ClientSessionId header this action
            can be undone/redone.
          in: header
          name: ClientSessionId
          schema:
            type: string
            format: uuid
        - description: >-
            An optional header that marks the action performed by this request
            as having occurred in a particular action group.Then calling the
            undo/redo endpoint with the same ClientSessionId header, all the
            actions belonging to the same action group can be undone/redone
            together in a single API call.
          in: header
          name: ClientUndoRedoActionGroupId
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderWorkspaces'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderWorkspaces'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderWorkspaces'
        required: true
      responses:
        '204':
          description: No response body
  /api/workspaces/users/{workspace_user_id}:
    patch:
      tags:
        - Workspaces
      operationId: Workspaces_updateWorkspaceUser
      security:
        - JWT: []
      description: >-
        Updates the existing workspace user related to the provided
        `workspace_user_id` param if the authorized user has admin rights to the
        related workspace.
      parameters:
        - description: Updates the workspace user related to the provided value.
          in: path
          name: workspace_user_id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateWorkspaceUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateWorkspaceUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateWorkspaceUser'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceUser'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspacesUpdateWorkspaceUserResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspacesUpdateWorkspaceUser404Response'
    delete:
      tags:
        - Workspaces
      operationId: Workspaces_deleteUser
      security:
        - JWT: []
      description: >-
        Deletes a workspace user if the authorized user has admin rights to the
        related workspace.
      parameters:
        - description: Deletes the workspace user related to the provided value.
          in: path
          name: workspace_user_id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No response body
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspacesDeleteUserResponse'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspacesDeleteUser404Response'
  /api/workspaces/users/workspace/{workspace_id}:
    get:
      tags:
        - Workspaces
      operationId: Workspaces_listUsersInWorkspace
      security:
        - JWT: []
      description: >-
        Lists all the users that are in a workspace if the authorized user has
        admin permissions to the related workspace. To add a user to a workspace
        an invitation must be sent first.
      parameters:
        - description: Search for workspace users by username, or email.
          in: query
          name: search
          schema:
            type: string
        - description: Sort workspace users by name, email or role.
          in: query
          name: sorts
          schema:
            type: string
        - description: Lists workspace users related to the provided workspace value.
          in: path
          name: workspace_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspacesListUsersInWorkspaceResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspacesListUsersInWorkspace400Response'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspacesListUsersInWorkspace404Response'
components:
  schemas:
    Account:
      description: This serializer must be kept in sync with `UserSerializer`.
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
          minLength: 2
        language:
          description: >-
            An ISO 639 language code (with optional variant) selected by the
            user. Ex: en-GB.
          type: string
          maxLength: 10
          minLength: 2
        email_notification_frequency:
          $ref: '#/components/schemas/EmailNotificationFrequencyEnum'
      x-konfig-properties:
        email_notification_frequency:
          description: >-
            The maximum frequency at which the user wants to receive email
            notifications.


            * `instant` - instant

            * `daily` - daily

            * `weekly` - weekly

            * `never` - never
    ActionScopes:
      description: >-
        Mixin to a DRF serializer class to raise an exception if data with
        unknown fields

        is provided to the serializer.
      type: object
      properties:
        root:
          description: >-
            If set to true then actions registered in the root scope will be
            included when undoing or redoing.
          type: boolean
          nullable: true
        workspace:
          description: >-
            If set to a workspaces id then any actions directly related to that
            workspace will be be included when undoing or redoing.
          type: integer
          minimum: 0
          nullable: true
        group:
          description: >-
            If set to a workspaces id then any actions directly related to that
            workspace will be be included when undoing or redoing.
          type: integer
          minimum: 0
          nullable: true
        application:
          description: >-
            If set to an applications id then any actions directly related to
            that application will be be included when undoing or redoing.
          type: integer
          minimum: 0
          nullable: true
        table:
          description: >-
            If set to a table id then any actions directly related to that table
            will be be included when undoing or redoing.
          type: integer
          minimum: 0
          nullable: true
        view:
          description: >-
            If set to an view id then any actions directly related to that view
            will be be included when undoing or redoing.
          type: integer
          minimum: 0
          nullable: true
        teams_in_workspace:
          description: >-
            If set to a workspace id then any actions directly related to that
            workspace will be be included when undoing or redoing.
          type: integer
          minimum: 0
          nullable: true
    AdminDashboard:
      type: object
      properties:
        total_users:
          type: integer
        total_groups:
          type: integer
        total_workspaces:
          type: integer
        total_applications:
          type: integer
        new_users_last_24_hours:
          type: integer
        new_users_last_7_days:
          type: integer
        new_users_last_30_days:
          type: integer
        previous_new_users_last_24_hours:
          type: integer
        previous_new_users_last_7_days:
          type: integer
        previous_new_users_last_30_days:
          type: integer
        active_users_last_24_hours:
          type: integer
        active_users_last_7_days:
          type: integer
        active_users_last_30_days:
          type: integer
        previous_active_users_last_24_hours:
          type: integer
        previous_active_users_last_7_days:
          type: integer
        previous_active_users_last_30_days:
          type: integer
        new_users_per_day:
          type: array
          items:
            $ref: '#/components/schemas/AdminDashboardPerDay'
        active_users_per_day:
          type: array
          items:
            $ref: '#/components/schemas/AdminDashboardPerDay'
      required:
        - active_users_last_24_hours
        - active_users_last_30_days
        - active_users_last_7_days
        - active_users_per_day
        - new_users_last_24_hours
        - new_users_last_30_days
        - new_users_last_7_days
        - new_users_per_day
        - previous_active_users_last_24_hours
        - previous_active_users_last_30_days
        - previous_active_users_last_7_days
        - previous_new_users_last_24_hours
        - previous_new_users_last_30_days
        - previous_new_users_last_7_days
        - total_applications
        - total_groups
        - total_users
        - total_workspaces
    AdminDashboardPerDay:
      type: object
      properties:
        date:
          type: string
          format: date
        count:
          type: integer
      required:
        - count
        - date
    AggregationRawTypeEnum:
      description: |-
        * `empty_count` - empty_count
        * `not_empty_count` - not_empty_count
        * `unique_count` - unique_count
        * `min` - min
        * `max` - max
        * `sum` - sum
        * `average` - average
        * `median` - median
        * `decile` - decile
        * `variance` - variance
        * `std_dev` - std_dev
      enum:
        - empty_count
        - not_empty_count
        - unique_count
        - min
        - max
        - sum
        - average
        - median
        - decile
        - variance
        - std_dev
      type: string
    AirtableImportJobCreateJob:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeC5eEnum'
        group_id:
          description: The group ID where the Airtable base must be imported into.
          type: integer
        workspace_id:
          description: The workspace ID where the Airtable base must be imported into.
          type: integer
        airtable_share_url:
          description: >-
            The publicly shared URL of the Airtable base (e.g.
            https://airtable.com/shrxxxxxxxxxxxxxx)
          type: string
          format: uri
      required:
        - airtable_share_url
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
    AirtableImportJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the job.
          type: string
          readOnly: true
        progress_percentage:
          description: >-
            A percentage indicating how far along the job is. 100 means that
            it's finished.
          type: integer
        state:
          description: Indicates the state of the import job.
          type: string
        human_readable_error:
          description: A human readable error message indicating what went wrong.
          type: string
        group_id:
          description: The group ID where the Airtable base must be imported into.
          type: integer
        workspace_id:
          description: The workspace ID where the Airtable base must be imported into.
          type: integer
        database:
          $ref: '#/components/schemas/Application'
        airtable_share_id:
          description: Public ID of the shared Airtable base that must be imported.
          type: string
          format: uri
          maxLength: 200
      required:
        - airtable_share_id
        - database
        - group_id
        - id
        - progress_percentage
        - state
        - type
        - workspace_id
    Alignment0e8Enum:
      description: |-
        * `top` - Top
        * `center` - Center
        * `bottom` - Bottom
      enum:
        - top
        - center
        - bottom
      type: string
    Alignment675Enum:
      description: |-
        * `left` - Left
        * `center` - Center
        * `right` - Right
      enum:
        - left
        - center
        - right
      type: string
    App_Auth_ProviderAppAuthProvider:
      oneOf:
        - $ref: >-
            #/components/schemas/LocalBaserowPasswordAppAuthProviderAppAuthProvider
      discriminator:
        propertyName: type
        mapping:
          local_baserow_password: >-
            #/components/schemas/LocalBaserowPasswordAppAuthProviderAppAuthProvider
    App_Auth_ProviderBaseAppAuthProvider:
      oneOf:
        - $ref: >-
            #/components/schemas/LocalBaserowPasswordAppAuthProviderBaseAppAuthProvider
      discriminator:
        propertyName: type
        mapping:
          local_baserow_password: >-
            #/components/schemas/LocalBaserowPasswordAppAuthProviderBaseAppAuthProvider
    Application:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 160
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        group:
          $ref: '#/components/schemas/Workspace'
        workspace:
          $ref: '#/components/schemas/Workspace'
      required:
        - group
        - id
        - name
        - order
        - type
        - workspace
      x-konfig-properties:
        group:
          description: >-
            DEPRECATED: Please use the functionally identical `workspace`
            instead as this field is being removed in the future.
        workspace:
          description: The workspace that the application belongs to.
    ApplicationApplication:
      oneOf:
        - $ref: '#/components/schemas/DatabaseApplication'
        - $ref: '#/components/schemas/BuilderApplication'
      discriminator:
        propertyName: type
        mapping:
          database: '#/components/schemas/DatabaseApplication'
          builder: '#/components/schemas/BuilderApplication'
    ApplicationBaseApplicationCreatePolymorphic:
      oneOf:
        - $ref: '#/components/schemas/DatabaseBaseApplicationCreatePolymorphic'
        - $ref: '#/components/schemas/BuilderBaseApplicationCreatePolymorphic'
      discriminator:
        propertyName: type
        mapping:
          database: '#/components/schemas/DatabaseBaseApplicationCreatePolymorphic'
          builder: '#/components/schemas/BuilderBaseApplicationCreatePolymorphic'
    ArrayFormulaTypeEnum:
      description: |-
        * `invalid` - invalid
        * `text` - text
        * `char` - char
        * `button` - button
        * `link` - link
        * `date_interval` - date_interval
        * `duration` - duration
        * `date` - date
        * `boolean` - boolean
        * `number` - number
        * `single_select` - single_select
        * `multiple_select` - multiple_select
        * `single_file` - single_file
      enum:
        - invalid
        - text
        - char
        - button
        - link
        - date_interval
        - duration
        - date
        - boolean
        - number
        - single_select
        - multiple_select
        - single_file
      type: string
    AuditLog:
      type: object
      properties:
        description:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        action_type:
          type: string
          readOnly: true
        user:
          type: string
          readOnly: true
        group:
          type: string
          readOnly: true
        workspace:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
        ip_address:
          type: string
          readOnly: true
          nullable: true
      required:
        - action_type
        - description
        - group
        - id
        - ip_address
        - timestamp
        - type
        - user
        - workspace
    AuditLogActionType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdEnum'
        value:
          description: |-
            Given the *incoming* primitive data, return the value for this field
            that should be validated and transformed to a native value.
          type: string
          readOnly: true
      required:
        - id
        - value
    AuditLogExportJobCreateJob:
      description: >-
        When mixed in to a model serializer for an ExportJob this will add an
        url field

        with the actual usable url of the export job's file (if it has one).
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        type:
          $ref: '#/components/schemas/TypeC5eEnum'
        export_charset:
          $ref: '#/components/schemas/ExportCharsetEnum'
        csv_column_separator:
          $ref: '#/components/schemas/CsvColumnSeparatorEnum'
        csv_first_row_header:
          description: Whether or not to generate a header row at the top of the csv file.
          type: boolean
          default: true
        filter_user_id:
          description: 'Optional: The user to filter the audit log by.'
          type: integer
          minimum: 0
        filter_workspace_id:
          description: 'Optional: The workspace to filter the audit log by.'
          type: integer
          minimum: 0
        filter_action_type:
          $ref: '#/components/schemas/FilterActionTypeEnum'
        filter_from_timestamp:
          description: 'Optional: The start date to filter the audit log by.'
          type: string
          format: date-time
        filter_to_timestamp:
          description: 'Optional: The end date to filter the audit log by.'
          type: string
          format: date-time
        exclude_columns:
          description: >-
            Optional: A comma separated list of column names to exclude from the
            export. Available options are `user_email, user_id, workspace_name,
            workspace_id, type, description, timestamp, ip_address`.
          type: string
      required:
        - type
        - url
      x-konfig-properties:
        type:
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
        export_charset:
          description: |-
            The character set to use when creating the export file.

            * `utf-8` - utf-8
            * `iso-8859-6` - iso-8859-6
            * `windows-1256` - windows-1256
            * `iso-8859-4` - iso-8859-4
            * `windows-1257` - windows-1257
            * `iso-8859-14` - iso-8859-14
            * `iso-8859-2` - iso-8859-2
            * `windows-1250` - windows-1250
            * `gbk` - gbk
            * `gb18030` - gb18030
            * `big5` - big5
            * `koi8-r` - koi8-r
            * `koi8-u` - koi8-u
            * `iso-8859-5` - iso-8859-5
            * `windows-1251` - windows-1251
            * `x-mac-cyrillic` - mac-cyrillic
            * `iso-8859-7` - iso-8859-7
            * `windows-1253` - windows-1253
            * `iso-8859-8` - iso-8859-8
            * `windows-1255` - windows-1255
            * `euc-jp` - euc-jp
            * `iso-2022-jp` - iso-2022-jp
            * `shift-jis` - shift-jis
            * `euc-kr` - euc-kr
            * `macintosh` - macintosh
            * `iso-8859-10` - iso-8859-10
            * `iso-8859-16` - iso-8859-16
            * `windows-874` - cp874
            * `windows-1254` - windows-1254
            * `windows-1258` - windows-1258
            * `iso-8859-1` - iso-8859-1
            * `windows-1252` - windows-1252
            * `iso-8859-3` - iso-8859-3
          default: utf-8
        csv_column_separator:
          description: "The value used to separate columns in the resulting csv file.\n\n* `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \x1E\n* `unit_separator` - \x1F"
          default: ','
        filter_action_type:
          description: >-
            Optional: The action type to filter the audit log by.


            * `create_group` - create_group

            * `delete_group` - delete_group

            * `update_group` - update_group

            * `order_groups` - order_groups

            * `create_application` - create_application

            * `update_application` - update_application

            * `delete_application` - delete_application

            * `order_applications` - order_applications

            * `duplicate_application` - duplicate_application

            * `install_template` - install_template

            * `create_group_invitation` - create_group_invitation

            * `delete_group_invitation` - delete_group_invitation

            * `accept_group_invitation` - accept_group_invitation

            * `reject_group_invitation` - reject_group_invitation

            * `update_group_invitation_permissions` -
            update_group_invitation_permissions

            * `leave_group` - leave_group

            * `create_snapshot` - create_snapshot

            * `delete_snapshot` - delete_snapshot

            * `restore_snapshot` - restore_snapshot

            * `empty_trash` - empty_trash

            * `restore_from_trash` - restore_from_trash

            * `create_user` - create_user

            * `update_user` - update_user

            * `schedule_user_deletion` - schedule_user_deletion

            * `cancel_user_deletion` - cancel_user_deletion

            * `sign_in_user` - sign_in_user

            * `change_user_password` - change_user_password

            * `send_reset_user_password` - send_reset_user_password

            * `reset_user_password` - reset_user_password

            * `create_db_token` - create_db_token

            * `update_db_token_name` - update_db_token_name

            * `update_db_token_permissions` - update_db_token_permissions

            * `rotate_db_token_key` - rotate_db_token_key

            * `delete_db_token_key` - delete_db_token_key

            * `create_webhook` - create_webhook

            * `delete_webhook` - delete_webhook

            * `update_webhook` - update_webhook

            * `export_table` - export_table

            * `import_database_from_airtable` - import_database_from_airtable

            * `create_table` - create_table

            * `delete_table` - delete_table

            * `order_tables` - order_tables

            * `update_table` - update_table

            * `duplicate_table` - duplicate_table

            * `create_row` - create_row

            * `create_rows` - create_rows

            * `import_rows` - import_rows

            * `delete_row` - delete_row

            * `delete_rows` - delete_rows

            * `move_row` - move_row

            * `update_row` - update_row

            * `update_rows` - update_rows

            * `create_view` - create_view

            * `duplicate_view` - duplicate_view

            * `delete_view` - delete_view

            * `order_views` - order_views

            * `update_view` - update_view

            * `create_view_filter` - create_view_filter

            * `update_view_filter` - update_view_filter

            * `delete_view_filter` - delete_view_filter

            * `create_view_sort` - create_view_sort

            * `update_view_sort` - update_view_sort

            * `delete_view_sort` - delete_view_sort

            * `create_view_group` - create_view_group

            * `update_view_group` - update_view_group

            * `delete_view_group` - delete_view_group

            * `rotate_view_slug` - rotate_view_slug

            * `update_view_field_options` - update_view_field_options

            * `create_decoration` - create_decoration

            * `update_decoration` - update_decoration

            * `delete_decoration` - delete_decoration

            * `create_view_filter_group` - create_view_filter_group

            * `update_view_filter_group` - update_view_filter_group

            * `delete_view_filter_group` - delete_view_filter_group

            * `create_field` - create_field

            * `delete_field` - delete_field

            * `update_field` - update_field

            * `duplicate_field` - duplicate_field

            * `create_row_comment` - create_row_comment

            * `delete_row_comment` - delete_row_comment

            * `update_row_comment` - update_row_comment

            * `create_team` - create_team

            * `update_team` - update_team

            * `delete_team` - delete_team

            * `create_team_subject` - create_team_subject

            * `delete_team_subject` - delete_team_subject

            * `batch_assign_role` - batch_assign_role
    AuditLogExportJobJob:
      description: >-
        When mixed in to a model serializer for an ExportJob this will add an
        url field

        with the actual usable url of the export job's file (if it has one).
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the job.
          type: string
          readOnly: true
        progress_percentage:
          description: >-
            A percentage indicating how far along the job is. 100 means that
            it's finished.
          type: integer
        state:
          description: Indicates the state of the import job.
          type: string
        human_readable_error:
          description: A human readable error message indicating what went wrong.
          type: string
        csv_column_separator:
          $ref: '#/components/schemas/CsvColumnSeparatorEnum'
        csv_first_row_header:
          description: Whether or not to generate a header row at the top of the csv file.
          type: boolean
          default: true
        export_charset:
          $ref: '#/components/schemas/ExportCharsetEnum'
        filter_user_id:
          description: 'Optional: The user to filter the audit log by.'
          type: integer
          minimum: 0
        filter_workspace_id:
          description: 'Optional: The workspace to filter the audit log by.'
          type: integer
          minimum: 0
        filter_action_type:
          $ref: '#/components/schemas/FilterActionTypeEnum'
        filter_from_timestamp:
          description: 'Optional: The start date to filter the audit log by.'
          type: string
          format: date-time
        filter_to_timestamp:
          description: 'Optional: The end date to filter the audit log by.'
          type: string
          format: date-time
        exclude_columns:
          description: >-
            Optional: A comma separated list of column names to exclude from the
            export. Available options are `user_email, user_id, workspace_name,
            workspace_id, type, description, timestamp, ip_address`.
          type: string
        created_on:
          description: The date and time when the export job was created.
          type: string
          format: date-time
          readOnly: true
        exported_file_name:
          description: The name of the file that was created by the export job.
          type: string
          readOnly: true
        url:
          description: The URL to download the exported file.
          type: string
          format: uri
          readOnly: true
      required:
        - created_on
        - exported_file_name
        - id
        - progress_percentage
        - state
        - type
        - url
      x-konfig-properties:
        csv_column_separator:
          description: "The value used to separate columns in the resulting csv file.\n\n* `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \x1E\n* `unit_separator` - \x1F"
          default: ','
        export_charset:
          description: |-
            The character set to use when creating the export file.

            * `utf-8` - utf-8
            * `iso-8859-6` - iso-8859-6
            * `windows-1256` - windows-1256
            * `iso-8859-4` - iso-8859-4
            * `windows-1257` - windows-1257
            * `iso-8859-14` - iso-8859-14
            * `iso-8859-2` - iso-8859-2
            * `windows-1250` - windows-1250
            * `gbk` - gbk
            * `gb18030` - gb18030
            * `big5` - big5
            * `koi8-r` - koi8-r
            * `koi8-u` - koi8-u
            * `iso-8859-5` - iso-8859-5
            * `windows-1251` - windows-1251
            * `x-mac-cyrillic` - mac-cyrillic
            * `iso-8859-7` - iso-8859-7
            * `windows-1253` - windows-1253
            * `iso-8859-8` - iso-8859-8
            * `windows-1255` - windows-1255
            * `euc-jp` - euc-jp
            * `iso-2022-jp` - iso-2022-jp
            * `shift-jis` - shift-jis
            * `euc-kr` - euc-kr
            * `macintosh` - macintosh
            * `iso-8859-10` - iso-8859-10
            * `iso-8859-16` - iso-8859-16
            * `windows-874` - cp874
            * `windows-1254` - windows-1254
            * `windows-1258` - windows-1258
            * `iso-8859-1` - iso-8859-1
            * `windows-1252` - windows-1252
            * `iso-8859-3` - iso-8859-3
          default: utf-8
        filter_action_type:
          description: >-
            Optional: The action type to filter the audit log by.


            * `create_group` - create_group

            * `delete_group` - delete_group

            * `update_group` - update_group

            * `order_groups` - order_groups

            * `create_application` - create_application

            * `update_application` - update_application

            * `delete_application` - delete_application

            * `order_applications` - order_applications

            * `duplicate_application` - duplicate_application

            * `install_template` - install_template

            * `create_group_invitation` - create_group_invitation

            * `delete_group_invitation` - delete_group_invitation

            * `accept_group_invitation` - accept_group_invitation

            * `reject_group_invitation` - reject_group_invitation

            * `update_group_invitation_permissions` -
            update_group_invitation_permissions

            * `leave_group` - leave_group

            * `create_snapshot` - create_snapshot

            * `delete_snapshot` - delete_snapshot

            * `restore_snapshot` - restore_snapshot

            * `empty_trash` - empty_trash

            * `restore_from_trash` - restore_from_trash

            * `create_user` - create_user

            * `update_user` - update_user

            * `schedule_user_deletion` - schedule_user_deletion

            * `cancel_user_deletion` - cancel_user_deletion

            * `sign_in_user` - sign_in_user

            * `change_user_password` - change_user_password

            * `send_reset_user_password` - send_reset_user_password

            * `reset_user_password` - reset_user_password

            * `create_db_token` - create_db_token

            * `update_db_token_name` - update_db_token_name

            * `update_db_token_permissions` - update_db_token_permissions

            * `rotate_db_token_key` - rotate_db_token_key

            * `delete_db_token_key` - delete_db_token_key

            * `create_webhook` - create_webhook

            * `delete_webhook` - delete_webhook

            * `update_webhook` - update_webhook

            * `export_table` - export_table

            * `import_database_from_airtable` - import_database_from_airtable

            * `create_table` - create_table

            * `delete_table` - delete_table

            * `order_tables` - order_tables

            * `update_table` - update_table

            * `duplicate_table` - duplicate_table

            * `create_row` - create_row

            * `create_rows` - create_rows

            * `import_rows` - import_rows

            * `delete_row` - delete_row

            * `delete_rows` - delete_rows

            * `move_row` - move_row

            * `update_row` - update_row

            * `update_rows` - update_rows

            * `create_view` - create_view

            * `duplicate_view` - duplicate_view

            * `delete_view` - delete_view

            * `order_views` - order_views

            * `update_view` - update_view

            * `create_view_filter` - create_view_filter

            * `update_view_filter` - update_view_filter

            * `delete_view_filter` - delete_view_filter

            * `create_view_sort` - create_view_sort

            * `update_view_sort` - update_view_sort

            * `delete_view_sort` - delete_view_sort

            * `create_view_group` - create_view_group

            * `update_view_group` - update_view_group

            * `delete_view_group` - delete_view_group

            * `rotate_view_slug` - rotate_view_slug

            * `update_view_field_options` - update_view_field_options

            * `create_decoration` - create_decoration

            * `update_decoration` - update_decoration

            * `delete_decoration` - delete_decoration

            * `create_view_filter_group` - create_view_filter_group

            * `update_view_filter_group` - update_view_filter_group

            * `delete_view_filter_group` - delete_view_filter_group

            * `create_field` - create_field

            * `delete_field` - delete_field

            * `update_field` - update_field

            * `duplicate_field` - duplicate_field

            * `create_row_comment` - create_row_comment

            * `delete_row_comment` - delete_row_comment

            * `update_row_comment` - update_row_comment

            * `create_team` - create_team

            * `update_team` - update_team

            * `delete_team` - delete_team

            * `create_team_subject` - create_team_subject

            * `delete_team_subject` - delete_team_subject

            * `batch_assign_role` - batch_assign_role
    AuditLogUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: string
      required:
        - id
        - value
    AuditLogWorkspace:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: string
      required:
        - id
        - value
    AuthFormElementCreateElement:
      description: >-
        This serializer allow to set the type of an element and the element id
        before which

        we want to insert the new element.
      type: object
      properties:
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        before_id:
          description: >-
            If provided, creates the element before the element with the given
            id.
          type: integer
        type:
          $ref: '#/components/schemas/Type2a6Enum'
        parent_element_id:
          description: >-
            If provided, creates the element as a child of the element with the
            given id.
          type: integer
          nullable: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        user_source_id:
          description: Display the auth form for the selected user source
          type: integer
          nullable: true
      required:
        - order
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `form_container` - form_container
            * `dropdown` - dropdown
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `auth_form` - auth_form
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    AuthFormElementElement:
      description: |-
        Basic element serializer mostly for returned values.

        👉 Mind to update the
        baserow.contrib.builder.api.domains.serializer.PublicElementSerializer
        when you update this one.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        user_source_id:
          description: Display the auth form for the selected user source
          type: integer
          nullable: true
      required:
        - id
        - order
        - page_id
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    AuthFormElementPublicElement:
      description: Basic element serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        user_source_id:
          description: Display the auth form for the selected user source
          type: integer
          nullable: true
      required:
        - id
        - order
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    AuthFormElementUpdateElement:
      type: object
      properties:
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        user_source_id:
          description: Display the auth form for the selected user source
          type: integer
          nullable: true
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    Authentication_ProviderAuthProvider:
      oneOf:
        - $ref: '#/components/schemas/PasswordAuthProviderModelAuthProvider'
        - $ref: '#/components/schemas/SamlAuthProviderModelAuthProvider'
        - $ref: '#/components/schemas/GoogleAuthProviderModelAuthProvider'
        - $ref: '#/components/schemas/FacebookAuthProviderModelAuthProvider'
        - $ref: '#/components/schemas/GitHubAuthProviderModelAuthProvider'
        - $ref: '#/components/schemas/GitLabAuthProviderModelAuthProvider'
        - $ref: '#/components/schemas/OpenIdConnectAuthProviderModelAuthProvider'
      discriminator:
        propertyName: type
        mapping:
          password: '#/components/schemas/PasswordAuthProviderModelAuthProvider'
          saml: '#/components/schemas/SamlAuthProviderModelAuthProvider'
          google: '#/components/schemas/GoogleAuthProviderModelAuthProvider'
          facebook: '#/components/schemas/FacebookAuthProviderModelAuthProvider'
          github: '#/components/schemas/GitHubAuthProviderModelAuthProvider'
          gitlab: '#/components/schemas/GitLabAuthProviderModelAuthProvider'
          openid_connect: '#/components/schemas/OpenIdConnectAuthProviderModelAuthProvider'
    AutonumberFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        view_id:
          description: The id of the view to use for the initial ordering.
          type: integer
          nullable: true
      required:
        - name
        - type
    AutonumberFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
    AutonumberFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
    AutonumberFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        view_id:
          description: The id of the view to use for the initial ordering.
          type: integer
          nullable: true
    BaseExporterOptions:
      type: object
      properties:
        view_id:
          description: >-
            Optional: The view for this table to export using its filters, sorts
            and other view specific settings.
          type: integer
          minimum: 0
          nullable: true
        exporter_type:
          $ref: '#/components/schemas/ExporterTypeEnum'
        export_charset:
          $ref: '#/components/schemas/ExportCharsetEnum'
      required:
        - exporter_type
      x-konfig-properties:
        exporter_type:
          description: |-
            The file type to export to.

            * `csv` - csv
            * `json` - json
            * `xml` - xml
        export_charset:
          description: |-
            The character set to use when creating the export file.

            * `utf-8` - utf-8
            * `iso-8859-6` - iso-8859-6
            * `windows-1256` - windows-1256
            * `iso-8859-4` - iso-8859-4
            * `windows-1257` - windows-1257
            * `iso-8859-14` - iso-8859-14
            * `iso-8859-2` - iso-8859-2
            * `windows-1250` - windows-1250
            * `gbk` - gbk
            * `gb18030` - gb18030
            * `big5` - big5
            * `koi8-r` - koi8-r
            * `koi8-u` - koi8-u
            * `iso-8859-5` - iso-8859-5
            * `windows-1251` - windows-1251
            * `x-mac-cyrillic` - mac-cyrillic
            * `iso-8859-7` - iso-8859-7
            * `windows-1253` - windows-1253
            * `iso-8859-8` - iso-8859-8
            * `windows-1255` - windows-1255
            * `euc-jp` - euc-jp
            * `iso-2022-jp` - iso-2022-jp
            * `shift-jis` - shift-jis
            * `euc-kr` - euc-kr
            * `macintosh` - macintosh
            * `iso-8859-10` - iso-8859-10
            * `iso-8859-16` - iso-8859-16
            * `windows-874` - cp874
            * `windows-1254` - windows-1254
            * `windows-1258` - windows-1258
            * `iso-8859-1` - iso-8859-1
            * `windows-1252` - windows-1252
            * `iso-8859-3` - iso-8859-3
          default: utf-8
    BaserowImpersonateAuthToken:
      description: Serializer used for impersonation.
      type: object
      properties:
        user:
          type: integer
      required:
        - user
    BatchCreateRoleAssignment:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CreateRoleAssignment'
      required:
        - items
    BatchDeleteRows:
      type: object
      properties:
        items:
          type: array
          items:
            type: integer
          maxItems: 200
          minItems: 1
      required:
        - items
    BlankEnum:
      enum:
        - ''
      type: string
    BooleanFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
      required:
        - name
        - type
    BooleanFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
    BooleanFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
    BooleanFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
    BuilderApplication:
      description: |-
        The builder serializer.

        👉 Mind to update the
        baserow.contrib.builder.api.domains.serializer.PublicBuilderSerializer
        when you update this one.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 160
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        group:
          $ref: '#/components/schemas/Workspace'
        workspace:
          $ref: '#/components/schemas/Workspace'
        pages:
          description: >-
            This field is specific to the `builder` application and contains an
            array of pages that are in the builder.
          type: array
          items:
            $ref: '#/components/schemas/Page'
          readOnly: true
        theme:
          $ref: '#/components/schemas/CombinedThemeConfigBlocks'
      required:
        - group
        - id
        - name
        - order
        - pages
        - theme
        - type
        - workspace
      x-konfig-properties:
        group:
          description: >-
            DEPRECATED: Please use the functionally identical `workspace`
            instead as this field is being removed in the future.
        workspace:
          description: The workspace that the application belongs to.
        theme:
          description: >-
            This field is specific to the `builder` application and contains the
            theme settings.
          readOnly: true
    BuilderBaseApplicationCreatePolymorphic:
      description: |-
        The builder serializer.

        👉 Mind to update the
        baserow.contrib.builder.api.domains.serializer.PublicBuilderSerializer
        when you update this one.
      type: object
      properties:
        name:
          type: string
          maxLength: 160
        type:
          $ref: '#/components/schemas/TypeF4fEnum'
        init_with_data:
          type: boolean
          default: false
      required:
        - name
        - type
    BuilderBaseApplicationUpdatePolymorphic:
      description: |-
        The builder serializer.

        👉 Mind to update the
        baserow.contrib.builder.api.domains.serializer.PublicBuilderSerializer
        when you update this one.
      type: object
      properties:
        name:
          type: string
          maxLength: 160
      required:
        - name
    BuilderWorkflowAction:
      description: Basic builder workflow action serializer
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        element_id:
          type: integer
          nullable: true
          readOnly: true
        type:
          description: The type of the workflow action
          type: string
          readOnly: true
        event:
          $ref: '#/components/schemas/EventEnum'
      required:
        - element_id
        - event
        - id
        - order
        - type
      x-konfig-properties:
        event:
          description: |-
            The event that triggers the execution

            * `click` - Click
            * `submit` - Submit
            * `after_login` - After Login
    Builder_Workflow_Action_TypeBuilderWorkflowAction:
      oneOf:
        - $ref: '#/components/schemas/NotificationWorkflowActionBuilderWorkflowAction'
        - $ref: '#/components/schemas/OpenPageWorkflowActionBuilderWorkflowAction'
        - $ref: >-
            #/components/schemas/LocalBaserowCreateRowWorkflowActionBuilderWorkflowAction
        - $ref: >-
            #/components/schemas/LocalBaserowUpdateRowWorkflowActionBuilderWorkflowAction
        - $ref: '#/components/schemas/LogoutWorkflowActionBuilderWorkflowAction'
      discriminator:
        propertyName: type
        mapping:
          notification: '#/components/schemas/NotificationWorkflowActionBuilderWorkflowAction'
          open_page: '#/components/schemas/OpenPageWorkflowActionBuilderWorkflowAction'
          create_row: >-
            #/components/schemas/LocalBaserowCreateRowWorkflowActionBuilderWorkflowAction
          update_row: >-
            #/components/schemas/LocalBaserowUpdateRowWorkflowActionBuilderWorkflowAction
          logout: '#/components/schemas/LogoutWorkflowActionBuilderWorkflowAction'
    Builder_Workflow_Action_TypeCreateBuilderWorkflowAction:
      oneOf:
        - $ref: >-
            #/components/schemas/NotificationWorkflowActionCreateBuilderWorkflowAction
        - $ref: >-
            #/components/schemas/OpenPageWorkflowActionCreateBuilderWorkflowAction
        - $ref: >-
            #/components/schemas/LocalBaserowCreateRowWorkflowActionCreateBuilderWorkflowAction
        - $ref: >-
            #/components/schemas/LocalBaserowUpdateRowWorkflowActionCreateBuilderWorkflowAction
        - $ref: '#/components/schemas/LogoutWorkflowActionCreateBuilderWorkflowAction'
      discriminator:
        propertyName: type
        mapping:
          notification: >-
            #/components/schemas/NotificationWorkflowActionCreateBuilderWorkflowAction
          open_page: >-
            #/components/schemas/OpenPageWorkflowActionCreateBuilderWorkflowAction
          create_row: >-
            #/components/schemas/LocalBaserowCreateRowWorkflowActionCreateBuilderWorkflowAction
          update_row: >-
            #/components/schemas/LocalBaserowUpdateRowWorkflowActionCreateBuilderWorkflowAction
          logout: '#/components/schemas/LogoutWorkflowActionCreateBuilderWorkflowAction'
    ButtonElementCreateElement:
      description: >-
        This serializer allow to set the type of an element and the element id
        before which

        we want to insert the new element.
      type: object
      properties:
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        before_id:
          description: >-
            If provided, creates the element before the element with the given
            id.
          type: integer
        type:
          $ref: '#/components/schemas/Type2a6Enum'
        parent_element_id:
          description: >-
            If provided, creates the element as a child of the element with the
            given id.
          type: integer
          nullable: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        value:
          description: The caption of the button.
          type: string
          default: ''
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
        width:
          $ref: '#/components/schemas/WidthEnum'
        button_color:
          description: Button color.
          type: string
          default: primary
          maxLength: 20
      required:
        - order
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `form_container` - form_container
            * `dropdown` - dropdown
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `auth_form` - auth_form
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    ButtonElementElement:
      description: |-
        Basic element serializer mostly for returned values.

        👉 Mind to update the
        baserow.contrib.builder.api.domains.serializer.PublicElementSerializer
        when you update this one.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        value:
          description: The caption of the button.
          type: string
          default: ''
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
        width:
          $ref: '#/components/schemas/WidthEnum'
        button_color:
          description: Button color.
          type: string
          default: primary
          maxLength: 20
      required:
        - id
        - order
        - page_id
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    ButtonElementPublicElement:
      description: Basic element serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        value:
          description: The caption of the button.
          type: string
          default: ''
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
        width:
          $ref: '#/components/schemas/WidthEnum'
        button_color:
          description: Button color.
          type: string
          default: primary
          maxLength: 20
      required:
        - id
        - order
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    ButtonElementUpdateElement:
      type: object
      properties:
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        value:
          description: The caption of the button.
          type: string
          default: ''
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
        width:
          $ref: '#/components/schemas/WidthEnum'
        button_color:
          description: Button color.
          type: string
          default: primary
          maxLength: 20
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    CalendarViewCreateView:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/ViewTypesEnum'
        ownership_type:
          $ref: '#/components/schemas/OwnershipTypeEnum'
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        filters_disabled:
          description: >-
            Allows users to see results unfiltered while still keeping the
            filters saved for the view.
          type: boolean
        date_field:
          type: integer
          nullable: true
        public:
          description: Indicates whether the view is publicly accessible to visitors.
          type: boolean
        slug:
          description: The unique slug that can be used to construct a public URL.
          type: string
          readOnly: true
      required:
        - name
        - slug
        - type
      x-konfig-properties:
        ownership_type:
          default: collaborative
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    CalendarViewExampleResponse:
      type: object
      properties:
        rows:
          description: >-
            Every date bucket (e.g. '2023-01-01') related to the view's date
            field can have its own entry like this.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CalendarViewExampleResponseStack'
        field_options:
          type: array
          items:
            $ref: '#/components/schemas/CalendarViewFieldOptions'
        row_metadata:
          description: >-
            An object keyed by row id with a value being an object containing
            additional metadata about that row. A row might not have metadata
            and will not be present as a key if so.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RowMetadata'
      required:
        - field_options
        - rows
    CalendarViewExampleResponseStack:
      type: object
      properties:
        count:
          description: The total count of rows that are included in this group.
          type: integer
        results:
          description: >-
            All the rows that belong in this group and match provided `limit`
            and `offset`.
          type: array
          items:
            $ref: '#/components/schemas/ExampleRowResponse'
      required:
        - count
        - results
    CalendarViewFieldOptions:
      type: object
      properties:
        hidden:
          description: Whether or not the field should be hidden in the card.
          type: boolean
        order:
          description: The order that the field has in the view. Lower value is first.
          type: integer
          maximum: 32767
          minimum: -32768
    CalendarViewView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          $ref: '#/components/schemas/Table'
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilter'
        filter_groups:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilterGroup'
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/ViewSort'
        group_bys:
          type: array
          items:
            $ref: '#/components/schemas/ViewGroupBy'
        decorations:
          type: array
          items:
            $ref: '#/components/schemas/ViewDecoration'
        filters_disabled:
          description: >-
            Allows users to see results unfiltered while still keeping the
            filters saved for the view.
          type: boolean
        public_view_has_password:
          description: >-
            Indicates whether the public view is password protected or not.


            :return: True if the public view is password protected, False
            otherwise.
          type: boolean
          readOnly: true
        show_logo:
          type: boolean
        ownership_type:
          type: string
        owned_by_id:
          type: integer
        date_field:
          type: integer
          nullable: true
        public:
          description: Indicates whether the view is publicly accessible to visitors.
          type: boolean
        slug:
          description: The unique slug that can be used to construct a public URL.
          type: string
          readOnly: true
      required:
        - id
        - name
        - order
        - ownership_type
        - public_view_has_password
        - slug
        - table
        - table_id
        - type
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    ChangePasswordBodyValidation:
      type: object
      properties:
        old_password:
          type: string
        new_password:
          type: string
      required:
        - new_password
        - old_password
    CheckboxElementCreateElement:
      description: >-
        This serializer allow to set the type of an element and the element id
        before which

        we want to insert the new element.
      type: object
      properties:
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        before_id:
          description: >-
            If provided, creates the element before the element with the given
            id.
          type: integer
        type:
          $ref: '#/components/schemas/Type2a6Enum'
        parent_element_id:
          description: >-
            If provided, creates the element as a child of the element with the
            given id.
          type: integer
          nullable: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        label:
          description: The text label for this input
          type: string
          default: ''
        default_value:
          description: The input's default value.
          type: string
          default: ''
        required:
          description: Whether this input is a required field.
          type: boolean
          default: false
      required:
        - order
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `form_container` - form_container
            * `dropdown` - dropdown
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `auth_form` - auth_form
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    CheckboxElementElement:
      description: |-
        Basic element serializer mostly for returned values.

        👉 Mind to update the
        baserow.contrib.builder.api.domains.serializer.PublicElementSerializer
        when you update this one.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        label:
          description: The text label for this input
          type: string
          default: ''
        default_value:
          description: The input's default value.
          type: string
          default: ''
        required:
          description: Whether this input is a required field.
          type: boolean
          default: false
      required:
        - id
        - order
        - page_id
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    CheckboxElementPublicElement:
      description: Basic element serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        label:
          description: The text label for this input
          type: string
          default: ''
        default_value:
          description: The input's default value.
          type: string
          default: ''
        required:
          description: Whether this input is a required field.
          type: boolean
          default: false
      required:
        - id
        - order
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    CheckboxElementUpdateElement:
      type: object
      properties:
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        label:
          description: The text label for this input
          type: string
          default: ''
        default_value:
          description: The input's default value.
          type: string
          default: ''
        required:
          description: Whether this input is a required field.
          type: boolean
          default: false
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    Collaborator:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          readOnly: true
      required:
        - id
        - name
    CollectionField:
      description: >-
        This serializer transform the flat properties object from/to a config
        dict property.

        This allows us to see the field on the frontend side as a simple
        polymorphic

        object.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          description: The name of the field.
          type: string
          maxLength: 225
        type:
          description: The type of the field.
          type: string
          maxLength: 225
      required:
        - id
        - name
        - type
    ColumnElementCreateElement:
      description: >-
        This serializer allow to set the type of an element and the element id
        before which

        we want to insert the new element.
      type: object
      properties:
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        before_id:
          description: >-
            If provided, creates the element before the element with the given
            id.
          type: integer
        type:
          $ref: '#/components/schemas/Type2a6Enum'
        parent_element_id:
          description: >-
            If provided, creates the element as a child of the element with the
            given id.
          type: integer
          nullable: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        column_amount:
          description: The amount of columns inside this column element.
          type: integer
          maximum: 6
          minimum: 1
        column_gap:
          description: The amount of space between the columns.
          type: integer
          maximum: 2000
          minimum: 0
        alignment:
          $ref: '#/components/schemas/Alignment0e8Enum'
      required:
        - order
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `form_container` - form_container
            * `dropdown` - dropdown
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `auth_form` - auth_form
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    ColumnElementElement:
      description: |-
        Basic element serializer mostly for returned values.

        👉 Mind to update the
        baserow.contrib.builder.api.domains.serializer.PublicElementSerializer
        when you update this one.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        column_amount:
          description: The amount of columns inside this column element.
          type: integer
          maximum: 6
          minimum: 1
        column_gap:
          description: The amount of space between the columns.
          type: integer
          maximum: 2000
          minimum: 0
        alignment:
          $ref: '#/components/schemas/Alignment0e8Enum'
      required:
        - id
        - order
        - page_id
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    ColumnElementPublicElement:
      description: Basic element serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        column_amount:
          description: The amount of columns inside this column element.
          type: integer
          maximum: 6
          minimum: 1
        column_gap:
          description: The amount of space between the columns.
          type: integer
          maximum: 2000
          minimum: 0
        alignment:
          $ref: '#/components/schemas/Alignment0e8Enum'
      required:
        - id
        - order
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    ColumnElementUpdateElement:
      type: object
      properties:
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        column_amount:
          description: The amount of columns inside this column element.
          type: integer
          maximum: 6
          minimum: 1
        column_gap:
          description: The amount of space between the columns.
          type: integer
          maximum: 2000
          minimum: 0
        alignment:
          $ref: '#/components/schemas/Alignment0e8Enum'
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    CombinedThemeConfigBlocks:
      type: object
      properties:
        primary_color:
          type: string
          maxLength: 9
        secondary_color:
          type: string
          maxLength: 9
        border_color:
          type: string
          maxLength: 9
        heading_1_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_1_color:
          type: string
          maxLength: 9
        heading_2_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_2_color:
          type: string
          maxLength: 9
        heading_3_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_3_color:
          type: string
          maxLength: 9
    ConditionTypeEnum:
      description: |-
        * `AND` - And
        * `OR` - Or
      enum:
        - AND
        - OR
      type: string
    ConditionalColorValueProviderConfColor:
      type: object
      properties:
        id:
          description: A unique identifier for this condition.
          type: string
        color:
          description: The color the decorator should take if the defined conditions apply.
          type: string
        filters:
          description: >-
            A list of conditions that the row must meet to get the selected
            color. This list of conditions can be empty, in that case, this
            color will always match the row values.
          type: array
          items:
            $ref: '#/components/schemas/ConditionalColorValueProviderConfColorFilter'
        filter_groups:
          description: >-
            A list of filter groups that the row must meet to get the selected
            color. 
          type: array
          items:
            $ref: >-
              #/components/schemas/ConditionalColorValueProviderConfColorFilterGroup
        operator:
          $ref: '#/components/schemas/ConditionTypeEnum'
      required:
        - color
        - filters
        - id
      x-konfig-properties:
        operator:
          description: |-
            The boolean operator used to group all conditions.

            * `AND` - And
            * `OR` - Or
          default: AND
    ConditionalColorValueProviderConfColorFilter:
      type: object
      properties:
        id:
          description: A unique identifier for this condition.
          type: string
        field:
          description: The field of which the value must be compared to the filter value.
          type: integer
          nullable: true
        type:
          description: >-
            Indicates how the field's value must be compared to the filter's
            value. The filter is always in this order `field` `type` `value`
            (example: `field_1` `contains` `Test`).


            * `equal` - equal

            * `not_equal` - not_equal

            * `filename_contains` - filename_contains

            * `files_lower_than` - files_lower_than

            * `has_file_type` - has_file_type

            * `contains` - contains

            * `contains_not` - contains_not

            * `contains_word` - contains_word

            * `doesnt_contain_word` - doesnt_contain_word

            * `length_is_lower_than` - length_is_lower_than

            * `higher_than` - higher_than

            * `lower_than` - lower_than

            * `is_even_and_whole` - is_even_and_whole

            * `date_equal` - date_equal

            * `date_before` - date_before

            * `date_before_or_equal` - date_before_or_equal

            * `date_after_days_ago` - date_after_days_ago

            * `date_after` - date_after

            * `date_after_or_equal` - date_after_or_equal

            * `date_not_equal` - date_not_equal

            * `date_equals_today` - date_equals_today

            * `date_before_today` - date_before_today

            * `date_after_today` - date_after_today

            * `date_within_days` - date_within_days

            * `date_within_weeks` - date_within_weeks

            * `date_within_months` - date_within_months

            * `date_equals_days_ago` - date_equals_days_ago

            * `date_equals_months_ago` - date_equals_months_ago

            * `date_equals_years_ago` - date_equals_years_ago

            * `date_equals_week` - date_equals_week

            * `date_equals_month` - date_equals_month

            * `date_equals_day_of_month` - date_equals_day_of_month

            * `date_equals_year` - date_equals_year

            * `single_select_equal` - single_select_equal

            * `single_select_not_equal` - single_select_not_equal

            * `link_row_has` - link_row_has

            * `link_row_has_not` - link_row_has_not

            * `link_row_contains` - link_row_contains

            * `link_row_not_contains` - link_row_not_contains

            * `boolean` - boolean

            * `empty` - empty

            * `not_empty` - not_empty

            * `multiple_select_has` - multiple_select_has

            * `multiple_select_has_not` - multiple_select_has_not

            * `multiple_collaborators_has` - multiple_collaborators_has

            * `multiple_collaborators_has_not` - multiple_collaborators_has_not

            * `user_is` - user_is

            * `user_is_not` - user_is_not
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/Type880Enum'
            - $ref: '#/components/schemas/NullEnum'
        value:
          description: The field of which the value must be compared to the filter value.
          type: string
          default: ''
        group:
          description: >-
            The id of the filter group this filter belongs to. If this is null,
            the filter is not part of a filter group.
          type: string
          nullable: true
      required:
        - field
        - id
        - type
    ConditionalColorValueProviderConfColorFilterGroup:
      type: object
      properties:
        id:
          description: A unique identifier for this condition.
          type: string
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
      required:
        - id
      x-konfig-properties:
        filter_type:
          description: |-
            The boolean operator used to group all conditions.

            * `AND` - And
            * `OR` - Or
          default: AND
    ConditionalColorValueProviderConfColors:
      type: object
      properties:
        colors:
          description: >-
            A list of color items. For each row, the value provider try to match
            the defined colors one by one in the given order. The first matching
            color is returned to the decorator.
          type: array
          items:
            $ref: '#/components/schemas/ConditionalColorValueProviderConfColor'
      required:
        - colors
    CountFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateTimeFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
          nullable: true
        array_formula_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
            - $ref: '#/components/schemas/NullEnum'
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DurationFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
            - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
            - $ref: '#/components/schemas/NullEnum'
        nullable:
          type: boolean
          readOnly: true
        error:
          type: string
          nullable: true
        date_show_tzinfo:
          description: Indicates if the time zone should be shown.
          type: boolean
          nullable: true
        through_field_id:
          description: The id of the link row field to count values for.
          type: integer
          nullable: true
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
        - name
        - nullable
        - type
    CountFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateTimeFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
          nullable: true
        array_formula_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
            - $ref: '#/components/schemas/NullEnum'
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DurationFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
            - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
            - $ref: '#/components/schemas/NullEnum'
        nullable:
          type: boolean
          readOnly: true
        error:
          type: string
          nullable: true
        date_show_tzinfo:
          description: Indicates if the time zone should be shown.
          type: boolean
          nullable: true
        through_field_id:
          description: The id of the link row field to count values for.
          type: integer
          nullable: true
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
        - id
        - name
        - nullable
        - order
        - read_only
        - table_id
        - type
    CountFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateTimeFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
          nullable: true
        array_formula_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
            - $ref: '#/components/schemas/NullEnum'
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DurationFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
            - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
            - $ref: '#/components/schemas/NullEnum'
        nullable:
          type: boolean
          readOnly: true
        error:
          type: string
          nullable: true
        date_show_tzinfo:
          description: Indicates if the time zone should be shown.
          type: boolean
          nullable: true
        through_field_id:
          description: The id of the link row field to count values for.
          type: integer
          nullable: true
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
        - id
        - name
        - nullable
        - order
        - read_only
        - related_fields
        - table_id
        - type
    CountFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateTimeFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
          nullable: true
        array_formula_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
            - $ref: '#/components/schemas/NullEnum'
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DurationFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
            - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
            - $ref: '#/components/schemas/NullEnum'
        nullable:
          type: boolean
          readOnly: true
        error:
          type: string
          nullable: true
        date_show_tzinfo:
          description: Indicates if the time zone should be shown.
          type: boolean
          nullable: true
        through_field_id:
          description: The id of the link row field to count values for.
          type: integer
          nullable: true
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
        - nullable
    CreatePage:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        path:
          type: string
          maxLength: 255
        path_params:
          type: array
          items:
            $ref: '#/components/schemas/PathParam'
      required:
        - name
        - path
    CreateRoleAssignment:
      description: The create role assignment serializer.
      type: object
      properties:
        subject_id:
          description: The subject ID. A subject is an actor that can do operations.
          type: integer
          minimum: 1
        subject_type:
          $ref: '#/components/schemas/SubjectTypeB9aEnum'
        role:
          description: >-
            The uid of the role you want to assign to the user or team in the
            given workspace. You can omit this property if you want to remove
            the role.
          type: string
          nullable: true
        scope_id:
          description: >-
            The ID of the scope object. The scope object limit the role
            assignment to this scope and all its descendants.
          type: integer
          minimum: 1
        scope_type:
          $ref: '#/components/schemas/ScopeTypeEnum'
      required:
        - role
        - scope_id
        - scope_type
        - subject_id
        - subject_type
      x-konfig-properties:
        subject_type:
          description: |-
            The subject type.

            * `auth.User` - auth.User
            * `anonymous` - anonymous
            * `user_source.user` - user_source.user
            * `core.Token` - core.Token
            * `baserow_enterprise.Team` - baserow_enterprise.Team
        scope_type:
          description: |-
            The scope object type.

            * `core` - core
            * `application` - application
            * `workspace` - workspace
            * `workspace_invitation` - workspace_invitation
            * `snapshot` - snapshot
            * `workspace_user` - workspace_user
            * `integration` - integration
            * `user_source` - user_source
            * `database` - database
            * `database_table` - database_table
            * `database_field` - database_field
            * `database_view` - database_view
            * `database_view_decoration` - database_view_decoration
            * `database_view_sort` - database_view_sort
            * `database_view_group` - database_view_group
            * `database_view_filter` - database_view_filter
            * `database_view_filter_group` - database_view_filter_group
            * `token` - token
            * `builder` - builder
            * `builder_page` - builder_page
            * `builder_element` - builder_element
            * `builder_domain` - builder_domain
            * `builder_data_source` - builder_data_source
            * `builder_workflow_action` - builder_workflow_action
            * `team` - team
            * `team_subject` - team_subject
            * `license` - license
    CreateSnapshotJobCreateJob:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeC5eEnum'
      required:
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
    CreateSnapshotJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the job.
          type: string
          readOnly: true
        progress_percentage:
          description: >-
            A percentage indicating how far along the job is. 100 means that
            it's finished.
          type: integer
        state:
          description: Indicates the state of the import job.
          type: string
        human_readable_error:
          description: A human readable error message indicating what went wrong.
          type: string
      required:
        - id
        - progress_percentage
        - state
        - type
    CreateViewFilter:
      type: object
      properties:
        field:
          description: The field of which the value must be compared to the filter value.
          type: integer
        type:
          $ref: '#/components/schemas/Type880Enum'
        value:
          description: The filter value that must be compared to the field's value.
          type: string
          default: ''
          maxLength: 255
        group:
          description: >-
            The id of the filter group the new filter will belong to. If this is
            null, the filter will not be part of a filter group, but directly
            part of the view.
          type: integer
          nullable: true
      required:
        - field
        - type
      x-konfig-properties:
        type:
          description: >-
            Indicates how the field's value must be compared to the filter's
            value. The filter is always in this order `field` `type` `value`
            (example: `field_1` `contains` `Test`).


            * `equal` - equal

            * `not_equal` - not_equal

            * `filename_contains` - filename_contains

            * `files_lower_than` - files_lower_than

            * `has_file_type` - has_file_type

            * `contains` - contains

            * `contains_not` - contains_not

            * `contains_word` - contains_word

            * `doesnt_contain_word` - doesnt_contain_word

            * `length_is_lower_than` - length_is_lower_than

            * `higher_than` - higher_than

            * `lower_than` - lower_than

            * `is_even_and_whole` - is_even_and_whole

            * `date_equal` - date_equal

            * `date_before` - date_before

            * `date_before_or_equal` - date_before_or_equal

            * `date_after_days_ago` - date_after_days_ago

            * `date_after` - date_after

            * `date_after_or_equal` - date_after_or_equal

            * `date_not_equal` - date_not_equal

            * `date_equals_today` - date_equals_today

            * `date_before_today` - date_before_today

            * `date_after_today` - date_after_today

            * `date_within_days` - date_within_days

            * `date_within_weeks` - date_within_weeks

            * `date_within_months` - date_within_months

            * `date_equals_days_ago` - date_equals_days_ago

            * `date_equals_months_ago` - date_equals_months_ago

            * `date_equals_years_ago` - date_equals_years_ago

            * `date_equals_week` - date_equals_week

            * `date_equals_month` - date_equals_month

            * `date_equals_day_of_month` - date_equals_day_of_month

            * `date_equals_year` - date_equals_year

            * `single_select_equal` - single_select_equal

            * `single_select_not_equal` - single_select_not_equal

            * `link_row_has` - link_row_has

            * `link_row_has_not` - link_row_has_not

            * `link_row_contains` - link_row_contains

            * `link_row_not_contains` - link_row_not_contains

            * `boolean` - boolean

            * `empty` - empty

            * `not_empty` - not_empty

            * `multiple_select_has` - multiple_select_has

            * `multiple_select_has_not` - multiple_select_has_not

            * `multiple_collaborators_has` - multiple_collaborators_has

            * `multiple_collaborators_has_not` - multiple_collaborators_has_not

            * `user_is` - user_is

            * `user_is_not` - user_is_not
    CreateViewFilterGroup:
      type: object
      properties:
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR) in the group to be shown.


            * `AND` - And

            * `OR` - Or
    CreateViewGroupBy:
      type: object
      properties:
        field:
          description: The field that must be grouped by.
          type: integer
        order:
          $ref: '#/components/schemas/OrderEnum'
        width:
          description: The pixel width of the group by in the related view.
          type: integer
          maximum: 2147483647
          minimum: 0
          default: 200
      required:
        - field
      x-konfig-properties:
        order:
          description: >-
            Indicates the sort order direction. ASC (Ascending) is from A to Z
            and DESC (Descending) is from Z to A.


            * `ASC` - Ascending

            * `DESC` - Descending
          default: ASC
    CreateViewSort:
      type: object
      properties:
        field:
          description: The field that must be sorted on.
          type: integer
        order:
          $ref: '#/components/schemas/OrderEnum'
      required:
        - field
      x-konfig-properties:
        order:
          description: >-
            Indicates the sort order direction. ASC (Ascending) is from A to Z
            and DESC (Descending) is from Z to A.


            * `ASC` - Ascending

            * `DESC` - Descending
          default: ASC
    CreateWorkspaceInvitation:
      type: object
      properties:
        email:
          description: >-
            The email address of the user that the invitation is meant for. Only
            a user with that email address can accept it.
          type: string
          format: email
          maxLength: 254
        permissions:
          description: >-
            The permissions that the user is going to get within the workspace
            after accepting the invitation.
          type: string
          maxLength: 32
        message:
          description: >-
            An optional message that the invitor can provide. This will be
            visible to the receiver of the invitation.
          type: string
          maxLength: 250
        base_url:
          description: >-
            The base URL where the user can publicly accept his invitation.The
            accept token is going to be appended to the base_url (base_url
            '/token').
          type: string
          format: uri
      required:
        - base_url
        - email
    CreatedByFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
      required:
        - name
        - type
    CreatedByFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
    CreatedByFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
    CreatedByFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
    CreatedOnFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        date_format:
          $ref: '#/components/schemas/DateFormatEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
        date_time_format:
          $ref: '#/components/schemas/DateTimeFormatEnum'
        date_show_tzinfo:
          description: Indicates if the timezone should be shown.
          type: boolean
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_force_timezone_offset:
          description: >-
            ('A UTC offset in minutes to add to all the field datetimes
            values.',)
          type: integer
          nullable: true
      required:
        - type
      x-konfig-properties:
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
    CreatedOnFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        date_format:
          $ref: '#/components/schemas/DateFormatEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
        date_time_format:
          $ref: '#/components/schemas/DateTimeFormatEnum'
        date_show_tzinfo:
          description: Indicates if the timezone should be shown.
          type: boolean
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
      x-konfig-properties:
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
    CreatedOnFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
        date_format:
          $ref: '#/components/schemas/DateFormatEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
        date_time_format:
          $ref: '#/components/schemas/DateTimeFormatEnum'
        date_show_tzinfo:
          description: Indicates if the timezone should be shown.
          type: boolean
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
      required:
        - id
        - order
        - read_only
        - related_fields
        - table_id
        - type
      x-konfig-properties:
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
    CreatedOnFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        date_format:
          $ref: '#/components/schemas/DateFormatEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
        date_time_format:
          $ref: '#/components/schemas/DateTimeFormatEnum'
        date_show_tzinfo:
          description: Indicates if the timezone should be shown.
          type: boolean
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_force_timezone_offset:
          description: >-
            ('A UTC offset in minutes to add to all the field datetimes
            values.',)
          type: integer
          nullable: true
      x-konfig-properties:
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
    CsvColumnSeparatorEnum:
      description: "* `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \x1E\n* `unit_separator` - \x1F"
      enum:
        - ','
        - ;
        - '|'
        - tab
        - record_separator
        - unit_separator
      type: string
    CsvExporterOptions:
      type: object
      properties:
        view_id:
          description: >-
            Optional: The view for this table to export using its filters, sorts
            and other view specific settings.
          type: integer
          minimum: 0
          nullable: true
        exporter_type:
          $ref: '#/components/schemas/ExporterTypeEnum'
        export_charset:
          $ref: '#/components/schemas/ExportCharsetEnum'
        csv_column_separator:
          $ref: '#/components/schemas/CsvColumnSeparatorEnum'
        csv_include_header:
          description: Whether or not to generate a header row at the top of the csv file.
          type: boolean
          default: true
      required:
        - exporter_type
      x-konfig-properties:
        exporter_type:
          description: |-
            The file type to export to.

            * `csv` - csv
            * `json` - json
            * `xml` - xml
        export_charset:
          description: |-
            The character set to use when creating the export file.

            * `utf-8` - utf-8
            * `iso-8859-6` - iso-8859-6
            * `windows-1256` - windows-1256
            * `iso-8859-4` - iso-8859-4
            * `windows-1257` - windows-1257
            * `iso-8859-14` - iso-8859-14
            * `iso-8859-2` - iso-8859-2
            * `windows-1250` - windows-1250
            * `gbk` - gbk
            * `gb18030` - gb18030
            * `big5` - big5
            * `koi8-r` - koi8-r
            * `koi8-u` - koi8-u
            * `iso-8859-5` - iso-8859-5
            * `windows-1251` - windows-1251
            * `x-mac-cyrillic` - mac-cyrillic
            * `iso-8859-7` - iso-8859-7
            * `windows-1253` - windows-1253
            * `iso-8859-8` - iso-8859-8
            * `windows-1255` - windows-1255
            * `euc-jp` - euc-jp
            * `iso-2022-jp` - iso-2022-jp
            * `shift-jis` - shift-jis
            * `euc-kr` - euc-kr
            * `macintosh` - macintosh
            * `iso-8859-10` - iso-8859-10
            * `iso-8859-16` - iso-8859-16
            * `windows-874` - cp874
            * `windows-1254` - windows-1254
            * `windows-1258` - windows-1258
            * `iso-8859-1` - iso-8859-1
            * `windows-1252` - windows-1252
            * `iso-8859-3` - iso-8859-3
          default: utf-8
        csv_column_separator:
          description: "The value used to separate columns in the resulting csv file.\n\n* `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \x1E\n* `unit_separator` - \x1F"
          default: ','
    CustomDomainCreateDomain:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type0a6Enum'
        domain_name:
          type: string
          maxLength: 255
      required:
        - domain_name
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the domain.

            * `custom` - custom
            * `sub_domain` - sub_domain
    CustomDomainDomain:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the domain.
          type: string
          readOnly: true
        domain_name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        builder_id:
          type: integer
          readOnly: true
        last_published:
          description: Last publication date of this domain
          type: string
          format: date-time
          nullable: true
      required:
        - builder_id
        - domain_name
        - id
        - order
        - type
    Dashboard:
      type: object
      properties:
        group_invitations:
          type: array
          items:
            $ref: '#/components/schemas/UserWorkspaceInvitation'
        workspace_invitations:
          type: array
          items:
            $ref: '#/components/schemas/UserWorkspaceInvitation'
      required:
        - group_invitations
        - workspace_invitations
    DatabaseApplication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 160
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        group:
          $ref: '#/components/schemas/Workspace'
        workspace:
          $ref: '#/components/schemas/Workspace'
        tables:
          description: >-
            This field is specific to the `database` application and contains an
            array of tables that are in the database.
          type: array
          items:
            $ref: '#/components/schemas/TableSerializerWithFields'
        views:
          description: >-
            This field is specific to the `database` application and contains an
            array of views that are in the tables.
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowView'
      required:
        - group
        - id
        - name
        - order
        - tables
        - type
        - views
        - workspace
      x-konfig-properties:
        group:
          description: >-
            DEPRECATED: Please use the functionally identical `workspace`
            instead as this field is being removed in the future.
        workspace:
          description: The workspace that the application belongs to.
    DatabaseBaseApplicationCreatePolymorphic:
      type: object
      properties:
        name:
          type: string
          maxLength: 160
        type:
          $ref: '#/components/schemas/TypeF4fEnum'
        init_with_data:
          type: boolean
          default: false
      required:
        - name
        - type
    DatabaseBaseApplicationUpdatePolymorphic:
      type: object
      properties:
        name:
          type: string
          maxLength: 160
      required:
        - name
    DateFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        date_format:
          $ref: '#/components/schemas/DateFormatEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
        date_time_format:
          $ref: '#/components/schemas/DateTimeFormatEnum'
        date_show_tzinfo:
          description: Indicates if the timezone should be shown.
          type: boolean
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_force_timezone_offset:
          description: >-
            ('A UTC offset in minutes to add to all the field datetimes
            values.',)
          type: integer
          nullable: true
      required:
        - type
      x-konfig-properties:
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
    DateFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        date_format:
          $ref: '#/components/schemas/DateFormatEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
        date_time_format:
          $ref: '#/components/schemas/DateTimeFormatEnum'
        date_show_tzinfo:
          description: Indicates if the timezone should be shown.
          type: boolean
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
      x-konfig-properties:
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
    DateFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
        date_format:
          $ref: '#/components/schemas/DateFormatEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
        date_time_format:
          $ref: '#/components/schemas/DateTimeFormatEnum'
        date_show_tzinfo:
          description: Indicates if the timezone should be shown.
          type: boolean
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
      required:
        - id
        - order
        - read_only
        - related_fields
        - table_id
        - type
      x-konfig-properties:
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
    DateFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        date_format:
          $ref: '#/components/schemas/DateFormatEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
        date_time_format:
          $ref: '#/components/schemas/DateTimeFormatEnum'
        date_show_tzinfo:
          description: Indicates if the timezone should be shown.
          type: boolean
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_force_timezone_offset:
          description: >-
            ('A UTC offset in minutes to add to all the field datetimes
            values.',)
          type: integer
          nullable: true
      x-konfig-properties:
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
    DateFormatEnum:
      description: |-
        * `EU` - European (D/M/Y)
        * `US` - US (M/D/Y)
        * `ISO` - ISO (Y-M-D)
      enum:
        - EU
        - US
        - ISO
      type: string
    DateTimeFormatEnum:
      description: |-
        * `24` - 24 hour
        * `12` - 12 hour
      enum:
        - '24'
        - '12'
      type: string
    Decorator_Value_Provider_TypeCreateViewDecoration:
      oneOf:
        - $ref: >-
            #/components/schemas/GeneratedSingle_select_colorCreateViewDecoration
        - $ref: '#/components/schemas/GeneratedConditional_colorCreateViewDecoration'
      discriminator:
        propertyName: value_provider_type
        mapping:
          single_select_color: >-
            #/components/schemas/GeneratedSingle_select_colorCreateViewDecoration
          conditional_color: '#/components/schemas/GeneratedConditional_colorCreateViewDecoration'
    Decorator_Value_Provider_TypeViewDecoration:
      oneOf:
        - $ref: '#/components/schemas/GeneratedSingle_select_colorViewDecoration'
        - $ref: '#/components/schemas/GeneratedConditional_colorViewDecoration'
      discriminator:
        propertyName: value_provider_type
        mapping:
          single_select_color: '#/components/schemas/GeneratedSingle_select_colorViewDecoration'
          conditional_color: '#/components/schemas/GeneratedConditional_colorViewDecoration'
    Domain_TypeCreateDomain:
      oneOf:
        - $ref: '#/components/schemas/CustomDomainCreateDomain'
        - $ref: '#/components/schemas/SubDomainCreateDomain'
      discriminator:
        propertyName: type
        mapping:
          custom: '#/components/schemas/CustomDomainCreateDomain'
          sub_domain: '#/components/schemas/SubDomainCreateDomain'
    Domain_TypeDomain:
      oneOf:
        - $ref: '#/components/schemas/CustomDomainDomain'
        - $ref: '#/components/schemas/SubDomainDomain'
      discriminator:
        propertyName: type
        mapping:
          custom: '#/components/schemas/CustomDomainDomain'
          sub_domain: '#/components/schemas/SubDomainDomain'
    DropdownElementCreateElement:
      description: >-
        This serializer allow to set the type of an element and the element id
        before which

        we want to insert the new element.
      type: object
      properties:
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        before_id:
          description: >-
            If provided, creates the element before the element with the given
            id.
          type: integer
        type:
          $ref: '#/components/schemas/Type2a6Enum'
        parent_element_id:
          description: >-
            If provided, creates the element as a child of the element with the
            given id.
          type: integer
          nullable: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        label:
          description: The text label for this dropdown
          type: string
          default: ''
        default_value:
          description: This dropdowns input's default value.
          type: string
          default: ''
        required:
          description: Whether this drodpown is a required field.
          type: boolean
          default: false
        placeholder:
          description: The placeholder text which should be applied to the element.
          type: string
          default: ''
        options:
          type: array
          items:
            $ref: '#/components/schemas/DropdownOption'
      required:
        - order
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `form_container` - form_container
            * `dropdown` - dropdown
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `auth_form` - auth_form
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    DropdownElementElement:
      description: |-
        Basic element serializer mostly for returned values.

        👉 Mind to update the
        baserow.contrib.builder.api.domains.serializer.PublicElementSerializer
        when you update this one.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        label:
          description: The text label for this dropdown
          type: string
          default: ''
        default_value:
          description: This dropdowns input's default value.
          type: string
          default: ''
        required:
          description: Whether this drodpown is a required field.
          type: boolean
          default: false
        placeholder:
          description: The placeholder text which should be applied to the element.
          type: string
          default: ''
        options:
          type: array
          items:
            $ref: '#/components/schemas/DropdownOption'
      required:
        - id
        - order
        - page_id
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    DropdownElementPublicElement:
      description: Basic element serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        label:
          description: The text label for this dropdown
          type: string
          default: ''
        default_value:
          description: This dropdowns input's default value.
          type: string
          default: ''
        required:
          description: Whether this drodpown is a required field.
          type: boolean
          default: false
        placeholder:
          description: The placeholder text which should be applied to the element.
          type: string
          default: ''
        options:
          type: array
          items:
            $ref: '#/components/schemas/DropdownOption'
      required:
        - id
        - order
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    DropdownElementUpdateElement:
      type: object
      properties:
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        label:
          description: The text label for this dropdown
          type: string
          default: ''
        default_value:
          description: This dropdowns input's default value.
          type: string
          default: ''
        required:
          description: Whether this drodpown is a required field.
          type: boolean
          default: false
        placeholder:
          description: The placeholder text which should be applied to the element.
          type: string
          default: ''
        options:
          type: array
          items:
            $ref: '#/components/schemas/DropdownOption'
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    DropdownOption:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          description: The value of the option
          type: string
        name:
          description: The display name of the option
          type: string
      required:
        - id
    DuplicateApplicationJobCreateJob:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeC5eEnum'
        application_id:
          description: The application ID to duplicate.
          type: integer
      required:
        - application_id
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
    DuplicateApplicationJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the job.
          type: string
          readOnly: true
        progress_percentage:
          description: >-
            A percentage indicating how far along the job is. 100 means that
            it's finished.
          type: integer
        state:
          description: Indicates the state of the import job.
          type: string
        human_readable_error:
          description: A human readable error message indicating what went wrong.
          type: string
        original_application:
          $ref: '#/components/schemas/ApplicationApplication'
        duplicated_application:
          $ref: '#/components/schemas/ApplicationApplication'
      required:
        - duplicated_application
        - id
        - original_application
        - progress_percentage
        - state
        - type
      x-konfig-properties:
        original_application:
          readOnly: true
        duplicated_application:
          readOnly: true
    DuplicateElement:
      type: object
      properties:
        elements:
          description: The duplicated elements.
          type: array
          items:
            $ref: '#/components/schemas/Element'
          readOnly: true
        workflow_actions:
          description: The duplicated workflow actions
          type: array
          items:
            $ref: '#/components/schemas/BuilderWorkflowAction'
          readOnly: true
      required:
        - elements
        - workflow_actions
    DuplicateFieldJobCreateJob:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeC5eEnum'
        field_id:
          description: The ID of the field to duplicate.
          type: integer
        duplicate_data:
          description: Whether to duplicate the data of the field.
          type: boolean
          default: false
      required:
        - field_id
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
    DuplicateFieldJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the job.
          type: string
          readOnly: true
        progress_percentage:
          description: >-
            A percentage indicating how far along the job is. 100 means that
            it's finished.
          type: integer
        state:
          description: Indicates the state of the import job.
          type: string
        human_readable_error:
          description: A human readable error message indicating what went wrong.
          type: string
        original_field:
          $ref: '#/components/schemas/Field'
        duplicated_field:
          $ref: '#/components/schemas/FieldSerializerWithRelatedFields'
      required:
        - duplicated_field
        - id
        - original_field
        - progress_percentage
        - state
        - type
      x-konfig-properties:
        original_field:
          readOnly: true
        duplicated_field:
          readOnly: true
    DuplicatePageJobCreateJob:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeC5eEnum'
        page_id:
          description: The ID of the page to duplicate.
          type: integer
      required:
        - page_id
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
    DuplicatePageJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the job.
          type: string
          readOnly: true
        progress_percentage:
          description: >-
            A percentage indicating how far along the job is. 100 means that
            it's finished.
          type: integer
        state:
          description: Indicates the state of the import job.
          type: string
        human_readable_error:
          description: A human readable error message indicating what went wrong.
          type: string
        original_page:
          $ref: '#/components/schemas/Page'
        duplicated_page:
          $ref: '#/components/schemas/Page'
      required:
        - duplicated_page
        - id
        - original_page
        - progress_percentage
        - state
        - type
      x-konfig-properties:
        original_page:
          readOnly: true
        duplicated_page:
          readOnly: true
    DuplicateTableJobCreateJob:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeC5eEnum'
        table_id:
          description: The ID of the table to duplicate.
          type: integer
      required:
        - table_id
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
    DuplicateTableJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the job.
          type: string
          readOnly: true
        progress_percentage:
          description: >-
            A percentage indicating how far along the job is. 100 means that
            it's finished.
          type: integer
        state:
          description: Indicates the state of the import job.
          type: string
        human_readable_error:
          description: A human readable error message indicating what went wrong.
          type: string
        original_table:
          $ref: '#/components/schemas/Table'
        duplicated_table:
          $ref: '#/components/schemas/Table'
      required:
        - duplicated_table
        - id
        - original_table
        - progress_percentage
        - state
        - type
      x-konfig-properties:
        original_table:
          readOnly: true
        duplicated_table:
          readOnly: true
    DurationFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        duration_format:
          $ref: '#/components/schemas/DurationFormatEnum'
      required:
        - name
        - type
      x-konfig-properties:
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
    DurationFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        duration_format:
          $ref: '#/components/schemas/DurationFormatEnum'
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
      x-konfig-properties:
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
    DurationFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
        duration_format:
          $ref: '#/components/schemas/DurationFormatEnum'
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
      x-konfig-properties:
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
    DurationFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        duration_format:
          $ref: '#/components/schemas/DurationFormatEnum'
      x-konfig-properties:
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
    DurationFormatEnum:
      description: |-
        * `h:mm` - hours:minutes
        * `h:mm:ss` - hours:minutes:seconds
        * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
        * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
        * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
        * `d h` - days:hours
        * `d h:mm` - days:hours:minutes
        * `d h:mm:ss` - days:hours:minutes:seconds
      enum:
        - h:mm
        - h:mm:ss
        - h:mm:ss.s
        - h:mm:ss.ss
        - h:mm:ss.sss
        - d h
        - d h:mm
        - d h:mm:ss
      type: string
    Element:
      description: |-
        Basic element serializer mostly for returned values.

        👉 Mind to update the
        baserow.contrib.builder.api.domains.serializer.PublicElementSerializer
        when you update this one.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
      required:
        - id
        - order
        - page_id
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    Element_TypeCreateElement:
      oneOf:
        - $ref: '#/components/schemas/HeadingElementCreateElement'
        - $ref: '#/components/schemas/TextElementCreateElement'
        - $ref: '#/components/schemas/LinkElementCreateElement'
        - $ref: '#/components/schemas/ImageElementCreateElement'
        - $ref: '#/components/schemas/InputTextElementCreateElement'
        - $ref: '#/components/schemas/ColumnElementCreateElement'
        - $ref: '#/components/schemas/ButtonElementCreateElement'
        - $ref: '#/components/schemas/TableElementCreateElement'
        - $ref: '#/components/schemas/FormContainerElementCreateElement'
        - $ref: '#/components/schemas/DropdownElementCreateElement'
        - $ref: '#/components/schemas/CheckboxElementCreateElement'
        - $ref: '#/components/schemas/IFrameElementCreateElement'
        - $ref: '#/components/schemas/AuthFormElementCreateElement'
      discriminator:
        propertyName: type
        mapping:
          heading: '#/components/schemas/HeadingElementCreateElement'
          text: '#/components/schemas/TextElementCreateElement'
          link: '#/components/schemas/LinkElementCreateElement'
          image: '#/components/schemas/ImageElementCreateElement'
          input_text: '#/components/schemas/InputTextElementCreateElement'
          column: '#/components/schemas/ColumnElementCreateElement'
          button: '#/components/schemas/ButtonElementCreateElement'
          table: '#/components/schemas/TableElementCreateElement'
          form_container: '#/components/schemas/FormContainerElementCreateElement'
          dropdown: '#/components/schemas/DropdownElementCreateElement'
          checkbox: '#/components/schemas/CheckboxElementCreateElement'
          iframe: '#/components/schemas/IFrameElementCreateElement'
          auth_form: '#/components/schemas/AuthFormElementCreateElement'
    Element_TypeElement:
      oneOf:
        - $ref: '#/components/schemas/HeadingElementElement'
        - $ref: '#/components/schemas/TextElementElement'
        - $ref: '#/components/schemas/LinkElementElement'
        - $ref: '#/components/schemas/ImageElementElement'
        - $ref: '#/components/schemas/InputTextElementElement'
        - $ref: '#/components/schemas/ColumnElementElement'
        - $ref: '#/components/schemas/ButtonElementElement'
        - $ref: '#/components/schemas/TableElementElement'
        - $ref: '#/components/schemas/FormContainerElementElement'
        - $ref: '#/components/schemas/DropdownElementElement'
        - $ref: '#/components/schemas/CheckboxElementElement'
        - $ref: '#/components/schemas/IFrameElementElement'
        - $ref: '#/components/schemas/AuthFormElementElement'
      discriminator:
        propertyName: type
        mapping:
          heading: '#/components/schemas/HeadingElementElement'
          text: '#/components/schemas/TextElementElement'
          link: '#/components/schemas/LinkElementElement'
          image: '#/components/schemas/ImageElementElement'
          input_text: '#/components/schemas/InputTextElementElement'
          column: '#/components/schemas/ColumnElementElement'
          button: '#/components/schemas/ButtonElementElement'
          table: '#/components/schemas/TableElementElement'
          form_container: '#/components/schemas/FormContainerElementElement'
          dropdown: '#/components/schemas/DropdownElementElement'
          checkbox: '#/components/schemas/CheckboxElementElement'
          iframe: '#/components/schemas/IFrameElementElement'
          auth_form: '#/components/schemas/AuthFormElementElement'
    Element_TypePublicElement:
      oneOf:
        - $ref: '#/components/schemas/HeadingElementPublicElement'
        - $ref: '#/components/schemas/TextElementPublicElement'
        - $ref: '#/components/schemas/LinkElementPublicElement'
        - $ref: '#/components/schemas/ImageElementPublicElement'
        - $ref: '#/components/schemas/InputTextElementPublicElement'
        - $ref: '#/components/schemas/ColumnElementPublicElement'
        - $ref: '#/components/schemas/ButtonElementPublicElement'
        - $ref: '#/components/schemas/TableElementPublicElement'
        - $ref: '#/components/schemas/FormContainerElementPublicElement'
        - $ref: '#/components/schemas/DropdownElementPublicElement'
        - $ref: '#/components/schemas/CheckboxElementPublicElement'
        - $ref: '#/components/schemas/IFrameElementPublicElement'
        - $ref: '#/components/schemas/AuthFormElementPublicElement'
      discriminator:
        propertyName: type
        mapping:
          heading: '#/components/schemas/HeadingElementPublicElement'
          text: '#/components/schemas/TextElementPublicElement'
          link: '#/components/schemas/LinkElementPublicElement'
          image: '#/components/schemas/ImageElementPublicElement'
          input_text: '#/components/schemas/InputTextElementPublicElement'
          column: '#/components/schemas/ColumnElementPublicElement'
          button: '#/components/schemas/ButtonElementPublicElement'
          table: '#/components/schemas/TableElementPublicElement'
          form_container: '#/components/schemas/FormContainerElementPublicElement'
          dropdown: '#/components/schemas/DropdownElementPublicElement'
          checkbox: '#/components/schemas/CheckboxElementPublicElement'
          iframe: '#/components/schemas/IFrameElementPublicElement'
          auth_form: '#/components/schemas/AuthFormElementPublicElement'
    EmailFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
      required:
        - name
        - type
    EmailFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
    EmailFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
    EmailFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
    EmailNotificationFrequencyEnum:
      description: |-
        * `instant` - instant
        * `daily` - daily
        * `weekly` - weekly
        * `never` - never
      enum:
        - instant
        - daily
        - weekly
        - never
      type: string
    EmailTesterRequest:
      type: object
      properties:
        target_email:
          type: string
          format: email
      required:
        - target_email
    EmailTesterResponse:
      type: object
      properties:
        succeeded:
          description: Whether or not the test email was sent successfully.
          type: boolean
        error_stack:
          description: The full stack trace and error message if the test email failed.
          type: string
          nullable: true
        error_type:
          description: The type of error that occurred if the test email failed.
          type: string
          nullable: true
        error:
          description: >-
            A short message describing the error that occured if the test email
            failed
          type: string
          nullable: true
      required:
        - succeeded
    EventEnum:
      description: |-
        * `click` - Click
        * `submit` - Submit
        * `after_login` - After Login
      enum:
        - click
        - submit
        - after_login
      type: string
    EventTypeEnum:
      description: |-
        * `rows.created` - rows.created
        * `row.created` - row.created
        * `rows.updated` - rows.updated
        * `row.updated` - row.updated
        * `rows.deleted` - rows.deleted
        * `row.deleted` - row.deleted
      enum:
        - rows.created
        - row.created
        - rows.updated
        - row.updated
        - rows.deleted
        - row.deleted
      type: string
    EventTypesEnum:
      description: |-
        * `rows.created` - rows.created
        * `rows.updated` - rows.updated
        * `rows.deleted` - rows.deleted
      enum:
        - rows.created
        - rows.updated
        - rows.deleted
      type: string
    Events3eaEnum:
      description: |-
        * `rows.created` - rows.created
        * `row.created` - row.created
        * `rows.updated` - rows.updated
        * `row.updated` - row.updated
        * `rows.deleted` - rows.deleted
        * `row.deleted` - row.deleted
      enum:
        - rows.created
        - row.created
        - rows.updated
        - row.updated
        - rows.deleted
        - row.deleted
      type: string
    ExampleBatchRowsRequest:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ExampleRowRequestSerializerWithUserFieldNames'
          maxItems: 200
          minItems: 1
      required:
        - items
    ExampleBatchRowsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: >-
              #/components/schemas/ExampleRowResponseSerializerWithUserFieldNames
          maxItems: 200
          minItems: 1
      required:
        - items
    ExampleBatchUpdateRowRequestSerializerWithUserFieldNames:
      type: object
      properties:
        id:
          description: The unique identifier of the row in the table.
          type: integer
        field_1:
          description: >-
            This field represents the `text` field. The number in field_1 is in
            a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          nullable: true
        field_2:
          description: >-
            This field represents the `long_text` field. The number in field_2
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          nullable: true
        field_3:
          description: >-
            This field represents the `url` field. The number in field_3 is in a
            normal request or response the id of the field. If the GET parameter
            `user_field_names` is provided then the key will instead be the
            actual name of the field. 
          type: string
          nullable: true
        field_4:
          description: >-
            This field represents the `email` field. The number in field_4 is in
            a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          nullable: true
          maxLength: 254
        field_5:
          description: >-
            This field represents the `number` field. The number in field_5 is
            in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          format: decimal
          pattern: ^-?\d{0,50}(?:\.\d{0,0})?$
          nullable: true
        field_6:
          description: >-
            This field represents the `rating` field. The number in field_6 is
            in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: integer
          maximum: 5
          minimum: 0
          default: 0
        field_7:
          description: >-
            This field represents the `boolean` field. The number in field_7 is
            in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: boolean
          default: false
        field_8:
          description: >-
            This field represents the `date` field. The number in field_8 is in
            a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          format: date
          nullable: true
        field_13:
          description: >-
            This field represents the `duration` field. The number in field_13
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. The provided value can be a string
            in one of the available formats or a number representing the
            duration in seconds. In any case, the value will be rounded to match
            the field's duration format.
          type: number
          format: float
          nullable: true
        field_14:
          description: >-
            This field represents the `link_row` field. The number in field_14
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. This field accepts an `array`
            containing the ids or the names of the related rows. A name is the
            value of the primary key of the related row. This field also accepts
            a string with names separated by a comma. The response contains a
            list of objects containing the `id` and the primary field's `value`
            as a string for display purposes.
          type: array
          items:
            type: integer
            nullable: true
        field_15:
          description: >-
            This field represents the `file` field. The number in field_15 is in
            a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. This field accepts an `array`
            containing objects with the name of the file. The response contains
            an `array` of more detailed objects related to the files.
          type: array
          items:
            $ref: '#/components/schemas/FileFieldRequest'
          nullable: true
        field_16:
          description: >-
            This field represents the `single_select` field. The number in
            field_16 is in a normal request or response the id of the field. If
            the GET parameter `user_field_names` is provided then the key will
            instead be the actual name of the field. This field accepts an
            `integer` representing the chosen select option id related to the
            field. Available ids can be found when getting or listing the field.
            The response represents chosen field, but also the value and color
            is exposed.
          type: integer
          nullable: true
        field_17:
          description: >-
            This field represents the `multiple_select` field. The number in
            field_17 is in a normal request or response the id of the field. If
            the GET parameter `user_field_names` is provided then the key will
            instead be the actual name of the field. This field accepts a list
            of `integer` each of which representing the chosen select option id
            related to the field. Available ids can be foundwhen getting or
            listing the field. You can also send a list of option names in which
            case the option are searched by name. The first one that matches is
            used. This field also accepts a string with names separated by a
            comma. The response represents chosen field, but also the value and
            color is exposed.
          type: array
          items:
            description: >-
              This field represents the `multiple_select` field. The number in
              field_17 is in a normal request or response the id of the field.
              If the GET parameter `user_field_names` is provided then the key
              will instead be the actual name of the field. This field accepts a
              list of `integer` each of which representing the chosen select
              option id related to the field. Available ids can be foundwhen
              getting or listing the field. You can also send a list of option
              names in which case the option are searched by name. The first one
              that matches is used. This field also accepts a string with names
              separated by a comma. The response represents chosen field, but
              also the value and color is exposed.
            type: integer
            nullable: true
        field_18:
          description: >-
            This field represents the `phone_number` field. The number in
            field_18 is in a normal request or response the id of the field. If
            the GET parameter `user_field_names` is provided then the key will
            instead be the actual name of the field. 
          type: string
          nullable: true
          maxLength: 100
        field_23:
          description: >-
            This field represents the `multiple_collaborators` field. The number
            in field_23 is in a normal request or response the id of the field.
            If the GET parameter `user_field_names` is provided then the key
            will instead be the actual name of the field. This field accepts a
            list of objects representing the chosen collaborators through the
            object's `id` property. The id is Baserow user id. The response
            objects also contains the collaborator name directly along with its
            id.
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
        field_26:
          description: >-
            This field represents the `password` field. The number in field_26
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. Allows setting a write only
            password value. Providing a string will set the password, `null`
            will unset it, `true` will be ignored. The response will respond
            with `true` is a password is set, but will never expose the password
            itself.
          type: string
          nullable: true
      required:
        - id
    ExampleRowRequest:
      type: object
      properties:
        field_1:
          description: >-
            This field represents the `text` field. The number in field_1 is in
            a normal request or response the id of the field. 
          type: string
          nullable: true
        field_2:
          description: >-
            This field represents the `long_text` field. The number in field_2
            is in a normal request or response the id of the field. 
          type: string
          nullable: true
        field_3:
          description: >-
            This field represents the `url` field. The number in field_3 is in a
            normal request or response the id of the field. 
          type: string
          nullable: true
        field_4:
          description: >-
            This field represents the `email` field. The number in field_4 is in
            a normal request or response the id of the field. 
          type: string
          nullable: true
          maxLength: 254
        field_5:
          description: >-
            This field represents the `number` field. The number in field_5 is
            in a normal request or response the id of the field. 
          type: string
          format: decimal
          pattern: ^-?\d{0,50}(?:\.\d{0,0})?$
          nullable: true
        field_6:
          description: >-
            This field represents the `rating` field. The number in field_6 is
            in a normal request or response the id of the field. 
          type: integer
          maximum: 5
          minimum: 0
          default: 0
        field_7:
          description: >-
            This field represents the `boolean` field. The number in field_7 is
            in a normal request or response the id of the field. 
          type: boolean
          default: false
        field_8:
          description: >-
            This field represents the `date` field. The number in field_8 is in
            a normal request or response the id of the field. 
          type: string
          format: date
          nullable: true
        field_13:
          description: >-
            This field represents the `duration` field. The number in field_13
            is in a normal request or response the id of the field. The provided
            value can be a string in one of the available formats or a number
            representing the duration in seconds. In any case, the value will be
            rounded to match the field's duration format.
          type: number
          format: float
          nullable: true
        field_14:
          description: >-
            This field represents the `link_row` field. The number in field_14
            is in a normal request or response the id of the field. This field
            accepts an `array` containing the ids or the names of the related
            rows. A name is the value of the primary key of the related row.
            This field also accepts a string with names separated by a comma.
            The response contains a list of objects containing the `id` and the
            primary field's `value` as a string for display purposes.
          type: array
          items:
            type: integer
            nullable: true
        field_15:
          description: >-
            This field represents the `file` field. The number in field_15 is in
            a normal request or response the id of the field. This field accepts
            an `array` containing objects with the name of the file. The
            response contains an `array` of more detailed objects related to the
            files.
          type: array
          items:
            $ref: '#/components/schemas/FileFieldRequest'
          nullable: true
        field_16:
          description: >-
            This field represents the `single_select` field. The number in
            field_16 is in a normal request or response the id of the field.
            This field accepts an `integer` representing the chosen select
            option id related to the field. Available ids can be found when
            getting or listing the field. The response represents chosen field,
            but also the value and color is exposed.
          type: integer
          nullable: true
        field_17:
          description: >-
            This field represents the `multiple_select` field. The number in
            field_17 is in a normal request or response the id of the field.
            This field accepts a list of `integer` each of which representing
            the chosen select option id related to the field. Available ids can
            be foundwhen getting or listing the field. You can also send a list
            of option names in which case the option are searched by name. The
            first one that matches is used. This field also accepts a string
            with names separated by a comma. The response represents chosen
            field, but also the value and color is exposed.
          type: array
          items:
            description: >-
              This field represents the `multiple_select` field. The number in
              field_17 is in a normal request or response the id of the field.
              This field accepts a list of `integer` each of which representing
              the chosen select option id related to the field. Available ids
              can be foundwhen getting or listing the field. You can also send a
              list of option names in which case the option are searched by
              name. The first one that matches is used. This field also accepts
              a string with names separated by a comma. The response represents
              chosen field, but also the value and color is exposed.
            type: integer
            nullable: true
        field_18:
          description: >-
            This field represents the `phone_number` field. The number in
            field_18 is in a normal request or response the id of the field. 
          type: string
          nullable: true
          maxLength: 100
        field_23:
          description: >-
            This field represents the `multiple_collaborators` field. The number
            in field_23 is in a normal request or response the id of the field.
            This field accepts a list of objects representing the chosen
            collaborators through the object's `id` property. The id is Baserow
            user id. The response objects also contains the collaborator name
            directly along with its id.
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
        field_26:
          description: >-
            This field represents the `password` field. The number in field_26
            is in a normal request or response the id of the field. Allows
            setting a write only password value. Providing a string will set the
            password, `null` will unset it, `true` will be ignored. The response
            will respond with `true` is a password is set, but will never expose
            the password itself.
          type: string
          nullable: true
    ExampleRowRequestSerializerWithUserFieldNames:
      type: object
      properties:
        field_1:
          description: >-
            This field represents the `text` field. The number in field_1 is in
            a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          nullable: true
        field_2:
          description: >-
            This field represents the `long_text` field. The number in field_2
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          nullable: true
        field_3:
          description: >-
            This field represents the `url` field. The number in field_3 is in a
            normal request or response the id of the field. If the GET parameter
            `user_field_names` is provided then the key will instead be the
            actual name of the field. 
          type: string
          nullable: true
        field_4:
          description: >-
            This field represents the `email` field. The number in field_4 is in
            a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          nullable: true
          maxLength: 254
        field_5:
          description: >-
            This field represents the `number` field. The number in field_5 is
            in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          format: decimal
          pattern: ^-?\d{0,50}(?:\.\d{0,0})?$
          nullable: true
        field_6:
          description: >-
            This field represents the `rating` field. The number in field_6 is
            in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: integer
          maximum: 5
          minimum: 0
          default: 0
        field_7:
          description: >-
            This field represents the `boolean` field. The number in field_7 is
            in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: boolean
          default: false
        field_8:
          description: >-
            This field represents the `date` field. The number in field_8 is in
            a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          format: date
          nullable: true
        field_13:
          description: >-
            This field represents the `duration` field. The number in field_13
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. The provided value can be a string
            in one of the available formats or a number representing the
            duration in seconds. In any case, the value will be rounded to match
            the field's duration format.
          type: number
          format: float
          nullable: true
        field_14:
          description: >-
            This field represents the `link_row` field. The number in field_14
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. This field accepts an `array`
            containing the ids or the names of the related rows. A name is the
            value of the primary key of the related row. This field also accepts
            a string with names separated by a comma. The response contains a
            list of objects containing the `id` and the primary field's `value`
            as a string for display purposes.
          type: array
          items:
            type: integer
            nullable: true
        field_15:
          description: >-
            This field represents the `file` field. The number in field_15 is in
            a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. This field accepts an `array`
            containing objects with the name of the file. The response contains
            an `array` of more detailed objects related to the files.
          type: array
          items:
            $ref: '#/components/schemas/FileFieldRequest'
          nullable: true
        field_16:
          description: >-
            This field represents the `single_select` field. The number in
            field_16 is in a normal request or response the id of the field. If
            the GET parameter `user_field_names` is provided then the key will
            instead be the actual name of the field. This field accepts an
            `integer` representing the chosen select option id related to the
            field. Available ids can be found when getting or listing the field.
            The response represents chosen field, but also the value and color
            is exposed.
          type: integer
          nullable: true
        field_17:
          description: >-
            This field represents the `multiple_select` field. The number in
            field_17 is in a normal request or response the id of the field. If
            the GET parameter `user_field_names` is provided then the key will
            instead be the actual name of the field. This field accepts a list
            of `integer` each of which representing the chosen select option id
            related to the field. Available ids can be foundwhen getting or
            listing the field. You can also send a list of option names in which
            case the option are searched by name. The first one that matches is
            used. This field also accepts a string with names separated by a
            comma. The response represents chosen field, but also the value and
            color is exposed.
          type: array
          items:
            description: >-
              This field represents the `multiple_select` field. The number in
              field_17 is in a normal request or response the id of the field.
              If the GET parameter `user_field_names` is provided then the key
              will instead be the actual name of the field. This field accepts a
              list of `integer` each of which representing the chosen select
              option id related to the field. Available ids can be foundwhen
              getting or listing the field. You can also send a list of option
              names in which case the option are searched by name. The first one
              that matches is used. This field also accepts a string with names
              separated by a comma. The response represents chosen field, but
              also the value and color is exposed.
            type: integer
            nullable: true
        field_18:
          description: >-
            This field represents the `phone_number` field. The number in
            field_18 is in a normal request or response the id of the field. If
            the GET parameter `user_field_names` is provided then the key will
            instead be the actual name of the field. 
          type: string
          nullable: true
          maxLength: 100
        field_23:
          description: >-
            This field represents the `multiple_collaborators` field. The number
            in field_23 is in a normal request or response the id of the field.
            If the GET parameter `user_field_names` is provided then the key
            will instead be the actual name of the field. This field accepts a
            list of objects representing the chosen collaborators through the
            object's `id` property. The id is Baserow user id. The response
            objects also contains the collaborator name directly along with its
            id.
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
        field_26:
          description: >-
            This field represents the `password` field. The number in field_26
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. Allows setting a write only
            password value. Providing a string will set the password, `null`
            will unset it, `true` will be ignored. The response will respond
            with `true` is a password is set, but will never expose the password
            itself.
          type: string
          nullable: true
    ExampleRowResponse:
      type: object
      properties:
        id:
          description: The unique identifier of the row in the table.
          type: integer
        order:
          description: Indicates the position of the row, lowest first and highest last.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
        field_1:
          description: >-
            This field represents the `text` field. The number in field_1 is in
            a normal request or response the id of the field. 
          type: string
          nullable: true
        field_2:
          description: >-
            This field represents the `long_text` field. The number in field_2
            is in a normal request or response the id of the field. 
          type: string
          nullable: true
        field_3:
          description: >-
            This field represents the `url` field. The number in field_3 is in a
            normal request or response the id of the field. 
          type: string
          nullable: true
        field_4:
          description: >-
            This field represents the `email` field. The number in field_4 is in
            a normal request or response the id of the field. 
          type: string
          nullable: true
          maxLength: 254
        field_5:
          description: >-
            This field represents the `number` field. The number in field_5 is
            in a normal request or response the id of the field. 
          type: string
          format: decimal
          pattern: ^-?\d{0,50}(?:\.\d{0,0})?$
          nullable: true
        field_6:
          description: >-
            This field represents the `rating` field. The number in field_6 is
            in a normal request or response the id of the field. 
          type: integer
          maximum: 5
          minimum: 0
          default: 0
        field_7:
          description: >-
            This field represents the `boolean` field. The number in field_7 is
            in a normal request or response the id of the field. 
          type: boolean
          default: false
        field_8:
          description: >-
            This field represents the `date` field. The number in field_8 is in
            a normal request or response the id of the field. 
          type: string
          format: date
          nullable: true
        field_9:
          description: >-
            This field represents the `last_modified` field. The number in
            field_9 is in a normal request or response the id of the field. 
          type: string
          format: date-time
        field_10:
          $ref: '#/components/schemas/Collaborator'
        field_11:
          description: >-
            This field represents the `created_on` field. The number in field_11
            is in a normal request or response the id of the field. 
          type: string
          format: date-time
        field_12:
          $ref: '#/components/schemas/Collaborator'
        field_13:
          description: >-
            This field represents the `duration` field. The number in field_13
            is in a normal request or response the id of the field. The provided
            value can be a string in one of the available formats or a number
            representing the duration in seconds. In any case, the value will be
            rounded to match the field's duration format.
          type: number
          format: float
          nullable: true
        field_14:
          description: >-
            This field represents the `link_row` field. The number in field_14
            is in a normal request or response the id of the field. This field
            accepts an `array` containing the ids or the names of the related
            rows. A name is the value of the primary key of the related row.
            This field also accepts a string with names separated by a comma.
            The response contains a list of objects containing the `id` and the
            primary field's `value` as a string for display purposes.
          type: array
          items:
            $ref: '#/components/schemas/LinkRowValue'
        field_15:
          description: >-
            This field represents the `file` field. The number in field_15 is in
            a normal request or response the id of the field. This field accepts
            an `array` containing objects with the name of the file. The
            response contains an `array` of more detailed objects related to the
            files.
          type: array
          items:
            $ref: '#/components/schemas/FileFieldResponse'
        field_16:
          description: >-
            This field represents the `single_select` field. The number in
            field_16 is in a normal request or response the id of the field.
            This field accepts an `integer` representing the chosen select
            option id related to the field. Available ids can be found when
            getting or listing the field. The response represents chosen field,
            but also the value and color is exposed.
          allOf:
            - $ref: '#/components/schemas/SelectOption'
          nullable: true
        field_17:
          description: >-
            This field represents the `multiple_select` field. The number in
            field_17 is in a normal request or response the id of the field.
            This field accepts a list of `integer` each of which representing
            the chosen select option id related to the field. Available ids can
            be foundwhen getting or listing the field. You can also send a list
            of option names in which case the option are searched by name. The
            first one that matches is used. This field also accepts a string
            with names separated by a comma. The response represents chosen
            field, but also the value and color is exposed.
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
          nullable: true
        field_18:
          description: >-
            This field represents the `phone_number` field. The number in
            field_18 is in a normal request or response the id of the field. 
          type: string
          nullable: true
          maxLength: 100
        field_19:
          description: >-
            This field represents the `formula` field. The number in field_19 is
            in a normal request or response the id of the field. 
          type: string
          nullable: true
        field_20:
          description: >-
            This field represents the `count` field. The number in field_20 is
            in a normal request or response the id of the field. 
          type: string
          nullable: true
        field_21:
          description: >-
            This field represents the `rollup` field. The number in field_21 is
            in a normal request or response the id of the field. 
          type: string
          nullable: true
        field_22:
          description: >-
            This field represents the `lookup` field. The number in field_22 is
            in a normal request or response the id of the field. 
          type: string
          nullable: true
        field_23:
          description: >-
            This field represents the `multiple_collaborators` field. The number
            in field_23 is in a normal request or response the id of the field.
            This field accepts a list of objects representing the chosen
            collaborators through the object's `id` property. The id is Baserow
            user id. The response objects also contains the collaborator name
            directly along with its id.
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
        field_24:
          description: >-
            This field represents the `uuid` field. The number in field_24 is in
            a normal request or response the id of the field. Contains a unique
            and persistent UUID for every row.
          type: string
          format: uuid
        field_25:
          description: >-
            This field represents the `autonumber` field. The number in field_25
            is in a normal request or response the id of the field. Contains a
            unique and persistent incremental integer number for every row.
          type: integer
        field_26:
          description: >-
            This field represents the `password` field. The number in field_26
            is in a normal request or response the id of the field. Allows
            setting a write only password value. Providing a string will set the
            password, `null` will unset it, `true` will be ignored. The response
            will respond with `true` is a password is set, but will never expose
            the password itself.
          type: boolean
      required:
        - id
      x-konfig-properties:
        field_10:
          description: >-
            This field represents the `last_modified_by` field. The number in
            field_10 is in a normal request or response the id of the field. 
        field_12:
          description: >-
            This field represents the `created_by` field. The number in field_12
            is in a normal request or response the id of the field. 
    ExampleRowResponseSerializerWithUserFieldNames:
      type: object
      properties:
        id:
          description: The unique identifier of the row in the table.
          type: integer
        order:
          description: Indicates the position of the row, lowest first and highest last.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
        field_1:
          description: >-
            This field represents the `text` field. The number in field_1 is in
            a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          nullable: true
        field_2:
          description: >-
            This field represents the `long_text` field. The number in field_2
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          nullable: true
        field_3:
          description: >-
            This field represents the `url` field. The number in field_3 is in a
            normal request or response the id of the field. If the GET parameter
            `user_field_names` is provided then the key will instead be the
            actual name of the field. 
          type: string
          nullable: true
        field_4:
          description: >-
            This field represents the `email` field. The number in field_4 is in
            a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          nullable: true
          maxLength: 254
        field_5:
          description: >-
            This field represents the `number` field. The number in field_5 is
            in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          format: decimal
          pattern: ^-?\d{0,50}(?:\.\d{0,0})?$
          nullable: true
        field_6:
          description: >-
            This field represents the `rating` field. The number in field_6 is
            in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: integer
          maximum: 5
          minimum: 0
          default: 0
        field_7:
          description: >-
            This field represents the `boolean` field. The number in field_7 is
            in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: boolean
          default: false
        field_8:
          description: >-
            This field represents the `date` field. The number in field_8 is in
            a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          format: date
          nullable: true
        field_9:
          description: >-
            This field represents the `last_modified` field. The number in
            field_9 is in a normal request or response the id of the field. If
            the GET parameter `user_field_names` is provided then the key will
            instead be the actual name of the field. 
          type: string
          format: date-time
        field_10:
          $ref: '#/components/schemas/Collaborator'
        field_11:
          description: >-
            This field represents the `created_on` field. The number in field_11
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          format: date-time
        field_12:
          $ref: '#/components/schemas/Collaborator'
        field_13:
          description: >-
            This field represents the `duration` field. The number in field_13
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. The provided value can be a string
            in one of the available formats or a number representing the
            duration in seconds. In any case, the value will be rounded to match
            the field's duration format.
          type: number
          format: float
          nullable: true
        field_14:
          description: >-
            This field represents the `link_row` field. The number in field_14
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. This field accepts an `array`
            containing the ids or the names of the related rows. A name is the
            value of the primary key of the related row. This field also accepts
            a string with names separated by a comma. The response contains a
            list of objects containing the `id` and the primary field's `value`
            as a string for display purposes.
          type: array
          items:
            $ref: '#/components/schemas/LinkRowValue'
        field_15:
          description: >-
            This field represents the `file` field. The number in field_15 is in
            a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. This field accepts an `array`
            containing objects with the name of the file. The response contains
            an `array` of more detailed objects related to the files.
          type: array
          items:
            $ref: '#/components/schemas/FileFieldResponse'
        field_16:
          description: >-
            This field represents the `single_select` field. The number in
            field_16 is in a normal request or response the id of the field. If
            the GET parameter `user_field_names` is provided then the key will
            instead be the actual name of the field. This field accepts an
            `integer` representing the chosen select option id related to the
            field. Available ids can be found when getting or listing the field.
            The response represents chosen field, but also the value and color
            is exposed.
          allOf:
            - $ref: '#/components/schemas/SelectOption'
          nullable: true
        field_17:
          description: >-
            This field represents the `multiple_select` field. The number in
            field_17 is in a normal request or response the id of the field. If
            the GET parameter `user_field_names` is provided then the key will
            instead be the actual name of the field. This field accepts a list
            of `integer` each of which representing the chosen select option id
            related to the field. Available ids can be foundwhen getting or
            listing the field. You can also send a list of option names in which
            case the option are searched by name. The first one that matches is
            used. This field also accepts a string with names separated by a
            comma. The response represents chosen field, but also the value and
            color is exposed.
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
          nullable: true
        field_18:
          description: >-
            This field represents the `phone_number` field. The number in
            field_18 is in a normal request or response the id of the field. If
            the GET parameter `user_field_names` is provided then the key will
            instead be the actual name of the field. 
          type: string
          nullable: true
          maxLength: 100
        field_19:
          description: >-
            This field represents the `formula` field. The number in field_19 is
            in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          nullable: true
        field_20:
          description: >-
            This field represents the `count` field. The number in field_20 is
            in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          nullable: true
        field_21:
          description: >-
            This field represents the `rollup` field. The number in field_21 is
            in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          nullable: true
        field_22:
          description: >-
            This field represents the `lookup` field. The number in field_22 is
            in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          nullable: true
        field_23:
          description: >-
            This field represents the `multiple_collaborators` field. The number
            in field_23 is in a normal request or response the id of the field.
            If the GET parameter `user_field_names` is provided then the key
            will instead be the actual name of the field. This field accepts a
            list of objects representing the chosen collaborators through the
            object's `id` property. The id is Baserow user id. The response
            objects also contains the collaborator name directly along with its
            id.
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
        field_24:
          description: >-
            This field represents the `uuid` field. The number in field_24 is in
            a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. Contains a unique and persistent
            UUID for every row.
          type: string
          format: uuid
        field_25:
          description: >-
            This field represents the `autonumber` field. The number in field_25
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. Contains a unique and persistent
            incremental integer number for every row.
          type: integer
        field_26:
          description: >-
            This field represents the `password` field. The number in field_26
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. Allows setting a write only
            password value. Providing a string will set the password, `null`
            will unset it, `true` will be ignored. The response will respond
            with `true` is a password is set, but will never expose the password
            itself.
          type: boolean
      required:
        - id
      x-konfig-properties:
        field_10:
          description: >-
            This field represents the `last_modified_by` field. The number in
            field_10 is in a normal request or response the id of the field. If
            the GET parameter `user_field_names` is provided then the key will
            instead be the actual name of the field. 
        field_12:
          description: >-
            This field represents the `created_by` field. The number in field_12
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
    Export:
      oneOf:
        - $ref: '#/components/schemas/CsvExporterOptions'
        - $ref: '#/components/schemas/BaseExporterOptions'
        - $ref: '#/components/schemas/BaseExporterOptions'
      discriminator:
        propertyName: exporter_type
        mapping:
          csv: '#/components/schemas/CsvExporterOptions'
          json: '#/components/schemas/BaseExporterOptions'
          xml: '#/components/schemas/BaseExporterOptions'
    ExportCharsetEnum:
      description: |-
        * `utf-8` - utf-8
        * `iso-8859-6` - iso-8859-6
        * `windows-1256` - windows-1256
        * `iso-8859-4` - iso-8859-4
        * `windows-1257` - windows-1257
        * `iso-8859-14` - iso-8859-14
        * `iso-8859-2` - iso-8859-2
        * `windows-1250` - windows-1250
        * `gbk` - gbk
        * `gb18030` - gb18030
        * `big5` - big5
        * `koi8-r` - koi8-r
        * `koi8-u` - koi8-u
        * `iso-8859-5` - iso-8859-5
        * `windows-1251` - windows-1251
        * `x-mac-cyrillic` - mac-cyrillic
        * `iso-8859-7` - iso-8859-7
        * `windows-1253` - windows-1253
        * `iso-8859-8` - iso-8859-8
        * `windows-1255` - windows-1255
        * `euc-jp` - euc-jp
        * `iso-2022-jp` - iso-2022-jp
        * `shift-jis` - shift-jis
        * `euc-kr` - euc-kr
        * `macintosh` - macintosh
        * `iso-8859-10` - iso-8859-10
        * `iso-8859-16` - iso-8859-16
        * `windows-874` - cp874
        * `windows-1254` - windows-1254
        * `windows-1258` - windows-1258
        * `iso-8859-1` - iso-8859-1
        * `windows-1252` - windows-1252
        * `iso-8859-3` - iso-8859-3
      enum:
        - utf-8
        - iso-8859-6
        - windows-1256
        - iso-8859-4
        - windows-1257
        - iso-8859-14
        - iso-8859-2
        - windows-1250
        - gbk
        - gb18030
        - big5
        - koi8-r
        - koi8-u
        - iso-8859-5
        - windows-1251
        - x-mac-cyrillic
        - iso-8859-7
        - windows-1253
        - iso-8859-8
        - windows-1255
        - euc-jp
        - iso-2022-jp
        - shift-jis
        - euc-kr
        - macintosh
        - iso-8859-10
        - iso-8859-16
        - windows-874
        - windows-1254
        - windows-1258
        - iso-8859-1
        - windows-1252
        - iso-8859-3
      type: string
    ExportJob:
      description: >-
        When mixed in to a model serializer for an ExportJob this will add an
        url field

        with the actual usable url of the export job's file (if it has one).
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table:
          type: integer
          nullable: true
        view:
          type: integer
          nullable: true
        exporter_type:
          type: string
        state:
          $ref: '#/components/schemas/StateEnum'
        status:
          description: 'DEPRECATED: Use state instead'
          type: string
          readOnly: true
        exported_file_name:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        progress_percentage:
          type: number
          format: double
        url:
          type: string
          format: uri
          readOnly: true
      required:
        - created_at
        - exporter_type
        - id
        - state
        - status
        - url
    ExporterTypeEnum:
      description: |-
        * `csv` - csv
        * `json` - json
        * `xml` - xml
      enum:
        - csv
        - json
        - xml
      type: string
    FacebookAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        domain:
          type: string
          nullable: true
          maxLength: 255
        enabled:
          type: boolean
        name:
          type: string
          maxLength: 255
        client_id:
          description: App ID, or consumer key
          type: string
          maxLength: 191
        secret:
          description: API secret, client secret, or consumer secret
          type: string
          maxLength: 191
      required:
        - client_id
        - id
        - name
        - secret
        - type
    Field:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
    FieldCreateField:
      oneOf:
        - $ref: '#/components/schemas/TextFieldCreateField'
        - $ref: '#/components/schemas/LongTextFieldCreateField'
        - $ref: '#/components/schemas/URLFieldCreateField'
        - $ref: '#/components/schemas/EmailFieldCreateField'
        - $ref: '#/components/schemas/NumberFieldCreateField'
        - $ref: '#/components/schemas/RatingFieldCreateField'
        - $ref: '#/components/schemas/BooleanFieldCreateField'
        - $ref: '#/components/schemas/DateFieldCreateField'
        - $ref: '#/components/schemas/LastModifiedFieldCreateField'
        - $ref: '#/components/schemas/LastModifiedByFieldCreateField'
        - $ref: '#/components/schemas/CreatedOnFieldCreateField'
        - $ref: '#/components/schemas/CreatedByFieldCreateField'
        - $ref: '#/components/schemas/DurationFieldCreateField'
        - $ref: '#/components/schemas/LinkRowFieldCreateField'
        - $ref: '#/components/schemas/FileFieldCreateField'
        - $ref: '#/components/schemas/SingleSelectFieldCreateField'
        - $ref: '#/components/schemas/MultipleSelectFieldCreateField'
        - $ref: '#/components/schemas/PhoneNumberFieldCreateField'
        - $ref: '#/components/schemas/FormulaFieldCreateField'
        - $ref: '#/components/schemas/CountFieldCreateField'
        - $ref: '#/components/schemas/RollupFieldCreateField'
        - $ref: '#/components/schemas/LookupFieldCreateField'
        - $ref: '#/components/schemas/MultipleCollaboratorsFieldCreateField'
        - $ref: '#/components/schemas/UUIDFieldCreateField'
        - $ref: '#/components/schemas/AutonumberFieldCreateField'
        - $ref: '#/components/schemas/PasswordFieldCreateField'
      discriminator:
        propertyName: type
        mapping:
          text: '#/components/schemas/TextFieldCreateField'
          long_text: '#/components/schemas/LongTextFieldCreateField'
          url: '#/components/schemas/URLFieldCreateField'
          email: '#/components/schemas/EmailFieldCreateField'
          number: '#/components/schemas/NumberFieldCreateField'
          rating: '#/components/schemas/RatingFieldCreateField'
          boolean: '#/components/schemas/BooleanFieldCreateField'
          date: '#/components/schemas/DateFieldCreateField'
          last_modified: '#/components/schemas/LastModifiedFieldCreateField'
          last_modified_by: '#/components/schemas/LastModifiedByFieldCreateField'
          created_on: '#/components/schemas/CreatedOnFieldCreateField'
          created_by: '#/components/schemas/CreatedByFieldCreateField'
          duration: '#/components/schemas/DurationFieldCreateField'
          link_row: '#/components/schemas/LinkRowFieldCreateField'
          file: '#/components/schemas/FileFieldCreateField'
          single_select: '#/components/schemas/SingleSelectFieldCreateField'
          multiple_select: '#/components/schemas/MultipleSelectFieldCreateField'
          phone_number: '#/components/schemas/PhoneNumberFieldCreateField'
          formula: '#/components/schemas/FormulaFieldCreateField'
          count: '#/components/schemas/CountFieldCreateField'
          rollup: '#/components/schemas/RollupFieldCreateField'
          lookup: '#/components/schemas/LookupFieldCreateField'
          multiple_collaborators: '#/components/schemas/MultipleCollaboratorsFieldCreateField'
          uuid: '#/components/schemas/UUIDFieldCreateField'
          autonumber: '#/components/schemas/AutonumberFieldCreateField'
          password: '#/components/schemas/PasswordFieldCreateField'
    FieldField:
      oneOf:
        - $ref: '#/components/schemas/TextFieldField'
        - $ref: '#/components/schemas/LongTextFieldField'
        - $ref: '#/components/schemas/URLFieldField'
        - $ref: '#/components/schemas/EmailFieldField'
        - $ref: '#/components/schemas/NumberFieldField'
        - $ref: '#/components/schemas/RatingFieldField'
        - $ref: '#/components/schemas/BooleanFieldField'
        - $ref: '#/components/schemas/DateFieldField'
        - $ref: '#/components/schemas/LastModifiedFieldField'
        - $ref: '#/components/schemas/LastModifiedByFieldField'
        - $ref: '#/components/schemas/CreatedOnFieldField'
        - $ref: '#/components/schemas/CreatedByFieldField'
        - $ref: '#/components/schemas/DurationFieldField'
        - $ref: '#/components/schemas/LinkRowFieldField'
        - $ref: '#/components/schemas/FileFieldField'
        - $ref: '#/components/schemas/SingleSelectFieldField'
        - $ref: '#/components/schemas/MultipleSelectFieldField'
        - $ref: '#/components/schemas/PhoneNumberFieldField'
        - $ref: '#/components/schemas/FormulaFieldField'
        - $ref: '#/components/schemas/CountFieldField'
        - $ref: '#/components/schemas/RollupFieldField'
        - $ref: '#/components/schemas/LookupFieldField'
        - $ref: '#/components/schemas/MultipleCollaboratorsFieldField'
        - $ref: '#/components/schemas/UUIDFieldField'
        - $ref: '#/components/schemas/AutonumberFieldField'
        - $ref: '#/components/schemas/PasswordFieldField'
      discriminator:
        propertyName: type
        mapping:
          text: '#/components/schemas/TextFieldField'
          long_text: '#/components/schemas/LongTextFieldField'
          url: '#/components/schemas/URLFieldField'
          email: '#/components/schemas/EmailFieldField'
          number: '#/components/schemas/NumberFieldField'
          rating: '#/components/schemas/RatingFieldField'
          boolean: '#/components/schemas/BooleanFieldField'
          date: '#/components/schemas/DateFieldField'
          last_modified: '#/components/schemas/LastModifiedFieldField'
          last_modified_by: '#/components/schemas/LastModifiedByFieldField'
          created_on: '#/components/schemas/CreatedOnFieldField'
          created_by: '#/components/schemas/CreatedByFieldField'
          duration: '#/components/schemas/DurationFieldField'
          link_row: '#/components/schemas/LinkRowFieldField'
          file: '#/components/schemas/FileFieldField'
          single_select: '#/components/schemas/SingleSelectFieldField'
          multiple_select: '#/components/schemas/MultipleSelectFieldField'
          phone_number: '#/components/schemas/PhoneNumberFieldField'
          formula: '#/components/schemas/FormulaFieldField'
          count: '#/components/schemas/CountFieldField'
          rollup: '#/components/schemas/RollupFieldField'
          lookup: '#/components/schemas/LookupFieldField'
          multiple_collaborators: '#/components/schemas/MultipleCollaboratorsFieldField'
          uuid: '#/components/schemas/UUIDFieldField'
          autonumber: '#/components/schemas/AutonumberFieldField'
          password: '#/components/schemas/PasswordFieldField'
    FieldFieldSerializerWithRelatedFields:
      oneOf:
        - $ref: '#/components/schemas/TextFieldFieldSerializerWithRelatedFields'
        - $ref: '#/components/schemas/LongTextFieldFieldSerializerWithRelatedFields'
        - $ref: '#/components/schemas/URLFieldFieldSerializerWithRelatedFields'
        - $ref: '#/components/schemas/EmailFieldFieldSerializerWithRelatedFields'
        - $ref: '#/components/schemas/NumberFieldFieldSerializerWithRelatedFields'
        - $ref: '#/components/schemas/RatingFieldFieldSerializerWithRelatedFields'
        - $ref: '#/components/schemas/BooleanFieldFieldSerializerWithRelatedFields'
        - $ref: '#/components/schemas/DateFieldFieldSerializerWithRelatedFields'
        - $ref: >-
            #/components/schemas/LastModifiedFieldFieldSerializerWithRelatedFields
        - $ref: >-
            #/components/schemas/LastModifiedByFieldFieldSerializerWithRelatedFields
        - $ref: '#/components/schemas/CreatedOnFieldFieldSerializerWithRelatedFields'
        - $ref: '#/components/schemas/CreatedByFieldFieldSerializerWithRelatedFields'
        - $ref: '#/components/schemas/DurationFieldFieldSerializerWithRelatedFields'
        - $ref: '#/components/schemas/LinkRowFieldFieldSerializerWithRelatedFields'
        - $ref: '#/components/schemas/FileFieldFieldSerializerWithRelatedFields'
        - $ref: >-
            #/components/schemas/SingleSelectFieldFieldSerializerWithRelatedFields
        - $ref: >-
            #/components/schemas/MultipleSelectFieldFieldSerializerWithRelatedFields
        - $ref: >-
            #/components/schemas/PhoneNumberFieldFieldSerializerWithRelatedFields
        - $ref: '#/components/schemas/FormulaFieldFieldSerializerWithRelatedFields'
        - $ref: '#/components/schemas/CountFieldFieldSerializerWithRelatedFields'
        - $ref: '#/components/schemas/RollupFieldFieldSerializerWithRelatedFields'
        - $ref: '#/components/schemas/LookupFieldFieldSerializerWithRelatedFields'
        - $ref: >-
            #/components/schemas/MultipleCollaboratorsFieldFieldSerializerWithRelatedFields
        - $ref: '#/components/schemas/UUIDFieldFieldSerializerWithRelatedFields'
        - $ref: '#/components/schemas/AutonumberFieldFieldSerializerWithRelatedFields'
        - $ref: '#/components/schemas/PasswordFieldFieldSerializerWithRelatedFields'
      discriminator:
        propertyName: type
        mapping:
          text: '#/components/schemas/TextFieldFieldSerializerWithRelatedFields'
          long_text: '#/components/schemas/LongTextFieldFieldSerializerWithRelatedFields'
          url: '#/components/schemas/URLFieldFieldSerializerWithRelatedFields'
          email: '#/components/schemas/EmailFieldFieldSerializerWithRelatedFields'
          number: '#/components/schemas/NumberFieldFieldSerializerWithRelatedFields'
          rating: '#/components/schemas/RatingFieldFieldSerializerWithRelatedFields'
          boolean: '#/components/schemas/BooleanFieldFieldSerializerWithRelatedFields'
          date: '#/components/schemas/DateFieldFieldSerializerWithRelatedFields'
          last_modified: >-
            #/components/schemas/LastModifiedFieldFieldSerializerWithRelatedFields
          last_modified_by: >-
            #/components/schemas/LastModifiedByFieldFieldSerializerWithRelatedFields
          created_on: '#/components/schemas/CreatedOnFieldFieldSerializerWithRelatedFields'
          created_by: '#/components/schemas/CreatedByFieldFieldSerializerWithRelatedFields'
          duration: '#/components/schemas/DurationFieldFieldSerializerWithRelatedFields'
          link_row: '#/components/schemas/LinkRowFieldFieldSerializerWithRelatedFields'
          file: '#/components/schemas/FileFieldFieldSerializerWithRelatedFields'
          single_select: >-
            #/components/schemas/SingleSelectFieldFieldSerializerWithRelatedFields
          multiple_select: >-
            #/components/schemas/MultipleSelectFieldFieldSerializerWithRelatedFields
          phone_number: >-
            #/components/schemas/PhoneNumberFieldFieldSerializerWithRelatedFields
          formula: '#/components/schemas/FormulaFieldFieldSerializerWithRelatedFields'
          count: '#/components/schemas/CountFieldFieldSerializerWithRelatedFields'
          rollup: '#/components/schemas/RollupFieldFieldSerializerWithRelatedFields'
          lookup: '#/components/schemas/LookupFieldFieldSerializerWithRelatedFields'
          multiple_collaborators: >-
            #/components/schemas/MultipleCollaboratorsFieldFieldSerializerWithRelatedFields
          uuid: '#/components/schemas/UUIDFieldFieldSerializerWithRelatedFields'
          autonumber: '#/components/schemas/AutonumberFieldFieldSerializerWithRelatedFields'
          password: '#/components/schemas/PasswordFieldFieldSerializerWithRelatedFields'
    FieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
    FileFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
      required:
        - name
        - type
    FileFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
    FileFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
    FileFieldRequest:
      type: object
      properties:
        visible_name:
          description: A visually editable name for the field.
          type: string
        name:
          description: Accepts the name of the already uploaded user file.
          type: string
      required:
        - name
    FileFieldResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        thumbnails:
          type: object
          additionalProperties: {}
          readOnly: true
        visible_name:
          type: string
        name:
          type: string
        size:
          type: integer
        mime_type:
          type: string
        is_image:
          type: boolean
        image_width:
          type: integer
        image_height:
          type: integer
        uploaded_at:
          type: string
          format: date-time
      required:
        - image_height
        - image_width
        - is_image
        - mime_type
        - name
        - size
        - thumbnails
        - uploaded_at
        - url
        - visible_name
    FileFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
    FileImportJobCreateJob:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeC5eEnum'
      required:
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
    FileImportJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the job.
          type: string
          readOnly: true
        progress_percentage:
          description: >-
            A percentage indicating how far along the job is. 100 means that
            it's finished.
          type: integer
        state:
          description: Indicates the state of the import job.
          type: string
        human_readable_error:
          description: A human readable error message indicating what went wrong.
          type: string
        database_id:
          description: Database id where the table will be created.
          type: integer
        name:
          description: The name of the new table.
          type: string
          maxLength: 255
        table_id:
          description: Table id where the data will be imported.
          type: integer
        first_row_header:
          type: boolean
          default: false
        report:
          $ref: '#/components/schemas/Report'
      required:
        - database_id
        - id
        - progress_percentage
        - report
        - state
        - type
      x-konfig-properties:
        report:
          description: Import error report.
    FilterActionTypeEnum:
      description: >-
        * `create_group` - create_group

        * `delete_group` - delete_group

        * `update_group` - update_group

        * `order_groups` - order_groups

        * `create_application` - create_application

        * `update_application` - update_application

        * `delete_application` - delete_application

        * `order_applications` - order_applications

        * `duplicate_application` - duplicate_application

        * `install_template` - install_template

        * `create_group_invitation` - create_group_invitation

        * `delete_group_invitation` - delete_group_invitation

        * `accept_group_invitation` - accept_group_invitation

        * `reject_group_invitation` - reject_group_invitation

        * `update_group_invitation_permissions` -
        update_group_invitation_permissions

        * `leave_group` - leave_group

        * `create_snapshot` - create_snapshot

        * `delete_snapshot` - delete_snapshot

        * `restore_snapshot` - restore_snapshot

        * `empty_trash` - empty_trash

        * `restore_from_trash` - restore_from_trash

        * `create_user` - create_user

        * `update_user` - update_user

        * `schedule_user_deletion` - schedule_user_deletion

        * `cancel_user_deletion` - cancel_user_deletion

        * `sign_in_user` - sign_in_user

        * `change_user_password` - change_user_password

        * `send_reset_user_password` - send_reset_user_password

        * `reset_user_password` - reset_user_password

        * `create_db_token` - create_db_token

        * `update_db_token_name` - update_db_token_name

        * `update_db_token_permissions` - update_db_token_permissions

        * `rotate_db_token_key` - rotate_db_token_key

        * `delete_db_token_key` - delete_db_token_key

        * `create_webhook` - create_webhook

        * `delete_webhook` - delete_webhook

        * `update_webhook` - update_webhook

        * `export_table` - export_table

        * `import_database_from_airtable` - import_database_from_airtable

        * `create_table` - create_table

        * `delete_table` - delete_table

        * `order_tables` - order_tables

        * `update_table` - update_table

        * `duplicate_table` - duplicate_table

        * `create_row` - create_row

        * `create_rows` - create_rows

        * `import_rows` - import_rows

        * `delete_row` - delete_row

        * `delete_rows` - delete_rows

        * `move_row` - move_row

        * `update_row` - update_row

        * `update_rows` - update_rows

        * `create_view` - create_view

        * `duplicate_view` - duplicate_view

        * `delete_view` - delete_view

        * `order_views` - order_views

        * `update_view` - update_view

        * `create_view_filter` - create_view_filter

        * `update_view_filter` - update_view_filter

        * `delete_view_filter` - delete_view_filter

        * `create_view_sort` - create_view_sort

        * `update_view_sort` - update_view_sort

        * `delete_view_sort` - delete_view_sort

        * `create_view_group` - create_view_group

        * `update_view_group` - update_view_group

        * `delete_view_group` - delete_view_group

        * `rotate_view_slug` - rotate_view_slug

        * `update_view_field_options` - update_view_field_options

        * `create_decoration` - create_decoration

        * `update_decoration` - update_decoration

        * `delete_decoration` - delete_decoration

        * `create_view_filter_group` - create_view_filter_group

        * `update_view_filter_group` - update_view_filter_group

        * `delete_view_filter_group` - delete_view_filter_group

        * `create_field` - create_field

        * `delete_field` - delete_field

        * `update_field` - update_field

        * `duplicate_field` - duplicate_field

        * `create_row_comment` - create_row_comment

        * `delete_row_comment` - delete_row_comment

        * `update_row_comment` - update_row_comment

        * `create_team` - create_team

        * `update_team` - update_team

        * `delete_team` - delete_team

        * `create_team_subject` - create_team_subject

        * `delete_team_subject` - delete_team_subject

        * `batch_assign_role` - batch_assign_role
      enum:
        - create_group
        - delete_group
        - update_group
        - order_groups
        - create_application
        - update_application
        - delete_application
        - order_applications
        - duplicate_application
        - install_template
        - create_group_invitation
        - delete_group_invitation
        - accept_group_invitation
        - reject_group_invitation
        - update_group_invitation_permissions
        - leave_group
        - create_snapshot
        - delete_snapshot
        - restore_snapshot
        - empty_trash
        - restore_from_trash
        - create_user
        - update_user
        - schedule_user_deletion
        - cancel_user_deletion
        - sign_in_user
        - change_user_password
        - send_reset_user_password
        - reset_user_password
        - create_db_token
        - update_db_token_name
        - update_db_token_permissions
        - rotate_db_token_key
        - delete_db_token_key
        - create_webhook
        - delete_webhook
        - update_webhook
        - export_table
        - import_database_from_airtable
        - create_table
        - delete_table
        - order_tables
        - update_table
        - duplicate_table
        - create_row
        - create_rows
        - import_rows
        - delete_row
        - delete_rows
        - move_row
        - update_row
        - update_rows
        - create_view
        - duplicate_view
        - delete_view
        - order_views
        - update_view
        - create_view_filter
        - update_view_filter
        - delete_view_filter
        - create_view_sort
        - update_view_sort
        - delete_view_sort
        - create_view_group
        - update_view_group
        - delete_view_group
        - rotate_view_slug
        - update_view_field_options
        - create_decoration
        - update_decoration
        - delete_decoration
        - create_view_filter_group
        - update_view_filter_group
        - delete_view_filter_group
        - create_field
        - delete_field
        - update_field
        - duplicate_field
        - create_row_comment
        - delete_row_comment
        - update_row_comment
        - create_team
        - update_team
        - delete_team
        - create_team_subject
        - delete_team_subject
        - batch_assign_role
      type: string
    FormContainerElementCreateElement:
      description: >-
        This serializer allow to set the type of an element and the element id
        before which

        we want to insert the new element.
      type: object
      properties:
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        before_id:
          description: >-
            If provided, creates the element before the element with the given
            id.
          type: integer
        type:
          $ref: '#/components/schemas/Type2a6Enum'
        parent_element_id:
          description: >-
            If provided, creates the element as a child of the element with the
            given id.
          type: integer
          nullable: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        submit_button_label:
          type: string
          default: ''
        button_color:
          description: Button color.
          type: string
          default: primary
          maxLength: 20
      required:
        - order
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `form_container` - form_container
            * `dropdown` - dropdown
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `auth_form` - auth_form
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    FormContainerElementElement:
      description: |-
        Basic element serializer mostly for returned values.

        👉 Mind to update the
        baserow.contrib.builder.api.domains.serializer.PublicElementSerializer
        when you update this one.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        submit_button_label:
          type: string
          default: ''
        button_color:
          description: Button color.
          type: string
          default: primary
          maxLength: 20
      required:
        - id
        - order
        - page_id
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    FormContainerElementPublicElement:
      description: Basic element serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        submit_button_label:
          type: string
          default: ''
        button_color:
          description: Button color.
          type: string
          default: primary
          maxLength: 20
      required:
        - id
        - order
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    FormContainerElementUpdateElement:
      type: object
      properties:
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        submit_button_label:
          type: string
          default: ''
        button_color:
          description: Button color.
          type: string
          default: primary
          maxLength: 20
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    FormViewCreateView:
      type: object
      properties:
        title:
          description: The title that is displayed at the beginning of the form.
          type: string
        description:
          description: The description that is displayed at the beginning of the form.
          type: string
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/ViewTypesEnum'
        ownership_type:
          $ref: '#/components/schemas/OwnershipTypeEnum'
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        filters_disabled:
          description: >-
            Allows users to see results unfiltered while still keeping the
            filters saved for the view.
          type: boolean
        mode:
          $ref: '#/components/schemas/ModeC5eEnum'
        cover_image:
          description: The cover image that must be displayed at the top of the form.
          allOf:
            - $ref: '#/components/schemas/UserFile'
          nullable: true
        logo_image:
          description: The logo image that must be displayed at the top of the form.
          allOf:
            - $ref: '#/components/schemas/UserFile'
          nullable: true
        submit_text:
          description: The text displayed on the submit button.
          type: string
        submit_action:
          $ref: '#/components/schemas/SubmitActionEnum'
        submit_action_message:
          description: >-
            If the `submit_action` is MESSAGE, then this message will be shown
            to the visitor after submitting the form.
          type: string
        submit_action_redirect_url:
          description: >-
            If the `submit_action` is REDIRECT,then the visitors will be
            redirected to the this URL after submitting the form.
          type: string
          format: uri
          maxLength: 200
        receive_notification_on_submit:
          description: >-
            A boolean indicating if the current user should be notified when the
            form is submitted.
          type: boolean
          readOnly: true
        public:
          description: Indicates whether the view is publicly accessible to visitors.
          type: boolean
        slug:
          description: The unique slug that can be used to construct a public URL.
          type: string
          readOnly: true
      required:
        - name
        - receive_notification_on_submit
        - slug
        - type
      x-konfig-properties:
        ownership_type:
          default: collaborative
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
        mode:
          description: |-
            Configurable mode of the form.

            * `form` - form
            * `survey` - survey
        submit_action:
          description: >-
            The action that must be performed after the visitor has filled out
            the form.


            * `MESSAGE` - Message

            * `REDIRECT` - Redirect
    FormViewFieldOptions:
      type: object
      properties:
        description:
          description: If provided, then this value be will be shown under the field name.
          type: string
        name:
          description: >-
            By default, the name of the related field will be shown to the
            visitor. Optionally another name can be used by setting this name.
          type: string
          maxLength: 255
        enabled:
          description: Indicates whether the field is included in the form.
          type: boolean
        required:
          description: Indicates whether the field is required for the visitor to fill out.
          type: boolean
        show_when_matching_conditions:
          description: Indicates whether this field is visible when the conditions are met.
          type: boolean
        condition_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        order:
          description: The order that the field has in the form. Lower value is first.
          type: integer
          maximum: 32767
          minimum: -32768
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/FormViewFieldOptionsCondition'
        condition_groups:
          type: array
          items:
            $ref: '#/components/schemas/FormViewFieldOptionsConditionGroup'
        field_component:
          description: >-
            Indicates which field input component is used in the form. The value
            is only used in the frontend, and can differ per field.
          type: string
          maxLength: 32
      x-konfig-properties:
        condition_type:
          description: >-
            Indicates whether all (AND) or any (OR) of the conditions should
            match before shown.


            * `AND` - And

            * `OR` - Or
    FormViewFieldOptionsCondition:
      type: object
      properties:
        id:
          type: integer
        field:
          type: integer
        type:
          description: >-
            Indicates how the field's value must be compared to the filter's
            value. The filter is always in this order `field` `type` `value`
            (example: `field_1` `contains` `Test`).
          type: string
          maxLength: 48
        value:
          description: The filter value that must be compared to the field's value.
          type: string
          maxLength: 255
        group:
          type: integer
          nullable: true
      required:
        - field
        - id
        - type
    FormViewFieldOptionsConditionGroup:
      type: object
      properties:
        id:
          type: integer
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
      required:
        - id
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR) in the group to be shown.


            * `AND` - And

            * `OR` - Or
    FormViewSubmitted:
      type: object
      properties:
        submit_action:
          $ref: '#/components/schemas/SubmitActionEnum'
        submit_action_message:
          description: >-
            If the `submit_action` is MESSAGE, then this message will be shown
            to the visitor after submitting the form.
          type: string
        submit_action_redirect_url:
          description: >-
            If the `submit_action` is REDIRECT,then the visitors will be
            redirected to the this URL after submitting the form.
          type: string
          format: uri
          maxLength: 200
        row_id:
          type: integer
      required:
        - row_id
      x-konfig-properties:
        submit_action:
          description: >-
            The action that must be performed after the visitor has filled out
            the form.


            * `MESSAGE` - Message

            * `REDIRECT` - Redirect
    FormViewView:
      type: object
      properties:
        title:
          description: The title that is displayed at the beginning of the form.
          type: string
        description:
          description: The description that is displayed at the beginning of the form.
          type: string
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          $ref: '#/components/schemas/Table'
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilter'
        filter_groups:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilterGroup'
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/ViewSort'
        group_bys:
          type: array
          items:
            $ref: '#/components/schemas/ViewGroupBy'
        decorations:
          type: array
          items:
            $ref: '#/components/schemas/ViewDecoration'
        filters_disabled:
          description: >-
            Allows users to see results unfiltered while still keeping the
            filters saved for the view.
          type: boolean
        public_view_has_password:
          description: >-
            Indicates whether the public view is password protected or not.


            :return: True if the public view is password protected, False
            otherwise.
          type: boolean
          readOnly: true
        show_logo:
          type: boolean
        ownership_type:
          type: string
        owned_by_id:
          type: integer
        mode:
          $ref: '#/components/schemas/ModeC5eEnum'
        cover_image:
          description: The cover image that must be displayed at the top of the form.
          allOf:
            - $ref: '#/components/schemas/UserFile'
          nullable: true
        logo_image:
          description: The logo image that must be displayed at the top of the form.
          allOf:
            - $ref: '#/components/schemas/UserFile'
          nullable: true
        submit_text:
          description: The text displayed on the submit button.
          type: string
        submit_action:
          $ref: '#/components/schemas/SubmitActionEnum'
        submit_action_message:
          description: >-
            If the `submit_action` is MESSAGE, then this message will be shown
            to the visitor after submitting the form.
          type: string
        submit_action_redirect_url:
          description: >-
            If the `submit_action` is REDIRECT,then the visitors will be
            redirected to the this URL after submitting the form.
          type: string
          format: uri
          maxLength: 200
        receive_notification_on_submit:
          description: >-
            A boolean indicating if the current user should be notified when the
            form is submitted.
          type: boolean
          readOnly: true
        public:
          description: Indicates whether the view is publicly accessible to visitors.
          type: boolean
        slug:
          description: The unique slug that can be used to construct a public URL.
          type: string
          readOnly: true
      required:
        - id
        - name
        - order
        - ownership_type
        - public_view_has_password
        - receive_notification_on_submit
        - slug
        - table
        - table_id
        - type
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
        mode:
          description: |-
            Configurable mode of the form.

            * `form` - form
            * `survey` - survey
        submit_action:
          description: >-
            The action that must be performed after the visitor has filled out
            the form.


            * `MESSAGE` - Message

            * `REDIRECT` - Redirect
    FormatEnum:
      description: |-
        * `plain` - Plain
        * `markdown` - Markdown
      enum:
        - plain
        - markdown
      type: string
    FormulaFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateTimeFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
          nullable: true
        array_formula_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
            - $ref: '#/components/schemas/NullEnum'
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DurationFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
            - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
            - $ref: '#/components/schemas/NullEnum'
        nullable:
          type: boolean
          readOnly: true
        error:
          type: string
          readOnly: true
        date_show_tzinfo:
          description: Indicates if the time zone should be shown.
          type: boolean
          nullable: true
        formula:
          type: string
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
        - error
        - formula
        - name
        - nullable
        - type
    FormulaFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateTimeFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
          nullable: true
        array_formula_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
            - $ref: '#/components/schemas/NullEnum'
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DurationFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
            - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
            - $ref: '#/components/schemas/NullEnum'
        nullable:
          type: boolean
          readOnly: true
        error:
          type: string
          readOnly: true
        date_show_tzinfo:
          description: Indicates if the time zone should be shown.
          type: boolean
          nullable: true
        formula:
          type: string
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
        - error
        - formula
        - id
        - name
        - nullable
        - order
        - read_only
        - table_id
        - type
    FormulaFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateTimeFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
          nullable: true
        array_formula_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
            - $ref: '#/components/schemas/NullEnum'
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DurationFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
            - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
            - $ref: '#/components/schemas/NullEnum'
        nullable:
          type: boolean
          readOnly: true
        error:
          type: string
          readOnly: true
        date_show_tzinfo:
          description: Indicates if the time zone should be shown.
          type: boolean
          nullable: true
        formula:
          type: string
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
        - error
        - formula
        - id
        - name
        - nullable
        - order
        - read_only
        - related_fields
        - table_id
        - type
    FormulaFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateTimeFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
          nullable: true
        array_formula_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
            - $ref: '#/components/schemas/NullEnum'
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DurationFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
            - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
            - $ref: '#/components/schemas/NullEnum'
        nullable:
          type: boolean
          readOnly: true
        error:
          type: string
          readOnly: true
        date_show_tzinfo:
          description: Indicates if the time zone should be shown.
          type: boolean
          nullable: true
        formula:
          type: string
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
        - error
        - formula
        - nullable
    FormulaTypeEnum:
      description: |-
        * `invalid` - invalid
        * `text` - text
        * `char` - char
        * `button` - button
        * `link` - link
        * `date_interval` - date_interval
        * `duration` - duration
        * `date` - date
        * `boolean` - boolean
        * `number` - number
        * `array` - array
        * `single_select` - single_select
        * `multiple_select` - multiple_select
        * `single_file` - single_file
      enum:
        - invalid
        - text
        - char
        - button
        - link
        - date_interval
        - duration
        - date
        - boolean
        - number
        - array
        - single_select
        - multiple_select
        - single_file
      type: string
    FullHealthCheck:
      type: object
      properties:
        passing:
          description: >-
            False if any of the critical service health checks are failing, true
            otherwise.
          type: boolean
          readOnly: true
        checks:
          description: >-
            An object keyed by the name of the health check and the value being
            the result.
          type: object
          additionalProperties:
            type: string
          readOnly: true
      required:
        - checks
        - passing
    GalleryViewCreateView:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/ViewTypesEnum'
        ownership_type:
          $ref: '#/components/schemas/OwnershipTypeEnum'
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        filters_disabled:
          description: >-
            Allows users to see results unfiltered while still keeping the
            filters saved for the view.
          type: boolean
        card_cover_image_field:
          description: >-
            References a file field of which the first image must be shown as
            card cover image.
          type: integer
          nullable: true
        public:
          description: Indicates whether the view is publicly accessible to visitors.
          type: boolean
        slug:
          description: The unique slug that can be used to construct a public URL.
          type: string
          readOnly: true
      required:
        - name
        - slug
        - type
      x-konfig-properties:
        ownership_type:
          default: collaborative
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    GalleryViewFieldOptions:
      type: object
      properties:
        hidden:
          description: Whether or not the field should be hidden in the card.
          type: boolean
        order:
          description: The order that the field has in the form. Lower value is first.
          type: integer
          maximum: 32767
          minimum: -32768
    GalleryViewView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          $ref: '#/components/schemas/Table'
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilter'
        filter_groups:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilterGroup'
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/ViewSort'
        group_bys:
          type: array
          items:
            $ref: '#/components/schemas/ViewGroupBy'
        decorations:
          type: array
          items:
            $ref: '#/components/schemas/ViewDecoration'
        filters_disabled:
          description: >-
            Allows users to see results unfiltered while still keeping the
            filters saved for the view.
          type: boolean
        public_view_has_password:
          description: >-
            Indicates whether the public view is password protected or not.


            :return: True if the public view is password protected, False
            otherwise.
          type: boolean
          readOnly: true
        show_logo:
          type: boolean
        ownership_type:
          type: string
        owned_by_id:
          type: integer
        card_cover_image_field:
          description: >-
            References a file field of which the first image must be shown as
            card cover image.
          type: integer
          nullable: true
        public:
          description: Indicates whether the view is publicly accessible to visitors.
          type: boolean
        slug:
          description: The unique slug that can be used to construct a public URL.
          type: string
          readOnly: true
      required:
        - id
        - name
        - order
        - ownership_type
        - public_view_has_password
        - slug
        - table
        - table_id
        - type
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    GeneratedConditional_colorCreateViewDecoration:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeFc4Enum'
        value_provider_type:
          description: |-
            The value provider type that gives the value to the decorator.

            * `` - 
            * `single_select_color` - single_select_color
            * `conditional_color` - conditional_color
          default: ''
          oneOf:
            - $ref: '#/components/schemas/ValueProviderTypeEnum'
            - $ref: '#/components/schemas/BlankEnum'
        value_provider_conf:
          $ref: '#/components/schemas/ConditionalColorValueProviderConfColors'
        order:
          description: >-
            The position of the decorator has within the view, lowest first. If
            there is another decorator with the same order value then the
            decorator with the lowest id must be shown first.
          type: integer
          maximum: 32767
          minimum: -32768
      required:
        - type
      x-konfig-properties:
        type:
          description: >-
            The decorator type. This is then interpreted by the frontend to
            display the decoration.


            * `left_border_color` - left_border_color

            * `background_color` - background_color
        value_provider_conf:
          description: The configuration of the value provider
    GeneratedConditional_colorUpdateViewDecoration:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeFc4Enum'
        value_provider_type:
          description: |-
            The value provider type that gives the value to the decorator.

            * `` - 
            * `single_select_color` - single_select_color
            * `conditional_color` - conditional_color
          oneOf:
            - $ref: '#/components/schemas/ValueProviderTypeEnum'
            - $ref: '#/components/schemas/BlankEnum'
        value_provider_conf:
          $ref: '#/components/schemas/ConditionalColorValueProviderConfColors'
        order:
          description: >-
            The position of the decorator has within the view, lowest first. If
            there is another decorator with the same order value then the
            decorator with the lowest id must be shown first.
          type: integer
          maximum: 32767
          minimum: -32768
      x-konfig-properties:
        type:
          description: >-
            The decorator type. This is then interpreted by the frontend to
            display the decoration.


            * `left_border_color` - left_border_color

            * `background_color` - background_color
        value_provider_conf:
          description: The configuration of the value provider
    GeneratedConditional_colorViewDecoration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          description: >-
            The view to which the decoration applies. Each view can have his own
            decorations.
          type: integer
        type:
          description: >-
            The decorator type. This is then interpreted by the frontend to
            display the decoration.
          type: string
          maxLength: 255
        value_provider_type:
          description: The value provider type that gives the value to the decorator.
          type: string
          maxLength: 255
        value_provider_conf:
          $ref: '#/components/schemas/ConditionalColorValueProviderConfColors'
        order:
          description: >-
            The position of the decorator has within the view, lowest first. If
            there is another decorator with the same order value then the
            decorator with the lowest id must be shown first.
          type: integer
          maximum: 32767
          minimum: -32768
      required:
        - id
      x-konfig-properties:
        value_provider_conf:
          description: The configuration of the value provider
    GeneratedSingle_select_colorCreateViewDecoration:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeFc4Enum'
        value_provider_type:
          description: |-
            The value provider type that gives the value to the decorator.

            * `` - 
            * `single_select_color` - single_select_color
            * `conditional_color` - conditional_color
          default: ''
          oneOf:
            - $ref: '#/components/schemas/ValueProviderTypeEnum'
            - $ref: '#/components/schemas/BlankEnum'
        value_provider_conf:
          $ref: '#/components/schemas/SelectColorValueProviderConf'
        order:
          description: >-
            The position of the decorator has within the view, lowest first. If
            there is another decorator with the same order value then the
            decorator with the lowest id must be shown first.
          type: integer
          maximum: 32767
          minimum: -32768
      required:
        - type
      x-konfig-properties:
        type:
          description: >-
            The decorator type. This is then interpreted by the frontend to
            display the decoration.


            * `left_border_color` - left_border_color

            * `background_color` - background_color
        value_provider_conf:
          description: The configuration of the value provider
    GeneratedSingle_select_colorUpdateViewDecoration:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeFc4Enum'
        value_provider_type:
          description: |-
            The value provider type that gives the value to the decorator.

            * `` - 
            * `single_select_color` - single_select_color
            * `conditional_color` - conditional_color
          oneOf:
            - $ref: '#/components/schemas/ValueProviderTypeEnum'
            - $ref: '#/components/schemas/BlankEnum'
        value_provider_conf:
          $ref: '#/components/schemas/SelectColorValueProviderConf'
        order:
          description: >-
            The position of the decorator has within the view, lowest first. If
            there is another decorator with the same order value then the
            decorator with the lowest id must be shown first.
          type: integer
          maximum: 32767
          minimum: -32768
      x-konfig-properties:
        type:
          description: >-
            The decorator type. This is then interpreted by the frontend to
            display the decoration.


            * `left_border_color` - left_border_color

            * `background_color` - background_color
        value_provider_conf:
          description: The configuration of the value provider
    GeneratedSingle_select_colorViewDecoration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          description: >-
            The view to which the decoration applies. Each view can have his own
            decorations.
          type: integer
        type:
          description: >-
            The decorator type. This is then interpreted by the frontend to
            display the decoration.
          type: string
          maxLength: 255
        value_provider_type:
          description: The value provider type that gives the value to the decorator.
          type: string
          maxLength: 255
        value_provider_conf:
          $ref: '#/components/schemas/SelectColorValueProviderConf'
        order:
          description: >-
            The position of the decorator has within the view, lowest first. If
            there is another decorator with the same order value then the
            decorator with the lowest id must be shown first.
          type: integer
          maximum: 32767
          minimum: -32768
      required:
        - id
      x-konfig-properties:
        value_provider_conf:
          description: The configuration of the value provider
    GitHubAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        domain:
          type: string
          nullable: true
          maxLength: 255
        enabled:
          type: boolean
        name:
          type: string
          maxLength: 255
        client_id:
          description: App ID, or consumer key
          type: string
          maxLength: 191
        secret:
          description: API secret, client secret, or consumer secret
          type: string
          maxLength: 191
      required:
        - client_id
        - id
        - name
        - secret
        - type
    GitLabAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        domain:
          type: string
          nullable: true
          maxLength: 255
        enabled:
          type: boolean
        name:
          type: string
          maxLength: 255
        base_url:
          description: Base URL of the authorization server
          type: string
          format: uri
          maxLength: 200
        client_id:
          description: App ID, or consumer key
          type: string
          maxLength: 191
        secret:
          description: API secret, client secret, or consumer secret
          type: string
          maxLength: 191
      required:
        - base_url
        - client_id
        - id
        - name
        - secret
        - type
    GoogleAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        domain:
          type: string
          nullable: true
          maxLength: 255
        enabled:
          type: boolean
        name:
          type: string
          maxLength: 255
        client_id:
          description: App ID, or consumer key
          type: string
          maxLength: 191
        secret:
          description: API secret, client secret, or consumer secret
          type: string
          maxLength: 191
      required:
        - client_id
        - id
        - name
        - secret
        - type
    GridViewCreateView:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/ViewTypesEnum'
        ownership_type:
          $ref: '#/components/schemas/OwnershipTypeEnum'
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        filters_disabled:
          description: >-
            Allows users to see results unfiltered while still keeping the
            filters saved for the view.
          type: boolean
        row_identifier_type:
          $ref: '#/components/schemas/RowIdentifierTypeEnum'
        public:
          description: Indicates whether the view is publicly accessible to visitors.
          type: boolean
        slug:
          description: The unique slug that can be used to construct a public URL.
          type: string
          readOnly: true
      required:
        - name
        - slug
        - type
      x-konfig-properties:
        ownership_type:
          default: collaborative
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    GridViewFieldOptions:
      type: object
      properties:
        width:
          description: The width of the table field in the related view.
          type: integer
          maximum: 2147483647
          minimum: 0
        hidden:
          description: Whether or not the field should be hidden in the current view.
          type: boolean
        order:
          description: >-
            The position that the field has within the view, lowest first. If
            there is another field with the same order value then the field with
            the lowest id must be shown first.
          type: integer
          maximum: 32767
          minimum: -32768
        aggregation_type:
          description: >-
            Indicates how the field value is aggregated. This value is different
            from the `aggregation_raw_type`. The `aggregation_raw_type` is the
            value extracted from the database, while the `aggregation_type` can
            implies further calculations. For example: if you want to compute an
            average, `sum` is going to be the `aggregation_raw_type`, the value
            extracted from database, and `sum / row_count` will be the
            aggregation result displayed to the user. This aggregation_type
            should be used by the client to compute the final value.
          type: string
          maxLength: 48
        aggregation_raw_type:
          description: >-
            Indicates how to compute the raw aggregation value from database.
            This type must be registered in the backend prior to use it.


            * `empty_count` - empty_count

            * `not_empty_count` - not_empty_count

            * `unique_count` - unique_count

            * `min` - min

            * `max` - max

            * `sum` - sum

            * `average` - average

            * `median` - median

            * `decile` - decile

            * `variance` - variance

            * `std_dev` - std_dev
          oneOf:
            - $ref: '#/components/schemas/AggregationRawTypeEnum'
            - $ref: '#/components/schemas/BlankEnum'
    GridViewFilter:
      type: object
      properties:
        field_ids:
          description: >-
            Only the fields related to the provided ids are added to the
            response. If None are provided all fields will be returned.
          type: array
          items:
            type: integer
        row_ids:
          description: Only rows related to the provided ids are added to the response.
          type: array
          items:
            type: integer
      required:
        - row_ids
    GridViewView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          $ref: '#/components/schemas/Table'
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilter'
        filter_groups:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilterGroup'
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/ViewSort'
        group_bys:
          type: array
          items:
            $ref: '#/components/schemas/ViewGroupBy'
        decorations:
          type: array
          items:
            $ref: '#/components/schemas/ViewDecoration'
        filters_disabled:
          description: >-
            Allows users to see results unfiltered while still keeping the
            filters saved for the view.
          type: boolean
        public_view_has_password:
          description: >-
            Indicates whether the public view is password protected or not.


            :return: True if the public view is password protected, False
            otherwise.
          type: boolean
          readOnly: true
        show_logo:
          type: boolean
        ownership_type:
          type: string
        owned_by_id:
          type: integer
        row_identifier_type:
          $ref: '#/components/schemas/RowIdentifierTypeEnum'
        public:
          description: Indicates whether the view is publicly accessible to visitors.
          type: boolean
        slug:
          description: The unique slug that can be used to construct a public URL.
          type: string
          readOnly: true
      required:
        - id
        - name
        - order
        - ownership_type
        - public_view_has_password
        - slug
        - table
        - table_id
        - type
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    HeadingElementCreateElement:
      description: >-
        This serializer allow to set the type of an element and the element id
        before which

        we want to insert the new element.
      type: object
      properties:
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        before_id:
          description: >-
            If provided, creates the element before the element with the given
            id.
          type: integer
        type:
          $ref: '#/components/schemas/Type2a6Enum'
        parent_element_id:
          description: >-
            If provided, creates the element as a child of the element with the
            given id.
          type: integer
          nullable: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        value:
          description: The value of the element. Must be an formula.
          type: string
          default: ''
        level:
          description: The level of the heading from 1 to 6.
          type: integer
          maximum: 6
          minimum: 1
          default: 1
        font_color:
          description: Heading font color.
          type: string
          maxLength: 20
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
      required:
        - order
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `form_container` - form_container
            * `dropdown` - dropdown
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `auth_form` - auth_form
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    HeadingElementElement:
      description: |-
        Basic element serializer mostly for returned values.

        👉 Mind to update the
        baserow.contrib.builder.api.domains.serializer.PublicElementSerializer
        when you update this one.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        value:
          description: The value of the element. Must be an formula.
          type: string
          default: ''
        level:
          description: The level of the heading from 1 to 6.
          type: integer
          maximum: 6
          minimum: 1
          default: 1
        font_color:
          description: Heading font color.
          type: string
          maxLength: 20
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
      required:
        - id
        - order
        - page_id
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    HeadingElementPublicElement:
      description: Basic element serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        value:
          description: The value of the element. Must be an formula.
          type: string
          default: ''
        level:
          description: The level of the heading from 1 to 6.
          type: integer
          maximum: 6
          minimum: 1
          default: 1
        font_color:
          description: Heading font color.
          type: string
          maxLength: 20
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
      required:
        - id
        - order
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    HeadingElementUpdateElement:
      type: object
      properties:
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        value:
          description: The value of the element. Must be an formula.
          type: string
          default: ''
        level:
          description: The level of the heading from 1 to 6.
          type: integer
          maximum: 6
          minimum: 1
          default: 1
        font_color:
          description: Heading font color.
          type: string
          maxLength: 20
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    IFrameElementCreateElement:
      description: >-
        This serializer allow to set the type of an element and the element id
        before which

        we want to insert the new element.
      type: object
      properties:
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        before_id:
          description: >-
            If provided, creates the element before the element with the given
            id.
          type: integer
        type:
          $ref: '#/components/schemas/Type2a6Enum'
        parent_element_id:
          description: >-
            If provided, creates the element as a child of the element with the
            given id.
          type: integer
          nullable: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        source_type:
          $ref: '#/components/schemas/SourceTypeEnum'
        url:
          description: A link to the page to embed
          type: string
          default: ''
        embed:
          description: Inline HTML to embed
          type: string
          default: ''
        height:
          description: Height in pixels of the iframe
          type: integer
          maximum: 2000
          minimum: 1
          default: 300
      required:
        - order
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `form_container` - form_container
            * `dropdown` - dropdown
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `auth_form` - auth_form
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        source_type:
          default: url
    IFrameElementElement:
      description: |-
        Basic element serializer mostly for returned values.

        👉 Mind to update the
        baserow.contrib.builder.api.domains.serializer.PublicElementSerializer
        when you update this one.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        source_type:
          $ref: '#/components/schemas/SourceTypeEnum'
        url:
          description: A link to the page to embed
          type: string
          default: ''
        embed:
          description: Inline HTML to embed
          type: string
          default: ''
        height:
          description: Height in pixels of the iframe
          type: integer
          maximum: 2000
          minimum: 1
          default: 300
      required:
        - id
        - order
        - page_id
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        source_type:
          default: url
    IFrameElementPublicElement:
      description: Basic element serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        source_type:
          $ref: '#/components/schemas/SourceTypeEnum'
        url:
          description: A link to the page to embed
          type: string
          default: ''
        embed:
          description: Inline HTML to embed
          type: string
          default: ''
        height:
          description: Height in pixels of the iframe
          type: integer
          maximum: 2000
          minimum: 1
          default: 300
      required:
        - id
        - order
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        source_type:
          default: url
    IFrameElementUpdateElement:
      type: object
      properties:
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        source_type:
          $ref: '#/components/schemas/SourceTypeEnum'
        url:
          description: A link to the page to embed
          type: string
          default: ''
        embed:
          description: Inline HTML to embed
          type: string
          default: ''
        height:
          description: Height in pixels of the iframe
          type: integer
          maximum: 2000
          minimum: 1
          default: 300
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        source_type:
          default: url
    IdEnum:
      description: >-
        * `create_group` - create_group

        * `delete_group` - delete_group

        * `update_group` - update_group

        * `order_groups` - order_groups

        * `create_application` - create_application

        * `update_application` - update_application

        * `delete_application` - delete_application

        * `order_applications` - order_applications

        * `duplicate_application` - duplicate_application

        * `install_template` - install_template

        * `create_group_invitation` - create_group_invitation

        * `delete_group_invitation` - delete_group_invitation

        * `accept_group_invitation` - accept_group_invitation

        * `reject_group_invitation` - reject_group_invitation

        * `update_group_invitation_permissions` -
        update_group_invitation_permissions

        * `leave_group` - leave_group

        * `create_snapshot` - create_snapshot

        * `delete_snapshot` - delete_snapshot

        * `restore_snapshot` - restore_snapshot

        * `empty_trash` - empty_trash

        * `restore_from_trash` - restore_from_trash

        * `create_user` - create_user

        * `update_user` - update_user

        * `schedule_user_deletion` - schedule_user_deletion

        * `cancel_user_deletion` - cancel_user_deletion

        * `sign_in_user` - sign_in_user

        * `change_user_password` - change_user_password

        * `send_reset_user_password` - send_reset_user_password

        * `reset_user_password` - reset_user_password

        * `create_db_token` - create_db_token

        * `update_db_token_name` - update_db_token_name

        * `update_db_token_permissions` - update_db_token_permissions

        * `rotate_db_token_key` - rotate_db_token_key

        * `delete_db_token_key` - delete_db_token_key

        * `create_webhook` - create_webhook

        * `delete_webhook` - delete_webhook

        * `update_webhook` - update_webhook

        * `export_table` - export_table

        * `import_database_from_airtable` - import_database_from_airtable

        * `create_table` - create_table

        * `delete_table` - delete_table

        * `order_tables` - order_tables

        * `update_table` - update_table

        * `duplicate_table` - duplicate_table

        * `create_row` - create_row

        * `create_rows` - create_rows

        * `import_rows` - import_rows

        * `delete_row` - delete_row

        * `delete_rows` - delete_rows

        * `move_row` - move_row

        * `update_row` - update_row

        * `update_rows` - update_rows

        * `create_view` - create_view

        * `duplicate_view` - duplicate_view

        * `delete_view` - delete_view

        * `order_views` - order_views

        * `update_view` - update_view

        * `create_view_filter` - create_view_filter

        * `update_view_filter` - update_view_filter

        * `delete_view_filter` - delete_view_filter

        * `create_view_sort` - create_view_sort

        * `update_view_sort` - update_view_sort

        * `delete_view_sort` - delete_view_sort

        * `create_view_group` - create_view_group

        * `update_view_group` - update_view_group

        * `delete_view_group` - delete_view_group

        * `rotate_view_slug` - rotate_view_slug

        * `update_view_field_options` - update_view_field_options

        * `create_decoration` - create_decoration

        * `update_decoration` - update_decoration

        * `delete_decoration` - delete_decoration

        * `create_view_filter_group` - create_view_filter_group

        * `update_view_filter_group` - update_view_filter_group

        * `delete_view_filter_group` - delete_view_filter_group

        * `create_field` - create_field

        * `delete_field` - delete_field

        * `update_field` - update_field

        * `duplicate_field` - duplicate_field

        * `create_row_comment` - create_row_comment

        * `delete_row_comment` - delete_row_comment

        * `update_row_comment` - update_row_comment

        * `create_team` - create_team

        * `update_team` - update_team

        * `delete_team` - delete_team

        * `create_team_subject` - create_team_subject

        * `delete_team_subject` - delete_team_subject

        * `batch_assign_role` - batch_assign_role
      enum:
        - create_group
        - delete_group
        - update_group
        - order_groups
        - create_application
        - update_application
        - delete_application
        - order_applications
        - duplicate_application
        - install_template
        - create_group_invitation
        - delete_group_invitation
        - accept_group_invitation
        - reject_group_invitation
        - update_group_invitation_permissions
        - leave_group
        - create_snapshot
        - delete_snapshot
        - restore_snapshot
        - empty_trash
        - restore_from_trash
        - create_user
        - update_user
        - schedule_user_deletion
        - cancel_user_deletion
        - sign_in_user
        - change_user_password
        - send_reset_user_password
        - reset_user_password
        - create_db_token
        - update_db_token_name
        - update_db_token_permissions
        - rotate_db_token_key
        - delete_db_token_key
        - create_webhook
        - delete_webhook
        - update_webhook
        - export_table
        - import_database_from_airtable
        - create_table
        - delete_table
        - order_tables
        - update_table
        - duplicate_table
        - create_row
        - create_rows
        - import_rows
        - delete_row
        - delete_rows
        - move_row
        - update_row
        - update_rows
        - create_view
        - duplicate_view
        - delete_view
        - order_views
        - update_view
        - create_view_filter
        - update_view_filter
        - delete_view_filter
        - create_view_sort
        - update_view_sort
        - delete_view_sort
        - create_view_group
        - update_view_group
        - delete_view_group
        - rotate_view_slug
        - update_view_field_options
        - create_decoration
        - update_decoration
        - delete_decoration
        - create_view_filter_group
        - update_view_filter_group
        - delete_view_filter_group
        - create_field
        - delete_field
        - update_field
        - duplicate_field
        - create_row_comment
        - delete_row_comment
        - update_row_comment
        - create_team
        - update_team
        - delete_team
        - create_team_subject
        - delete_team_subject
        - batch_assign_role
      type: string
    ImageElementCreateElement:
      description: >-
        This serializer allow to set the type of an element and the element id
        before which

        we want to insert the new element.
      type: object
      properties:
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        before_id:
          description: >-
            If provided, creates the element before the element with the given
            id.
          type: integer
        type:
          $ref: '#/components/schemas/Type2a6Enum'
        parent_element_id:
          description: >-
            If provided, creates the element as a child of the element with the
            given id.
          type: integer
          nullable: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        image_source_type:
          $ref: '#/components/schemas/ImageSourceTypeEnum'
        image_file:
          description: The image file
          allOf:
            - $ref: '#/components/schemas/UserFile'
          nullable: true
        image_url:
          description: A link to the image file
          type: string
          maxLength: 1000
        alt_text:
          description: Text that is displayed when the image can't load
          type: string
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
        style_image_constraint:
          $ref: '#/components/schemas/StyleImageConstraintEnum'
        style_max_width:
          description: The max-width for this image element.
          type: integer
          nullable: true
          default: 100
        style_max_height:
          description: The max-height for this image element.
          type: integer
          maximum: 3000
          minimum: 5
          nullable: true
      required:
        - order
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `form_container` - form_container
            * `dropdown` - dropdown
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `auth_form` - auth_form
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_image_constraint:
          description: |-
            The image constraint to apply to this image

            * `cover` - Cover
            * `contain` - Contain
            * `full-width` - Full Width
    ImageElementElement:
      description: |-
        Basic element serializer mostly for returned values.

        👉 Mind to update the
        baserow.contrib.builder.api.domains.serializer.PublicElementSerializer
        when you update this one.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        image_source_type:
          $ref: '#/components/schemas/ImageSourceTypeEnum'
        image_file:
          $ref: '#/components/schemas/UserFile'
        image_url:
          description: A link to the image file
          type: string
          default: ''
        alt_text:
          description: Text that is displayed when the image can't load
          type: string
          default: ''
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
        style_image_constraint:
          $ref: '#/components/schemas/StyleImageConstraintEnum'
        style_max_width:
          description: The max-width for this image element.
          type: integer
          maximum: 100
          minimum: 0
          nullable: true
        style_max_height:
          description: The max-height for this image element.
          type: integer
          maximum: 3000
          minimum: 5
          nullable: true
      required:
        - id
        - order
        - page_id
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_image_constraint:
          description: |-
            The image constraint to apply to this image

            * `cover` - Cover
            * `contain` - Contain
            * `full-width` - Full Width
    ImageElementPublicElement:
      description: Basic element serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        image_source_type:
          $ref: '#/components/schemas/ImageSourceTypeEnum'
        image_file:
          $ref: '#/components/schemas/UserFile'
        image_url:
          description: A link to the image file
          type: string
          default: ''
        alt_text:
          description: Text that is displayed when the image can't load
          type: string
          default: ''
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
        style_image_constraint:
          $ref: '#/components/schemas/StyleImageConstraintEnum'
        style_max_width:
          description: The max-width for this image element.
          type: integer
          maximum: 100
          minimum: 0
          nullable: true
        style_max_height:
          description: The max-height for this image element.
          type: integer
          maximum: 3000
          minimum: 5
          nullable: true
      required:
        - id
        - order
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_image_constraint:
          description: |-
            The image constraint to apply to this image

            * `cover` - Cover
            * `contain` - Contain
            * `full-width` - Full Width
    ImageElementUpdateElement:
      type: object
      properties:
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        image_source_type:
          $ref: '#/components/schemas/ImageSourceTypeEnum'
        image_file:
          description: The image file
          allOf:
            - $ref: '#/components/schemas/UserFile'
          nullable: true
        image_url:
          description: A link to the image file
          type: string
          maxLength: 1000
        alt_text:
          description: Text that is displayed when the image can't load
          type: string
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
        style_image_constraint:
          $ref: '#/components/schemas/StyleImageConstraintEnum'
        style_max_width:
          description: The max-width for this image element.
          type: integer
          nullable: true
          default: 100
        style_max_height:
          description: The max-height for this image element.
          type: integer
          maximum: 3000
          minimum: 5
          nullable: true
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_image_constraint:
          description: |-
            The image constraint to apply to this image

            * `cover` - Cover
            * `contain` - Contain
            * `full-width` - Full Width
    ImageSourceTypeEnum:
      description: |-
        * `upload` - Upload
        * `url` - Url
      enum:
        - upload
        - url
      type: string
    InputTextElementCreateElement:
      description: >-
        This serializer allow to set the type of an element and the element id
        before which

        we want to insert the new element.
      type: object
      properties:
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        before_id:
          description: >-
            If provided, creates the element before the element with the given
            id.
          type: integer
        type:
          $ref: '#/components/schemas/Type2a6Enum'
        parent_element_id:
          description: >-
            If provided, creates the element as a child of the element with the
            given id.
          type: integer
          nullable: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        label:
          description: The text label for this input
          type: string
          default: ''
        default_value:
          description: This text input's default value.
          type: string
          default: ''
        required:
          description: Whether this text input is a required field.
          type: boolean
          default: false
        placeholder:
          description: The placeholder text which should be applied to the element.
          type: string
          default: ''
        is_multiline:
          description: Whether this text input is multiline.
          type: boolean
          default: false
        rows:
          description: Number of rows displayed by the rendered input element
          type: integer
          maximum: 100
          minimum: 1
          default: 3
      required:
        - order
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `form_container` - form_container
            * `dropdown` - dropdown
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `auth_form` - auth_form
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    InputTextElementElement:
      description: |-
        Basic element serializer mostly for returned values.

        👉 Mind to update the
        baserow.contrib.builder.api.domains.serializer.PublicElementSerializer
        when you update this one.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        label:
          description: The text label for this input
          type: string
          default: ''
        default_value:
          description: This text input's default value.
          type: string
          default: ''
        required:
          description: Whether this text input is a required field.
          type: boolean
          default: false
        placeholder:
          description: The placeholder text which should be applied to the element.
          type: string
          default: ''
        is_multiline:
          description: Whether this text input is multiline.
          type: boolean
          default: false
        rows:
          description: Number of rows displayed by the rendered input element
          type: integer
          maximum: 100
          minimum: 1
          default: 3
      required:
        - id
        - order
        - page_id
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    InputTextElementPublicElement:
      description: Basic element serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        label:
          description: The text label for this input
          type: string
          default: ''
        default_value:
          description: This text input's default value.
          type: string
          default: ''
        required:
          description: Whether this text input is a required field.
          type: boolean
          default: false
        placeholder:
          description: The placeholder text which should be applied to the element.
          type: string
          default: ''
        is_multiline:
          description: Whether this text input is multiline.
          type: boolean
          default: false
        rows:
          description: Number of rows displayed by the rendered input element
          type: integer
          maximum: 100
          minimum: 1
          default: 3
      required:
        - id
        - order
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    InputTextElementUpdateElement:
      type: object
      properties:
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        label:
          description: The text label for this input
          type: string
          default: ''
        default_value:
          description: This text input's default value.
          type: string
          default: ''
        required:
          description: Whether this text input is a required field.
          type: boolean
          default: false
        placeholder:
          description: The placeholder text which should be applied to the element.
          type: string
          default: ''
        is_multiline:
          description: Whether this text input is multiline.
          type: boolean
          default: false
        rows:
          description: Number of rows displayed by the rendered input element
          type: integer
          maximum: 100
          minimum: 1
          default: 3
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    InstallTemplateJobCreateJob:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeC5eEnum'
        group_id:
          description: The ID of the group where the template will be installed.
          type: integer
        workspace_id:
          description: The ID of the workspace where the template will be installed.
          type: integer
        template_id:
          description: The template ID that will be installed.
          type: integer
      required:
        - template_id
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
    InstallTemplateJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the job.
          type: string
          readOnly: true
        progress_percentage:
          description: >-
            A percentage indicating how far along the job is. 100 means that
            it's finished.
          type: integer
        state:
          description: Indicates the state of the import job.
          type: string
        human_readable_error:
          description: A human readable error message indicating what went wrong.
          type: string
        workspace:
          $ref: '#/components/schemas/Workspace'
        template:
          $ref: '#/components/schemas/Template'
        installed_applications:
          type: object
          additionalProperties: {}
          readOnly: true
        group:
          $ref: '#/components/schemas/Workspace'
      required:
        - group
        - id
        - installed_applications
        - progress_percentage
        - state
        - template
        - type
        - workspace
      x-konfig-properties:
        workspace:
          readOnly: true
        template:
          readOnly: true
        group:
          readOnly: true
    InstanceId:
      type: object
      properties:
        instance_id:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
      required:
        - instance_id
    IntegrationCreateIntegration:
      oneOf:
        - $ref: '#/components/schemas/LocalBaserowIntegrationCreateIntegration'
      discriminator:
        propertyName: type
        mapping:
          local_baserow: '#/components/schemas/LocalBaserowIntegrationCreateIntegration'
    IntegrationIntegration:
      oneOf:
        - $ref: '#/components/schemas/LocalBaserowIntegrationIntegration'
      discriminator:
        propertyName: type
        mapping:
          local_baserow: '#/components/schemas/LocalBaserowIntegrationIntegration'
    Integration_Service:
      oneOf:
        - $ref: '#/components/schemas/LocalBaserowGetRow'
        - $ref: '#/components/schemas/LocalBaserowListRows'
        - $ref: '#/components/schemas/LocalBaserowUpsertRow'
      discriminator:
        propertyName: type
        mapping:
          local_baserow_get_row: '#/components/schemas/LocalBaserowGetRow'
          local_baserow_list_rows: '#/components/schemas/LocalBaserowListRows'
          local_baserow_upsert_row: '#/components/schemas/LocalBaserowUpsertRow'
    Integration_ServiceCreateDataSource:
      oneOf:
        - $ref: '#/components/schemas/LocalBaserowGetRowCreateDataSource'
        - $ref: '#/components/schemas/LocalBaserowListRowsCreateDataSource'
        - $ref: '#/components/schemas/LocalBaserowUpsertRowCreateDataSource'
      discriminator:
        propertyName: type
        mapping:
          local_baserow_get_row: '#/components/schemas/LocalBaserowGetRowCreateDataSource'
          local_baserow_list_rows: '#/components/schemas/LocalBaserowListRowsCreateDataSource'
          local_baserow_upsert_row: '#/components/schemas/LocalBaserowUpsertRowCreateDataSource'
    Integration_ServiceDataSource:
      oneOf:
        - $ref: '#/components/schemas/LocalBaserowGetRowDataSource'
        - $ref: '#/components/schemas/LocalBaserowListRowsDataSource'
        - $ref: '#/components/schemas/LocalBaserowUpsertRowDataSource'
      discriminator:
        propertyName: type
        mapping:
          local_baserow_get_row: '#/components/schemas/LocalBaserowGetRowDataSource'
          local_baserow_list_rows: '#/components/schemas/LocalBaserowListRowsDataSource'
          local_baserow_upsert_row: '#/components/schemas/LocalBaserowUpsertRowDataSource'
    Integration_ServicePublicDataSource:
      oneOf:
        - $ref: '#/components/schemas/LocalBaserowGetRowPublicDataSource'
        - $ref: '#/components/schemas/LocalBaserowListRowsPublicDataSource'
        - $ref: '#/components/schemas/LocalBaserowUpsertRowPublicDataSource'
      discriminator:
        propertyName: type
        mapping:
          local_baserow_get_row: '#/components/schemas/LocalBaserowGetRowPublicDataSource'
          local_baserow_list_rows: '#/components/schemas/LocalBaserowListRowsPublicDataSource'
          local_baserow_upsert_row: '#/components/schemas/LocalBaserowUpsertRowPublicDataSource'
    Integration_ServiceService:
      oneOf:
        - $ref: '#/components/schemas/LocalBaserowGetRowService'
        - $ref: '#/components/schemas/LocalBaserowListRowsService'
        - $ref: '#/components/schemas/LocalBaserowUpsertRowService'
      discriminator:
        propertyName: type
        mapping:
          local_baserow_get_row: '#/components/schemas/LocalBaserowGetRowService'
          local_baserow_list_rows: '#/components/schemas/LocalBaserowListRowsService'
          local_baserow_upsert_row: '#/components/schemas/LocalBaserowUpsertRowService'
    Job:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the job.
          type: string
          readOnly: true
        progress_percentage:
          description: >-
            A percentage indicating how far along the job is. 100 means that
            it's finished.
          type: integer
        state:
          description: Indicates the state of the import job.
          type: string
        human_readable_error:
          description: A human readable error message indicating what went wrong.
          type: string
      required:
        - id
        - progress_percentage
        - state
        - type
    Job_TypeCreateJob:
      oneOf:
        - $ref: '#/components/schemas/DuplicateApplicationJobCreateJob'
        - $ref: '#/components/schemas/InstallTemplateJobCreateJob'
        - $ref: '#/components/schemas/CreateSnapshotJobCreateJob'
        - $ref: '#/components/schemas/RestoreSnapshotJobCreateJob'
        - $ref: '#/components/schemas/AirtableImportJobCreateJob'
        - $ref: '#/components/schemas/FileImportJobCreateJob'
        - $ref: '#/components/schemas/DuplicateTableJobCreateJob'
        - $ref: '#/components/schemas/DuplicateFieldJobCreateJob'
        - $ref: '#/components/schemas/DuplicatePageJobCreateJob'
        - $ref: '#/components/schemas/PublishDomainJobCreateJob'
        - $ref: '#/components/schemas/AuditLogExportJobCreateJob'
      discriminator:
        propertyName: type
        mapping:
          duplicate_application: '#/components/schemas/DuplicateApplicationJobCreateJob'
          install_template: '#/components/schemas/InstallTemplateJobCreateJob'
          create_snapshot: '#/components/schemas/CreateSnapshotJobCreateJob'
          restore_snapshot: '#/components/schemas/RestoreSnapshotJobCreateJob'
          airtable: '#/components/schemas/AirtableImportJobCreateJob'
          file_import: '#/components/schemas/FileImportJobCreateJob'
          duplicate_table: '#/components/schemas/DuplicateTableJobCreateJob'
          duplicate_field: '#/components/schemas/DuplicateFieldJobCreateJob'
          duplicate_page: '#/components/schemas/DuplicatePageJobCreateJob'
          publish_domain: '#/components/schemas/PublishDomainJobCreateJob'
          audit_log_export: '#/components/schemas/AuditLogExportJobCreateJob'
    Job_TypeJob:
      oneOf:
        - $ref: '#/components/schemas/DuplicateApplicationJobJob'
        - $ref: '#/components/schemas/InstallTemplateJobJob'
        - $ref: '#/components/schemas/CreateSnapshotJobJob'
        - $ref: '#/components/schemas/RestoreSnapshotJobJob'
        - $ref: '#/components/schemas/AirtableImportJobJob'
        - $ref: '#/components/schemas/FileImportJobJob'
        - $ref: '#/components/schemas/DuplicateTableJobJob'
        - $ref: '#/components/schemas/DuplicateFieldJobJob'
        - $ref: '#/components/schemas/DuplicatePageJobJob'
        - $ref: '#/components/schemas/PublishDomainJobJob'
        - $ref: '#/components/schemas/AuditLogExportJobJob'
      discriminator:
        propertyName: type
        mapping:
          duplicate_application: '#/components/schemas/DuplicateApplicationJobJob'
          install_template: '#/components/schemas/InstallTemplateJobJob'
          create_snapshot: '#/components/schemas/CreateSnapshotJobJob'
          restore_snapshot: '#/components/schemas/RestoreSnapshotJobJob'
          airtable: '#/components/schemas/AirtableImportJobJob'
          file_import: '#/components/schemas/FileImportJobJob'
          duplicate_table: '#/components/schemas/DuplicateTableJobJob'
          duplicate_field: '#/components/schemas/DuplicateFieldJobJob'
          duplicate_page: '#/components/schemas/DuplicatePageJobJob'
          publish_domain: '#/components/schemas/PublishDomainJobJob'
          audit_log_export: '#/components/schemas/AuditLogExportJobJob'
    KanbanViewCreateView:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/ViewTypesEnum'
        ownership_type:
          $ref: '#/components/schemas/OwnershipTypeEnum'
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        filters_disabled:
          description: >-
            Allows users to see results unfiltered while still keeping the
            filters saved for the view.
          type: boolean
        single_select_field:
          type: integer
          nullable: true
        card_cover_image_field:
          description: >-
            References a file field of which the first image must be shown as
            card cover image.
          type: integer
          nullable: true
        public:
          description: Indicates whether the view is publicly accessible to visitors.
          type: boolean
        slug:
          description: The unique slug that can be used to construct a public URL.
          type: string
          readOnly: true
      required:
        - name
        - slug
        - type
      x-konfig-properties:
        ownership_type:
          default: collaborative
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    KanbanViewExampleResponse:
      type: object
      properties:
        rows:
          description: >-
            Every select option related to the view's single select field can
            have its own entry like this.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/KanbanViewExampleResponseStack'
        field_options:
          type: array
          items:
            $ref: '#/components/schemas/KanbanViewFieldOptions'
        row_metadata:
          description: >-
            An object keyed by row id with a value being an object containing
            additional metadata about that row. A row might not have metadata
            and will not be present as a key if so.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RowMetadata'
      required:
        - field_options
        - rows
    KanbanViewExampleResponseStack:
      type: object
      properties:
        count:
          description: The total count of rows that are included in this group.
          type: integer
        results:
          description: >-
            All the rows that belong in this group related with the provided
            `limit` and `offset`.
          type: array
          items:
            $ref: '#/components/schemas/ExampleRowResponse'
      required:
        - count
        - results
    KanbanViewFieldOptions:
      type: object
      properties:
        hidden:
          description: Whether or not the field should be hidden in the card.
          type: boolean
        order:
          description: The order that the field has in the view. Lower value is first.
          type: integer
          maximum: 32767
          minimum: -32768
    KanbanViewView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          $ref: '#/components/schemas/Table'
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilter'
        filter_groups:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilterGroup'
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/ViewSort'
        group_bys:
          type: array
          items:
            $ref: '#/components/schemas/ViewGroupBy'
        decorations:
          type: array
          items:
            $ref: '#/components/schemas/ViewDecoration'
        filters_disabled:
          description: >-
            Allows users to see results unfiltered while still keeping the
            filters saved for the view.
          type: boolean
        public_view_has_password:
          description: >-
            Indicates whether the public view is password protected or not.


            :return: True if the public view is password protected, False
            otherwise.
          type: boolean
          readOnly: true
        show_logo:
          type: boolean
        ownership_type:
          type: string
        owned_by_id:
          type: integer
        single_select_field:
          type: integer
          nullable: true
        card_cover_image_field:
          description: >-
            References a file field of which the first image must be shown as
            card cover image.
          type: integer
          nullable: true
        public:
          description: Indicates whether the view is publicly accessible to visitors.
          type: boolean
        slug:
          description: The unique slug that can be used to construct a public URL.
          type: string
          readOnly: true
      required:
        - id
        - name
        - order
        - ownership_type
        - public_view_has_password
        - slug
        - table
        - table_id
        - type
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    LastModifiedByFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
      required:
        - name
        - type
    LastModifiedByFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
    LastModifiedByFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
    LastModifiedByFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
    LastModifiedFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        date_format:
          $ref: '#/components/schemas/DateFormatEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
        date_time_format:
          $ref: '#/components/schemas/DateTimeFormatEnum'
        date_show_tzinfo:
          description: Indicates if the timezone should be shown.
          type: boolean
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_force_timezone_offset:
          description: >-
            ('A UTC offset in minutes to add to all the field datetimes
            values.',)
          type: integer
          nullable: true
      required:
        - type
      x-konfig-properties:
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
    LastModifiedFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        date_format:
          $ref: '#/components/schemas/DateFormatEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
        date_time_format:
          $ref: '#/components/schemas/DateTimeFormatEnum'
        date_show_tzinfo:
          description: Indicates if the timezone should be shown.
          type: boolean
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
      x-konfig-properties:
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
    LastModifiedFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
        date_format:
          $ref: '#/components/schemas/DateFormatEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
        date_time_format:
          $ref: '#/components/schemas/DateTimeFormatEnum'
        date_show_tzinfo:
          description: Indicates if the timezone should be shown.
          type: boolean
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
      required:
        - id
        - order
        - read_only
        - related_fields
        - table_id
        - type
      x-konfig-properties:
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
    LastModifiedFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        date_format:
          $ref: '#/components/schemas/DateFormatEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
        date_time_format:
          $ref: '#/components/schemas/DateTimeFormatEnum'
        date_show_tzinfo:
          description: Indicates if the timezone should be shown.
          type: boolean
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_force_timezone_offset:
          description: >-
            ('A UTC offset in minutes to add to all the field datetimes
            values.',)
          type: integer
          nullable: true
      x-konfig-properties:
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
    License:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        license_id:
          description: Unique identifier of the license.
          type: string
        is_active:
          description: Indicates if the backend deems the license valid.
          type: boolean
        last_check:
          type: string
          format: date-time
          nullable: true
        valid_from:
          description: From which timestamp the license becomes active.
          type: string
          format: date-time
        valid_through:
          description: Until which timestamp the license is active.
          type: string
          format: date-time
        free_users_count:
          description: The amount of free users that are currently using the license.
          type: integer
          readOnly: true
        seats_taken:
          description: The amount of users that are currently using the license.
          type: integer
          readOnly: true
        seats:
          description: The maximum amount of users that can use the license.
          type: integer
        product_code:
          description: The product code that indicates what the license unlocks.
          type: string
        issued_on:
          description: >-
            The date when the license was issued. It could be that a new license
            is issued with the same `license_id` because it was updated. In that
            case, the one that has been issued last should be used.
          type: string
          format: date-time
        issued_to_email:
          description: Indicates to which email address the license has been issued.
          type: string
          format: email
        issued_to_name:
          description: Indicates to whom the license has been issued.
          type: string
      required:
        - free_users_count
        - id
        - is_active
        - issued_on
        - issued_to_email
        - issued_to_name
        - license_id
        - product_code
        - seats
        - seats_taken
        - valid_from
        - valid_through
    LicenseUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        email:
          title: Email address
          type: string
          format: email
          maxLength: 254
      required:
        - id
    LicenseUserLookup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          description: The name and the email address of the user.
          type: string
          readOnly: true
      required:
        - id
        - value
    LicenseWithUsers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        license_id:
          description: Unique identifier of the license.
          type: string
        is_active:
          description: Indicates if the backend deems the license valid.
          type: boolean
        last_check:
          type: string
          format: date-time
          nullable: true
        valid_from:
          description: From which timestamp the license becomes active.
          type: string
          format: date-time
        valid_through:
          description: Until which timestamp the license is active.
          type: string
          format: date-time
        free_users_count:
          description: The amount of free users that are currently using the license.
          type: integer
          readOnly: true
        seats_taken:
          description: The amount of users that are currently using the license.
          type: integer
          readOnly: true
        seats:
          description: The maximum amount of users that can use the license.
          type: integer
        product_code:
          description: The product code that indicates what the license unlocks.
          type: string
        issued_on:
          description: >-
            The date when the license was issued. It could be that a new license
            is issued with the same `license_id` because it was updated. In that
            case, the one that has been issued last should be used.
          type: string
          format: date-time
        issued_to_email:
          description: Indicates to which email address the license has been issued.
          type: string
          format: email
        issued_to_name:
          description: Indicates to whom the license has been issued.
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/LicenseUser'
          readOnly: true
      required:
        - free_users_count
        - id
        - is_active
        - issued_on
        - issued_to_email
        - issued_to_name
        - license_id
        - product_code
        - seats
        - seats_taken
        - users
        - valid_from
        - valid_through
    LinkElementCreateElement:
      description: >-
        This serializer allow to set the type of an element and the element id
        before which

        we want to insert the new element.
      type: object
      properties:
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        before_id:
          description: >-
            If provided, creates the element before the element with the given
            id.
          type: integer
        type:
          $ref: '#/components/schemas/Type2a6Enum'
        parent_element_id:
          description: >-
            If provided, creates the element as a child of the element with the
            given id.
          type: integer
          nullable: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        value:
          description: The value of the element. Must be an formula.
          type: string
          default: ''
        navigation_type:
          $ref: '#/components/schemas/NavigationTypeEnum'
        navigate_to_page_id:
          description: >-
            ('Destination page id for this link. If null then we use the
            navigate_to_url property instead.',)
          type: integer
          nullable: true
        navigate_to_url:
          description: If no page is selected, this indicate the destination of the link.
          type: string
          default: ''
        page_parameters:
          description: The parameters for each parameters of the selected page if any.
          type: array
          items:
            $ref: '#/components/schemas/PageParameterValue'
        variant:
          $ref: '#/components/schemas/VariantEnum'
        target:
          $ref: '#/components/schemas/TargetEnum'
        width:
          $ref: '#/components/schemas/WidthEnum'
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
        button_color:
          description: Button color.
          type: string
          default: primary
          maxLength: 20
      required:
        - order
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `form_container` - form_container
            * `dropdown` - dropdown
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `auth_form` - auth_form
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        navigation_type:
          description: |-
            The navigation type.

            * `page` - Page
            * `custom` - Custom
        variant:
          description: |-
            The variant of the link.

            * `link` - Link
            * `button` - Button
        target:
          description: |-
            The target of the link when we click on it.

            * `self` - Self
            * `blank` - Blank
    LinkElementElement:
      description: |-
        Basic element serializer mostly for returned values.

        👉 Mind to update the
        baserow.contrib.builder.api.domains.serializer.PublicElementSerializer
        when you update this one.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        value:
          description: The value of the element. Must be an formula.
          type: string
          default: ''
        navigation_type:
          $ref: '#/components/schemas/NavigationTypeEnum'
        navigate_to_page_id:
          description: >-
            ('Destination page id for this link. If null then we use the
            navigate_to_url property instead.',)
          type: integer
          nullable: true
        navigate_to_url:
          description: If no page is selected, this indicate the destination of the link.
          type: string
          default: ''
        page_parameters:
          description: The parameters for each parameters of the selected page if any.
          type: array
          items:
            $ref: '#/components/schemas/PageParameterValue'
        variant:
          $ref: '#/components/schemas/VariantEnum'
        target:
          $ref: '#/components/schemas/TargetEnum'
        width:
          $ref: '#/components/schemas/WidthEnum'
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
        button_color:
          description: Button color.
          type: string
          default: primary
          maxLength: 20
      required:
        - id
        - order
        - page_id
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        navigation_type:
          description: |-
            The navigation type.

            * `page` - Page
            * `custom` - Custom
        variant:
          description: |-
            The variant of the link.

            * `link` - Link
            * `button` - Button
        target:
          description: |-
            The target of the link when we click on it.

            * `self` - Self
            * `blank` - Blank
    LinkElementPublicElement:
      description: Basic element serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        value:
          description: The value of the element. Must be an formula.
          type: string
          default: ''
        navigation_type:
          $ref: '#/components/schemas/NavigationTypeEnum'
        navigate_to_page_id:
          description: >-
            ('Destination page id for this link. If null then we use the
            navigate_to_url property instead.',)
          type: integer
          nullable: true
        navigate_to_url:
          description: If no page is selected, this indicate the destination of the link.
          type: string
          default: ''
        page_parameters:
          description: The parameters for each parameters of the selected page if any.
          type: array
          items:
            $ref: '#/components/schemas/PageParameterValue'
        variant:
          $ref: '#/components/schemas/VariantEnum'
        target:
          $ref: '#/components/schemas/TargetEnum'
        width:
          $ref: '#/components/schemas/WidthEnum'
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
        button_color:
          description: Button color.
          type: string
          default: primary
          maxLength: 20
      required:
        - id
        - order
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        navigation_type:
          description: |-
            The navigation type.

            * `page` - Page
            * `custom` - Custom
        variant:
          description: |-
            The variant of the link.

            * `link` - Link
            * `button` - Button
        target:
          description: |-
            The target of the link when we click on it.

            * `self` - Self
            * `blank` - Blank
    LinkElementUpdateElement:
      type: object
      properties:
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        value:
          description: The value of the element. Must be an formula.
          type: string
          default: ''
        navigation_type:
          $ref: '#/components/schemas/NavigationTypeEnum'
        navigate_to_page_id:
          description: >-
            ('Destination page id for this link. If null then we use the
            navigate_to_url property instead.',)
          type: integer
          nullable: true
        navigate_to_url:
          description: If no page is selected, this indicate the destination of the link.
          type: string
          default: ''
        page_parameters:
          description: The parameters for each parameters of the selected page if any.
          type: array
          items:
            $ref: '#/components/schemas/PageParameterValue'
        variant:
          $ref: '#/components/schemas/VariantEnum'
        target:
          $ref: '#/components/schemas/TargetEnum'
        width:
          $ref: '#/components/schemas/WidthEnum'
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
        button_color:
          description: Button color.
          type: string
          default: primary
          maxLength: 20
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        navigation_type:
          description: |-
            The navigation type.

            * `page` - Page
            * `custom` - Custom
        variant:
          description: |-
            The variant of the link.

            * `link` - Link
            * `button` - Button
        target:
          description: |-
            The target of the link when we click on it.

            * `self` - Self
            * `blank` - Blank
    LinkRowFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        link_row_table_id:
          description: The id of the linked table.
          type: integer
          nullable: true
        link_row_table:
          description: (Deprecated) The id of the linked table.
          type: integer
          nullable: true
        has_related_field:
          type: boolean
      required:
        - name
        - type
    LinkRowFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        link_row_table_id:
          description: The id of the linked table.
          type: integer
          nullable: true
        link_row_related_field_id:
          description: The id of the related field.
          type: integer
          nullable: true
          readOnly: true
        link_row_table:
          description: (Deprecated) The id of the linked table.
          type: integer
          nullable: true
        link_row_related_field:
          description: (Deprecated) The id of the related field.
          type: integer
          readOnly: true
      required:
        - id
        - link_row_related_field
        - link_row_related_field_id
        - name
        - order
        - read_only
        - table_id
        - type
    LinkRowFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
        link_row_table_id:
          description: The id of the linked table.
          type: integer
          nullable: true
        link_row_related_field_id:
          description: The id of the related field.
          type: integer
          nullable: true
          readOnly: true
        link_row_table:
          description: (Deprecated) The id of the linked table.
          type: integer
          nullable: true
        link_row_related_field:
          description: (Deprecated) The id of the related field.
          type: integer
          readOnly: true
      required:
        - id
        - link_row_related_field
        - link_row_related_field_id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
    LinkRowFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        link_row_table_id:
          description: The id of the linked table.
          type: integer
          nullable: true
        link_row_table:
          description: (Deprecated) The id of the linked table.
          type: integer
          nullable: true
        has_related_field:
          type: boolean
    LinkRowValue:
      type: object
      properties:
        id:
          description: The unique identifier of the row in the related table.
          type: integer
          readOnly: true
        value:
          description: >-
            The primary field's value as a string of the row in the related
            table.
          type: string
      required:
        - id
    ListWorkspaceUsersWithMemberData:
      description: >-
        Mixin to a DRF serializer class to raise an exception if data with
        unknown fields

        is provided to the serializer.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          description: User defined name.
          type: string
          readOnly: true
        email:
          description: User email.
          type: string
          readOnly: true
        group:
          description: >-
            DEPRECATED: Please use the functionally identical `workspace`
            instead as this field is being removed in the future.
          type: integer
        workspace:
          description: The workspace that the user has access to.
          type: integer
        permissions:
          description: The permissions that the user has within the workspace.
          type: string
          maxLength: 32
        created_on:
          type: string
          format: date-time
          readOnly: true
        user_id:
          description: The user that has access to the workspace.
          type: integer
          readOnly: true
        to_be_deleted:
          description: True if user account is pending deletion.
          type: boolean
        teams:
          description: >-
            Enterprise only: a list of team IDs and names, which this workspace
            user belongs to in this workspace.
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceUserEnterpriseTeam'
        role_uid:
          description: >-
            Enterprise or advanced only: the uid of the role that is assigned to
            this workspace user in this workspace.
          type: string
          nullable: true
        highest_role_uid:
          description: >-
            Enterprise or advanced only: the highest role uid assigned to this
            user in this workspace on anything, including roles from teams.
          type: string
          nullable: true
      required:
        - created_on
        - email
        - group
        - id
        - name
        - to_be_deleted
        - user_id
        - workspace
    LocalBaserowContextData:
      type: object
      properties:
        databases:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseApplication'
      required:
        - databases
    LocalBaserowCreateRowWorkflowActionBuilderWorkflowAction:
      description: Basic builder workflow action serializer
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        element_id:
          type: integer
          nullable: true
          readOnly: true
        type:
          description: The type of the workflow action
          type: string
          readOnly: true
        event:
          $ref: '#/components/schemas/EventEnum'
        service:
          $ref: '#/components/schemas/Integration_ServiceService'
      required:
        - element_id
        - event
        - id
        - order
        - service
        - type
      x-konfig-properties:
        event:
          description: |-
            The event that triggers the execution

            * `click` - Click
            * `submit` - Submit
            * `after_login` - After Login
        service:
          description: The service which this workflow action is associated with.
    LocalBaserowCreateRowWorkflowActionCreateBuilderWorkflowAction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        element_id:
          description: The id of the element the workflow action is associated with
          type: integer
          nullable: true
        type:
          $ref: '#/components/schemas/Type60cEnum'
        event:
          $ref: '#/components/schemas/EventEnum'
        service:
          $ref: '#/components/schemas/Integration_Service'
      required:
        - event
        - id
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `logout` - logout
        event:
          description: |-
            The event that triggers the execution

            * `click` - Click
            * `submit` - Submit
            * `after_login` - After Login
        service:
          description: The service which this workflow action is associated with.
    LocalBaserowCreateRowWorkflowActionUpdateBuilderWorkflowActions:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type60cEnum'
        service:
          $ref: '#/components/schemas/Integration_Service'
      x-konfig-properties:
        type:
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `logout` - logout
        service:
          description: The service which this workflow action is associated with.
    LocalBaserowField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        type:
          description: The type of the related field.
          type: string
          readOnly: true
      required:
        - id
        - name
        - table_id
        - type
    LocalBaserowGetRow:
      type: object
      properties:
        filters:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceFilter'
    LocalBaserowGetRowCreateDataSource:
      description: >-
        This serializer allow to set the type of a data_source and the
        data_source id

        before which we want to insert the new data_source.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeC03Enum'
        name:
          description: Human name for this data source.
          type: string
          nullable: true
        page_id:
          description: Page this data source is linked to.
          type: integer
          nullable: true
        before_id:
          description: >-
            If provided, creates the data_source before the data_source with the
            given id.
          type: integer
        row_id:
          type: string
        table_id:
          type: integer
          nullable: true
          readOnly: true
        view_id:
          type: integer
          nullable: true
          readOnly: true
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        search_query:
          description: The query to apply to the service to narrow the results down.
          type: string
          maxLength: 225
        filters:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceFilter'
      required:
        - row_id
        - table_id
        - view_id
      x-konfig-properties:
        type:
          description: |-
            The type of the service.

            * `local_baserow_get_row` - local_baserow_get_row
            * `local_baserow_list_rows` - local_baserow_list_rows
            * `local_baserow_upsert_row` - local_baserow_upsert_row
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    LocalBaserowGetRowDataSource:
      description: >-
        Basic data_source serializer mostly for returned values. This serializer
        flatten the

        service properties so that from an API POV the data_source object only
        exists.
      type: object
      properties:
        id:
          description: Data source id.
          type: integer
          readOnly: true
        integration_id:
          description: The integration used to establish the connection with the service.
          type: integer
          nullable: true
          readOnly: true
        type:
          description: The type of the data source.
          type: string
          readOnly: true
        schema:
          description: The schema of the service.
          type: object
          additionalProperties: {}
          readOnly: true
        name:
          description: Human name for this data source.
          type: string
          readOnly: true
        page_id:
          description: Page this data source is linked to.
          type: integer
          readOnly: true
        order:
          description: Lowest first.
          type: number
          format: float
          readOnly: true
        row_id:
          type: string
        table_id:
          type: integer
          nullable: true
          readOnly: true
        view_id:
          type: integer
          nullable: true
          readOnly: true
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        search_query:
          description: The query to apply to the service to narrow the results down.
          type: string
          maxLength: 225
        filters:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceFilter'
      required:
        - id
        - integration_id
        - name
        - order
        - page_id
        - row_id
        - schema
        - table_id
        - type
        - view_id
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    LocalBaserowGetRowPublicDataSource:
      description: >-
        Basic data_source serializer mostly for returned values. This serializer
        flatten the

        service properties so that from an API POV the data_source object only
        exists.
      type: object
      properties:
        id:
          description: Data source id.
          type: integer
          readOnly: true
        type:
          description: The type of the data source.
          type: string
          readOnly: true
        name:
          description: Human name for this data source.
          type: string
          readOnly: true
        page_id:
          description: Page this data source is linked to.
          type: integer
          readOnly: true
        order:
          description: Lowest first.
          type: number
          format: float
          readOnly: true
        row_id:
          type: string
        table_id:
          type: integer
          nullable: true
          readOnly: true
        view_id:
          type: integer
          nullable: true
          readOnly: true
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        search_query:
          description: The query to apply to the service to narrow the results down.
          type: string
          maxLength: 225
        filters:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceFilter'
      required:
        - id
        - name
        - order
        - page_id
        - row_id
        - table_id
        - type
        - view_id
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    LocalBaserowGetRowService:
      description: Basic service serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        integration_id:
          description: The integration used to establish the connection with the service.
          type: integer
          nullable: true
          readOnly: true
        type:
          description: The type of the service.
          type: string
          readOnly: true
        schema:
          description: The schema of the service.
          type: object
          additionalProperties: {}
          readOnly: true
        row_id:
          type: string
        table_id:
          type: integer
          nullable: true
          readOnly: true
        view_id:
          type: integer
          nullable: true
          readOnly: true
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        search_query:
          description: The query to apply to the service to narrow the results down.
          type: string
          maxLength: 225
        filters:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceFilter'
      required:
        - id
        - integration_id
        - row_id
        - schema
        - table_id
        - type
        - view_id
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    LocalBaserowGetRowUpdateDataSource:
      type: object
      properties:
        integration_id:
          description: The related integration id.
          type: integer
          nullable: true
        name:
          type: string
        row_id:
          type: string
        table_id:
          type: integer
          nullable: true
          readOnly: true
        view_id:
          type: integer
          nullable: true
          readOnly: true
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        search_query:
          description: The query to apply to the service to narrow the results down.
          type: string
          maxLength: 225
        filters:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceFilter'
      required:
        - row_id
        - table_id
        - view_id
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    LocalBaserowIntegrationCreateIntegration:
      description: >-
        This serializer allow to set the type of an integration and the
        integration id

        before which we want to insert the new integration.
      type: object
      properties:
        before_id:
          description: >-
            If provided, creates the integration before the integration with the
            given id.
          type: integer
        type:
          $ref: '#/components/schemas/Type5f7Enum'
        name:
          type: string
          maxLength: 255
        context_data:
          $ref: '#/components/schemas/LocalBaserowContextData'
        authorized_user:
          $ref: '#/components/schemas/SubjectUser'
      required:
        - authorized_user
        - context_data
        - name
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the integration.

            * `local_baserow` - local_baserow
        context_data:
          readOnly: true
        authorized_user:
          readOnly: true
    LocalBaserowIntegrationIntegration:
      description: Basic integration serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        application_id:
          type: integer
          readOnly: true
        type:
          description: The type of the integration.
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        context_data:
          $ref: '#/components/schemas/LocalBaserowContextData'
        authorized_user:
          $ref: '#/components/schemas/SubjectUser'
      required:
        - application_id
        - authorized_user
        - context_data
        - id
        - name
        - order
        - type
      x-konfig-properties:
        context_data:
          readOnly: true
        authorized_user:
          readOnly: true
    LocalBaserowIntegrationUpdateIntegration:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        context_data:
          $ref: '#/components/schemas/LocalBaserowContextData'
        authorized_user:
          $ref: '#/components/schemas/SubjectUser'
      required:
        - authorized_user
        - context_data
      x-konfig-properties:
        context_data:
          readOnly: true
        authorized_user:
          readOnly: true
    LocalBaserowListRows:
      type: object
      properties:
        filters:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceFilter'
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceSort'
    LocalBaserowListRowsCreateDataSource:
      description: >-
        This serializer allow to set the type of a data_source and the
        data_source id

        before which we want to insert the new data_source.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeC03Enum'
        name:
          description: Human name for this data source.
          type: string
          nullable: true
        page_id:
          description: Page this data source is linked to.
          type: integer
          nullable: true
        before_id:
          description: >-
            If provided, creates the data_source before the data_source with the
            given id.
          type: integer
        table_id:
          type: integer
          nullable: true
          readOnly: true
        view_id:
          type: integer
          nullable: true
          readOnly: true
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        search_query:
          description: The query to apply to the service to narrow the results down.
          type: string
          maxLength: 225
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceSort'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceFilter'
      required:
        - table_id
        - view_id
      x-konfig-properties:
        type:
          description: |-
            The type of the service.

            * `local_baserow_get_row` - local_baserow_get_row
            * `local_baserow_list_rows` - local_baserow_list_rows
            * `local_baserow_upsert_row` - local_baserow_upsert_row
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    LocalBaserowListRowsDataSource:
      description: >-
        Basic data_source serializer mostly for returned values. This serializer
        flatten the

        service properties so that from an API POV the data_source object only
        exists.
      type: object
      properties:
        id:
          description: Data source id.
          type: integer
          readOnly: true
        integration_id:
          description: The integration used to establish the connection with the service.
          type: integer
          nullable: true
          readOnly: true
        type:
          description: The type of the data source.
          type: string
          readOnly: true
        schema:
          description: The schema of the service.
          type: object
          additionalProperties: {}
          readOnly: true
        name:
          description: Human name for this data source.
          type: string
          readOnly: true
        page_id:
          description: Page this data source is linked to.
          type: integer
          readOnly: true
        order:
          description: Lowest first.
          type: number
          format: float
          readOnly: true
        table_id:
          type: integer
          nullable: true
          readOnly: true
        view_id:
          type: integer
          nullable: true
          readOnly: true
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        search_query:
          description: The query to apply to the service to narrow the results down.
          type: string
          maxLength: 225
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceSort'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceFilter'
      required:
        - id
        - integration_id
        - name
        - order
        - page_id
        - schema
        - table_id
        - type
        - view_id
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    LocalBaserowListRowsPublicDataSource:
      description: >-
        Basic data_source serializer mostly for returned values. This serializer
        flatten the

        service properties so that from an API POV the data_source object only
        exists.
      type: object
      properties:
        id:
          description: Data source id.
          type: integer
          readOnly: true
        type:
          description: The type of the data source.
          type: string
          readOnly: true
        name:
          description: Human name for this data source.
          type: string
          readOnly: true
        page_id:
          description: Page this data source is linked to.
          type: integer
          readOnly: true
        order:
          description: Lowest first.
          type: number
          format: float
          readOnly: true
        table_id:
          type: integer
          nullable: true
          readOnly: true
        view_id:
          type: integer
          nullable: true
          readOnly: true
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        search_query:
          description: The query to apply to the service to narrow the results down.
          type: string
          maxLength: 225
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceSort'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceFilter'
      required:
        - id
        - name
        - order
        - page_id
        - table_id
        - type
        - view_id
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    LocalBaserowListRowsService:
      description: Basic service serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        integration_id:
          description: The integration used to establish the connection with the service.
          type: integer
          nullable: true
          readOnly: true
        type:
          description: The type of the service.
          type: string
          readOnly: true
        schema:
          description: The schema of the service.
          type: object
          additionalProperties: {}
          readOnly: true
        table_id:
          type: integer
          nullable: true
          readOnly: true
        view_id:
          type: integer
          nullable: true
          readOnly: true
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        search_query:
          description: The query to apply to the service to narrow the results down.
          type: string
          maxLength: 225
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceSort'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceFilter'
      required:
        - id
        - integration_id
        - schema
        - table_id
        - type
        - view_id
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    LocalBaserowListRowsUpdateDataSource:
      type: object
      properties:
        integration_id:
          description: The related integration id.
          type: integer
          nullable: true
        name:
          type: string
        table_id:
          type: integer
          nullable: true
          readOnly: true
        view_id:
          type: integer
          nullable: true
          readOnly: true
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        search_query:
          description: The query to apply to the service to narrow the results down.
          type: string
          maxLength: 225
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceSort'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceFilter'
      required:
        - table_id
        - view_id
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    LocalBaserowPasswordAppAuthProviderAppAuthProvider:
      description: Basic app_auth_provider serializer mostly for returned values.
      type: object
      properties:
        type:
          description: The type of the app_auth_provider.
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        domain:
          type: string
          nullable: true
          maxLength: 255
        password_field_id:
          description: The id of the field to use as password for the user account.
          type: integer
          nullable: true
      required:
        - id
        - type
    LocalBaserowPasswordAppAuthProviderBaseAppAuthProvider:
      description: >-
        This serializer allow to set the type of an app_auth_provider and the

        app_auth_provider id before which we want to insert the new
        app_auth_provider.
      type: object
      properties:
        type:
          $ref: >-
            #/components/schemas/LocalBaserowPasswordAppAuthProviderBaseAppAuthProviderTypeEnum
        user_source_id:
          type: integer
          readOnly: true
        domain:
          type: string
          nullable: true
          maxLength: 255
        password_field_id:
          description: The id of the field to use as password for the user account.
          type: integer
          nullable: true
      required:
        - type
        - user_source_id
      x-konfig-properties:
        type:
          description: |-
            The type of the app_auth_provider.

            * `local_baserow_password` - local_baserow_password
    LocalBaserowPasswordAppAuthProviderBaseAppAuthProviderTypeEnum:
      description: '* `local_baserow_password` - local_baserow_password'
      enum:
        - local_baserow_password
      type: string
    LocalBaserowTableServiceFieldMapping:
      type: object
      properties:
        field_id:
          description: The primary key of the associated database table field.
          type: integer
        value:
          type: string
      required:
        - field_id
        - value
    LocalBaserowTableServiceFilter:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          readOnly: true
        field:
          description: >-
            The database Field, in the LocalBaserowTableService, which we would
            like to filter upon.
          type: integer
        type:
          description: >-
            Indicates how the field's value must be compared to the filter's
            value. The filter is always in this order `field` `type` `value`
            (example: `field_1` `contains` `Test`).
          type: string
          maxLength: 48
        value:
          description: A formula for the filter's value.
          type: string
        value_is_formula:
          description: Indicates whether the value is a formula or not.
          type: boolean
          default: false
      required:
        - field
        - id
        - order
        - type
        - value
    LocalBaserowTableServiceSort:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        field:
          description: >-
            The database Field, in the LocalBaserowTableService service, which
            we would like to sort upon.
          type: integer
        order:
          type: integer
          readOnly: true
        order_by:
          $ref: '#/components/schemas/OrderByEnum'
      required:
        - field
        - id
        - order
      x-konfig-properties:
        order_by:
          description: >-
            Indicates the sort order direction. ASC (Ascending) is from A to Z
            and DESC (Descending) is from Z to A.


            * `ASC` - Ascending

            * `DESC` - Descending
    LocalBaserowUpdateRowWorkflowActionBuilderWorkflowAction:
      description: Basic builder workflow action serializer
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        element_id:
          type: integer
          nullable: true
          readOnly: true
        type:
          description: The type of the workflow action
          type: string
          readOnly: true
        event:
          $ref: '#/components/schemas/EventEnum'
        service:
          $ref: '#/components/schemas/Integration_ServiceService'
      required:
        - element_id
        - event
        - id
        - order
        - service
        - type
      x-konfig-properties:
        event:
          description: |-
            The event that triggers the execution

            * `click` - Click
            * `submit` - Submit
            * `after_login` - After Login
        service:
          description: The service which this workflow action is associated with.
    LocalBaserowUpdateRowWorkflowActionCreateBuilderWorkflowAction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        element_id:
          description: The id of the element the workflow action is associated with
          type: integer
          nullable: true
        type:
          $ref: '#/components/schemas/Type60cEnum'
        event:
          $ref: '#/components/schemas/EventEnum'
        service:
          $ref: '#/components/schemas/Integration_Service'
      required:
        - event
        - id
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `logout` - logout
        event:
          description: |-
            The event that triggers the execution

            * `click` - Click
            * `submit` - Submit
            * `after_login` - After Login
        service:
          description: The service which this workflow action is associated with.
    LocalBaserowUpdateRowWorkflowActionUpdateBuilderWorkflowActions:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type60cEnum'
        service:
          $ref: '#/components/schemas/Integration_Service'
      x-konfig-properties:
        type:
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `logout` - logout
        service:
          description: The service which this workflow action is associated with.
    LocalBaserowUpsertRow:
      type: object
      properties:
        table_id:
          description: The id of the Baserow table we want the data for.
          type: integer
          nullable: true
        integration_id:
          description: The id of the Baserow integration we want the data for.
          type: integer
          nullable: true
        row_id:
          description: A formula for defining the intended row.
          type: string
        field_mappings:
          description: The field mapping associated with this service.
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceFieldMapping'
    LocalBaserowUpsertRowCreateDataSource:
      description: >-
        This serializer allow to set the type of a data_source and the
        data_source id

        before which we want to insert the new data_source.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeC03Enum'
        name:
          description: Human name for this data source.
          type: string
          nullable: true
        page_id:
          description: Page this data source is linked to.
          type: integer
          nullable: true
        before_id:
          description: >-
            If provided, creates the data_source before the data_source with the
            given id.
          type: integer
        table_id:
          description: The id of the Baserow table we want the data for.
          type: integer
          nullable: true
        row_id:
          description: A formula for defining the intended row.
          type: string
        integration_id:
          description: The id of the Baserow integration we want the data for.
          type: integer
          nullable: true
        field_mappings:
          description: The field mapping associated with this service.
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceFieldMapping'
      x-konfig-properties:
        type:
          description: |-
            The type of the service.

            * `local_baserow_get_row` - local_baserow_get_row
            * `local_baserow_list_rows` - local_baserow_list_rows
            * `local_baserow_upsert_row` - local_baserow_upsert_row
    LocalBaserowUpsertRowDataSource:
      description: >-
        Basic data_source serializer mostly for returned values. This serializer
        flatten the

        service properties so that from an API POV the data_source object only
        exists.
      type: object
      properties:
        id:
          description: Data source id.
          type: integer
          readOnly: true
        integration_id:
          description: The id of the Baserow integration we want the data for.
          type: integer
          nullable: true
        type:
          description: The type of the data source.
          type: string
          readOnly: true
        schema:
          description: The schema of the service.
          type: object
          additionalProperties: {}
          readOnly: true
        name:
          description: Human name for this data source.
          type: string
          readOnly: true
        page_id:
          description: Page this data source is linked to.
          type: integer
          readOnly: true
        order:
          description: Lowest first.
          type: number
          format: float
          readOnly: true
        table_id:
          description: The id of the Baserow table we want the data for.
          type: integer
          nullable: true
        row_id:
          description: A formula for defining the intended row.
          type: string
        field_mappings:
          description: The field mapping associated with this service.
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceFieldMapping'
      required:
        - id
        - name
        - order
        - page_id
        - schema
        - type
    LocalBaserowUpsertRowPublicDataSource:
      description: >-
        Basic data_source serializer mostly for returned values. This serializer
        flatten the

        service properties so that from an API POV the data_source object only
        exists.
      type: object
      properties:
        id:
          description: Data source id.
          type: integer
          readOnly: true
        type:
          description: The type of the data source.
          type: string
          readOnly: true
        name:
          description: Human name for this data source.
          type: string
          readOnly: true
        page_id:
          description: Page this data source is linked to.
          type: integer
          readOnly: true
        order:
          description: Lowest first.
          type: number
          format: float
          readOnly: true
        table_id:
          description: The id of the Baserow table we want the data for.
          type: integer
          nullable: true
        row_id:
          description: A formula for defining the intended row.
          type: string
        integration_id:
          description: The id of the Baserow integration we want the data for.
          type: integer
          nullable: true
        field_mappings:
          description: The field mapping associated with this service.
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceFieldMapping'
      required:
        - id
        - name
        - order
        - page_id
        - type
    LocalBaserowUpsertRowService:
      description: Basic service serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        integration_id:
          description: The id of the Baserow integration we want the data for.
          type: integer
          nullable: true
        type:
          description: The type of the service.
          type: string
          readOnly: true
        schema:
          description: The schema of the service.
          type: object
          additionalProperties: {}
          readOnly: true
        table_id:
          description: The id of the Baserow table we want the data for.
          type: integer
          nullable: true
        row_id:
          description: A formula for defining the intended row.
          type: string
        field_mappings:
          description: The field mapping associated with this service.
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceFieldMapping'
      required:
        - id
        - schema
        - type
    LocalBaserowUpsertRowUpdateDataSource:
      type: object
      properties:
        integration_id:
          description: The id of the Baserow integration we want the data for.
          type: integer
          nullable: true
        name:
          type: string
        table_id:
          description: The id of the Baserow table we want the data for.
          type: integer
          nullable: true
        row_id:
          description: A formula for defining the intended row.
          type: string
        field_mappings:
          description: The field mapping associated with this service.
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTableServiceFieldMapping'
    LocalBaserowUserSourceBasePublicUserSource:
      description: Basic user source serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the user_source.
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        auth_providers:
          description: Auth providers related to this user source.
          type: array
          items:
            $ref: '#/components/schemas/App_Auth_ProviderAppAuthProvider'
        table_id:
          description: The id of the Baserow table we want the data for.
          type: integer
          nullable: true
        email_field_id:
          description: The id of the field to use as email for the user account.
          type: integer
          nullable: true
        name_field_id:
          description: The id of the field that contains the user name.
          type: integer
          nullable: true
      required:
        - id
        - name
        - order
        - type
    LocalBaserowUserSourceCreateUserSource:
      description: >-
        This serializer allow to set the type of an user_source and the
        user_source id

        before which we want to insert the new user_source.
      type: object
      properties:
        before_id:
          description: >-
            If provided, creates the user_source before the user_source with the
            given id.
          type: integer
        type:
          $ref: '#/components/schemas/Type5f7Enum'
        name:
          type: string
          maxLength: 255
        integration_id:
          description: The related integration id.
          type: integer
        auth_providers:
          description: Auth providers related to this user source.
          type: array
          items:
            $ref: '#/components/schemas/App_Auth_ProviderBaseAppAuthProvider'
        table_id:
          description: The id of the Baserow table we want the data for.
          type: integer
          nullable: true
        email_field_id:
          description: The id of the field to use as email for the user account.
          type: integer
          nullable: true
        name_field_id:
          description: The id of the field that contains the user name.
          type: integer
          nullable: true
      required:
        - integration_id
        - name
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the user_source.

            * `local_baserow` - local_baserow
    LocalBaserowUserSourceUpdateUserSource:
      description: A serializer to update a user source.
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        integration_id:
          description: The related integration id.
          type: integer
        auth_providers:
          description: Auth providers related to this user source.
          type: array
          items:
            $ref: '#/components/schemas/App_Auth_ProviderBaseAppAuthProvider'
        table_id:
          description: The id of the Baserow table we want the data for.
          type: integer
          nullable: true
        email_field_id:
          description: The id of the field to use as email for the user account.
          type: integer
          nullable: true
        name_field_id:
          description: The id of the field that contains the user name.
          type: integer
          nullable: true
    LocalBaserowUserSourceUserSource:
      description: Basic user_source serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        application_id:
          type: integer
          readOnly: true
        integration_id:
          description: The Integration used to establish the connection with the service.
          type: integer
          nullable: true
          readOnly: true
        type:
          description: The type of the user_source.
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        auth_providers:
          description: Auth providers related to this user source.
          type: array
          items:
            $ref: '#/components/schemas/App_Auth_ProviderAppAuthProvider'
        table_id:
          description: The id of the Baserow table we want the data for.
          type: integer
          nullable: true
        email_field_id:
          description: The id of the field to use as email for the user account.
          type: integer
          nullable: true
        name_field_id:
          description: The id of the field that contains the user name.
          type: integer
          nullable: true
      required:
        - application_id
        - id
        - integration_id
        - name
        - order
        - type
    LocalBaserowView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
        - id
        - name
        - table_id
    LogoutWorkflowActionBuilderWorkflowAction:
      description: Basic builder workflow action serializer
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        element_id:
          type: integer
          nullable: true
          readOnly: true
        type:
          description: The type of the workflow action
          type: string
          readOnly: true
        event:
          $ref: '#/components/schemas/EventEnum'
      required:
        - element_id
        - event
        - id
        - order
        - type
      x-konfig-properties:
        event:
          description: |-
            The event that triggers the execution

            * `click` - Click
            * `submit` - Submit
            * `after_login` - After Login
    LogoutWorkflowActionCreateBuilderWorkflowAction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        element_id:
          description: The id of the element the workflow action is associated with
          type: integer
          nullable: true
        type:
          $ref: '#/components/schemas/Type60cEnum'
        event:
          $ref: '#/components/schemas/EventEnum'
      required:
        - event
        - id
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `logout` - logout
        event:
          description: |-
            The event that triggers the execution

            * `click` - Click
            * `submit` - Submit
            * `after_login` - After Login
    LogoutWorkflowActionUpdateBuilderWorkflowActions:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type60cEnum'
      x-konfig-properties:
        type:
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `logout` - logout
    LongTextFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        long_text_enable_rich_text:
          description: Enable rich text formatting for the field.
          type: boolean
          nullable: true
      required:
        - name
        - type
    LongTextFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        long_text_enable_rich_text:
          description: Enable rich text formatting for the field.
          type: boolean
          nullable: true
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
    LongTextFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
        long_text_enable_rich_text:
          description: Enable rich text formatting for the field.
          type: boolean
          nullable: true
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
    LongTextFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        long_text_enable_rich_text:
          description: Enable rich text formatting for the field.
          type: boolean
          nullable: true
    LookupFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateTimeFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
          nullable: true
        array_formula_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
            - $ref: '#/components/schemas/NullEnum'
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DurationFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
            - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
            - $ref: '#/components/schemas/NullEnum'
        nullable:
          type: boolean
          readOnly: true
        error:
          type: string
          nullable: true
        date_show_tzinfo:
          description: Indicates if the time zone should be shown.
          type: boolean
          nullable: true
        through_field_id:
          description: >-
            The id of the link row field to lookup values for. Will override the
            `through_field_name` parameter if both are provided, however only
            one is required.
          type: integer
          nullable: true
        through_field_name:
          description: The name of the link row field to lookup values for.
          type: string
          nullable: true
        target_field_id:
          description: >-
            The id of the field in the table linked to by the through_field to
            lookup. Will override the `target_field_id` parameter if both are
            provided, however only one is required.
          type: integer
          nullable: true
        target_field_name:
          description: >-
            The name of the field in the table linked to by the through_field to
            lookup.
          type: string
          nullable: true
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
        - name
        - nullable
        - type
    LookupFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateTimeFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
          nullable: true
        array_formula_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
            - $ref: '#/components/schemas/NullEnum'
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DurationFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
            - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
            - $ref: '#/components/schemas/NullEnum'
        nullable:
          type: boolean
          readOnly: true
        error:
          type: string
          nullable: true
        date_show_tzinfo:
          description: Indicates if the time zone should be shown.
          type: boolean
          nullable: true
        through_field_id:
          description: >-
            The id of the link row field to lookup values for. Will override the
            `through_field_name` parameter if both are provided, however only
            one is required.
          type: integer
          nullable: true
        through_field_name:
          description: The name of the link row field to lookup values for.
          type: string
          nullable: true
        target_field_id:
          description: >-
            The id of the field in the table linked to by the through_field to
            lookup. Will override the `target_field_id` parameter if both are
            provided, however only one is required.
          type: integer
          nullable: true
        target_field_name:
          description: >-
            The name of the field in the table linked to by the through_field to
            lookup.
          type: string
          nullable: true
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
        - id
        - name
        - nullable
        - order
        - read_only
        - table_id
        - type
    LookupFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateTimeFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
          nullable: true
        array_formula_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
            - $ref: '#/components/schemas/NullEnum'
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DurationFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
            - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
            - $ref: '#/components/schemas/NullEnum'
        nullable:
          type: boolean
          readOnly: true
        error:
          type: string
          nullable: true
        date_show_tzinfo:
          description: Indicates if the time zone should be shown.
          type: boolean
          nullable: true
        through_field_id:
          description: >-
            The id of the link row field to lookup values for. Will override the
            `through_field_name` parameter if both are provided, however only
            one is required.
          type: integer
          nullable: true
        through_field_name:
          description: The name of the link row field to lookup values for.
          type: string
          nullable: true
        target_field_id:
          description: >-
            The id of the field in the table linked to by the through_field to
            lookup. Will override the `target_field_id` parameter if both are
            provided, however only one is required.
          type: integer
          nullable: true
        target_field_name:
          description: >-
            The name of the field in the table linked to by the through_field to
            lookup.
          type: string
          nullable: true
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
        - id
        - name
        - nullable
        - order
        - read_only
        - related_fields
        - table_id
        - type
    LookupFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateTimeFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
          nullable: true
        array_formula_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
            - $ref: '#/components/schemas/NullEnum'
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DurationFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
            - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
            - $ref: '#/components/schemas/NullEnum'
        nullable:
          type: boolean
          readOnly: true
        error:
          type: string
          nullable: true
        date_show_tzinfo:
          description: Indicates if the time zone should be shown.
          type: boolean
          nullable: true
        through_field_id:
          description: >-
            The id of the link row field to lookup values for. Will override the
            `through_field_name` parameter if both are provided, however only
            one is required.
          type: integer
          nullable: true
        through_field_name:
          description: The name of the link row field to lookup values for.
          type: string
          nullable: true
        target_field_id:
          description: >-
            The id of the field in the table linked to by the through_field to
            lookup. Will override the `target_field_id` parameter if both are
            provided, however only one is required.
          type: integer
          nullable: true
        target_field_name:
          description: >-
            The name of the field in the table linked to by the through_field to
            lookup.
          type: string
          nullable: true
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
        - nullable
    ModeC5eEnum:
      description: |-
        * `form` - form
        * `survey` - survey
      enum:
        - form
        - survey
      type: string
    ModeFf8Enum:
      description: |-
        * `all` - all
        * `mentions` - mentions
      enum:
        - all
        - mentions
      type: string
    MultipleCollaboratorsFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        notify_user_when_added:
          type: boolean
      required:
        - name
        - type
    MultipleCollaboratorsFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        notify_user_when_added:
          type: boolean
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
    MultipleCollaboratorsFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
        notify_user_when_added:
          type: boolean
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
    MultipleCollaboratorsFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        notify_user_when_added:
          type: boolean
    MultipleSelectFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
      required:
        - name
        - type
    MultipleSelectFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
    MultipleSelectFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
    MultipleSelectFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
    NavigationTypeEnum:
      description: |-
        * `page` - Page
        * `custom` - Custom
      enum:
        - page
        - custom
      type: string
    NotificationRecipient:
      description: >-
        Serialize notification data along with the recipient information about
        the

        read status for the given user.
      type: object
      properties:
        id:
          description: The id of the notification.
          type: integer
        type:
          description: The type of notification
          type: string
        sender:
          $ref: '#/components/schemas/Sender'
        workspace:
          description: The workspace that the notification is in (if any).
          type: string
          readOnly: true
        created_on:
          description: The date and time that the notification was created.
          type: string
          format: date-time
        read:
          description: 'If True, then the notification has been read by the user. '
          type: boolean
        data:
          description: The data associated with the notification.
          type: object
          additionalProperties: {}
      required:
        - created_on
        - data
        - id
        - sender
        - type
        - workspace
      x-konfig-properties:
        sender:
          description: The user that sent the notification.
    NotificationWorkflowActionBuilderWorkflowAction:
      description: Basic builder workflow action serializer
      type: object
      properties:
        title:
          description: The title of the notification. Must be an formula.
          type: string
          default: ''
        description:
          description: The description of the notification. Must be an formula.
          type: string
          default: ''
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        element_id:
          type: integer
          nullable: true
          readOnly: true
        type:
          description: The type of the workflow action
          type: string
          readOnly: true
        event:
          $ref: '#/components/schemas/EventEnum'
      required:
        - element_id
        - event
        - id
        - order
        - type
      x-konfig-properties:
        event:
          description: |-
            The event that triggers the execution

            * `click` - Click
            * `submit` - Submit
            * `after_login` - After Login
    NotificationWorkflowActionCreateBuilderWorkflowAction:
      type: object
      properties:
        title:
          description: The title of the notification. Must be an formula.
          type: string
          default: ''
        description:
          description: The description of the notification. Must be an formula.
          type: string
          default: ''
        id:
          type: integer
          readOnly: true
        element_id:
          description: The id of the element the workflow action is associated with
          type: integer
          nullable: true
        type:
          $ref: '#/components/schemas/Type60cEnum'
        event:
          $ref: '#/components/schemas/EventEnum'
      required:
        - event
        - id
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `logout` - logout
        event:
          description: |-
            The event that triggers the execution

            * `click` - Click
            * `submit` - Submit
            * `after_login` - After Login
    NotificationWorkflowActionUpdateBuilderWorkflowActions:
      type: object
      properties:
        title:
          description: The title of the notification. Must be an formula.
          type: string
          default: ''
        description:
          description: The description of the notification. Must be an formula.
          type: string
          default: ''
        type:
          $ref: '#/components/schemas/Type60cEnum'
      x-konfig-properties:
        type:
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `logout` - logout
    NullEnum:
      enum:
        - null
      type: object
    NumberDecimalPlacesEnum:
      description: |-
        * `0` - 1
        * `1` - 1.0
        * `2` - 1.00
        * `3` - 1.000
        * `4` - 1.0000
        * `5` - 1.00000
        * `6` - 1.000000
        * `7` - 1.0000000
        * `8` - 1.00000000
        * `9` - 1.000000000
        * `10` - 1.0000000000
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
      type: integer
    NumberFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        number_decimal_places:
          $ref: '#/components/schemas/NumberDecimalPlacesEnum'
        number_negative:
          description: Indicates if negative values are allowed.
          type: boolean
      required:
        - name
        - type
      x-konfig-properties:
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
    NumberFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        number_decimal_places:
          $ref: '#/components/schemas/NumberDecimalPlacesEnum'
        number_negative:
          description: Indicates if negative values are allowed.
          type: boolean
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
      x-konfig-properties:
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
    NumberFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
        number_decimal_places:
          $ref: '#/components/schemas/NumberDecimalPlacesEnum'
        number_negative:
          description: Indicates if negative values are allowed.
          type: boolean
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
      x-konfig-properties:
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
    NumberFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        number_decimal_places:
          $ref: '#/components/schemas/NumberDecimalPlacesEnum'
        number_negative:
          description: Indicates if negative values are allowed.
          type: boolean
      x-konfig-properties:
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
    OpenApiRoleAssignment:
      description: Serializer for RoleAssignment used for the Open API spec
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        role:
          description: >-
            The uid of the role assigned to the user or team in the given
            workspace.
          type: string
        subject:
          $ref: '#/components/schemas/OpenApiSubjectField'
        subject_id:
          description: The subject ID.
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        scope_id:
          description: The unique scope ID.
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        subject_type:
          $ref: '#/components/schemas/SubjectTypeB9aEnum'
        scope_type:
          $ref: '#/components/schemas/ScopeTypeEnum'
      required:
        - id
        - role
        - scope_id
        - scope_type
        - subject
        - subject_id
        - subject_type
      x-konfig-properties:
        subject:
          description: >-
            The structure of the subject field depends on the subject
            typereturned and will have additional fields accordingly
        subject_type:
          description: |-
            The subject type.

            * `auth.User` - auth.User
            * `anonymous` - anonymous
            * `user_source.user` - user_source.user
            * `core.Token` - core.Token
            * `baserow_enterprise.Team` - baserow_enterprise.Team
        scope_type:
          description: >-
            The type of the scope object. The scope object limit the role
            assignment to this scope and all its descendants.


            * `core` - core

            * `application` - application

            * `workspace` - workspace

            * `workspace_invitation` - workspace_invitation

            * `snapshot` - snapshot

            * `workspace_user` - workspace_user

            * `integration` - integration

            * `user_source` - user_source

            * `database` - database

            * `database_table` - database_table

            * `database_field` - database_field

            * `database_view` - database_view

            * `database_view_decoration` - database_view_decoration

            * `database_view_sort` - database_view_sort

            * `database_view_group` - database_view_group

            * `database_view_filter` - database_view_filter

            * `database_view_filter_group` - database_view_filter_group

            * `token` - token

            * `builder` - builder

            * `builder_page` - builder_page

            * `builder_element` - builder_element

            * `builder_domain` - builder_domain

            * `builder_data_source` - builder_data_source

            * `builder_workflow_action` - builder_workflow_action

            * `team` - team

            * `team_subject` - team_subject

            * `license` - license
    OpenApiSubjectField:
      type: object
      properties:
        id:
          type: integer
      required:
        - id
    OpenIdConnectAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        domain:
          type: string
          nullable: true
          maxLength: 255
        enabled:
          type: boolean
        name:
          type: string
          maxLength: 255
        base_url:
          description: Base URL of the authorization server
          type: string
          format: uri
          maxLength: 200
        client_id:
          description: App ID, or consumer key
          type: string
          maxLength: 191
        secret:
          description: API secret, client secret, or consumer secret
          type: string
          maxLength: 191
      required:
        - base_url
        - client_id
        - id
        - name
        - secret
        - type
    OpenPageWorkflowActionBuilderWorkflowAction:
      description: Basic builder workflow action serializer
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        element_id:
          type: integer
          nullable: true
          readOnly: true
        type:
          description: The type of the workflow action
          type: string
          readOnly: true
        event:
          $ref: '#/components/schemas/EventEnum'
        url:
          description: The url to open. Must be an formula.
          type: string
          default: ''
      required:
        - element_id
        - event
        - id
        - order
        - type
      x-konfig-properties:
        event:
          description: |-
            The event that triggers the execution

            * `click` - Click
            * `submit` - Submit
            * `after_login` - After Login
    OpenPageWorkflowActionCreateBuilderWorkflowAction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        element_id:
          description: The id of the element the workflow action is associated with
          type: integer
          nullable: true
        type:
          $ref: '#/components/schemas/Type60cEnum'
        event:
          $ref: '#/components/schemas/EventEnum'
        url:
          description: The url to open. Must be an formula.
          type: string
          default: ''
      required:
        - event
        - id
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `logout` - logout
        event:
          description: |-
            The event that triggers the execution

            * `click` - Click
            * `submit` - Submit
            * `after_login` - After Login
    OpenPageWorkflowActionUpdateBuilderWorkflowActions:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type60cEnum'
        url:
          description: The url to open. Must be an formula.
          type: string
          default: ''
      x-konfig-properties:
        type:
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `logout` - logout
    OrderApplications:
      type: object
      properties:
        application_ids:
          description: Application ids in the desired order.
          type: array
          items:
            type: integer
      required:
        - application_ids
    OrderByEnum:
      description: |-
        * `ASC` - Ascending
        * `DESC` - Descending
      enum:
        - ASC
        - DESC
      type: string
    OrderDomains:
      type: object
      properties:
        domain_ids:
          description: The ids of the domains in the order they are supposed to be set in
          type: array
          items:
            type: integer
      required:
        - domain_ids
    OrderEnum:
      description: |-
        * `ASC` - Ascending
        * `DESC` - Descending
      enum:
        - ASC
        - DESC
      type: string
    OrderPages:
      type: object
      properties:
        page_ids:
          description: The ids of the pages in the order they are supposed to be set in
          type: array
          items:
            type: integer
      required:
        - page_ids
    OrderTables:
      type: object
      properties:
        table_ids:
          description: Table ids in the desired order.
          type: array
          items:
            type: integer
      required:
        - table_ids
    OrderViews:
      type: object
      properties:
        view_ids:
          description: View ids in the desired order.
          type: array
          items:
            type: integer
          minItems: 1
      required:
        - view_ids
    OrderWorkflowActions:
      type: object
      properties:
        workflow_action_ids:
          description: >-
            The ids of the workflow actions in the order they are supposed to be
            set in
          type: array
          items:
            type: integer
        element_id:
          description: The element the workflow actions belong to
          type: integer
      required:
        - workflow_action_ids
    OrderWorkspaces:
      type: object
      properties:
        workspaces:
          description: Workspace ids in the desired order.
          type: array
          items:
            type: integer
      required:
        - workspaces
    OwnershipTypeEnum:
      description: |-
        * `collaborative` - collaborative
        * `personal` - personal
      enum:
        - collaborative
        - personal
      type: string
    Page:
      description: |-
        👉 Mind to update the
        baserow.contrib.builder.api.domains.serializer.PublicPageSerializer
        when you update this one.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        path:
          type: string
          maxLength: 255
        path_params:
          type: array
          items:
            $ref: '#/components/schemas/PathParam'
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        builder_id:
          type: integer
          readOnly: true
      required:
        - builder_id
        - id
        - name
        - order
        - path
    PageParameterValue:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      required:
        - name
        - value
    PaginationSerializerAuditLog:
      type: object
      properties:
        count:
          description: The total amount of results.
          type: integer
        next:
          description: URL to the next page.
          type: string
          format: uri
          nullable: true
        previous:
          description: URL to the previous page.
          type: string
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/AuditLog'
      required:
        - count
        - next
        - previous
        - results
    PaginationSerializerAuditLogUser:
      type: object
      properties:
        count:
          description: The total amount of results.
          type: integer
        next:
          description: URL to the next page.
          type: string
          format: uri
          nullable: true
        previous:
          description: URL to the previous page.
          type: string
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogUser'
      required:
        - count
        - next
        - previous
        - results
    PaginationSerializerAuditLogWorkspace:
      type: object
      properties:
        count:
          description: The total amount of results.
          type: integer
        next:
          description: URL to the next page.
          type: string
          format: uri
          nullable: true
        previous:
          description: URL to the previous page.
          type: string
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogWorkspace'
      required:
        - count
        - next
        - previous
        - results
    PaginationSerializerExampleRowResponseSerializerWithUserFieldNames:
      type: object
      properties:
        count:
          description: The total amount of results.
          type: integer
        next:
          description: URL to the next page.
          type: string
          format: uri
          nullable: true
        previous:
          description: URL to the previous page.
          type: string
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: >-
              #/components/schemas/ExampleRowResponseSerializerWithUserFieldNames
      required:
        - count
        - next
        - previous
        - results
    PaginationSerializerLicenseUserLookup:
      type: object
      properties:
        count:
          description: The total amount of results.
          type: integer
        next:
          description: URL to the next page.
          type: string
          format: uri
          nullable: true
        previous:
          description: URL to the previous page.
          type: string
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/LicenseUserLookup'
      required:
        - count
        - next
        - previous
        - results
    PaginationSerializerLinkRowValue:
      type: object
      properties:
        count:
          description: The total amount of results.
          type: integer
        next:
          description: URL to the next page.
          type: string
          format: uri
          nullable: true
        previous:
          description: URL to the previous page.
          type: string
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/LinkRowValue'
      required:
        - count
        - next
        - previous
        - results
    PaginationSerializerNotificationRecipient:
      type: object
      properties:
        count:
          description: The total amount of results.
          type: integer
        next:
          description: URL to the next page.
          type: string
          format: uri
          nullable: true
        previous:
          description: URL to the previous page.
          type: string
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationRecipient'
      required:
        - count
        - next
        - previous
        - results
    PaginationSerializerRowComment:
      type: object
      properties:
        count:
          description: The total amount of results.
          type: integer
        next:
          description: URL to the next page.
          type: string
          format: uri
          nullable: true
        previous:
          description: URL to the previous page.
          type: string
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/RowComment'
      required:
        - count
        - next
        - previous
        - results
    PaginationSerializerRowHistory:
      type: object
      properties:
        count:
          description: The total amount of results.
          type: integer
        next:
          description: URL to the next page.
          type: string
          format: uri
          nullable: true
        previous:
          description: URL to the previous page.
          type: string
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/RowHistory'
      required:
        - count
        - next
        - previous
        - results
    PaginationSerializerTrashContents:
      type: object
      properties:
        count:
          description: The total amount of results.
          type: integer
        next:
          description: URL to the next page.
          type: string
          format: uri
          nullable: true
        previous:
          description: URL to the previous page.
          type: string
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/TrashContents'
      required:
        - count
        - next
        - previous
        - results
    PaginationSerializerUserAdminResponse:
      type: object
      properties:
        count:
          description: The total amount of results.
          type: integer
        next:
          description: URL to the next page.
          type: string
          format: uri
          nullable: true
        previous:
          description: URL to the previous page.
          type: string
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserAdminResponse'
      required:
        - count
        - next
        - previous
        - results
    PaginationSerializerWithGalleryViewFieldOptionsExampleRowResponse:
      type: object
      properties:
        field_options:
          description: >-
            An object containing the field id as key and the properties related
            to view as value.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GalleryViewFieldOptions'
        row_metadata:
          description: >-
            An object keyed by row id with a value being an object containing
            additional metadata about that row. A row might not have metadata
            and will not be present as a key if so.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RowMetadata'
        count:
          description: The total amount of results.
          type: integer
        next:
          description: URL to the next page.
          type: string
          format: uri
          nullable: true
        previous:
          description: URL to the previous page.
          type: string
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExampleRowResponse'
      required:
        - count
        - next
        - previous
        - results
    PaginationSerializerWithGridViewFieldOptionsExampleRowResponse:
      type: object
      properties:
        field_options:
          description: >-
            An object containing the field id as key and the properties related
            to view as value.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GridViewFieldOptions'
        row_metadata:
          description: >-
            An object keyed by row id with a value being an object containing
            additional metadata about that row. A row might not have metadata
            and will not be present as a key if so.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RowMetadata'
        count:
          description: The total amount of results.
          type: integer
        next:
          description: URL to the next page.
          type: string
          format: uri
          nullable: true
        previous:
          description: URL to the previous page.
          type: string
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExampleRowResponse'
      required:
        - count
        - next
        - previous
        - results
    PaginationSerializerWorkspacesAdminResponse:
      type: object
      properties:
        count:
          description: The total amount of results.
          type: integer
        next:
          description: URL to the next page.
          type: string
          format: uri
          nullable: true
        previous:
          description: URL to the previous page.
          type: string
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkspacesAdminResponse'
      required:
        - count
        - next
        - previous
        - results
    PasswordAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        domain:
          description: The email domain (if any) registered with this password provider.
          type: string
        enabled:
          description: Whether the provider is enabled or not.
          type: boolean
      required:
        - id
        - type
    PasswordFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
      required:
        - name
        - type
    PasswordFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
    PasswordFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
    PasswordFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
    PatchedAccount:
      description: This serializer must be kept in sync with `UserSerializer`.
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
          minLength: 2
        language:
          description: >-
            An ISO 639 language code (with optional variant) selected by the
            user. Ex: en-GB.
          type: string
          maxLength: 10
          minLength: 2
        email_notification_frequency:
          $ref: '#/components/schemas/EmailNotificationFrequencyEnum'
      x-konfig-properties:
        email_notification_frequency:
          description: >-
            The maximum frequency at which the user wants to receive email
            notifications.


            * `instant` - instant

            * `daily` - daily

            * `weekly` - weekly

            * `never` - never
    PatchedApplicationBaseApplicationUpdatePolymorphic:
      oneOf:
        - $ref: '#/components/schemas/DatabaseBaseApplicationUpdatePolymorphic'
        - $ref: '#/components/schemas/BuilderBaseApplicationUpdatePolymorphic'
      discriminator:
        propertyName: type
        mapping:
          database: '#/components/schemas/DatabaseBaseApplicationUpdatePolymorphic'
          builder: '#/components/schemas/BuilderBaseApplicationUpdatePolymorphic'
    PatchedBuilder_Workflow_Action_TypeUpdateBuilderWorkflowActions:
      anyOf:
        - $ref: >-
            #/components/schemas/NotificationWorkflowActionUpdateBuilderWorkflowActions
        - $ref: >-
            #/components/schemas/OpenPageWorkflowActionUpdateBuilderWorkflowActions
        - $ref: >-
            #/components/schemas/LocalBaserowCreateRowWorkflowActionUpdateBuilderWorkflowActions
        - $ref: >-
            #/components/schemas/LocalBaserowUpdateRowWorkflowActionUpdateBuilderWorkflowActions
        - $ref: >-
            #/components/schemas/LogoutWorkflowActionUpdateBuilderWorkflowActions
    PatchedCombinedThemeConfigBlocks:
      type: object
      properties:
        primary_color:
          type: string
          maxLength: 9
        secondary_color:
          type: string
          maxLength: 9
        border_color:
          type: string
          maxLength: 9
        heading_1_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_1_color:
          type: string
          maxLength: 9
        heading_2_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_2_color:
          type: string
          maxLength: 9
        heading_3_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_3_color:
          type: string
          maxLength: 9
    PatchedDecorator_Value_Provider_TypeUpdateViewDecoration:
      oneOf:
        - $ref: >-
            #/components/schemas/GeneratedSingle_select_colorUpdateViewDecoration
        - $ref: '#/components/schemas/GeneratedConditional_colorUpdateViewDecoration'
      discriminator:
        propertyName: value_provider_type
        mapping:
          single_select_color: >-
            #/components/schemas/GeneratedSingle_select_colorUpdateViewDecoration
          conditional_color: '#/components/schemas/GeneratedConditional_colorUpdateViewDecoration'
    PatchedElement_TypeUpdateElement:
      anyOf:
        - $ref: '#/components/schemas/HeadingElementUpdateElement'
        - $ref: '#/components/schemas/TextElementUpdateElement'
        - $ref: '#/components/schemas/LinkElementUpdateElement'
        - $ref: '#/components/schemas/ImageElementUpdateElement'
        - $ref: '#/components/schemas/InputTextElementUpdateElement'
        - $ref: '#/components/schemas/ColumnElementUpdateElement'
        - $ref: '#/components/schemas/ButtonElementUpdateElement'
        - $ref: '#/components/schemas/TableElementUpdateElement'
        - $ref: '#/components/schemas/FormContainerElementUpdateElement'
        - $ref: '#/components/schemas/DropdownElementUpdateElement'
        - $ref: '#/components/schemas/CheckboxElementUpdateElement'
        - $ref: '#/components/schemas/IFrameElementUpdateElement'
        - $ref: '#/components/schemas/AuthFormElementUpdateElement'
    PatchedExampleBatchUpdateRowsRequest:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: >-
              #/components/schemas/ExampleBatchUpdateRowRequestSerializerWithUserFieldNames
          maxItems: 200
          minItems: 1
    PatchedExampleUpdateRowRequestSerializerWithUserFieldNames:
      type: object
      properties:
        field_1:
          description: >-
            This field represents the `text` field. The number in field_1 is in
            a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          nullable: true
        field_2:
          description: >-
            This field represents the `long_text` field. The number in field_2
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          nullable: true
        field_3:
          description: >-
            This field represents the `url` field. The number in field_3 is in a
            normal request or response the id of the field. If the GET parameter
            `user_field_names` is provided then the key will instead be the
            actual name of the field. 
          type: string
          nullable: true
        field_4:
          description: >-
            This field represents the `email` field. The number in field_4 is in
            a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          nullable: true
          maxLength: 254
        field_5:
          description: >-
            This field represents the `number` field. The number in field_5 is
            in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          format: decimal
          pattern: ^-?\d{0,50}(?:\.\d{0,0})?$
          nullable: true
        field_6:
          description: >-
            This field represents the `rating` field. The number in field_6 is
            in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: integer
          maximum: 5
          minimum: 0
          default: 0
        field_7:
          description: >-
            This field represents the `boolean` field. The number in field_7 is
            in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: boolean
          default: false
        field_8:
          description: >-
            This field represents the `date` field. The number in field_8 is in
            a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. 
          type: string
          format: date
          nullable: true
        field_13:
          description: >-
            This field represents the `duration` field. The number in field_13
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. The provided value can be a string
            in one of the available formats or a number representing the
            duration in seconds. In any case, the value will be rounded to match
            the field's duration format.
          type: number
          format: float
          nullable: true
        field_14:
          description: >-
            This field represents the `link_row` field. The number in field_14
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. This field accepts an `array`
            containing the ids or the names of the related rows. A name is the
            value of the primary key of the related row. This field also accepts
            a string with names separated by a comma. The response contains a
            list of objects containing the `id` and the primary field's `value`
            as a string for display purposes.
          type: array
          items:
            type: integer
            nullable: true
        field_15:
          description: >-
            This field represents the `file` field. The number in field_15 is in
            a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. This field accepts an `array`
            containing objects with the name of the file. The response contains
            an `array` of more detailed objects related to the files.
          type: array
          items:
            $ref: '#/components/schemas/FileFieldRequest'
          nullable: true
        field_16:
          description: >-
            This field represents the `single_select` field. The number in
            field_16 is in a normal request or response the id of the field. If
            the GET parameter `user_field_names` is provided then the key will
            instead be the actual name of the field. This field accepts an
            `integer` representing the chosen select option id related to the
            field. Available ids can be found when getting or listing the field.
            The response represents chosen field, but also the value and color
            is exposed.
          type: integer
          nullable: true
        field_17:
          description: >-
            This field represents the `multiple_select` field. The number in
            field_17 is in a normal request or response the id of the field. If
            the GET parameter `user_field_names` is provided then the key will
            instead be the actual name of the field. This field accepts a list
            of `integer` each of which representing the chosen select option id
            related to the field. Available ids can be foundwhen getting or
            listing the field. You can also send a list of option names in which
            case the option are searched by name. The first one that matches is
            used. This field also accepts a string with names separated by a
            comma. The response represents chosen field, but also the value and
            color is exposed.
          type: array
          items:
            description: >-
              This field represents the `multiple_select` field. The number in
              field_17 is in a normal request or response the id of the field.
              If the GET parameter `user_field_names` is provided then the key
              will instead be the actual name of the field. This field accepts a
              list of `integer` each of which representing the chosen select
              option id related to the field. Available ids can be foundwhen
              getting or listing the field. You can also send a list of option
              names in which case the option are searched by name. The first one
              that matches is used. This field also accepts a string with names
              separated by a comma. The response represents chosen field, but
              also the value and color is exposed.
            type: integer
            nullable: true
        field_18:
          description: >-
            This field represents the `phone_number` field. The number in
            field_18 is in a normal request or response the id of the field. If
            the GET parameter `user_field_names` is provided then the key will
            instead be the actual name of the field. 
          type: string
          nullable: true
          maxLength: 100
        field_23:
          description: >-
            This field represents the `multiple_collaborators` field. The number
            in field_23 is in a normal request or response the id of the field.
            If the GET parameter `user_field_names` is provided then the key
            will instead be the actual name of the field. This field accepts a
            list of objects representing the chosen collaborators through the
            object's `id` property. The id is Baserow user id. The response
            objects also contains the collaborator name directly along with its
            id.
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
        field_26:
          description: >-
            This field represents the `password` field. The number in field_26
            is in a normal request or response the id of the field. If the GET
            parameter `user_field_names` is provided then the key will instead
            be the actual name of the field. Allows setting a write only
            password value. Providing a string will set the password, `null`
            will unset it, `true` will be ignored. The response will respond
            with `true` is a password is set, but will never expose the password
            itself.
          type: string
          nullable: true
    PatchedFieldUpdateField:
      oneOf:
        - $ref: '#/components/schemas/TextFieldUpdateField'
        - $ref: '#/components/schemas/LongTextFieldUpdateField'
        - $ref: '#/components/schemas/URLFieldUpdateField'
        - $ref: '#/components/schemas/EmailFieldUpdateField'
        - $ref: '#/components/schemas/NumberFieldUpdateField'
        - $ref: '#/components/schemas/RatingFieldUpdateField'
        - $ref: '#/components/schemas/BooleanFieldUpdateField'
        - $ref: '#/components/schemas/DateFieldUpdateField'
        - $ref: '#/components/schemas/LastModifiedFieldUpdateField'
        - $ref: '#/components/schemas/LastModifiedByFieldUpdateField'
        - $ref: '#/components/schemas/CreatedOnFieldUpdateField'
        - $ref: '#/components/schemas/CreatedByFieldUpdateField'
        - $ref: '#/components/schemas/DurationFieldUpdateField'
        - $ref: '#/components/schemas/LinkRowFieldUpdateField'
        - $ref: '#/components/schemas/FileFieldUpdateField'
        - $ref: '#/components/schemas/SingleSelectFieldUpdateField'
        - $ref: '#/components/schemas/MultipleSelectFieldUpdateField'
        - $ref: '#/components/schemas/PhoneNumberFieldUpdateField'
        - $ref: '#/components/schemas/FormulaFieldUpdateField'
        - $ref: '#/components/schemas/CountFieldUpdateField'
        - $ref: '#/components/schemas/RollupFieldUpdateField'
        - $ref: '#/components/schemas/LookupFieldUpdateField'
        - $ref: '#/components/schemas/MultipleCollaboratorsFieldUpdateField'
        - $ref: '#/components/schemas/UUIDFieldUpdateField'
        - $ref: '#/components/schemas/AutonumberFieldUpdateField'
        - $ref: '#/components/schemas/PasswordFieldUpdateField'
      discriminator:
        propertyName: type
        mapping:
          text: '#/components/schemas/TextFieldUpdateField'
          long_text: '#/components/schemas/LongTextFieldUpdateField'
          url: '#/components/schemas/URLFieldUpdateField'
          email: '#/components/schemas/EmailFieldUpdateField'
          number: '#/components/schemas/NumberFieldUpdateField'
          rating: '#/components/schemas/RatingFieldUpdateField'
          boolean: '#/components/schemas/BooleanFieldUpdateField'
          date: '#/components/schemas/DateFieldUpdateField'
          last_modified: '#/components/schemas/LastModifiedFieldUpdateField'
          last_modified_by: '#/components/schemas/LastModifiedByFieldUpdateField'
          created_on: '#/components/schemas/CreatedOnFieldUpdateField'
          created_by: '#/components/schemas/CreatedByFieldUpdateField'
          duration: '#/components/schemas/DurationFieldUpdateField'
          link_row: '#/components/schemas/LinkRowFieldUpdateField'
          file: '#/components/schemas/FileFieldUpdateField'
          single_select: '#/components/schemas/SingleSelectFieldUpdateField'
          multiple_select: '#/components/schemas/MultipleSelectFieldUpdateField'
          phone_number: '#/components/schemas/PhoneNumberFieldUpdateField'
          formula: '#/components/schemas/FormulaFieldUpdateField'
          count: '#/components/schemas/CountFieldUpdateField'
          rollup: '#/components/schemas/RollupFieldUpdateField'
          lookup: '#/components/schemas/LookupFieldUpdateField'
          multiple_collaborators: '#/components/schemas/MultipleCollaboratorsFieldUpdateField'
          uuid: '#/components/schemas/UUIDFieldUpdateField'
          autonumber: '#/components/schemas/AutonumberFieldUpdateField'
          password: '#/components/schemas/PasswordFieldUpdateField'
    PatchedIntegrationUpdateIntegration:
      anyOf:
        - $ref: '#/components/schemas/LocalBaserowIntegrationUpdateIntegration'
    PatchedIntegration_ServiceUpdateDataSource:
      anyOf:
        - $ref: '#/components/schemas/LocalBaserowGetRowUpdateDataSource'
        - $ref: '#/components/schemas/LocalBaserowListRowsUpdateDataSource'
        - $ref: '#/components/schemas/LocalBaserowUpsertRowUpdateDataSource'
    PatchedMoveDataSource:
      type: object
      properties:
        before_id:
          description: >-
            If provided, the data_source is moved before the data_source with
            this Id. Otherwise the data_source is placed  last for this page.
          type: integer
          nullable: true
    PatchedMoveElement:
      type: object
      properties:
        before_id:
          description: >-
            If provided, the element is moved before the element with this Id.
            Otherwise the element is placed at the end of the page.
          type: integer
          nullable: true
        parent_element_id:
          description: >-
            If provided, the element is moved as a child of the element with the
            given id.
          type: integer
          nullable: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
    PatchedMoveIntegration:
      type: object
      properties:
        before_id:
          description: >-
            If provided, the integration is moved before the integration with
            this Id. Otherwise the integration is placed at the end of the page.
          type: integer
          nullable: true
    PatchedMoveUserSource:
      description: Serializer used when moving a user source.
      type: object
      properties:
        before_id:
          description: >-
            If provided, the user_source is moved before the user_source with
            this Id. Otherwise the user_source is placed at the end of the page.
          type: integer
          nullable: true
    PatchedSettings:
      type: object
      properties:
        allow_new_signups:
          description: >-
            Indicates whether new users can create a new account when signing
            up.
          type: boolean
        allow_signups_via_workspace_invitations:
          description: >-
            Indicates whether invited users can create an account when signing
            up, even if allow_new_signups is disabled.
          type: boolean
        allow_signups_via_group_invitations:
          description: >-
            DEPRECATED: Please use the functionally identical
            `allow_signups_via_workspace_invitations` instead as this attribute
            is being removed in the future.
          type: boolean
        allow_reset_password:
          description: Indicates whether users can request a password reset link.
          type: boolean
        allow_global_workspace_creation:
          description: Indicates whether all users can create workspaces, or just staff.
          type: boolean
        allow_global_group_creation:
          description: >-
            DEPRECATED: Please use the functionally identical
            `allow_global_workspace_creation` instead as this attribute is being
            removed in the future.
          type: boolean
        account_deletion_grace_delay:
          description: >-
            Number of days after the last login for an account pending deletion
            to be deleted
          type: integer
          maximum: 32767
          minimum: 0
        show_admin_signup_page:
          description: >-
            Indicates that there are no admin users in the database yet, so in
            the frontend the signup form will be shown instead of the login
            page.
          type: boolean
        track_workspace_usage:
          description: >-
            Runs a job once per day which calculates per workspace row counts
            and file storage usage, displayed on the admin workspace page.
          type: boolean
        show_baserow_help_request:
          description: >-
            Indicates whether the `We need your help!` message will be shown on
            the dashboard
          type: boolean
        co_branding_logo:
          description: Co-branding logo that's placed next to the Baserow logo (176x29).
          allOf:
            - $ref: '#/components/schemas/UserFile'
          nullable: true
    PatchedTableUpdate:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
    PatchedTableWebhookUpdateRequest:
      type: object
      properties:
        url:
          description: The URL that must be called when the webhook is triggered.
          type: string
          maxLength: 2000
        include_all_events:
          description: Indicates whether this webhook should listen to all events.
          type: boolean
        events:
          description: A list containing the events that will trigger this webhook.
          type: array
          items:
            $ref: '#/components/schemas/EventTypesEnum'
        request_method:
          $ref: '#/components/schemas/RequestMethodEnum'
        headers:
          description: >-
            The additional headers as an object where the key is the name and
            the value the value.
          type: object
          additionalProperties: {}
        name:
          description: An internal name of the webhook.
          type: string
          maxLength: 255
        active:
          description: >-
            Indicates whether the web hook is active. When a webhook has failed
            multiple times, it will automatically be deactivated.
          type: boolean
        use_user_field_names:
          description: >-
            Indicates whether the field names must be used as payload key
            instead of the id.
          type: boolean
      x-konfig-properties:
        request_method:
          description: |-
            The request method that be used when the event occurs.

            * `POST` - Post
            * `GET` - Get
            * `PUT` - Put
            * `PATCH` - Patch
            * `DELETE` - Delete
    PatchedTokenUpdate:
      type: object
      properties:
        name:
          description: The human readable name of the database token for the user.
          type: string
          maxLength: 100
        permissions:
          description: >-
            Indicates per operation which permissions the database token has
            within the whole workspace. If the value of for example `create` is
            `true`, then the token can create rows in all tables related to the
            workspace. If a list is provided with for example `[["table", 1]]`
            then the token only has create permissions for the table with id 1.
            Same goes for if a database references is provided. `[['database',
            1]]` means create permissions for all tables in the database with id
            1.


            Example:

            ```json

            {
              "create": true// Allows creating rows in all tables.
              // Allows reading rows from database 1 and table 10.
              "read": [["database", 1], ["table", 10]],
              "update": false  // Denies updating rows in all tables.
              "delete": []  // Denies deleting rows in all tables.
             }
            ```
          type: object
          properties:
            create:
              anyOf:
                - description: >-
                    Indicating if the database token has permissions to all
                    tables.
                  type: boolean
                  example: true
                - type: array
                  items:
                    type: array
                    minItems: 2
                    maxItems: 2
                    items:
                      anyOf:
                        - description: >-
                            First element should indicate the reference type
                            `database` or `table`.
                          type: string
                          example: database
                        - description: >-
                            Second element should indicate the ID of the
                            reference.
                          type: number
                          example: 1
            read:
              anyOf:
                - description: >-
                    Indicating if the database token has permissions to all
                    tables.
                  type: boolean
                  example: true
                - type: array
                  items:
                    type: array
                    minItems: 2
                    maxItems: 2
                    items:
                      anyOf:
                        - description: >-
                            First element should indicate the reference type
                            `database` or `table`.
                          type: string
                          example: database
                        - description: >-
                            Second element should indicate the ID of the
                            reference.
                          type: number
                          example: 1
            update:
              anyOf:
                - description: >-
                    Indicating if the database token has permissions to all
                    tables.
                  type: boolean
                  example: true
                - type: array
                  items:
                    type: array
                    minItems: 2
                    maxItems: 2
                    items:
                      anyOf:
                        - description: >-
                            First element should indicate the reference type
                            `database` or `table`.
                          type: string
                          example: database
                        - description: >-
                            Second element should indicate the ID of the
                            reference.
                          type: number
                          example: 1
            delete:
              anyOf:
                - description: >-
                    Indicating if the database token has permissions to all
                    tables.
                  type: boolean
                  example: true
                - type: array
                  items:
                    type: array
                    minItems: 2
                    maxItems: 2
                    items:
                      anyOf:
                        - description: >-
                            First element should indicate the reference type
                            `database` or `table`.
                          type: string
                          example: database
                        - description: >-
                            Second element should indicate the ID of the
                            reference.
                          type: number
                          example: 1
        rotate_key:
          description: Indicates if a new key must be generated.
          type: boolean
          default: false
    PatchedTrashEntryRequest:
      description: >-
        Mixin to a DRF serializer class to raise an exception if data with
        unknown fields

        is provided to the serializer.
      type: object
      properties:
        trash_item_id:
          type: integer
          minimum: 0
        parent_trash_item_id:
          type: integer
          minimum: 0
          nullable: true
        trash_item_type:
          $ref: '#/components/schemas/TrashItemTypeEnum'
    PatchedUndoRedoRequest:
      type: object
      properties:
        scopes:
          $ref: '#/components/schemas/ActionScopes'
      x-konfig-properties:
        scopes:
          description: >-
            A JSON object with keys and values representing the various action
            scopes to include when undoing or redoing. Every action in Baserow
            will be associated with a action scope, when undoing/redoing only
            actions which match any of the provided scope key:value pairs will
            included when this endpoint picks the next action to undo/redo. If
            no scopes are provided then all actions performed in the client
            session will be included when undoing/redoing.
    PatchedUpdateDomain:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type0a6Enum'
        domain_name:
          type: string
      x-konfig-properties:
        type:
          description: |-
            The type of the domain.

            * `custom` - custom
            * `sub_domain` - sub_domain
    PatchedUpdatePage:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        path:
          type: string
          maxLength: 255
        path_params:
          type: array
          items:
            $ref: '#/components/schemas/PathParam'
    PatchedUpdatePremiumViewAttributes:
      type: object
      properties:
        show_logo:
          type: boolean
    PatchedUpdateViewFilter:
      type: object
      properties:
        field:
          description: The field of which the value must be compared to the filter value.
          type: integer
        type:
          $ref: '#/components/schemas/Type880Enum'
        value:
          description: The filter value that must be compared to the field's value.
          type: string
          maxLength: 255
      x-konfig-properties:
        type:
          description: >-
            Indicates how the field's value must be compared to the filter's
            value. The filter is always in this order `field` `type` `value`
            (example: `field_1` `contains` `Test`).


            * `equal` - equal

            * `not_equal` - not_equal

            * `filename_contains` - filename_contains

            * `files_lower_than` - files_lower_than

            * `has_file_type` - has_file_type

            * `contains` - contains

            * `contains_not` - contains_not

            * `contains_word` - contains_word

            * `doesnt_contain_word` - doesnt_contain_word

            * `length_is_lower_than` - length_is_lower_than

            * `higher_than` - higher_than

            * `lower_than` - lower_than

            * `is_even_and_whole` - is_even_and_whole

            * `date_equal` - date_equal

            * `date_before` - date_before

            * `date_before_or_equal` - date_before_or_equal

            * `date_after_days_ago` - date_after_days_ago

            * `date_after` - date_after

            * `date_after_or_equal` - date_after_or_equal

            * `date_not_equal` - date_not_equal

            * `date_equals_today` - date_equals_today

            * `date_before_today` - date_before_today

            * `date_after_today` - date_after_today

            * `date_within_days` - date_within_days

            * `date_within_weeks` - date_within_weeks

            * `date_within_months` - date_within_months

            * `date_equals_days_ago` - date_equals_days_ago

            * `date_equals_months_ago` - date_equals_months_ago

            * `date_equals_years_ago` - date_equals_years_ago

            * `date_equals_week` - date_equals_week

            * `date_equals_month` - date_equals_month

            * `date_equals_day_of_month` - date_equals_day_of_month

            * `date_equals_year` - date_equals_year

            * `single_select_equal` - single_select_equal

            * `single_select_not_equal` - single_select_not_equal

            * `link_row_has` - link_row_has

            * `link_row_has_not` - link_row_has_not

            * `link_row_contains` - link_row_contains

            * `link_row_not_contains` - link_row_not_contains

            * `boolean` - boolean

            * `empty` - empty

            * `not_empty` - not_empty

            * `multiple_select_has` - multiple_select_has

            * `multiple_select_has_not` - multiple_select_has_not

            * `multiple_collaborators_has` - multiple_collaborators_has

            * `multiple_collaborators_has_not` - multiple_collaborators_has_not

            * `user_is` - user_is

            * `user_is_not` - user_is_not
    PatchedUpdateViewFilterGroup:
      type: object
      properties:
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR) in the group to be shown.


            * `AND` - And

            * `OR` - Or
    PatchedUpdateViewGroupBy:
      type: object
      properties:
        field:
          description: The field that must be grouped by.
          type: integer
        order:
          $ref: '#/components/schemas/OrderEnum'
        width:
          description: The pixel width of the group by in the related view.
          type: integer
          maximum: 2147483647
          minimum: 0
      x-konfig-properties:
        order:
          description: >-
            Indicates the sort order direction. ASC (Ascending) is from A to Z
            and DESC (Descending) is from Z to A.


            * `ASC` - Ascending

            * `DESC` - Descending
    PatchedUpdateViewSort:
      type: object
      properties:
        field:
          description: The field that must be sorted on.
          type: integer
        order:
          $ref: '#/components/schemas/OrderEnum'
      x-konfig-properties:
        order:
          description: >-
            Indicates the sort order direction. ASC (Ascending) is from A to Z
            and DESC (Descending) is from Z to A.


            * `ASC` - Ascending

            * `DESC` - Descending
    PatchedUpdateWorkspaceInvitation:
      type: object
      properties:
        permissions:
          description: >-
            The permissions that the user is going to get within the workspace
            after accepting the invitation.
          type: string
          maxLength: 32
    PatchedUpdateWorkspaceUser:
      type: object
      properties:
        permissions:
          description: The permissions that the user has within the workspace.
          type: string
          maxLength: 32
    PatchedUserAdminUpdate:
      description: >-
        Serializes a request body for updating a given user. Do not use for
        returning user

        data as the password will be returned also.
      type: object
      properties:
        username:
          type: string
          format: email
        name:
          type: string
          maxLength: 150
        is_active:
          title: Active
          description: >-
            Designates whether this user should be treated as active. Set this
            to false instead of deleting accounts.
          type: boolean
        is_staff:
          title: Staff status
          description: >-
            Designates whether this user is an admin and has access to all
            workspaces and Baserow's admin areas. 
          type: boolean
        password:
          type: string
    PatchedUser_SourceUpdateUserSource:
      anyOf:
        - $ref: '#/components/schemas/LocalBaserowUserSourceUpdateUserSource'
    PatchedViewFieldOptions:
      anyOf:
        - $ref: '#/components/schemas/grid_view_field_options'
        - $ref: '#/components/schemas/gallery_view_field_options'
        - $ref: '#/components/schemas/form_view_field_options'
        - $ref: '#/components/schemas/kanban_view_field_options'
        - $ref: '#/components/schemas/calendar_view_field_options'
    PatchedViewUpdateView:
      anyOf:
        - $ref: '#/components/schemas/grid_view_update'
        - $ref: '#/components/schemas/gallery_view_update'
        - $ref: '#/components/schemas/form_view_update'
        - $ref: '#/components/schemas/kanban_view_update'
        - $ref: '#/components/schemas/calendar_view_update'
    PatchedWorkspace:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 165
    PathParam:
      type: object
      properties:
        name:
          description: The name of the parameter.
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/PathParamTypeEnum'
      required:
        - name
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the parameter.

            * `text` - text
            * `numeric` - numeric
    PathParamTypeEnum:
      description: |-
        * `text` - text
        * `numeric` - numeric
      enum:
        - text
        - numeric
      type: string
    PermissionObject:
      type: object
      properties:
        name:
          description: The permission manager name.
          type: string
        permissions:
          description: The content of the permission object for this permission manager.
          type: object
          additionalProperties: {}
      required:
        - name
        - permissions
    PhoneNumberFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
      required:
        - name
        - type
    PhoneNumberFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
    PhoneNumberFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
    PhoneNumberFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
    PublicBuilder:
      description: >-
        A public version of the builder serializer with less data to prevent
        data leaks.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 160
        pages:
          description: >-
            This field is specific to the `builder` application and contains an
            array of pages that are in the builder.
          type: array
          items:
            $ref: '#/components/schemas/PublicPage'
          readOnly: true
        type:
          description: The type of the object.
          type: string
          readOnly: true
        theme:
          $ref: '#/components/schemas/CombinedThemeConfigBlocks'
        user_sources:
          description: The user sources related with this builder.
          type: array
          items:
            $ref: '#/components/schemas/User_SourceBasePublicUserSource'
          readOnly: true
      required:
        - id
        - name
        - pages
        - theme
        - type
        - user_sources
      x-konfig-properties:
        theme:
          description: >-
            This field is specific to the `builder` application and contains the
            theme settings.
          readOnly: true
    PublicField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
    PublicFormView:
      type: object
      properties:
        title:
          description: The title that is displayed at the beginning of the form.
          type: string
        description:
          description: The description that is displayed at the beginning of the form.
          type: string
        mode:
          $ref: '#/components/schemas/ModeC5eEnum'
        cover_image:
          description: The user file cover image that is displayed at the top of the form.
          allOf:
            - $ref: '#/components/schemas/UserFile'
          nullable: true
        logo_image:
          description: The user file logo image that is displayed at the top of the form.
          allOf:
            - $ref: '#/components/schemas/UserFile'
          nullable: true
        submit_text:
          description: The text displayed on the submit button.
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/PublicFormViewFieldOptions'
        show_logo:
          type: boolean
      required:
        - fields
      x-konfig-properties:
        mode:
          description: |-
            Configurable mode of the form.

            * `form` - form
            * `survey` - survey
    PublicFormViewField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the related field.
          type: string
          readOnly: true
      required:
        - id
        - type
    PublicFormViewFieldOptions:
      type: object
      properties:
        description:
          description: If provided, then this value be will be shown under the field name.
          type: string
        name:
          description: If provided, then this value will be visible above the field input.
          type: string
          readOnly: true
        required:
          description: Indicates whether the field is required for the visitor to fill out.
          type: boolean
        order:
          description: The order that the field has in the form. Lower value is first.
          type: integer
          maximum: 32767
          minimum: -32768
        field:
          $ref: '#/components/schemas/PublicFormViewField'
        show_when_matching_conditions:
          description: Indicates whether this field is visible when the conditions are met.
          type: boolean
        condition_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/FormViewFieldOptionsCondition'
        condition_groups:
          type: array
          items:
            $ref: '#/components/schemas/FormViewFieldOptionsConditionGroup'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/FormViewFieldOptionsConditionGroup'
        field_component:
          description: >-
            Indicates which field input component is used in the form. The value
            is only used in the frontend, and can differ per field.
          type: string
          maxLength: 32
      required:
        - field
        - name
      x-konfig-properties:
        field:
          description: >-
            The properties of the related field. These can be used to construct
            the correct input. Additional properties could be added depending on
            the field type.
          readOnly: true
        condition_type:
          description: >-
            Indicates whether all (AND) or any (OR) of the conditions should
            match before shown.


            * `AND` - And

            * `OR` - Or
    PublicNone:
      description: Basic builder workflow action serializer
      type: object
      properties:
        title:
          description: The title of the notification. Must be an formula.
          type: string
          default: ''
        description:
          description: The description of the notification. Must be an formula.
          type: string
          default: ''
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        element_id:
          type: integer
          nullable: true
          readOnly: true
        type:
          description: The type of the workflow action
          type: string
          readOnly: true
        event:
          $ref: '#/components/schemas/EventEnum'
      required:
        - element_id
        - event
        - id
        - order
        - type
      x-konfig-properties:
        event:
          description: |-
            The event that triggers the execution

            * `click` - Click
            * `submit` - Submit
            * `after_login` - After Login
    PublicPage:
      description: >-
        A public version of the page serializer with less data to prevent data
        leaks.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        path:
          type: string
          maxLength: 255
        path_params:
          type: array
          items:
            $ref: '#/components/schemas/PathParam'
      required:
        - id
        - name
        - path
    PublicPaginationSerializerWithGalleryViewFieldOptionsExampleRowResponse:
      type: object
      properties:
        field_options:
          description: >-
            An object containing the field id as key and the properties related
            to view as value.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GalleryViewFieldOptions'
        count:
          description: The total amount of results.
          type: integer
        next:
          description: URL to the next page.
          type: string
          format: uri
          nullable: true
        previous:
          description: URL to the previous page.
          type: string
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExampleRowResponse'
      required:
        - count
        - next
        - previous
        - results
    PublicPaginationSerializerWithGridViewFieldOptionsExampleRowResponse:
      type: object
      properties:
        field_options:
          description: >-
            An object containing the field id as key and the properties related
            to view as value.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GridViewFieldOptions'
        count:
          description: The total amount of results.
          type: integer
        next:
          description: URL to the next page.
          type: string
          format: uri
          nullable: true
        previous:
          description: URL to the previous page.
          type: string
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExampleRowResponse'
      required:
        - count
        - next
        - previous
        - results
    PublicView:
      type: object
      properties:
        id:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        table:
          $ref: '#/components/schemas/PublicViewTable'
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/PublicViewSort'
          readOnly: true
        group_bys:
          type: array
          items:
            $ref: '#/components/schemas/PublicViewGroupBy'
          readOnly: true
        public:
          description: Indicates whether the view is publicly accessible to visitors.
          type: boolean
        slug:
          description: The unique slug where the view can be accessed publicly on.
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        show_logo:
          type: boolean
      required:
        - group_bys
        - id
        - name
        - order
        - slug
        - sortings
        - table
        - type
    PublicViewAuthRequest:
      type: object
      properties:
        password:
          type: string
      required:
        - password
    PublicViewAuthResponse:
      type: object
      properties:
        access_token:
          type: string
      required:
        - access_token
    PublicViewGroupBy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        field:
          description: The field that must be grouped by.
          type: integer
        order:
          $ref: '#/components/schemas/OrderEnum'
        width:
          description: The pixel width of the group by in the related view.
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
        - field
        - id
        - view
      x-konfig-properties:
        order:
          description: >-
            Indicates the sort order direction. ASC (Ascending) is from A to Z
            and DESC (Descending) is from Z to A.


            * `ASC` - Ascending

            * `DESC` - Descending
    PublicViewInfo:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/PublicField'
          readOnly: true
        view:
          $ref: '#/components/schemas/PublicView'
      required:
        - fields
        - view
      x-konfig-properties:
        view:
          readOnly: true
    PublicViewSort:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        field:
          description: The field that must be sorted on.
          type: integer
        order:
          $ref: '#/components/schemas/OrderEnum'
      required:
        - field
        - id
        - view
      x-konfig-properties:
        order:
          description: >-
            Indicates the sort order direction. ASC (Ascending) is from A to Z
            and DESC (Descending) is from Z to A.


            * `ASC` - Ascending

            * `DESC` - Descending
    PublicViewTable:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        database_id:
          type: integer
          readOnly: true
      required:
        - database_id
        - id
    PublishDomainJobCreateJob:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeC5eEnum'
      required:
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
    PublishDomainJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the job.
          type: string
          readOnly: true
        progress_percentage:
          description: >-
            A percentage indicating how far along the job is. 100 means that
            it's finished.
          type: integer
        state:
          description: Indicates the state of the import job.
          type: string
        human_readable_error:
          description: A human readable error message indicating what went wrong.
          type: string
      required:
        - id
        - progress_percentage
        - state
        - type
    RatingFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        max_value:
          description: Maximum value the rating can take.
          type: integer
          maximum: 10
          minimum: 1
        color:
          description: Color of the symbols.
          type: string
          maxLength: 50
        style:
          $ref: '#/components/schemas/StyleEnum'
      required:
        - name
        - type
      x-konfig-properties:
        style:
          description: |-
            Rating style. Allowed values: star, heart, thumbs-up, flag, smile.

            * `star` - Star
            * `heart` - Heart
            * `thumbs-up` - Thumbs-up
            * `flag` - Flags
            * `smile` - Smile
    RatingFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        max_value:
          description: Maximum value the rating can take.
          type: integer
          maximum: 10
          minimum: 1
        color:
          description: Color of the symbols.
          type: string
          maxLength: 50
        style:
          $ref: '#/components/schemas/StyleEnum'
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
      x-konfig-properties:
        style:
          description: |-
            Rating style. Allowed values: star, heart, thumbs-up, flag, smile.

            * `star` - Star
            * `heart` - Heart
            * `thumbs-up` - Thumbs-up
            * `flag` - Flags
            * `smile` - Smile
    RatingFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
        max_value:
          description: Maximum value the rating can take.
          type: integer
          maximum: 10
          minimum: 1
        color:
          description: Color of the symbols.
          type: string
          maxLength: 50
        style:
          $ref: '#/components/schemas/StyleEnum'
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
      x-konfig-properties:
        style:
          description: |-
            Rating style. Allowed values: star, heart, thumbs-up, flag, smile.

            * `star` - Star
            * `heart` - Heart
            * `thumbs-up` - Thumbs-up
            * `flag` - Flags
            * `smile` - Smile
    RatingFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        max_value:
          description: Maximum value the rating can take.
          type: integer
          maximum: 10
          minimum: 1
        color:
          description: Color of the symbols.
          type: string
          maxLength: 50
        style:
          $ref: '#/components/schemas/StyleEnum'
      x-konfig-properties:
        style:
          description: |-
            Rating style. Allowed values: star, heart, thumbs-up, flag, smile.

            * `star` - Star
            * `heart` - Heart
            * `thumbs-up` - Thumbs-up
            * `flag` - Flags
            * `smile` - Smile
    Register:
      type: object
      properties:
        name:
          type: string
          maxLength: 150
          minLength: 2
        email:
          description: The email address is also going to be the username.
          type: string
          format: email
        password:
          type: string
        language:
          description: >-
            An ISO 639 language code (with optional variant) selected by the
            user. Ex: en-GB.
          type: string
          default: en
          maxLength: 10
          minLength: 2
        authenticate:
          description: >-
            Indicates whether an authentication JWT should be generated and be
            included in the response.
          type: boolean
          default: false
        group_invitation_token:
          description: >-
            DEPRECATED: Please use `workspace_invitation_token` which this
            attribute is being renamed to in 2024.
          type: string
        workspace_invitation_token:
          description: >-
            If provided and valid, the user accepts the workspace invitation and
            will have access to the workspace after signing up.
          type: string
        template_id:
          description: >-
            The id of the template that must be installed after creating the
            account. This only works if the `workspace_invitation_token` param
            is not provided.
          type: integer
      required:
        - email
        - name
        - password
    RegisterLicense:
      type: object
      properties:
        license:
          description: The license that you want to register.
          type: string
      required:
        - license
    RelatedFields:
      type: object
      properties:
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
      required:
        - related_fields
    Report:
      type: object
      properties:
        failing_rows:
          description: >-
            An object containing field in error by rows. The keys are the row
            indexes from original file and values are objects of errors by
            fields.
          type: object
          additionalProperties:
            description: >-
              An object containing error messages by fields. The key is the
              field name and the value is an array of error messages for this
              field. These messages are localized for the user who has created
              the job when the translation is available.
            type: object
            additionalProperties:
              description: Error messages for this field.
              type: array
              items:
                type: string
      required:
        - failing_rows
    RequestMethodEnum:
      description: |-
        * `POST` - Post
        * `GET` - Get
        * `PUT` - Put
        * `PATCH` - Patch
        * `DELETE` - Delete
      enum:
        - POST
        - GET
        - PUT
        - PATCH
        - DELETE
      type: string
    ResetPasswordBodyValidation:
      type: object
      properties:
        token:
          type: string
        password:
          type: string
      required:
        - password
        - token
    RestoreSnapshotJobCreateJob:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TypeC5eEnum'
      required:
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
    RestoreSnapshotJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the job.
          type: string
          readOnly: true
        progress_percentage:
          description: >-
            A percentage indicating how far along the job is. 100 means that
            it's finished.
          type: integer
        state:
          description: Indicates the state of the import job.
          type: string
        human_readable_error:
          description: A human readable error message indicating what went wrong.
          type: string
      required:
        - id
        - progress_percentage
        - state
        - type
    RollupFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateTimeFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
          nullable: true
        array_formula_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
            - $ref: '#/components/schemas/NullEnum'
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DurationFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
            - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
            - $ref: '#/components/schemas/NullEnum'
        nullable:
          type: boolean
          readOnly: true
        error:
          type: string
          nullable: true
        date_show_tzinfo:
          description: Indicates if the time zone should be shown.
          type: boolean
          nullable: true
        through_field_id:
          description: The id of the link row field to rollup values for.
          type: integer
          nullable: true
        target_field_id:
          description: >-
            The id of the field in the table linked to by the through_field to
            rollup.
          type: integer
          nullable: true
        rollup_function:
          description: The rollup formula function that must be applied.
          type: string
          maxLength: 64
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
        - name
        - nullable
        - type
    RollupFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateTimeFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
          nullable: true
        array_formula_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
            - $ref: '#/components/schemas/NullEnum'
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DurationFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
            - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
            - $ref: '#/components/schemas/NullEnum'
        nullable:
          type: boolean
          readOnly: true
        error:
          type: string
          nullable: true
        date_show_tzinfo:
          description: Indicates if the time zone should be shown.
          type: boolean
          nullable: true
        through_field_id:
          description: The id of the link row field to rollup values for.
          type: integer
          nullable: true
        target_field_id:
          description: >-
            The id of the field in the table linked to by the through_field to
            rollup.
          type: integer
          nullable: true
        rollup_function:
          description: The rollup formula function that must be applied.
          type: string
          maxLength: 64
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
        - id
        - name
        - nullable
        - order
        - read_only
        - table_id
        - type
    RollupFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateTimeFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
          nullable: true
        array_formula_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
            - $ref: '#/components/schemas/NullEnum'
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DurationFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
            - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
            - $ref: '#/components/schemas/NullEnum'
        nullable:
          type: boolean
          readOnly: true
        error:
          type: string
          nullable: true
        date_show_tzinfo:
          description: Indicates if the time zone should be shown.
          type: boolean
          nullable: true
        through_field_id:
          description: The id of the link row field to rollup values for.
          type: integer
          nullable: true
        target_field_id:
          description: >-
            The id of the field in the table linked to by the through_field to
            rollup.
          type: integer
          nullable: true
        rollup_function:
          description: The rollup formula function that must be applied.
          type: string
          maxLength: 64
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
        - id
        - name
        - nullable
        - order
        - read_only
        - related_fields
        - table_id
        - type
    RollupFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateTimeFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
          nullable: true
        array_formula_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
            - $ref: '#/components/schemas/NullEnum'
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DurationFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
            - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
            - $ref: '#/components/schemas/NullEnum'
        nullable:
          type: boolean
          readOnly: true
        error:
          type: string
          nullable: true
        date_show_tzinfo:
          description: Indicates if the time zone should be shown.
          type: boolean
          nullable: true
        through_field_id:
          description: The id of the link row field to rollup values for.
          type: integer
          nullable: true
        target_field_id:
          description: >-
            The id of the field in the table linked to by the through_field to
            rollup.
          type: integer
          nullable: true
        rollup_function:
          description: The rollup formula function that must be applied.
          type: string
          maxLength: 64
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
        - nullable
    RowComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_id:
          description: The user who made the comment.
          type: integer
          nullable: true
          readOnly: true
        first_name:
          type: string
          maxLength: 32
        table_id:
          description: 'The table the row this comment is for is found in. '
          type: integer
          readOnly: true
        row_id:
          description: The id of the row the comment is for.
          type: integer
          maximum: 2147483647
          minimum: 0
        message:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        edited:
          type: string
          readOnly: true
        trashed:
          type: boolean
      required:
        - created_on
        - edited
        - id
        - message
        - row_id
        - table_id
        - updated_on
        - user_id
    RowCommentCreate:
      type: object
      properties:
        message:
          description: The rich text comment content.
          type: object
          additionalProperties: {}
      required:
        - message
    RowCommentsNotificationMode:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/ModeFf8Enum'
      required:
        - mode
      x-konfig-properties:
        mode:
          description: >-
            The mode to use to receive notifications for new comments on a table
            row.


            * `all` - all

            * `mentions` - mentions
    RowCommentsNotificationModeEnum:
      description: |-
        * `all` - all
        * `mentions` - mentions
      enum:
        - all
        - mentions
      type: string
    RowHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        action_type:
          description: The type of the action that was performed.
          type: string
        user:
          $ref: '#/components/schemas/RowHistoryUser'
        timestamp:
          description: The timestamp of the action that was performed.
          type: string
          format: date-time
        before:
          description: >-
            The mapping between field_ids and values for the row before the
            action was performed.
          type: object
          additionalProperties: {}
        after:
          description: >-
            The mapping between field_ids and values for the row after the
            action was performed.
          type: object
          additionalProperties: {}
        fields_metadata:
          description: The metadata of the fields that were changed.
          type: object
          additionalProperties: {}
      required:
        - action_type
        - after
        - before
        - fields_metadata
        - id
        - timestamp
        - user
      x-konfig-properties:
        user:
          description: The user that performed the action.
    RowHistoryUser:
      type: object
      properties:
        id:
          description: The id of the user.
          type: integer
        name:
          description: The first name of the user.
          type: string
      required:
        - id
        - name
    RowIdentifierTypeEnum:
      description: |-
        * `id` - Id
        * `count` - Count
      enum:
        - id
        - count
      type: string
    RowMetadata:
      type: object
      properties:
        row_comment_count:
          description: How many row comments exist for this row.
          type: integer
          minimum: 0
        row_comments_notification_mode:
          $ref: '#/components/schemas/RowCommentsNotificationModeEnum'
    SAMLResponse:
      type: object
      properties:
        SAMLResponse:
          description: The encoded SAML response from the IdP.
          type: string
        RelayState:
          description: The frontend URL where redirect the authenticated user.
          type: string
      required:
        - RelayState
        - SAMLResponse
    SamlAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        domain:
          description: The email domain registered with this provider.
          type: string
        enabled:
          description: Whether the provider is enabled or not.
          type: boolean
        metadata:
          description: The SAML metadata XML provided by the IdP.
          type: string
        is_verified:
          description: Whether or not a user sign in correctly with this SAML provider.
          type: boolean
          readOnly: true
      required:
        - domain
        - id
        - is_verified
        - metadata
        - type
    ScopeTypeEnum:
      description: |-
        * `core` - core
        * `application` - application
        * `workspace` - workspace
        * `workspace_invitation` - workspace_invitation
        * `snapshot` - snapshot
        * `workspace_user` - workspace_user
        * `integration` - integration
        * `user_source` - user_source
        * `database` - database
        * `database_table` - database_table
        * `database_field` - database_field
        * `database_view` - database_view
        * `database_view_decoration` - database_view_decoration
        * `database_view_sort` - database_view_sort
        * `database_view_group` - database_view_group
        * `database_view_filter` - database_view_filter
        * `database_view_filter_group` - database_view_filter_group
        * `token` - token
        * `builder` - builder
        * `builder_page` - builder_page
        * `builder_element` - builder_element
        * `builder_domain` - builder_domain
        * `builder_data_source` - builder_data_source
        * `builder_workflow_action` - builder_workflow_action
        * `team` - team
        * `team_subject` - team_subject
        * `license` - license
      enum:
        - core
        - application
        - workspace
        - workspace_invitation
        - snapshot
        - workspace_user
        - integration
        - user_source
        - database
        - database_table
        - database_field
        - database_view
        - database_view_decoration
        - database_view_sort
        - database_view_group
        - database_view_filter
        - database_view_filter_group
        - token
        - builder
        - builder_page
        - builder_element
        - builder_domain
        - builder_data_source
        - builder_workflow_action
        - team
        - team_subject
        - license
      type: string
    SelectColorValueProviderConf:
      type: object
      properties:
        field_id:
          description: >-
            An id of a select field of the table. The value provider return the
            color of the selected option for each row.
          type: integer
          nullable: true
      required:
        - field_id
    SelectOption:
      type: object
      properties:
        id:
          type: integer
        value:
          type: string
          maxLength: 255
        color:
          type: string
          maxLength: 255
      required:
        - color
        - value
    SendResetPasswordEmailBodyValidation:
      type: object
      properties:
        email:
          description: The email address of the user that has requested a password reset.
          type: string
          format: email
        base_url:
          description: >-
            The base URL where the user can reset his password. The reset token
            is going to be appended to the base_url (base_url '/token').
          type: string
          format: uri
      required:
        - base_url
        - email
    Sender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          type: string
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
      required:
        - id
        - username
    Settings:
      type: object
      properties:
        allow_new_signups:
          description: >-
            Indicates whether new users can create a new account when signing
            up.
          type: boolean
        allow_signups_via_workspace_invitations:
          description: >-
            Indicates whether invited users can create an account when signing
            up, even if allow_new_signups is disabled.
          type: boolean
        allow_signups_via_group_invitations:
          description: >-
            DEPRECATED: Please use the functionally identical
            `allow_signups_via_workspace_invitations` instead as this attribute
            is being removed in the future.
          type: boolean
        allow_reset_password:
          description: Indicates whether users can request a password reset link.
          type: boolean
        allow_global_workspace_creation:
          description: Indicates whether all users can create workspaces, or just staff.
          type: boolean
        allow_global_group_creation:
          description: >-
            DEPRECATED: Please use the functionally identical
            `allow_global_workspace_creation` instead as this attribute is being
            removed in the future.
          type: boolean
        account_deletion_grace_delay:
          description: >-
            Number of days after the last login for an account pending deletion
            to be deleted
          type: integer
          maximum: 32767
          minimum: 0
        show_admin_signup_page:
          description: >-
            Indicates that there are no admin users in the database yet, so in
            the frontend the signup form will be shown instead of the login
            page.
          type: boolean
        track_workspace_usage:
          description: >-
            Runs a job once per day which calculates per workspace row counts
            and file storage usage, displayed on the admin workspace page.
          type: boolean
        show_baserow_help_request:
          description: >-
            Indicates whether the `We need your help!` message will be shown on
            the dashboard
          type: boolean
        co_branding_logo:
          description: Co-branding logo that's placed next to the Baserow logo (176x29).
          allOf:
            - $ref: '#/components/schemas/UserFile'
          nullable: true
    SingleAuditLogExportJobRequest:
      description: >-
        When mixed in to a model serializer for an ExportJob this will add an
        url field

        with the actual usable url of the export job's file (if it has one).
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        export_charset:
          $ref: '#/components/schemas/ExportCharsetEnum'
        csv_column_separator:
          $ref: '#/components/schemas/CsvColumnSeparatorEnum'
        csv_first_row_header:
          description: Whether or not to generate a header row at the top of the csv file.
          type: boolean
          default: true
        filter_user_id:
          description: 'Optional: The user to filter the audit log by.'
          type: integer
          minimum: 0
        filter_workspace_id:
          description: 'Optional: The workspace to filter the audit log by.'
          type: integer
          minimum: 0
        filter_action_type:
          $ref: '#/components/schemas/FilterActionTypeEnum'
        filter_from_timestamp:
          description: 'Optional: The start date to filter the audit log by.'
          type: string
          format: date-time
        filter_to_timestamp:
          description: 'Optional: The end date to filter the audit log by.'
          type: string
          format: date-time
        exclude_columns:
          description: >-
            Optional: A comma separated list of column names to exclude from the
            export. Available options are `user_email, user_id, workspace_name,
            workspace_id, type, description, timestamp, ip_address`.
          type: string
      required:
        - url
      x-konfig-properties:
        export_charset:
          description: |-
            The character set to use when creating the export file.

            * `utf-8` - utf-8
            * `iso-8859-6` - iso-8859-6
            * `windows-1256` - windows-1256
            * `iso-8859-4` - iso-8859-4
            * `windows-1257` - windows-1257
            * `iso-8859-14` - iso-8859-14
            * `iso-8859-2` - iso-8859-2
            * `windows-1250` - windows-1250
            * `gbk` - gbk
            * `gb18030` - gb18030
            * `big5` - big5
            * `koi8-r` - koi8-r
            * `koi8-u` - koi8-u
            * `iso-8859-5` - iso-8859-5
            * `windows-1251` - windows-1251
            * `x-mac-cyrillic` - mac-cyrillic
            * `iso-8859-7` - iso-8859-7
            * `windows-1253` - windows-1253
            * `iso-8859-8` - iso-8859-8
            * `windows-1255` - windows-1255
            * `euc-jp` - euc-jp
            * `iso-2022-jp` - iso-2022-jp
            * `shift-jis` - shift-jis
            * `euc-kr` - euc-kr
            * `macintosh` - macintosh
            * `iso-8859-10` - iso-8859-10
            * `iso-8859-16` - iso-8859-16
            * `windows-874` - cp874
            * `windows-1254` - windows-1254
            * `windows-1258` - windows-1258
            * `iso-8859-1` - iso-8859-1
            * `windows-1252` - windows-1252
            * `iso-8859-3` - iso-8859-3
          default: utf-8
        csv_column_separator:
          description: "The value used to separate columns in the resulting csv file.\n\n* `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \x1E\n* `unit_separator` - \x1F"
          default: ','
        filter_action_type:
          description: >-
            Optional: The action type to filter the audit log by.


            * `create_group` - create_group

            * `delete_group` - delete_group

            * `update_group` - update_group

            * `order_groups` - order_groups

            * `create_application` - create_application

            * `update_application` - update_application

            * `delete_application` - delete_application

            * `order_applications` - order_applications

            * `duplicate_application` - duplicate_application

            * `install_template` - install_template

            * `create_group_invitation` - create_group_invitation

            * `delete_group_invitation` - delete_group_invitation

            * `accept_group_invitation` - accept_group_invitation

            * `reject_group_invitation` - reject_group_invitation

            * `update_group_invitation_permissions` -
            update_group_invitation_permissions

            * `leave_group` - leave_group

            * `create_snapshot` - create_snapshot

            * `delete_snapshot` - delete_snapshot

            * `restore_snapshot` - restore_snapshot

            * `empty_trash` - empty_trash

            * `restore_from_trash` - restore_from_trash

            * `create_user` - create_user

            * `update_user` - update_user

            * `schedule_user_deletion` - schedule_user_deletion

            * `cancel_user_deletion` - cancel_user_deletion

            * `sign_in_user` - sign_in_user

            * `change_user_password` - change_user_password

            * `send_reset_user_password` - send_reset_user_password

            * `reset_user_password` - reset_user_password

            * `create_db_token` - create_db_token

            * `update_db_token_name` - update_db_token_name

            * `update_db_token_permissions` - update_db_token_permissions

            * `rotate_db_token_key` - rotate_db_token_key

            * `delete_db_token_key` - delete_db_token_key

            * `create_webhook` - create_webhook

            * `delete_webhook` - delete_webhook

            * `update_webhook` - update_webhook

            * `export_table` - export_table

            * `import_database_from_airtable` - import_database_from_airtable

            * `create_table` - create_table

            * `delete_table` - delete_table

            * `order_tables` - order_tables

            * `update_table` - update_table

            * `duplicate_table` - duplicate_table

            * `create_row` - create_row

            * `create_rows` - create_rows

            * `import_rows` - import_rows

            * `delete_row` - delete_row

            * `delete_rows` - delete_rows

            * `move_row` - move_row

            * `update_row` - update_row

            * `update_rows` - update_rows

            * `create_view` - create_view

            * `duplicate_view` - duplicate_view

            * `delete_view` - delete_view

            * `order_views` - order_views

            * `update_view` - update_view

            * `create_view_filter` - create_view_filter

            * `update_view_filter` - update_view_filter

            * `delete_view_filter` - delete_view_filter

            * `create_view_sort` - create_view_sort

            * `update_view_sort` - update_view_sort

            * `delete_view_sort` - delete_view_sort

            * `create_view_group` - create_view_group

            * `update_view_group` - update_view_group

            * `delete_view_group` - delete_view_group

            * `rotate_view_slug` - rotate_view_slug

            * `update_view_field_options` - update_view_field_options

            * `create_decoration` - create_decoration

            * `update_decoration` - update_decoration

            * `delete_decoration` - delete_decoration

            * `create_view_filter_group` - create_view_filter_group

            * `update_view_filter_group` - update_view_filter_group

            * `delete_view_filter_group` - delete_view_filter_group

            * `create_field` - create_field

            * `delete_field` - delete_field

            * `update_field` - update_field

            * `duplicate_field` - duplicate_field

            * `create_row_comment` - create_row_comment

            * `delete_row_comment` - delete_row_comment

            * `update_row_comment` - update_row_comment

            * `create_team` - create_team

            * `update_team` - update_team

            * `delete_team` - delete_team

            * `create_team_subject` - create_team_subject

            * `delete_team_subject` - delete_team_subject

            * `batch_assign_role` - batch_assign_role
    SingleAuditLogExportJobResponse:
      description: >-
        When mixed in to a model serializer for an ExportJob this will add an
        url field

        with the actual usable url of the export job's file (if it has one).
      type: object
      properties:
        url:
          description: The URL to download the exported file.
          type: string
          format: uri
          readOnly: true
        export_charset:
          $ref: '#/components/schemas/ExportCharsetEnum'
        csv_column_separator:
          $ref: '#/components/schemas/CsvColumnSeparatorEnum'
        csv_first_row_header:
          description: Whether or not to generate a header row at the top of the csv file.
          type: boolean
          default: true
        filter_user_id:
          description: 'Optional: The user to filter the audit log by.'
          type: integer
          minimum: 0
        filter_workspace_id:
          description: 'Optional: The workspace to filter the audit log by.'
          type: integer
          minimum: 0
        filter_action_type:
          $ref: '#/components/schemas/FilterActionTypeEnum'
        filter_from_timestamp:
          description: 'Optional: The start date to filter the audit log by.'
          type: string
          format: date-time
        filter_to_timestamp:
          description: 'Optional: The end date to filter the audit log by.'
          type: string
          format: date-time
        exclude_columns:
          description: >-
            Optional: A comma separated list of column names to exclude from the
            export. Available options are `user_email, user_id, workspace_name,
            workspace_id, type, description, timestamp, ip_address`.
          type: string
        created_on:
          description: The date and time when the export job was created.
          type: string
          format: date-time
          readOnly: true
        exported_file_name:
          description: The name of the file that was created by the export job.
          type: string
          readOnly: true
      required:
        - created_on
        - exported_file_name
        - url
      x-konfig-properties:
        export_charset:
          description: |-
            The character set to use when creating the export file.

            * `utf-8` - utf-8
            * `iso-8859-6` - iso-8859-6
            * `windows-1256` - windows-1256
            * `iso-8859-4` - iso-8859-4
            * `windows-1257` - windows-1257
            * `iso-8859-14` - iso-8859-14
            * `iso-8859-2` - iso-8859-2
            * `windows-1250` - windows-1250
            * `gbk` - gbk
            * `gb18030` - gb18030
            * `big5` - big5
            * `koi8-r` - koi8-r
            * `koi8-u` - koi8-u
            * `iso-8859-5` - iso-8859-5
            * `windows-1251` - windows-1251
            * `x-mac-cyrillic` - mac-cyrillic
            * `iso-8859-7` - iso-8859-7
            * `windows-1253` - windows-1253
            * `iso-8859-8` - iso-8859-8
            * `windows-1255` - windows-1255
            * `euc-jp` - euc-jp
            * `iso-2022-jp` - iso-2022-jp
            * `shift-jis` - shift-jis
            * `euc-kr` - euc-kr
            * `macintosh` - macintosh
            * `iso-8859-10` - iso-8859-10
            * `iso-8859-16` - iso-8859-16
            * `windows-874` - cp874
            * `windows-1254` - windows-1254
            * `windows-1258` - windows-1258
            * `iso-8859-1` - iso-8859-1
            * `windows-1252` - windows-1252
            * `iso-8859-3` - iso-8859-3
          default: utf-8
        csv_column_separator:
          description: "The value used to separate columns in the resulting csv file.\n\n* `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \x1E\n* `unit_separator` - \x1F"
          default: ','
        filter_action_type:
          description: >-
            Optional: The action type to filter the audit log by.


            * `create_group` - create_group

            * `delete_group` - delete_group

            * `update_group` - update_group

            * `order_groups` - order_groups

            * `create_application` - create_application

            * `update_application` - update_application

            * `delete_application` - delete_application

            * `order_applications` - order_applications

            * `duplicate_application` - duplicate_application

            * `install_template` - install_template

            * `create_group_invitation` - create_group_invitation

            * `delete_group_invitation` - delete_group_invitation

            * `accept_group_invitation` - accept_group_invitation

            * `reject_group_invitation` - reject_group_invitation

            * `update_group_invitation_permissions` -
            update_group_invitation_permissions

            * `leave_group` - leave_group

            * `create_snapshot` - create_snapshot

            * `delete_snapshot` - delete_snapshot

            * `restore_snapshot` - restore_snapshot

            * `empty_trash` - empty_trash

            * `restore_from_trash` - restore_from_trash

            * `create_user` - create_user

            * `update_user` - update_user

            * `schedule_user_deletion` - schedule_user_deletion

            * `cancel_user_deletion` - cancel_user_deletion

            * `sign_in_user` - sign_in_user

            * `change_user_password` - change_user_password

            * `send_reset_user_password` - send_reset_user_password

            * `reset_user_password` - reset_user_password

            * `create_db_token` - create_db_token

            * `update_db_token_name` - update_db_token_name

            * `update_db_token_permissions` - update_db_token_permissions

            * `rotate_db_token_key` - rotate_db_token_key

            * `delete_db_token_key` - delete_db_token_key

            * `create_webhook` - create_webhook

            * `delete_webhook` - delete_webhook

            * `update_webhook` - update_webhook

            * `export_table` - export_table

            * `import_database_from_airtable` - import_database_from_airtable

            * `create_table` - create_table

            * `delete_table` - delete_table

            * `order_tables` - order_tables

            * `update_table` - update_table

            * `duplicate_table` - duplicate_table

            * `create_row` - create_row

            * `create_rows` - create_rows

            * `import_rows` - import_rows

            * `delete_row` - delete_row

            * `delete_rows` - delete_rows

            * `move_row` - move_row

            * `update_row` - update_row

            * `update_rows` - update_rows

            * `create_view` - create_view

            * `duplicate_view` - duplicate_view

            * `delete_view` - delete_view

            * `order_views` - order_views

            * `update_view` - update_view

            * `create_view_filter` - create_view_filter

            * `update_view_filter` - update_view_filter

            * `delete_view_filter` - delete_view_filter

            * `create_view_sort` - create_view_sort

            * `update_view_sort` - update_view_sort

            * `delete_view_sort` - delete_view_sort

            * `create_view_group` - create_view_group

            * `update_view_group` - update_view_group

            * `delete_view_group` - delete_view_group

            * `rotate_view_slug` - rotate_view_slug

            * `update_view_field_options` - update_view_field_options

            * `create_decoration` - create_decoration

            * `update_decoration` - update_decoration

            * `delete_decoration` - delete_decoration

            * `create_view_filter_group` - create_view_filter_group

            * `update_view_filter_group` - update_view_filter_group

            * `delete_view_filter_group` - delete_view_filter_group

            * `create_field` - create_field

            * `delete_field` - delete_field

            * `update_field` - update_field

            * `duplicate_field` - duplicate_field

            * `create_row_comment` - create_row_comment

            * `delete_row_comment` - delete_row_comment

            * `update_row_comment` - update_row_comment

            * `create_team` - create_team

            * `update_team` - update_team

            * `delete_team` - delete_team

            * `create_team_subject` - create_team_subject

            * `delete_team_subject` - delete_team_subject

            * `batch_assign_role` - batch_assign_role
    SingleDuplicateApplicationJobType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the job.
          type: string
          readOnly: true
        progress_percentage:
          description: >-
            A percentage indicating how far along the job is. 100 means that
            it's finished.
          type: integer
        state:
          description: Indicates the state of the import job.
          type: string
        human_readable_error:
          description: A human readable error message indicating what went wrong.
          type: string
        original_application:
          $ref: '#/components/schemas/ApplicationApplication'
        duplicated_application:
          $ref: '#/components/schemas/ApplicationApplication'
      required:
        - duplicated_application
        - id
        - original_application
        - progress_percentage
        - state
        - type
      x-konfig-properties:
        original_application:
          readOnly: true
        duplicated_application:
          readOnly: true
    SingleDuplicateFieldJobType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the job.
          type: string
          readOnly: true
        progress_percentage:
          description: >-
            A percentage indicating how far along the job is. 100 means that
            it's finished.
          type: integer
        state:
          description: Indicates the state of the import job.
          type: string
        human_readable_error:
          description: A human readable error message indicating what went wrong.
          type: string
        original_field:
          $ref: '#/components/schemas/Field'
        duplicated_field:
          $ref: '#/components/schemas/FieldSerializerWithRelatedFields'
      required:
        - duplicated_field
        - id
        - original_field
        - progress_percentage
        - state
        - type
      x-konfig-properties:
        original_field:
          readOnly: true
        duplicated_field:
          readOnly: true
    SingleDuplicatePageJobType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the job.
          type: string
          readOnly: true
        progress_percentage:
          description: >-
            A percentage indicating how far along the job is. 100 means that
            it's finished.
          type: integer
        state:
          description: Indicates the state of the import job.
          type: string
        human_readable_error:
          description: A human readable error message indicating what went wrong.
          type: string
        original_page:
          $ref: '#/components/schemas/Page'
        duplicated_page:
          $ref: '#/components/schemas/Page'
      required:
        - duplicated_page
        - id
        - original_page
        - progress_percentage
        - state
        - type
      x-konfig-properties:
        original_page:
          readOnly: true
        duplicated_page:
          readOnly: true
    SingleDuplicateTableJobType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the job.
          type: string
          readOnly: true
        progress_percentage:
          description: >-
            A percentage indicating how far along the job is. 100 means that
            it's finished.
          type: integer
        state:
          description: Indicates the state of the import job.
          type: string
        human_readable_error:
          description: A human readable error message indicating what went wrong.
          type: string
        original_table:
          $ref: '#/components/schemas/Table'
        duplicated_table:
          $ref: '#/components/schemas/Table'
      required:
        - duplicated_table
        - id
        - original_table
        - progress_percentage
        - state
        - type
      x-konfig-properties:
        original_table:
          readOnly: true
        duplicated_table:
          readOnly: true
    SingleFileImportJobSerializerClass:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the job.
          type: string
          readOnly: true
        progress_percentage:
          description: >-
            A percentage indicating how far along the job is. 100 means that
            it's finished.
          type: integer
        state:
          description: Indicates the state of the import job.
          type: string
        human_readable_error:
          description: A human readable error message indicating what went wrong.
          type: string
        database_id:
          description: Database id where the table will be created.
          type: integer
        name:
          description: The name of the new table.
          type: string
          maxLength: 255
        table_id:
          description: Table id where the data will be imported.
          type: integer
        first_row_header:
          type: boolean
          default: false
        report:
          $ref: '#/components/schemas/Report'
      required:
        - database_id
        - id
        - progress_percentage
        - report
        - state
        - type
      x-konfig-properties:
        report:
          description: Import error report.
    SingleInstallTemplateJobType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the job.
          type: string
          readOnly: true
        progress_percentage:
          description: >-
            A percentage indicating how far along the job is. 100 means that
            it's finished.
          type: integer
        state:
          description: Indicates the state of the import job.
          type: string
        human_readable_error:
          description: A human readable error message indicating what went wrong.
          type: string
        workspace:
          $ref: '#/components/schemas/Workspace'
        template:
          $ref: '#/components/schemas/Template'
        installed_applications:
          type: object
          additionalProperties: {}
          readOnly: true
        group:
          $ref: '#/components/schemas/Workspace'
      required:
        - group
        - id
        - installed_applications
        - progress_percentage
        - state
        - template
        - type
        - workspace
      x-konfig-properties:
        workspace:
          readOnly: true
        template:
          readOnly: true
        group:
          readOnly: true
    SingleSelectFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
      required:
        - name
        - type
    SingleSelectFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
    SingleSelectFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
    SingleSelectFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
    Snapshot:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 160
        snapshot_from_application:
          type: integer
          readOnly: true
        created_by:
          $ref: '#/components/schemas/User'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - created_at
        - created_by
        - id
        - name
        - snapshot_from_application
      x-konfig-properties:
        created_by:
          readOnly: true
    SourceTypeEnum:
      description: |-
        * `url` - Url
        * `embed` - Embed
      enum:
        - url
        - embed
      type: string
    StateEnum:
      description: |-
        * `pending` - pending
        * `exporting` - exporting
        * `cancelled` - cancelled
        * `finished` - finished
        * `failed` - failed
        * `expired` - expired
      enum:
        - pending
        - exporting
        - cancelled
        - finished
        - failed
        - expired
      type: string
    StyleBackgroundEnum:
      description: |-
        * `none` - None
        * `color` - Color
      enum:
        - none
        - color
      type: string
    StyleEnum:
      description: |-
        * `star` - Star
        * `heart` - Heart
        * `thumbs-up` - Thumbs-up
        * `flag` - Flags
        * `smile` - Smile
      enum:
        - star
        - heart
        - thumbs-up
        - flag
        - smile
      type: string
    StyleImageConstraintEnum:
      description: |-
        * `cover` - Cover
        * `contain` - Contain
        * `full-width` - Full Width
      enum:
        - cover
        - contain
        - full-width
      type: string
    StyleWidthEnum:
      description: |-
        * `full` - Full
        * `normal` - Normal
        * `medium` - Medium
        * `small` - Small
      enum:
        - full
        - normal
        - medium
        - small
      type: string
    SubDomainCreateDomain:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type0a6Enum'
        domain_name:
          type: string
          maxLength: 255
      required:
        - domain_name
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the domain.

            * `custom` - custom
            * `sub_domain` - sub_domain
    SubDomainDomain:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the domain.
          type: string
          readOnly: true
        domain_name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        builder_id:
          type: integer
          readOnly: true
        last_published:
          description: Last publication date of this domain
          type: string
          format: date-time
          nullable: true
      required:
        - builder_id
        - domain_name
        - id
        - order
        - type
    SubjectType3ffEnum:
      description: '* `auth.User` - auth.User'
      enum:
        - auth.User
      type: string
    SubjectTypeB9aEnum:
      description: |-
        * `auth.User` - auth.User
        * `anonymous` - anonymous
        * `user_source.user` - user_source.user
        * `core.Token` - core.Token
        * `baserow_enterprise.Team` - baserow_enterprise.Team
      enum:
        - auth.User
        - anonymous
        - user_source.user
        - core.Token
        - baserow_enterprise.Team
      type: string
    SubjectUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          type: string
          readOnly: true
        first_name:
          type: string
          readOnly: true
        email:
          title: Email address
          type: string
          format: email
          readOnly: true
      required:
        - email
        - first_name
        - id
        - username
    SubmitActionEnum:
      description: |-
        * `MESSAGE` - Message
        * `REDIRECT` - Redirect
      enum:
        - MESSAGE
        - REDIRECT
      type: string
    Table:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        database_id:
          type: integer
          readOnly: true
      required:
        - database_id
        - id
        - name
        - order
    TableCreate:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        data:
          description: >-
            A list of rows that needs to be created as initial table data. Each
            row is a list of values that are going to be added in the new table
            in the same order as provided.


            Ex: 

            ```json

            [
              ["row1_field1_value", "row1_field2_value"],
              ["row2_field1_value", "row2_field2_value"],
            ]

            ```

            for creating a two rows table with two fields.


            If not provided, some example data is going to be created.
          type: array
          items: {}
          minItems: 1
        first_row_header:
          description: >-
            Indicates if the first provided row is the header. If true the field
            names are going to be the values of the first row. Otherwise they
            will be called "Field N"
          type: boolean
          default: false
      required:
        - name
    TableElementCreateElement:
      description: >-
        This serializer allow to set the type of an element and the element id
        before which

        we want to insert the new element.
      type: object
      properties:
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        before_id:
          description: >-
            If provided, creates the element before the element with the given
            id.
          type: integer
        type:
          $ref: '#/components/schemas/Type2a6Enum'
        parent_element_id:
          description: >-
            If provided, creates the element as a child of the element with the
            given id.
          type: integer
          nullable: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        data_source_id:
          description: >-
            The data source we want to show in the element for. Only
            data_sources that return list are allowed.
          type: integer
          nullable: true
        fields:
          type: array
          items:
            $ref: '#/components/schemas/CollectionField'
        items_per_page:
          description: The amount item loaded with each page.
          type: integer
          default: 20
        button_color:
          description: Button color.
          type: string
          default: primary
          maxLength: 20
      required:
        - order
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `form_container` - form_container
            * `dropdown` - dropdown
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `auth_form` - auth_form
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    TableElementElement:
      description: |-
        Basic element serializer mostly for returned values.

        👉 Mind to update the
        baserow.contrib.builder.api.domains.serializer.PublicElementSerializer
        when you update this one.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        data_source_id:
          description: >-
            The data source we want to show in the element for. Only
            data_sources that return list are allowed.
          type: integer
          nullable: true
        fields:
          type: array
          items:
            $ref: '#/components/schemas/CollectionField'
        items_per_page:
          description: The amount item loaded with each page.
          type: integer
          default: 20
        button_color:
          description: Button color.
          type: string
          default: primary
          maxLength: 20
      required:
        - id
        - order
        - page_id
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    TableElementPublicElement:
      description: Basic element serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        data_source_id:
          description: >-
            The data source we want to show in the element for. Only
            data_sources that return list are allowed.
          type: integer
          nullable: true
        fields:
          type: array
          items:
            $ref: '#/components/schemas/CollectionField'
        items_per_page:
          description: The amount item loaded with each page.
          type: integer
          default: 20
        button_color:
          description: Button color.
          type: string
          default: primary
          maxLength: 20
      required:
        - id
        - order
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    TableElementUpdateElement:
      type: object
      properties:
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        data_source_id:
          description: >-
            The data source we want to show in the element for. Only
            data_sources that return list are allowed.
          type: integer
          nullable: true
        fields:
          type: array
          items:
            $ref: '#/components/schemas/CollectionField'
        items_per_page:
          description: The amount item loaded with each page.
          type: integer
          default: 20
        button_color:
          description: Button color.
          type: string
          default: primary
          maxLength: 20
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
    TableImport:
      type: object
      properties:
        data:
          description: >-
            A list of rows you want to add to the specified table. Each row is a
            list of values, one for each **writable** field. The field values
            must be ordered according to the field order in the table. All
            values must be compatible with the corresponding field type.


            Ex: 

            ```json

            [
              ["row1_field1_value", "row1_field2_value"],
              ["row2_field1_value", "row2_field2_value"],
            ]

            ```

            for adding two rows to a table with two writable fields.
          type: array
          items: {}
          minItems: 1
      required:
        - data
    TableSerializerWithFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        database_id:
          type: integer
          readOnly: true
        fields:
          description: Fields of this table
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowField'
      required:
        - database_id
        - fields
        - id
        - name
        - order
    TableWebhook:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        events:
          description: A list containing the events that will trigger this webhook.
          type: object
          additionalProperties: {}
          readOnly: true
        headers:
          description: >-
            The additional headers as an object where the key is the name and
            the value the value.
          type: object
          additionalProperties: {}
          readOnly: true
        calls:
          description: All the calls that this webhook made.
          type: array
          items:
            $ref: '#/components/schemas/TableWebhookCall'
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        use_user_field_names:
          description: >-
            Indicates whether the field names must be used as payload key
            instead of the id.
          type: boolean
        url:
          description: The URL that must be called when the webhook is triggered.
          type: string
          maxLength: 2000
        request_method:
          $ref: '#/components/schemas/RequestMethodEnum'
        name:
          description: An internal name of the webhook.
          type: string
          maxLength: 255
        include_all_events:
          description: Indicates whether this webhook should listen to all events.
          type: boolean
        failed_triggers:
          description: The amount of failed webhook calls.
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        active:
          description: >-
            Indicates whether the web hook is active. When a webhook has failed
            multiple times, it will automatically be deactivated.
          type: boolean
      required:
        - calls
        - created_on
        - events
        - headers
        - id
        - name
        - updated_on
        - url
      x-konfig-properties:
        request_method:
          description: |-
            The request method that be used when the event occurs.

            * `POST` - Post
            * `GET` - Get
            * `PUT` - Put
            * `PATCH` - Patch
            * `DELETE` - Delete
    TableWebhookCall:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        event_id:
          description: Event ID where the call originated from.
          type: string
          format: uuid
          readOnly: true
        event_type:
          type: string
          maxLength: 50
        called_time:
          type: string
          format: date-time
          nullable: true
        called_url:
          type: string
          maxLength: 2000
        request:
          description: A text copy of the request headers and body.
          type: string
          nullable: true
        response:
          description: A text copy of the response headers and body.
          type: string
          nullable: true
        response_status:
          description: The HTTP response status code.
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        error:
          description: An internal error reflecting what went wrong.
          type: string
          nullable: true
      required:
        - called_url
        - event_id
        - event_type
        - id
    TableWebhookCreateRequest:
      type: object
      properties:
        url:
          description: The URL that must be called when the webhook is triggered.
          type: string
          maxLength: 2000
        include_all_events:
          description: Indicates whether this webhook should listen to all events.
          type: boolean
        events:
          description: A list containing the events that will trigger this webhook.
          type: array
          items:
            $ref: '#/components/schemas/Events3eaEnum'
        request_method:
          $ref: '#/components/schemas/RequestMethodEnum'
        headers:
          description: >-
            The additional headers as an object where the key is the name and
            the value the value.
          type: object
          additionalProperties: {}
        name:
          description: An internal name of the webhook.
          type: string
          maxLength: 255
        use_user_field_names:
          description: >-
            Indicates whether the field names must be used as payload key
            instead of the id.
          type: boolean
      required:
        - name
        - url
      x-konfig-properties:
        request_method:
          description: |-
            The request method that be used when the event occurs.

            * `POST` - Post
            * `GET` - Get
            * `PUT` - Put
            * `PATCH` - Patch
            * `DELETE` - Delete
    TableWebhookTestCallRequest:
      type: object
      properties:
        url:
          description: The URL that must be called when the webhook is triggered.
          type: string
          maxLength: 2000
        event_type:
          $ref: '#/components/schemas/EventTypeEnum'
        request_method:
          $ref: '#/components/schemas/RequestMethodEnum'
        headers:
          description: >-
            The additional headers as an object where the key is the name and
            the value the value.
          type: object
          additionalProperties: {}
        use_user_field_names:
          description: >-
            Indicates whether the field names must be used as payload key
            instead of the id.
          type: boolean
      required:
        - event_type
        - url
      x-konfig-properties:
        event_type:
          description: |-
            The event type that must be used for the test call.

            * `rows.created` - rows.created
            * `row.created` - row.created
            * `rows.updated` - rows.updated
            * `row.updated` - row.updated
            * `rows.deleted` - rows.deleted
            * `row.deleted` - row.deleted
        request_method:
          description: |-
            The request method that be used when the event occurs.

            * `POST` - Post
            * `GET` - Get
            * `PUT` - Put
            * `PATCH` - Patch
            * `DELETE` - Delete
    TableWebhookTestCallResponse:
      type: object
      properties:
        request:
          description: A text copy of the request headers and body.
          type: string
          readOnly: true
        response:
          description: A text copy of the response headers and body.
          type: string
          readOnly: true
        status_code:
          description: The HTTP response status code.
          type: integer
          readOnly: true
        is_unreachable:
          description: Indicates whether the provided URL could be reached.
          type: boolean
          readOnly: true
      required:
        - is_unreachable
        - request
        - response
        - status_code
    TargetEnum:
      description: |-
        * `self` - Self
        * `blank` - Blank
      enum:
        - self
        - blank
      type: string
    Team:
      description: >-
        Mixin to a DRF serializer class to raise an exception if data with
        unknown fields

        is provided to the serializer.
      type: object
      properties:
        name:
          description: A human friendly name for this team.
          type: string
          maxLength: 160
        default_role:
          description: >-
            The uid of the role you want to assign to the team in the given
            workspace. You can omit this property if you want to remove the
            role.
          type: string
          nullable: true
        subjects:
          description: >-
            An array of subject ID/type objects to be used during team create
            and update.
          type: array
          items:
            $ref: '#/components/schemas/TeamSubject'
          default: []
      required:
        - name
    TeamResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          description: A human friendly name for this team.
          type: string
          maxLength: 160
        group:
          description: >-
            DEPRECATED: Please use the functionally identical `workspace`
            instead as this field is being removed in the future.
          type: integer
        workspace:
          description: The workspace that this team belongs to.
          type: integer
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        default_role:
          description: The uid of the role this team has in its workspace.
          type: string
        subject_count:
          description: >-
            The amount of subjects (e.g. users) that are currently assigned to
            this team.
          type: integer
        subject_sample:
          description: >-
            A sample, by default 10, of the most recent subjects to join this
            team.
          type: array
          items:
            $ref: '#/components/schemas/TeamSampleSubject'
      required:
        - created_on
        - group
        - id
        - name
        - subject_count
        - updated_on
        - workspace
    TeamSampleSubject:
      type: object
      properties:
        subject_id:
          description: The subject's unique identifier.
          type: integer
        subject_type:
          $ref: '#/components/schemas/SubjectType3ffEnum'
        subject_label:
          description: The subject's label. Defaults to a user's first name.
          type: string
        team_subject_id:
          description: The team subject unique identifier.
          type: integer
      required:
        - subject_id
        - subject_label
        - subject_type
        - team_subject_id
      x-konfig-properties:
        subject_type:
          description: |-
            The type of subject who belongs to the team.

            * `auth.User` - auth.User
    TeamSubject:
      description: >-
        Mixin to a DRF serializer class to raise an exception if data with
        unknown fields

        is provided to the serializer.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        subject_id:
          description: The subject's unique identifier.
          type: integer
        subject_user_email:
          description: The user subject's email address.
          type: string
          format: email
        subject_type:
          $ref: '#/components/schemas/SubjectType3ffEnum'
      required:
        - id
        - subject_type
      x-konfig-properties:
        subject_type:
          description: |-
            The type of subject that is being invited.

            * `auth.User` - auth.User
    TeamSubjectResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        subject_id:
          description: The unique subject ID.
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        subject_type:
          description: |-
            Returns the TeamSubject's `subject_type` natural key.

            :param obj: The TeamSubject record.
            :return: The subject's content type natural key.
          type: string
          readOnly: true
        team:
          description: The team this subject belongs to.
          type: integer
      required:
        - id
        - subject_id
        - subject_type
        - team
    Template:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 64
        icon:
          description: The icon class name that can be used for displaying purposes.
          type: string
          maxLength: 32
        keywords:
          description: Keywords related to the template that can be used for search.
          type: string
        group_id:
          type: string
          readOnly: true
        workspace_id:
          description: >-
            The group containing the applications related to the template. The
            read endpoints related to that group are publicly accessible for
            preview purposes.
          type: integer
          nullable: true
          readOnly: true
        is_default:
          description: >-
            Indicates if the template must be selected by default. The
            web-frontend automatically selects the first `is_default` template
            that it can find.
          type: string
          readOnly: true
      required:
        - group_id
        - icon
        - id
        - is_default
        - name
        - workspace_id
    TemplateCategories:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 32
        templates:
          type: array
          items:
            $ref: '#/components/schemas/Template'
          readOnly: true
      required:
        - id
        - name
        - templates
    TextElementCreateElement:
      description: >-
        This serializer allow to set the type of an element and the element id
        before which

        we want to insert the new element.
      type: object
      properties:
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        before_id:
          description: >-
            If provided, creates the element before the element with the given
            id.
          type: integer
        type:
          $ref: '#/components/schemas/Type2a6Enum'
        parent_element_id:
          description: >-
            If provided, creates the element as a child of the element with the
            given id.
          type: integer
          nullable: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        value:
          description: The value of the element. Must be a formula.
          type: string
          default: ''
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
        format:
          $ref: '#/components/schemas/FormatEnum'
      required:
        - order
        - type
      x-konfig-properties:
        type:
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `form_container` - form_container
            * `dropdown` - dropdown
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `auth_form` - auth_form
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        format:
          description: |-
            The format of the text

            * `plain` - Plain
            * `markdown` - Markdown
          default: plain
    TextElementElement:
      description: |-
        Basic element serializer mostly for returned values.

        👉 Mind to update the
        baserow.contrib.builder.api.domains.serializer.PublicElementSerializer
        when you update this one.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        value:
          description: The value of the element. Must be a formula.
          type: string
          default: ''
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
        format:
          $ref: '#/components/schemas/FormatEnum'
      required:
        - id
        - order
        - page_id
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        format:
          description: |-
            The format of the text

            * `plain` - Plain
            * `markdown` - Markdown
          default: plain
    TextElementPublicElement:
      description: Basic element serializer mostly for returned values.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          description: The type of the element.
          type: string
          readOnly: true
        order:
          description: Lowest first.
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
        parent_element_id:
          description: The parent element, if inside a container.
          type: integer
          nullable: true
          readOnly: true
        place_in_container:
          description: The place in the container.
          type: string
          nullable: true
          maxLength: 255
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        value:
          description: The value of the element. Must be a formula.
          type: string
          default: ''
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
        format:
          $ref: '#/components/schemas/FormatEnum'
      required:
        - id
        - order
        - parent_element_id
        - type
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        format:
          description: |-
            The format of the text

            * `plain` - Plain
            * `markdown` - Markdown
          default: plain
    TextElementUpdateElement:
      type: object
      properties:
        style_border_top_color:
          description: Top border color.
          type: string
          maxLength: 20
        style_border_top_size:
          description: Pixel height of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_top:
          description: Padding size of the top border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_bottom_color:
          description: Bottom border color
          type: string
          maxLength: 20
        style_border_bottom_size:
          description: Pixel height of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_bottom:
          description: Padding size of the bottom border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_left_color:
          description: Left border color
          type: string
          maxLength: 20
        style_border_left_size:
          description: Pixel height of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_left:
          description: Padding size of the left border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_border_right_color:
          description: Right border color
          type: string
          maxLength: 20
        style_border_right_size:
          description: Pixel height of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_padding_right:
          description: Padding size of the right border.
          type: integer
          maximum: 2147483647
          minimum: 0
        style_background:
          $ref: '#/components/schemas/StyleBackgroundEnum'
        style_background_color:
          description: The background color if `style_background` is color.
          type: string
          maxLength: 20
        style_width:
          $ref: '#/components/schemas/StyleWidthEnum'
        value:
          description: The value of the element. Must be a formula.
          type: string
          default: ''
        alignment:
          $ref: '#/components/schemas/Alignment675Enum'
        format:
          $ref: '#/components/schemas/FormatEnum'
      x-konfig-properties:
        style_background:
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
        style_width:
          description: |-
            Indicates the width of the element.

            * `full` - Full
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        format:
          description: |-
            The format of the text

            * `plain` - Plain
            * `markdown` - Markdown
          default: plain
    TextFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        text_default:
          description: >-
            If set, this value is going to be added every time a new row
            created.
          type: string
          maxLength: 255
      required:
        - name
        - type
    TextFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        text_default:
          description: >-
            If set, this value is going to be added every time a new row
            created.
          type: string
          maxLength: 255
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
    TextFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
        text_default:
          description: >-
            If set, this value is going to be added every time a new row
            created.
          type: string
          maxLength: 255
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
    TextFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
        text_default:
          description: >-
            If set, this value is going to be added every time a new row
            created.
          type: string
          maxLength: 255
    Token:
      description: >-
        A mixin that allows us to rename the `group` field to `workspace` when
        serializing.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          description: The human readable name of the database token for the user.
          type: string
          maxLength: 100
        group:
          type: string
          readOnly: true
        workspace:
          description: Only the tables of the workspace can be accessed.
          type: integer
        key:
          description: >-
            The unique token key that can be used to authorize for the table row
            endpoints.
          type: string
          maxLength: 32
        permissions:
          description: >-
            Indicates per operation which permissions the database token has
            within the whole workspace. If the value of for example `create` is
            `true`, then the token can create rows in all tables related to the
            workspace. If a list is provided with for example `[["table", 1]]`
            then the token only has create permissions for the table with id 1.
            Same goes for if a database references is provided. `[['database',
            1]]` means create permissions for all tables in the database with id
            1.


            Example:

            ```json

            {
              "create": true// Allows creating rows in all tables.
              // Allows reading rows from database 1 and table 10.
              "read": [["database", 1], ["table", 10]],
              "update": false  // Denies updating rows in all tables.
              "delete": []  // Denies deleting rows in all tables.
             }
            ```
          type: object
          properties:
            create:
              anyOf:
                - description: >-
                    Indicating if the database token has permissions to all
                    tables.
                  type: boolean
                  example: true
                - type: array
                  items:
                    type: array
                    minItems: 2
                    maxItems: 2
                    items:
                      anyOf:
                        - description: >-
                            First element should indicate the reference type
                            `database` or `table`.
                          type: string
                          example: database
                        - description: >-
                            Second element should indicate the ID of the
                            reference.
                          type: number
                          example: 1
            read:
              anyOf:
                - description: >-
                    Indicating if the database token has permissions to all
                    tables.
                  type: boolean
                  example: true
                - type: array
                  items:
                    type: array
                    minItems: 2
                    maxItems: 2
                    items:
                      anyOf:
                        - description: >-
                            First element should indicate the reference type
                            `database` or `table`.
                          type: string
                          example: database
                        - description: >-
                            Second element should indicate the ID of the
                            reference.
                          type: number
                          example: 1
            update:
              anyOf:
                - description: >-
                    Indicating if the database token has permissions to all
                    tables.
                  type: boolean
                  example: true
                - type: array
                  items:
                    type: array
                    minItems: 2
                    maxItems: 2
                    items:
                      anyOf:
                        - description: >-
                            First element should indicate the reference type
                            `database` or `table`.
                          type: string
                          example: database
                        - description: >-
                            Second element should indicate the ID of the
                            reference.
                          type: number
                          example: 1
            delete:
              anyOf:
                - description: >-
                    Indicating if the database token has permissions to all
                    tables.
                  type: boolean
                  example: true
                - type: array
                  items:
                    type: array
                    minItems: 2
                    maxItems: 2
                    items:
                      anyOf:
                        - description: >-
                            First element should indicate the reference type
                            `database` or `table`.
                          type: string
                          example: database
                        - description: >-
                            Second element should indicate the ID of the
                            reference.
                          type: number
                          example: 1
      required:
        - group
        - id
        - key
        - name
        - permissions
        - workspace
    TokenBlacklist:
      type: object
      properties:
        refresh:
          type: string
      required:
        - refresh
    TokenCreate:
      description: >-
        A mixin that allows us to rename the `group` field to `workspace` when
        serializing.
      type: object
      properties:
        name:
          description: The human readable name of the database token for the user.
          type: string
          maxLength: 100
        group:
          type: string
          readOnly: true
        workspace:
          description: Only the tables of the workspace can be accessed.
          type: integer
      required:
        - group
        - name
        - workspace
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
        - access
        - password
        - refresh
        - username
    TokenObtainPairWithUser:
      type: object
      properties:
        email:
          type: string
          format: email
        username:
          description: Deprecated. Use `email` instead.
          type: string
          format: email
          deprecated: true
        password:
          type: string
          writeOnly: true
      required:
        - password
    TokenRefreshWithUser:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh_token:
          type: string
        token:
          description: Deprecated. Use `refresh_token` instead.
          type: string
          deprecated: true
      required:
        - access
    TokenVerifyWithUser:
      type: object
      properties:
        token:
          description: Deprecated. Use `refresh_token` instead.
          type: string
          deprecated: true
        refresh_token:
          type: string
      required:
        - refresh_token
    TrashContents:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_who_trashed:
          type: string
          readOnly: true
        trash_item_type:
          description: |-
            If an API consumer hasn't yet adopted the "workspace"
            `trash_item_type`, give them the option to return "group"
            by testing the `respond_with_workspace_rename` querystring.
          type: string
          readOnly: true
        trash_item_id:
          type: integer
          maximum: 2147483647
          minimum: 0
        parent_trash_item_id:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        trashed_at:
          type: string
          format: date-time
          readOnly: true
        application:
          type: integer
          nullable: true
        group:
          type: integer
        workspace:
          type: integer
        name:
          type: string
        names:
          type: array
          items:
            type: string
          nullable: true
        parent_name:
          type: string
          nullable: true
      required:
        - group
        - id
        - name
        - trash_item_id
        - trash_item_type
        - trashed_at
        - user_who_trashed
        - workspace
    TrashItemTypeEnum:
      description: |-
        * `workspace` - workspace
        * `application` - application
        * `group` - group
        * `table` - table
        * `field` - field
        * `row` - row
        * `rows` - rows
        * `view` - view
        * `builder_domain` - builder_domain
        * `row_comment` - row_comment
        * `team` - team
      enum:
        - workspace
        - application
        - group
        - table
        - field
        - row
        - rows
        - view
        - builder_domain
        - row_comment
        - team
      type: string
    TrashStructure:
      type: object
      properties:
        groups:
          description: >-
            An array of group trash structure records. Deprecated, please use
            `workspaces`.
          type: array
          items:
            $ref: '#/components/schemas/TrashStructureGroup'
        workspaces:
          description: An array of workspace trash structure records
          type: array
          items:
            $ref: '#/components/schemas/TrashStructureGroup'
      required:
        - groups
        - workspaces
    TrashStructureApplication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 160
        trashed:
          type: boolean
      required:
        - id
        - name
    TrashStructureGroup:
      type: object
      properties:
        id:
          type: integer
          minimum: 0
        trashed:
          type: boolean
        name:
          type: string
        applications:
          type: array
          items:
            $ref: '#/components/schemas/TrashStructureApplication'
      required:
        - applications
        - id
        - name
        - trashed
    Type0a6Enum:
      description: |-
        * `custom` - custom
        * `sub_domain` - sub_domain
      enum:
        - custom
        - sub_domain
      type: string
    Type2a6Enum:
      description: |-
        * `heading` - heading
        * `text` - text
        * `link` - link
        * `image` - image
        * `input_text` - input_text
        * `column` - column
        * `button` - button
        * `table` - table
        * `form_container` - form_container
        * `dropdown` - dropdown
        * `checkbox` - checkbox
        * `iframe` - iframe
        * `auth_form` - auth_form
      enum:
        - heading
        - text
        - link
        - image
        - input_text
        - column
        - button
        - table
        - form_container
        - dropdown
        - checkbox
        - iframe
        - auth_form
      type: string
    Type5f7Enum:
      description: '* `local_baserow` - local_baserow'
      enum:
        - local_baserow
      type: string
    Type60cEnum:
      description: |-
        * `notification` - notification
        * `open_page` - open_page
        * `create_row` - create_row
        * `update_row` - update_row
        * `logout` - logout
      enum:
        - notification
        - open_page
        - create_row
        - update_row
        - logout
      type: string
    Type880Enum:
      description: |-
        * `equal` - equal
        * `not_equal` - not_equal
        * `filename_contains` - filename_contains
        * `files_lower_than` - files_lower_than
        * `has_file_type` - has_file_type
        * `contains` - contains
        * `contains_not` - contains_not
        * `contains_word` - contains_word
        * `doesnt_contain_word` - doesnt_contain_word
        * `length_is_lower_than` - length_is_lower_than
        * `higher_than` - higher_than
        * `lower_than` - lower_than
        * `is_even_and_whole` - is_even_and_whole
        * `date_equal` - date_equal
        * `date_before` - date_before
        * `date_before_or_equal` - date_before_or_equal
        * `date_after_days_ago` - date_after_days_ago
        * `date_after` - date_after
        * `date_after_or_equal` - date_after_or_equal
        * `date_not_equal` - date_not_equal
        * `date_equals_today` - date_equals_today
        * `date_before_today` - date_before_today
        * `date_after_today` - date_after_today
        * `date_within_days` - date_within_days
        * `date_within_weeks` - date_within_weeks
        * `date_within_months` - date_within_months
        * `date_equals_days_ago` - date_equals_days_ago
        * `date_equals_months_ago` - date_equals_months_ago
        * `date_equals_years_ago` - date_equals_years_ago
        * `date_equals_week` - date_equals_week
        * `date_equals_month` - date_equals_month
        * `date_equals_day_of_month` - date_equals_day_of_month
        * `date_equals_year` - date_equals_year
        * `single_select_equal` - single_select_equal
        * `single_select_not_equal` - single_select_not_equal
        * `link_row_has` - link_row_has
        * `link_row_has_not` - link_row_has_not
        * `link_row_contains` - link_row_contains
        * `link_row_not_contains` - link_row_not_contains
        * `boolean` - boolean
        * `empty` - empty
        * `not_empty` - not_empty
        * `multiple_select_has` - multiple_select_has
        * `multiple_select_has_not` - multiple_select_has_not
        * `multiple_collaborators_has` - multiple_collaborators_has
        * `multiple_collaborators_has_not` - multiple_collaborators_has_not
        * `user_is` - user_is
        * `user_is_not` - user_is_not
      enum:
        - equal
        - not_equal
        - filename_contains
        - files_lower_than
        - has_file_type
        - contains
        - contains_not
        - contains_word
        - doesnt_contain_word
        - length_is_lower_than
        - higher_than
        - lower_than
        - is_even_and_whole
        - date_equal
        - date_before
        - date_before_or_equal
        - date_after_days_ago
        - date_after
        - date_after_or_equal
        - date_not_equal
        - date_equals_today
        - date_before_today
        - date_after_today
        - date_within_days
        - date_within_weeks
        - date_within_months
        - date_equals_days_ago
        - date_equals_months_ago
        - date_equals_years_ago
        - date_equals_week
        - date_equals_month
        - date_equals_day_of_month
        - date_equals_year
        - single_select_equal
        - single_select_not_equal
        - link_row_has
        - link_row_has_not
        - link_row_contains
        - link_row_not_contains
        - boolean
        - empty
        - not_empty
        - multiple_select_has
        - multiple_select_has_not
        - multiple_collaborators_has
        - multiple_collaborators_has_not
        - user_is
        - user_is_not
      type: string
    TypeC03Enum:
      description: |-
        * `local_baserow_get_row` - local_baserow_get_row
        * `local_baserow_list_rows` - local_baserow_list_rows
        * `local_baserow_upsert_row` - local_baserow_upsert_row
      enum:
        - local_baserow_get_row
        - local_baserow_list_rows
        - local_baserow_upsert_row
      type: string
    TypeC5eEnum:
      description: |-
        * `duplicate_application` - duplicate_application
        * `install_template` - install_template
        * `create_snapshot` - create_snapshot
        * `restore_snapshot` - restore_snapshot
        * `airtable` - airtable
        * `file_import` - file_import
        * `duplicate_table` - duplicate_table
        * `duplicate_field` - duplicate_field
        * `duplicate_page` - duplicate_page
        * `publish_domain` - publish_domain
        * `audit_log_export` - audit_log_export
      enum:
        - duplicate_application
        - install_template
        - create_snapshot
        - restore_snapshot
        - airtable
        - file_import
        - duplicate_table
        - duplicate_field
        - duplicate_page
        - publish_domain
        - audit_log_export
      type: string
    TypeD64Enum:
      description: |-
        * `text` - text
        * `long_text` - long_text
        * `url` - url
        * `email` - email
        * `number` - number
        * `rating` - rating
        * `boolean` - boolean
        * `date` - date
        * `last_modified` - last_modified
        * `last_modified_by` - last_modified_by
        * `created_on` - created_on
        * `created_by` - created_by
        * `duration` - duration
        * `link_row` - link_row
        * `file` - file
        * `single_select` - single_select
        * `multiple_select` - multiple_select
        * `phone_number` - phone_number
        * `formula` - formula
        * `count` - count
        * `rollup` - rollup
        * `lookup` - lookup
        * `multiple_collaborators` - multiple_collaborators
        * `uuid` - uuid
        * `autonumber` - autonumber
        * `password` - password
      enum:
        - text
        - long_text
        - url
        - email
        - number
        - rating
        - boolean
        - date
        - last_modified
        - last_modified_by
        - created_on
        - created_by
        - duration
        - link_row
        - file
        - single_select
        - multiple_select
        - phone_number
        - formula
        - count
        - rollup
        - lookup
        - multiple_collaborators
        - uuid
        - autonumber
        - password
      type: string
    TypeF4fEnum:
      description: |-
        * `database` - database
        * `builder` - builder
      enum:
        - database
        - builder
      type: string
    TypeFc4Enum:
      description: |-
        * `left_border_color` - left_border_color
        * `background_color` - background_color
      enum:
        - left_border_color
        - background_color
      type: string
    TypeFormulaRequest:
      type: object
      properties:
        formula:
          type: string
        name:
          type: string
          maxLength: 255
      required:
        - formula
        - name
    TypeFormulaResult:
      type: object
      properties:
        date_time_format:
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateTimeFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          description: Indicates if the field also includes a time.
          type: boolean
          nullable: true
        array_formula_type:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
            - $ref: '#/components/schemas/NullEnum'
        duration_format:
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DurationFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        date_force_timezone:
          description: Force a timezone for the field overriding user profile settings.
          type: string
          nullable: true
          maxLength: 255
        date_format:
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/DateFormatEnum'
            - $ref: '#/components/schemas/NullEnum'
        number_decimal_places:
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          nullable: true
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
            - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
            - $ref: '#/components/schemas/NullEnum'
        nullable:
          type: boolean
        error:
          type: string
          nullable: true
        date_show_tzinfo:
          description: Indicates if the time zone should be shown.
          type: boolean
          nullable: true
        formula:
          type: string
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
        - formula
        - nullable
    URLFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
      required:
        - name
        - type
    URLFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
    URLFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
    URLFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
    UUIDFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
      required:
        - name
        - type
    UUIDFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - table_id
        - type
    UUIDFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          description: Lowest first.
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          description: The type of the related field.
          type: string
          readOnly: true
        primary:
          description: >-
            Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
          type: boolean
        read_only:
          description: >-
            Indicates whether the field is a read only field. If true, it's not
            possible to update the cell value.
          type: boolean
          readOnly: true
        related_fields:
          description: A list of related fields which also changed.
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
      required:
        - id
        - name
        - order
        - read_only
        - related_fields
        - table_id
        - type
    UUIDFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeD64Enum'
    UndoRedoAction:
      type: object
      properties:
        action_type:
          description: >-
            If an action was undone/redone/skipped due to an error this field
            will contain the type of the action that was undone/redone.
          type: string
          nullable: true
        action_scope:
          description: >-
            If an action was undone/redone/skipped due to an error this field
            will contain the scope of the action that was undone/redone.
          type: string
          nullable: true
    UndoRedoResponse:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/UndoRedoAction'
        result_code:
          description: >-
            Indicates the result of the undo/redo operation. Will be 'SUCCESS'
            on success, 'NOTHING_TO_DO' when there is no action to undo/redo and
            'SKIPPED_DUE_TO_ERROR' when the undo/redo failed due to a conflict
            or error and was skipped over.
          type: string
      required:
        - actions
        - result_code
    UniqueRowValues:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
      required:
        - values
    User:
      type: object
      properties:
        username:
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          type: string
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
        - username
    UserAdminCreate:
      description: >-
        Serializes a request body for creating a new user. Do not use for
        returning user

        data as the password will be returned also.
      type: object
      properties:
        username:
          type: string
          format: email
        name:
          type: string
          maxLength: 150
        is_active:
          title: Active
          description: >-
            Designates whether this user should be treated as active. Set this
            to false instead of deleting accounts.
          type: boolean
        is_staff:
          title: Staff status
          description: >-
            Designates whether this user is an admin and has access to all
            workspaces and Baserow's admin areas. 
          type: boolean
        password:
          type: string
      required:
        - name
        - password
        - username
    UserAdminGroups:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        permissions:
          description: The permissions that the user has within the workspace.
          type: string
          maxLength: 32
      required:
        - id
        - name
    UserAdminResponse:
      description: >-
        Serializes the safe user attributes to expose for a response back to the
        user.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          format: email
        name:
          type: string
          maxLength: 150
        groups:
          type: array
          items:
            $ref: '#/components/schemas/UserAdminGroups'
        workspaces:
          type: array
          items:
            $ref: '#/components/schemas/UserAdminGroups'
        last_login:
          type: string
          format: date-time
          nullable: true
        date_joined:
          type: string
          format: date-time
        is_active:
          title: Active
          description: >-
            Designates whether this user should be treated as active. Set this
            to false instead of deleting accounts.
          type: boolean
        is_staff:
          title: Staff status
          description: >-
            Designates whether this user is an admin and has access to all
            workspaces and Baserow's admin areas. 
          type: boolean
      required:
        - groups
        - id
        - name
        - username
        - workspaces
    UserFile:
      type: object
      properties:
        size:
          type: integer
          maximum: 2147483647
          minimum: 0
        mime_type:
          type: string
          maxLength: 127
        is_image:
          type: boolean
        image_width:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        image_height:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        thumbnails:
          type: object
          additionalProperties: {}
          readOnly: true
        name:
          type: string
          readOnly: true
        original_name:
          type: string
          maxLength: 255
      required:
        - name
        - original_name
        - size
        - thumbnails
        - uploaded_at
        - url
    UserFileUploadViaURLRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
      required:
        - url
    UserSourceUser:
      description: A serializer used to serialize a UserSourceUser object.
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
          format: email
        user_source_id:
          type: integer
      required:
        - email
        - id
        - user_source_id
        - username
    UserWorkspaceInvitation:
      description: >-
        This serializer is used for displaying the invitation to the user that
        doesn't

        have access to the workspace yet, so not for invitation management
        purposes.
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        invited_by:
          type: string
          readOnly: true
        group:
          type: string
          readOnly: true
        workspace:
          type: string
          readOnly: true
        email:
          description: >-
            The email address of the user that the invitation is meant for. Only
            a user with that email address can accept it.
          type: string
          format: email
          maxLength: 254
        message:
          description: >-
            An optional message that the invitor can provide. This will be
            visible to the receiver of the invitation.
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        email_exists:
          type: boolean
          readOnly: true
      required:
        - created_on
        - email
        - email_exists
        - group
        - id
        - invited_by
        - message
        - workspace
    User_SourceBasePublicUserSource:
      oneOf:
        - $ref: '#/components/schemas/LocalBaserowUserSourceBasePublicUserSource'
      discriminator:
        propertyName: type
        mapping:
          local_baserow: '#/components/schemas/LocalBaserowUserSourceBasePublicUserSource'
    User_SourceCreateUserSource:
      oneOf:
        - $ref: '#/components/schemas/LocalBaserowUserSourceCreateUserSource'
      discriminator:
        propertyName: type
        mapping:
          local_baserow: '#/components/schemas/LocalBaserowUserSourceCreateUserSource'
    User_SourceUserSource:
      oneOf:
        - $ref: '#/components/schemas/LocalBaserowUserSourceUserSource'
      discriminator:
        propertyName: type
        mapping:
          local_baserow: '#/components/schemas/LocalBaserowUserSourceUserSource'
    UsersPerUserSource:
      description: The response of the list user source users endpoint.
      type: object
      properties:
        users_per_user_sources:
          description: >-
            An object keyed by the id of the user source and the value being the
            list of users for this user source.
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/UserSourceUser'
      required:
        - users_per_user_sources
    ValueProviderTypeEnum:
      description: |-
        * `` - 
        * `single_select_color` - single_select_color
        * `conditional_color` - conditional_color
      enum:
        - single_select_color
        - conditional_color
      type: string
    VariantEnum:
      description: |-
        * `link` - Link
        * `button` - Button
      enum:
        - link
        - button
      type: string
    View:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          $ref: '#/components/schemas/Table'
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilter'
        filter_groups:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilterGroup'
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/ViewSort'
        group_bys:
          type: array
          items:
            $ref: '#/components/schemas/ViewGroupBy'
        decorations:
          type: array
          items:
            $ref: '#/components/schemas/ViewDecoration'
        filters_disabled:
          description: >-
            Allows users to see results unfiltered while still keeping the
            filters saved for the view.
          type: boolean
        public_view_has_password:
          description: >-
            Indicates whether the public view is password protected or not.


            :return: True if the public view is password protected, False
            otherwise.
          type: boolean
          readOnly: true
        show_logo:
          type: boolean
        ownership_type:
          type: string
        owned_by_id:
          type: integer
      required:
        - id
        - name
        - order
        - ownership_type
        - public_view_has_password
        - table
        - table_id
        - type
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    ViewCreateView:
      oneOf:
        - $ref: '#/components/schemas/GridViewCreateView'
        - $ref: '#/components/schemas/GalleryViewCreateView'
        - $ref: '#/components/schemas/FormViewCreateView'
        - $ref: '#/components/schemas/KanbanViewCreateView'
        - $ref: '#/components/schemas/CalendarViewCreateView'
      discriminator:
        propertyName: type
        mapping:
          grid: '#/components/schemas/GridViewCreateView'
          gallery: '#/components/schemas/GalleryViewCreateView'
          form: '#/components/schemas/FormViewCreateView'
          kanban: '#/components/schemas/KanbanViewCreateView'
          calendar: '#/components/schemas/CalendarViewCreateView'
    ViewDecoration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          description: >-
            The view to which the decoration applies. Each view can have his own
            decorations.
          type: integer
        type:
          description: >-
            The decorator type. This is then interpreted by the frontend to
            display the decoration.
          type: string
          maxLength: 255
        value_provider_type:
          description: The value provider type that gives the value to the decorator.
          type: string
          maxLength: 255
        value_provider_conf:
          description: The configuration consumed by the value provider.
          type: object
          additionalProperties: {}
        order:
          description: >-
            The position of the decorator has within the view, lowest first. If
            there is another decorator with the same order value then the
            decorator with the lowest id must be shown first.
          type: integer
          maximum: 32767
          minimum: -32768
      required:
        - id
    ViewFieldOptions:
      anyOf:
        - $ref: '#/components/schemas/grid_view_field_options'
        - $ref: '#/components/schemas/gallery_view_field_options'
        - $ref: '#/components/schemas/form_view_field_options'
        - $ref: '#/components/schemas/kanban_view_field_options'
        - $ref: '#/components/schemas/calendar_view_field_options'
    ViewFilter:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          description: >-
            The view to which the filter applies. Each view can have his own
            filters.
          type: integer
        field:
          description: The field of which the value must be compared to the filter value.
          type: integer
        type:
          description: >-
            Indicates how the field's value must be compared to the filter's
            value. The filter is always in this order `field` `type` `value`
            (example: `field_1` `contains` `Test`).
          type: string
          maxLength: 48
        value:
          description: The filter value that must be compared to the field's value.
          type: string
          maxLength: 255
        preload_values:
          description: >-
            Can contain unique preloaded values per filter. This is for example
            used by the `link_row_has` filter to communicate the display name if
            a value is provided.
          type: object
          additionalProperties: {}
          readOnly: true
        group:
          description: >-
            The id of the filter group this filter belongs to. If this is null,
            the filter is not part of a filter group.
          type: integer
          nullable: true
      required:
        - field
        - id
        - preload_values
        - type
        - view
    ViewFilterGroup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        view:
          description: >-
            The view to which the filter group applies to. Each view can have
            its own filter groups.
          type: integer
      required:
        - id
        - view
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR) in the group to be shown.


            * `AND` - And

            * `OR` - Or
    ViewGroupBy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          description: >-
            The view to which the group by applies. Each view can have his own
            group bys.
          type: integer
        field:
          description: The field that must be grouped by.
          type: integer
        order:
          $ref: '#/components/schemas/OrderEnum'
        width:
          description: The pixel width of the group by in the related view.
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
        - field
        - id
        - view
      x-konfig-properties:
        order:
          description: >-
            Indicates the sort order direction. ASC (Ascending) is from A to Z
            and DESC (Descending) is from Z to A.


            * `ASC` - Ascending

            * `DESC` - Descending
    ViewSort:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          description: >-
            The view to which the sort applies. Each view can have his own
            sortings.
          type: integer
        field:
          description: The field that must be sorted on.
          type: integer
        order:
          $ref: '#/components/schemas/OrderEnum'
      required:
        - field
        - id
        - view
      x-konfig-properties:
        order:
          description: >-
            Indicates the sort order direction. ASC (Ascending) is from A to Z
            and DESC (Descending) is from Z to A.


            * `ASC` - Ascending

            * `DESC` - Descending
    ViewTypesEnum:
      description: |-
        * `grid` - grid
        * `gallery` - gallery
        * `form` - form
        * `kanban` - kanban
        * `calendar` - calendar
      enum:
        - grid
        - gallery
        - form
        - kanban
        - calendar
      type: string
    ViewView:
      oneOf:
        - $ref: '#/components/schemas/GridViewView'
        - $ref: '#/components/schemas/GalleryViewView'
        - $ref: '#/components/schemas/FormViewView'
        - $ref: '#/components/schemas/KanbanViewView'
        - $ref: '#/components/schemas/CalendarViewView'
      discriminator:
        propertyName: type
        mapping:
          grid: '#/components/schemas/GridViewView'
          gallery: '#/components/schemas/GalleryViewView'
          form: '#/components/schemas/FormViewView'
          kanban: '#/components/schemas/KanbanViewView'
          calendar: '#/components/schemas/CalendarViewView'
    WidthEnum:
      description: |-
        * `auto` - Auto
        * `full` - Full
      enum:
        - auto
        - full
      type: string
    Workspace:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 165
      required:
        - id
        - name
    WorkspaceAdminUsers:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        permissions:
          description: The permissions that the user has within the workspace.
          type: string
          maxLength: 32
      required:
        - email
        - id
    WorkspaceInvitation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        group:
          description: >-
            DEPRECATED: Please use the functionally identical `workspace`
            instead as this field is being removed in the future.
          type: integer
        workspace:
          description: >-
            The workspace that the user will get access to once the invitation
            is accepted.
          type: integer
        email:
          description: >-
            The email address of the user that the invitation is meant for. Only
            a user with that email address can accept it.
          type: string
          format: email
          maxLength: 254
        permissions:
          description: >-
            The permissions that the user is going to get within the workspace
            after accepting the invitation.
          type: string
          maxLength: 32
        message:
          description: >-
            An optional message that the invitor can provide. This will be
            visible to the receiver of the invitation.
          type: string
          maxLength: 250
        created_on:
          type: string
          format: date-time
          readOnly: true
      required:
        - created_on
        - email
        - group
        - id
        - workspace
    WorkspaceUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          description: User defined name.
          type: string
          readOnly: true
        email:
          description: User email.
          type: string
          readOnly: true
        group:
          description: >-
            DEPRECATED: Please use the functionally identical `workspace`
            instead as this field is being removed in the future.
          type: integer
        workspace:
          description: The workspace that the user has access to.
          type: integer
        permissions:
          description: The permissions that the user has within the workspace.
          type: string
          maxLength: 32
        created_on:
          type: string
          format: date-time
          readOnly: true
        user_id:
          description: The user that has access to the workspace.
          type: integer
          readOnly: true
        to_be_deleted:
          description: True if user account is pending deletion.
          type: boolean
      required:
        - created_on
        - email
        - group
        - id
        - name
        - to_be_deleted
        - user_id
        - workspace
    WorkspaceUserEnterpriseTeam:
      description: A serializer for the `WorkspaceUserSerializer.teams` field.
      type: object
      properties:
        id:
          description: The unique identifier for this team.
          type: integer
          readOnly: true
        name:
          description: The team name that this group user belongs to.
          type: string
          readOnly: true
      required:
        - id
        - name
    WorkspaceUserWorkspace:
      description: >-
        This serializers includes relevant fields of the Workspace model, but
        also

        some WorkspaceUser specific fields related to the workspace user
        relation.


        Additionally, the list of users are included for each workspace.
      type: object
      properties:
        id:
          description: Workspace id.
          type: integer
          readOnly: true
        name:
          description: Workspace name.
          type: string
          readOnly: true
        users:
          description: List of all workspace users.
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceUser'
          readOnly: true
        order:
          description: The requesting user's order within the workspace users.
          type: integer
          readOnly: true
        permissions:
          description: The requesting user's permissions for the workspace.
          type: string
          readOnly: true
        unread_notifications_count:
          description: The number of unread notifications for the requesting user.
          type: integer
          readOnly: true
      required:
        - id
        - name
        - order
        - permissions
        - unread_notifications_count
        - users
    WorkspacesAdminResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 165
        users:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceAdminUsers'
        application_count:
          type: integer
        row_count:
          type: integer
          readOnly: true
        storage_usage:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        seats_taken:
          type: integer
        free_users:
          type: integer
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
      required:
        - application_count
        - created_on
        - free_users
        - id
        - name
        - row_count
        - seats_taken
        - users
    calendar_view_field_options:
      type: object
      properties:
        field_options:
          description: >-
            An object containing the field id as key and the properties related
            to view as value.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CalendarViewFieldOptions'
      required:
        - field_options
    calendar_view_update:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        filters_disabled:
          description: >-
            Allows users to see results unfiltered while still keeping the
            filters saved for the view.
          type: boolean
        public_view_password:
          description: >-
            The new password or an empty string to remove any previous password
            from the view and make it publicly accessible again.
          type: string
          maxLength: 256
          minLength: 8
        ownership_type:
          description: >-
            Indicates how the access to the view is determined. By default,
            views are collaborative and shared for all users that have access to
            the table.
          type: string
          maxLength: 255
        date_field:
          type: integer
          nullable: true
        public:
          description: Indicates whether the view is publicly accessible to visitors.
          type: boolean
        slug:
          description: The unique slug that can be used to construct a public URL.
          type: string
          readOnly: true
      required:
        - slug
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    form_view_field_options:
      type: object
      properties:
        field_options:
          description: >-
            An object containing the field id as key and the properties related
            to view as value.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FormViewFieldOptions'
      required:
        - field_options
    form_view_update:
      type: object
      properties:
        title:
          description: The title that is displayed at the beginning of the form.
          type: string
        description:
          description: The description that is displayed at the beginning of the form.
          type: string
        name:
          type: string
          maxLength: 255
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        filters_disabled:
          description: >-
            Allows users to see results unfiltered while still keeping the
            filters saved for the view.
          type: boolean
        public_view_password:
          description: >-
            The new password or an empty string to remove any previous password
            from the view and make it publicly accessible again.
          type: string
          maxLength: 256
          minLength: 8
        ownership_type:
          description: >-
            Indicates how the access to the view is determined. By default,
            views are collaborative and shared for all users that have access to
            the table.
          type: string
          maxLength: 255
        mode:
          $ref: '#/components/schemas/ModeC5eEnum'
        cover_image:
          description: The cover image that must be displayed at the top of the form.
          allOf:
            - $ref: '#/components/schemas/UserFile'
          nullable: true
        logo_image:
          description: The logo image that must be displayed at the top of the form.
          allOf:
            - $ref: '#/components/schemas/UserFile'
          nullable: true
        submit_text:
          description: The text displayed on the submit button.
          type: string
        submit_action:
          $ref: '#/components/schemas/SubmitActionEnum'
        submit_action_message:
          description: >-
            If the `submit_action` is MESSAGE, then this message will be shown
            to the visitor after submitting the form.
          type: string
        submit_action_redirect_url:
          description: >-
            If the `submit_action` is REDIRECT,then the visitors will be
            redirected to the this URL after submitting the form.
          type: string
          format: uri
          maxLength: 200
        receive_notification_on_submit:
          description: >-
            A boolean indicating if the current user should be notified when the
            form is submitted.
          type: boolean
          readOnly: true
        public:
          description: Indicates whether the view is publicly accessible to visitors.
          type: boolean
        slug:
          description: The unique slug that can be used to construct a public URL.
          type: string
          readOnly: true
      required:
        - receive_notification_on_submit
        - slug
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
        mode:
          description: |-
            Configurable mode of the form.

            * `form` - form
            * `survey` - survey
        submit_action:
          description: >-
            The action that must be performed after the visitor has filled out
            the form.


            * `MESSAGE` - Message

            * `REDIRECT` - Redirect
    gallery_view_field_options:
      type: object
      properties:
        field_options:
          description: >-
            An object containing the field id as key and the properties related
            to view as value.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GalleryViewFieldOptions'
      required:
        - field_options
    gallery_view_update:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        filters_disabled:
          description: >-
            Allows users to see results unfiltered while still keeping the
            filters saved for the view.
          type: boolean
        public_view_password:
          description: >-
            The new password or an empty string to remove any previous password
            from the view and make it publicly accessible again.
          type: string
          maxLength: 256
          minLength: 8
        ownership_type:
          description: >-
            Indicates how the access to the view is determined. By default,
            views are collaborative and shared for all users that have access to
            the table.
          type: string
          maxLength: 255
        card_cover_image_field:
          description: >-
            References a file field of which the first image must be shown as
            card cover image.
          type: integer
          nullable: true
        public:
          description: Indicates whether the view is publicly accessible to visitors.
          type: boolean
        slug:
          description: The unique slug that can be used to construct a public URL.
          type: string
          readOnly: true
      required:
        - slug
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    grid_view_field_options:
      type: object
      properties:
        field_options:
          description: >-
            An object containing the field id as key and the properties related
            to view as value.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GridViewFieldOptions'
      required:
        - field_options
    grid_view_update:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        filters_disabled:
          description: >-
            Allows users to see results unfiltered while still keeping the
            filters saved for the view.
          type: boolean
        public_view_password:
          description: >-
            The new password or an empty string to remove any previous password
            from the view and make it publicly accessible again.
          type: string
          maxLength: 256
          minLength: 8
        ownership_type:
          description: >-
            Indicates how the access to the view is determined. By default,
            views are collaborative and shared for all users that have access to
            the table.
          type: string
          maxLength: 255
        row_identifier_type:
          $ref: '#/components/schemas/RowIdentifierTypeEnum'
        public:
          description: Indicates whether the view is publicly accessible to visitors.
          type: boolean
        slug:
          description: The unique slug that can be used to construct a public URL.
          type: string
          readOnly: true
      required:
        - slug
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    kanban_view_field_options:
      type: object
      properties:
        field_options:
          description: >-
            An object containing the field id as key and the properties related
            to view as value.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/KanbanViewFieldOptions'
      required:
        - field_options
    kanban_view_update:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        filter_type:
          $ref: '#/components/schemas/ConditionTypeEnum'
        filters_disabled:
          description: >-
            Allows users to see results unfiltered while still keeping the
            filters saved for the view.
          type: boolean
        public_view_password:
          description: >-
            The new password or an empty string to remove any previous password
            from the view and make it publicly accessible again.
          type: string
          maxLength: 256
          minLength: 8
        ownership_type:
          description: >-
            Indicates how the access to the view is determined. By default,
            views are collaborative and shared for all users that have access to
            the table.
          type: string
          maxLength: 255
        single_select_field:
          type: integer
          nullable: true
        card_cover_image_field:
          description: >-
            References a file field of which the first image must be shown as
            card cover image.
          type: integer
          nullable: true
        public:
          description: Indicates whether the view is publicly accessible to visitors.
          type: boolean
        slug:
          description: The unique slug that can be used to construct a public URL.
          type: string
          readOnly: true
      required:
        - slug
      x-konfig-properties:
        filter_type:
          description: >-
            Indicates whether all the rows should apply to all filters (AND) or
            to any filter (OR).


            * `AND` - And

            * `OR` - Or
    public_Builder_Workflow_Action_TypeBuilderWorkflowAction:
      oneOf:
        - $ref: '#/components/schemas/PublicNone'
        - $ref: '#/components/schemas/PublicNone'
        - $ref: '#/components/schemas/PublicNone'
        - $ref: '#/components/schemas/PublicNone'
        - $ref: '#/components/schemas/PublicNone'
      discriminator:
        propertyName: type
        mapping:
          public_notification: '#/components/schemas/PublicNone'
          public_open_page: '#/components/schemas/PublicNone'
          public_create_row: '#/components/schemas/PublicNone'
          public_update_row: '#/components/schemas/PublicNone'
          public_logout: '#/components/schemas/PublicNone'
    DatabaseTableViewsSetPremiumAttributesResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_FEATURE_NOT_AVAILABLE
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_CANNOT_UPDATE_PREMIUM_ATTRIBUTES_ON_TEMPLATE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsSetPremiumAttributes404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UserSourcesForceTokenAuthResponse:
      type: object
      properties:
        access_token:
          description: >-
            'access_token' can be used to authorize for other endpoints that
            require authorization. This token will be valid for 10 minutes.
          type: string
        refresh_token:
          description: >-
            'refresh_token' can be used to get a new valid 'access_token'. This
            token will be valid for 168 hours.
          type: string
    UserSourcesForceTokenAuth401Response:
      type: object
      properties: {}
      example: {}
    UserSourcesAuthenticateUserWithTokenResponse:
      type: object
      properties:
        access_token:
          description: >-
            'access_token' can be used to authorize for other endpoints that
            require authorization. This token will be valid for 10 minutes.
          type: string
        refresh_token:
          description: >-
            'refresh_token' can be used to get a new valid 'access_token'. This
            token will be valid for 168 hours.
          type: string
    UserSourcesAuthenticateUserWithToken401Response:
      type: object
      properties: {}
      example: {}
    EmailTester400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AuditLogListEntriesForWorkspaceResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_SIZE_LIMIT
            - ERROR_INVALID_PAGE
            - ERROR_INVALID_SORT_DIRECTION
            - ERROR_INVALID_SORT_ATTRIBUTE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AuditLogListActionTypesResponse:
      type: array
      items:
        $ref: '#/components/schemas/AuditLogActionType'
    AuditLogListActionTypes400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_SIZE_LIMIT
            - ERROR_INVALID_PAGE
            - ERROR_INVALID_SORT_DIRECTION
            - ERROR_INVALID_SORT_ATTRIBUTE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AuditLogCreateExportJobResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_MAX_JOB_COUNT_EXCEEDED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AuditLogCreateExportJob404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AuditLogListUsersResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_SIZE_LIMIT
            - ERROR_INVALID_PAGE
            - ERROR_INVALID_SORT_DIRECTION
            - ERROR_INVALID_SORT_ATTRIBUTE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AuditLogListDistinctWorkspaceNamesResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_SIZE_LIMIT
            - ERROR_INVALID_PAGE
            - ERROR_INVALID_SORT_DIRECTION
            - ERROR_INVALID_SORT_ATTRIBUTE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AuthListProvidersResponse:
      type: array
      items:
        $ref: '#/components/schemas/Authentication_ProviderAuthProvider'
    AuthRegisterAuthProviderResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AuthDeleteAuthProviderResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_AUTH_PROVIDER_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AuthGetAuthProviderResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_AUTH_PROVIDER_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AuthUpdateAuthProviderResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AuthUpdateAuthProvider404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_AUTH_PROVIDER_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminGetAllGroupsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_SIZE_LIMIT
            - ERROR_INVALID_PAGE
            - ERROR_INVALID_SORT_DIRECTION
            - ERROR_INVALID_SORT_ATTRIBUTE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminDeleteGroupResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
            - ERROR_FEATURE_NOT_AVAILABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminGetUsersDetailResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_SIZE_LIMIT
            - ERROR_INVALID_PAGE
            - ERROR_INVALID_SORT_DIRECTION
            - ERROR_INVALID_SORT_ATTRIBUTE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminCreateNewUserResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_FEATURE_NOT_AVAILABLE
            - USER_ADMIN_ALREADY_EXISTS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminDeleteUserPremiumResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - USER_ADMIN_CANNOT_DELETE_SELF
            - USER_ADMIN_UNKNOWN_USER
            - ERROR_FEATURE_NOT_AVAILABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminUpdateUserAttributesResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
            - USER_ADMIN_CANNOT_DEACTIVATE_SELF
            - USER_ADMIN_UNKNOWN_USER
            - USER_ADMIN_ALREADY_EXISTS
            - ERROR_FEATURE_NOT_AVAILABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminImpersonateUserResponse:
      type: object
      properties:
        user:
          description: An object containing information related to the user.
          type: object
          properties:
            first_name:
              description: The first name of related user.
              type: string
            username:
              description: >-
                The username of the related user. This is always an email
                address.
              type: string
              format: email
            language:
              description: >-
                An ISO 639 language code (with optional variant) selected by the
                user. Ex: en-GB.
              type: string
        token:
          description: Deprecated. Use the `access_token` instead.
          type: string
          deprecated: true
        access_token:
          description: >-
            'access_token' can be used to authorize for other endpoints that
            require authorization. This token will be valid for 10 minutes.
          type: string
    AdminGetWorkspaceDetailsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_SIZE_LIMIT
            - ERROR_INVALID_PAGE
            - ERROR_INVALID_SORT_DIRECTION
            - ERROR_INVALID_SORT_ATTRIBUTE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminDeleteWorkspaceAndApplicationsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
            - ERROR_FEATURE_NOT_AVAILABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    IntegrationsListApplicationIntegrationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/IntegrationIntegration'
    IntegrationsListApplicationIntegrations404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    IntegrationsCreateNewIntegrationResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    IntegrationsCreateNewIntegration404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UserSourcesListAvailableUsersResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UserSourcesListResponse:
      type: array
      items:
        $ref: '#/components/schemas/User_SourceUserSource'
    UserSourcesList404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UserSourcesCreateNewUserSourceResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UserSourcesCreateNewUserSource404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ApplicationsListUserApplicationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationApplication'
    ApplicationsListUserApplications400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DeleteApplicationResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DeleteApplication404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ApplicationsGetApplicationByIdResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ApplicationsGetApplicationById404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UpdateApplicationResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UpdateApplication404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ApplicationsDuplicateAsyncResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_APPLICATION_NOT_IN_GROUP
            - ERROR_MAX_JOB_COUNT_EXCEEDED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ApplicationsDuplicateAsync404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ApplicationsListGroupApplicationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationApplication'
    ApplicationsListGroupApplications400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ApplicationsListGroupApplications404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ApplicationsCreateGroupApplicationResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ApplicationsCreateGroupApplication404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ApplicationsChangeOrderOfGroupApplicationsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_APPLICATION_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ApplicationsChangeOrderOfGroupApplications404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ApplicationsListUserApplications200Response:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationApplication'
    ApplicationsListUserApplications404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ApplicationsCreateApplicationInWorkspaceResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ApplicationsCreateApplicationInWorkspace404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ApplicationsChangeApplicationOrderResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_APPLICATION_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ApplicationsChangeApplicationOrder404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AuditLogListEntriesResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_SIZE_LIMIT
            - ERROR_INVALID_PAGE
            - ERROR_INVALID_SORT_DIRECTION
            - ERROR_INVALID_SORT_ATTRIBUTE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AuditLogListActionTypes200Response:
      type: array
      items:
        $ref: '#/components/schemas/AuditLogActionType'
    AuditLogExportJobResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_MAX_JOB_COUNT_EXCEEDED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AuditLogExportJob404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AuditLogListUsers400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_SIZE_LIMIT
            - ERROR_INVALID_PAGE
            - ERROR_INVALID_SORT_DIRECTION
            - ERROR_INVALID_SORT_ATTRIBUTE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AuditLogListDistinctWorkspaceNames400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_SIZE_LIMIT
            - ERROR_INVALID_PAGE
            - ERROR_INVALID_SORT_DIRECTION
            - ERROR_INVALID_SORT_ATTRIBUTE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AuthListLoginOptionsResponse:
      description: Unspecified response body
      type: object
      additionalProperties: {}
    BuilderDomainsGetAllResponse:
      type: array
      items:
        $ref: '#/components/schemas/Domain_TypeDomain'
    BuilderDomainsGetAll400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDomainsGetAll404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDomainsCreateNewDomainResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDomainsCreateNewDomain404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDomainsApplyOrderResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_DOMAIN_NOT_IN_BUILDER
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDomainsApplyOrder404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
            - ERROR_DOMAIN_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderPagesCreateNewPageResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_PAGE_NAME_NOT_UNIQUE
            - ERROR_PAGE_PATH_NOT_UNIQUE
            - ERROR_PATH_PARAM_NOT_IN_PATH
            - ERROR_PATH_PARAM_NOT_DEFINED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderPagesCreateNewPage404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderPagesApplyOrderToPagesResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_PAGE_NOT_IN_BUILDER
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderPagesApplyOrderToPages404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
            - ERROR_PAGE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderThemeUpdatePropertiesResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderThemeUpdateProperties404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDataSourcesDeleteByIdResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDataSourcesDeleteById404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_DATA_SOURCE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDataSourcesUpdateExistingDataSourceResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDataSourcesUpdateExistingDataSource404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_DATA_SOURCE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDataSourcesDispatchServiceResultResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_DATA_SOURCE_DOES_NOT_EXIST
            - ERROR_DATA_SOURCE_IMPROPERLY_CONFIGURED
            - ERROR_IN_DISPATCH_CONTEXT
            - ERROR_DATA_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDataSourcesMoveDataSourceResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_DATA_SOURCE_NOT_IN_SAME_PAGE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDataSourcesMoveDataSource404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_DATA_SOURCE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDomainsRemoveExistingDomainResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDomainsRemoveExistingDomain404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_DOMAIN_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDomainsUpdateExistingDomainResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDomainsUpdateExistingDomain404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_DOMAIN_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDomainsStartPublishJobResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDomainsStartPublishJob404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderPublicSerializedVersionByIdResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_BUILDER_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderPublicSerializedVersionResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_BUILDER_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDataSourcesListPageDataSourcesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Integration_ServicePublicDataSource'
    BuilderDataSourcesListPageDataSources404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderElementsGetPageElementsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Element_TypePublicElement'
    BuilderElementsGetPageElements404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderWorkflowActionsListPageWorkflowActionsResponse:
      type: array
      items:
        $ref: >-
          #/components/schemas/public_Builder_Workflow_Action_TypeBuilderWorkflowAction
    BuilderWorkflowActionsListPageWorkflowActions404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderElementsRemoveElementByIdResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderElementsRemoveElementById404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_ELEMENT_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderElementsUpdateExistingElementResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderElementsUpdateExistingElement404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_ELEMENT_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderElementsDuplicateElementChildrenResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderElementsDuplicateElementChildren404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_ELEMENT_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderElementsMoveElementResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_ELEMENT_NOT_IN_SAME_PAGE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderElementsMoveElement404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_ELEMENT_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDataSourcesListPageDataSources200Response:
      type: array
      items:
        $ref: '#/components/schemas/Integration_ServiceDataSource'
    BuilderDataSourcesCreateNewResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDataSourcesCreateNew404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderDataSourcesDispatchPageDataSourcesResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_DATA_SOURCE_IMPROPERLY_CONFIGURED
            - ERROR_IN_DISPATCH_CONTEXT
            - ERROR_DATA_DOES_NOT_EXIST
            - ERROR_PAGE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderElementsGetPageElements200Response:
      type: array
      items:
        $ref: '#/components/schemas/Element_TypeElement'
    BuilderElementsCreateNewElementResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderElementsCreateNewElement404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderWorkflowActionsListPageWorkflowActions200Response:
      type: array
      items:
        $ref: '#/components/schemas/Builder_Workflow_Action_TypeBuilderWorkflowAction'
    BuilderWorkflowActionsCreateNewActionResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderWorkflowActionsCreateNewAction404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderWorkflowActionsApplyNewOrderResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderWorkflowActionsApplyNewOrder404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_DOES_NOT_EXIST
            - ERROR_WORKFLOW_ACTION_DOES_NOT_EXIST
            - ERROR_WORKFLOW_ACTION_NOT_IN_ELEMENT
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderPagesDeletePageResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderPagesDeletePage404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderPagesUpdateExistingPageResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_PAGE_NAME_NOT_UNIQUE
            - ERROR_PAGE_PATH_NOT_UNIQUE
            - ERROR_PATH_PARAM_NOT_IN_PATH
            - ERROR_PATH_PARAM_NOT_DEFINED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderPagesUpdateExistingPage404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_DOES_NOT_EXIST
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderPagesStartDuplicationJobResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_MAX_JOB_COUNT_EXCEEDED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderPagesStartDuplicationJob404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_PAGE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderWorkflowActionsDeleteWorkflowActionByIdResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderWorkflowActionsDeleteWorkflowActionById404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_WORKFLOW_ACTION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderWorkflowActionsUpdateExistingActionResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderWorkflowActionsUpdateExistingAction404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_WORKFLOW_ACTION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    BuilderWorkflowActionsDispatchServiceResultResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_WORKFLOW_ACTION_CANNOT_BE_DISPATCHED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableExportExportJobDetailsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_EXPORT_JOB_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ExportTableResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_TABLE_ONLY_EXPORT_UNSUPPORTED
            - ERROR_VIEW_UNSUPPORTED_FOR_EXPORT_TYPE
            - ERROR_VIEW_NOT_IN_TABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ExportTable404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFieldsDeleteFieldResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_CANNOT_DELETE_PRIMARY_FIELD
            - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFieldsDeleteField404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_FIELD_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFieldsGetFieldPropertiesResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFieldsGetFieldProperties404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_FIELD_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFieldsUpdateFieldResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_CANNOT_CHANGE_FIELD_TYPE
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_RESERVED_BASEROW_FIELD_NAME
            - ERROR_FIELD_WITH_SAME_NAME_ALREADY_EXISTS
            - ERROR_INVALID_BASEROW_FIELD_NAME
            - ERROR_FIELD_SELF_REFERENCE
            - ERROR_FIELD_CIRCULAR_REFERENCE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFieldsUpdateField404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_FIELD_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFieldsDuplicateAsyncResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_MAX_JOB_COUNT_EXCEEDED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFieldsDuplicateAsync404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_FIELD_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFieldsGetUniqueRowValuesResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFieldsGetUniqueRowValues404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_FIELD_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFieldsGetTableFieldsResponse:
      type: array
      items:
        $ref: '#/components/schemas/FieldField'
    DatabaseTableFieldsGetTableFields400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFieldsGetTableFields401Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_PERMISSION_TO_TABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFieldsGetTableFields404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFieldsCreateNewFieldResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_MAX_FIELD_COUNT_EXCEEDED
            - ERROR_RESERVED_BASEROW_FIELD_NAME
            - ERROR_FIELD_WITH_SAME_NAME_ALREADY_EXISTS
            - ERROR_INVALID_BASEROW_FIELD_NAME
            - ERROR_FIELD_SELF_REFERENCE
            - ERROR_FIELD_CIRCULAR_REFERENCE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFieldsCreateNewField401Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_PERMISSION_TO_TABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFieldsCreateNewField404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFieldsCalculateFormulaTypeResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_WITH_FORMULA
            - ERROR_FIELD_SELF_REFERENCE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFieldsCalculateFormulaType404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsGetNamesOfRowResponse:
      type: object
      properties:
        '{table_id}*':
          description: An object containing the row names of table `table_id`.
          type: object
          properties:
            '{row_id}*':
              description: >-
                the name of the row with id `row_id` from table with id
                `table_id`.
              type: string
    DatabaseTableRowsGetNamesOfRow400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsGetNamesOfRow401Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_PERMISSION_TO_TABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsGetNamesOfRow404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsListTableRowsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_PAGE_SIZE_LIMIT
            - ERROR_INVALID_PAGE
            - ERROR_ORDER_BY_FIELD_NOT_FOUND
            - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
            - ERROR_FILTER_FIELD_NOT_FOUND
            - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
            - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
            - ERROR_FILTERS_PARAM_VALIDATION_ERROR
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsListTableRows401Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_PERMISSION_TO_TABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsListTableRows404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
            - ERROR_FIELD_DOES_NOT_EXIST
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsCreateRowResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsCreateRow401Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_PERMISSION_TO_TABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsCreateRow404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
            - ERROR_ROW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsDeleteRowResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsDeleteRow404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
            - ERROR_ROW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsGetRowByTableIdAndRowIdResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsGetRowByTableIdAndRowId401Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_PERMISSION_TO_TABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsGetRowByTableIdAndRowId404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
            - ERROR_ROW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsUpdateRowResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsUpdateRow401Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_PERMISSION_TO_TABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsUpdateRow404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
            - ERROR_ROW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsGetAdjacentRowResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsGetAdjacentRow404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
            - ERROR_ROW_DOES_NOT_EXIST
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsGetRowChangeHistoryResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsGetRowChangeHistory404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
            - ERROR_ROW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsMoveRowToResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsMoveRowTo401Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_PERMISSION_TO_TABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsMoveRowTo404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
            - ERROR_ROW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsUpdateBatchRowsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_ROW_IDS_NOT_UNIQUE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsUpdateBatchRows401Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_PERMISSION_TO_TABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsUpdateBatchRows404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
            - ERROR_ROW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsCreateBatchRowsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_ROW_IDS_NOT_UNIQUE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsCreateBatchRows401Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_PERMISSION_TO_TABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsCreateBatchRows404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
            - ERROR_ROW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsBatchDeleteResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
            - ERROR_ROW_IDS_NOT_UNIQUE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsBatchDelete404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
            - ERROR_ROW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTablesDeleteTableResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTablesDeleteTable404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTablesGetTableResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTablesGetTable404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTablesUpdateTableResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTablesUpdateTable404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTablesDuplicateAsyncJobResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_MAX_JOB_COUNT_EXCEEDED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTablesDuplicateAsyncJob404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTablesImportAsyncJobResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTablesImportAsyncJob404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTablesListByDatabaseIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/Table'
    DatabaseTablesListByDatabaseId400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTablesListByDatabaseId404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTablesCreateTableResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_INVALID_INITIAL_TABLE_DATA
            - ERROR_INITIAL_TABLE_DATA_LIMIT_EXCEEDED
            - ERROR_RESERVED_BASEROW_FIELD_NAME
            - ERROR_INITIAL_TABLE_DATA_HAS_DUPLICATE_NAMES
            - ERROR_INVALID_BASEROW_FIELD_NAME
            - ERROR_MAX_JOB_COUNT_EXCEEDED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTablesCreateTable404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTablesCreateTableJobResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_MAX_JOB_COUNT_EXCEEDED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTablesCreateTableJob404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTablesUpdateTableOrderResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_TABLE_NOT_IN_DATABASE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTablesUpdateTableOrder404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTokensListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Token'
    DatabaseTokensCreateNewTokenResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTokensDeleteTokenResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTokensDeleteToken404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TOKEN_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTokensGetTokenResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTokensGetToken404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TOKEN_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTokensUpdateTokenOwnershipResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_DATABASE_DOES_NOT_BELONG_TO_GROUP
            - ERROR_TABLE_DOES_NOT_BELONG_TO_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTokensUpdateTokenOwnership404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TOKEN_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTokensVerifyTokenValidityResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TOKEN_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsGetLinkRowFieldValueResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsGetLinkRowFieldValue404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
            - ERROR_FIELD_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsGenerateTokenResponse:
      type: object
      properties: {}
      example: {}
    DatabaseTableViewsGenerateToken404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsGetPublicInfoResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsGetPublicInfo401Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsGetPublicInfo404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsDeleteViewResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsDeleteView404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsGetViewByIdResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsGetViewById404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsUpdateViewResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_FIELD_NOT_IN_TABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsUpdateView404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewDecorationsListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Decorator_Value_Provider_TypeViewDecoration'
    DatabaseTableViewDecorationsList400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewDecorationsList404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewDecorationsCreateNewResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewDecorationsCreateNew404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsDuplicateViewResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsDuplicateView404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsGetFieldOptionsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_VIEW_DOES_NOT_SUPPORT_FIELD_OPTIONS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsGetFieldOptions404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsUpdateFieldOptionsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_VIEW_DOES_NOT_SUPPORT_FIELD_OPTIONS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsUpdateFieldOptions404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewFiltersCreateNewFilterGroupResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewFiltersCreateNewFilterGroup404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewFiltersGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/ViewFilter'
    DatabaseTableViewFiltersGetList400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewFiltersGetList404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewFiltersCreateNewFilterResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_FIELD_NOT_IN_TABLE
            - ERROR_VIEW_FILTER_NOT_SUPPORTED
            - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewFiltersCreateNewFilter404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
            - ERROR_VIEW_FILTER_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewGroupingsListResponse:
      type: array
      items:
        $ref: '#/components/schemas/ViewGroupBy'
    DatabaseTableViewGroupingsList400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewGroupingsList404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewGroupingsCreateNewGroupingResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_VIEW_GROUP_BY_NOT_SUPPORTED
            - ERROR_FIELD_NOT_IN_TABLE
            - ERROR_VIEW_GROUP_BY_FIELD_ALREADY_EXISTS
            - ERROR_VIEW_GROUP_BY_FIELD_NOT_SUPPORTED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewGroupingsCreateNewGrouping404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsRotateSlugResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_CANNOT_SHARE_VIEW_TYPE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsRotateSlug404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewSortingsListResponse:
      type: array
      items:
        $ref: '#/components/schemas/ViewSort'
    DatabaseTableViewSortingsList400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewSortingsList404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewSortingsCreateNewSortResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_VIEW_SORT_NOT_SUPPORTED
            - ERROR_FIELD_NOT_IN_TABLE
            - ERROR_VIEW_SORT_FIELD_ALREADY_EXISTS
            - ERROR_VIEW_SORT_FIELD_NOT_SUPPORTED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewSortingsCreateNewSort404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableCalendarViewGetPublicRowsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_CALENDAR_VIEW_HAS_NO_DATE_FIELD
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableCalendarViewGetPublicRows401Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableCalendarViewGetPublicRows404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableCalendarViewGetGroupedRowsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_CALENDAR_VIEW_HAS_NO_DATE_FIELD
            - ERROR_FEATURE_NOT_AVAILABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableCalendarViewGetGroupedRows404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewDecorationsDeleteExistingDecorationResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewDecorationsDeleteExistingDecoration404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DECORATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewDecorationsGetViewDecorationResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewDecorationsGetViewDecoration404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DECORATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewDecorationsUpdateDecorationResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewDecorationsUpdateDecoration404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DECORATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewFiltersDeleteFilterGroupResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewFiltersDeleteFilterGroup404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_FILTER_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewFiltersGetFilterGroupByIdResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewFiltersGetFilterGroupById404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_FILTER_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewFiltersUpdateFilterGroupResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewFiltersUpdateFilterGroup404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_FILTER_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewFiltersDeleteFilterResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewFiltersDeleteFilter404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_FILTER_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewFiltersGetViewFilterResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewFiltersGetViewFilter404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_FILTER_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewFiltersUpdateExistingFilterResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_FIELD_NOT_IN_TABLE
            - ERROR_VIEW_FILTER_NOT_SUPPORTED
            - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewFiltersUpdateExistingFilter404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_FILTER_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFormViewGetFormMetadataBySlugResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_PERMISSION_TO_PUBLICLY_SHARED_FORM
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFormViewGetFormMetadataBySlug404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_FORM_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFormViewSubmitFormResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_PERMISSION_TO_PUBLICLY_SHARED_FORM
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFormViewSubmitForm404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_FORM_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFormViewUploadFileResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_INVALID_FILE
            - ERROR_FILE_SIZE_TOO_LARGE
            - ERROR_VIEW_HAS_NO_PUBLIC_FILE_FIELD
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFormViewUploadFile401Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableFormViewUploadFile404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableGalleryViewListPublicRowsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_FILTER_FIELD_NOT_FOUND
            - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
            - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
            - ERROR_FILTERS_PARAM_VALIDATION_ERROR
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableGalleryViewListPublicRows401Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableGalleryViewListPublicRows404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GALLERY_DOES_NOT_EXIST
            - ERROR_FIELD_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableGalleryViewListRowsByViewIdResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_FILTER_FIELD_NOT_FOUND
            - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
            - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
            - ERROR_FILTERS_PARAM_VALIDATION_ERROR
            - ERROR_ORDER_BY_FIELD_NOT_FOUND
            - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableGalleryViewListRowsByViewId404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GALLERY_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableGridViewListPublicRowsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_ORDER_BY_FIELD_NOT_FOUND
            - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
            - ERROR_FILTER_FIELD_NOT_FOUND
            - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
            - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
            - ERROR_FILTERS_PARAM_VALIDATION_ERROR
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableGridViewListPublicRows401Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableGridViewListPublicRows404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GRID_DOES_NOT_EXIST
            - ERROR_FIELD_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableGridViewGetViewRowsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_ORDER_BY_FIELD_NOT_FOUND
            - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
            - ERROR_FILTER_FIELD_NOT_FOUND
            - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
            - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
            - ERROR_FILTERS_PARAM_VALIDATION_ERROR
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableGridViewGetViewRows404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GRID_DOES_NOT_EXIST
            - ERROR_FIELD_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableGridViewGetFilteredDataResponse:
      type: array
      items:
        $ref: '#/components/schemas/ExampleRowResponse'
    DatabaseTableGridViewGetFilteredData400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableGridViewGetFilteredData404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GRID_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableGridViewComputeAggregationResponse:
      type: object
      properties:
        value:
          anyOf:
            - description: The aggregation result for the specified field.
              type: number
              example: 5
            - description: The aggregation result for the specified field.
              type: string
            - description: The aggregation result for the specified field.
              type: array
              items: {}
            - description: The aggregation result for the specified field.
              type: object
        total:
          description: >-
            The total value count. Only returned if `include=total` is specified
            as GET parameter.
          type: integer
          example: 7
      required:
        - value
    DatabaseTableGridViewComputeAggregation400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_AGGREGATION_TYPE_DOES_NOT_EXIST
            - ERROR_FIELD_NOT_IN_TABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableGridViewComputeAggregation404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_FIELD_DOES_NOT_EXIST
            - ERROR_GRID_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableGridViewGetFieldAggregationsResponse:
      type: object
      properties:
        field_{id}:
          anyOf:
            - description: The aggregation result for the field with id {id}.
              type: number
              example: 5
            - description: The aggregation result for the field with id {id}.
              type: string
            - description: The aggregation result for the field with id {id}.
              type: array
              items: {}
            - description: The aggregation result for the field with id {id}.
              type: object
        total:
          description: >-
            The total value count. Only returned if `include=total` is specified
            as GET parameter.
          type: integer
          example: 7
    DatabaseTableGridViewGetFieldAggregations400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_FILTER_FIELD_NOT_FOUND
            - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
            - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
            - ERROR_FILTERS_PARAM_VALIDATION_ERROR
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableGridViewGetFieldAggregations404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GRID_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewGroupingsDeleteGroupByResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewGroupingsDeleteGroupBy404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_GROUP_BY_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewGroupingsGetViewGroupByResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewGroupingsGetViewGroupBy404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_GROUP_BY_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewGroupingsUpdateGroupByResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_FIELD_NOT_IN_TABLE
            - ERROR_VIEW_GROUP_BY_FIELD_ALREADY_EXISTS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewGroupingsUpdateGroupBy404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_GROUP_BY_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableKanbanViewGetPublicRowsBySlugResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_KANBAN_VIEW_HAS_NO_SINGLE_SELECT_FIELD
            - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
            - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
            - ERROR_FILTER_FIELD_NOT_FOUND
            - ERROR_FILTERS_PARAM_VALIDATION_ERROR
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableKanbanViewGetPublicRowsBySlug401Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableKanbanViewGetPublicRowsBySlug404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_KANBAN_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableKanbanViewGetSerializedRowsByViewIdResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_KANBAN_VIEW_HAS_NO_SINGLE_SELECT_FIELD
            - ERROR_INVALID_SELECT_OPTION_PARAMETER
            - ERROR_FEATURE_NOT_AVAILABLE
            - ERROR_FILTER_FIELD_NOT_FOUND
            - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
            - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
            - ERROR_FILTERS_PARAM_VALIDATION_ERROR
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableKanbanViewGetSerializedRowsByViewId404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_KANBAN_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewSortingsDeleteByIdResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewSortingsDeleteById404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_SORT_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewSortingsGetSortByIdResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewSortingsGetSortById404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_SORT_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewSortingsUpdateByIdResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_FIELD_NOT_IN_TABLE
            - ERROR_VIEW_SORT_FIELD_ALREADY_EXISTS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewSortingsUpdateById404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_VIEW_SORT_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsListTableViewsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ViewView'
    DatabaseTableViewsListTableViews400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsListTableViews404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsCreateNewViewResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_FIELD_NOT_IN_TABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsCreateNewView404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsReorderTableOrderResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_VIEW_NOT_IN_TABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableViewsReorderTableOrder404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableWebhooksDeleteWebhookResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableWebhooksDeleteWebhook404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_WEBHOOK_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableWebhooksGetExistingWebhookResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableWebhooksGetExistingWebhook404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_WEBHOOK_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableWebhooksUpdateViewResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableWebhooksUpdateView404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_WEBHOOK_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableWebhooksListResponse:
      type: array
      items:
        $ref: '#/components/schemas/TableWebhook'
    DatabaseTableWebhooksList400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableWebhooksList404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableWebhooksCreateWebhookResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_TABLE_WEBHOOK_MAX_LIMIT_EXCEEDED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableWebhooksCreateWebhook404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableWebhooksTriggerTestCallResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableWebhooksTriggerTestCall404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ListGroupsResponse:
      type: array
      items:
        $ref: '#/components/schemas/WorkspaceUserWorkspace'
    DeleteGroupResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
            - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DeleteGroup404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UpdateGroupResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UpdateGroup404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    LeaveGroupResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_GROUP_USER_IS_LAST_ADMIN
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    LeaveGroup404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupPermissionsResponse:
      type: array
      items:
        $ref: '#/components/schemas/PermissionObject'
    GroupPermissions404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupInvitationsDeleteInvitationResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupInvitationsDeleteInvitation404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupInvitationsGetByIdResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupInvitationsGetById404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupInvitationsUpdateRelatedInvitationResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupInvitationsUpdateRelatedInvitation404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupInvitationsAcceptGroupInvitationResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_EMAIL_MISMATCH
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupInvitationsAcceptGroupInvitation404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupInvitationsRejectGroupInvitationResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_EMAIL_MISMATCH
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupInvitationsRejectGroupInvitation404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupInvitationsListForGroupResponse:
      type: array
      items:
        $ref: '#/components/schemas/WorkspaceInvitation'
    GroupInvitationsListForGroup400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupInvitationsListForGroup404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupInvitationsCreateNewInvitationResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupInvitationsCreateNewInvitation404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupInvitationsFindByTokenResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - BAD_TOKEN_SIGNATURE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupInvitationsFindByToken404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupsDeleteGroupUserResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupsDeleteGroupUser404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupsUpdateGroupUserResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupsUpdateGroupUser404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_USER_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupsListGroupUsersResponse:
      type: array
      items:
        $ref: '#/components/schemas/ListWorkspaceUsersWithMemberData'
    GroupsListGroupUsers400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
            - ERROR_INVALID_SORT_DIRECTION
            - ERROR_INVALID_SORT_ATTRIBUTE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GroupsListGroupUsers404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    IntegrationsDeleteByIdResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    IntegrationsDeleteById404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_INTEGRATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    IntegrationsUpdateExistingIntegrationResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    IntegrationsUpdateExistingIntegration404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_INTEGRATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    IntegrationsMoveIntegrationResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_INTEGRATION_NOT_IN_SAME_APPLICATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    IntegrationsMoveIntegration404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_INTEGRATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ListJobResponse:
      type: array
      items:
        $ref: '#/components/schemas/Job_TypeJob'
    CreateJobResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_MAX_JOB_COUNT_EXCEEDED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    CreateJob404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GetJobResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_JOB_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminLicensesResponse:
      type: array
      items:
        $ref: '#/components/schemas/License'
    AdminRegisterLicenseResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_INVALID_LICENSE
            - ERROR_UNSUPPORTED_LICENSE
            - ERROR_PREMIUM_LICENSE_INSTANCE_ID_MISMATCH
            - ERROR_LICENSE_HAS_EXPIRED
            - ERROR_LICENSE_ALREADY_EXISTS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminRemoveLicenseResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_LICENSE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminGetLicenseDetailsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_LICENSE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminRemoveUserFromLicenseResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_CANT_MANUALLY_CHANGE_SEATS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminRemoveUserFromLicense404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_LICENSE_DOES_NOT_EXIST
            - ERROR_USER_NOT_FOUND
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminAddUserToLicenseResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_ALREADY_ON_LICENSE
            - ERROR_NO_SEATS_LEFT_IN_LICENSE
            - ERROR_CANT_MANUALLY_CHANGE_SEATS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminAddUserToLicense404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_LICENSE_DOES_NOT_EXIST
            - ERROR_USER_NOT_FOUND
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminCheckLicenseStatusResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_LICENSE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminFillSeatsLicenseResponse:
      type: array
      items:
        $ref: '#/components/schemas/LicenseUser'
    AdminFillSeatsLicense400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_CANT_MANUALLY_CHANGE_SEATS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminFillSeatsLicense404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_LICENSE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminLookupUsersResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_LICENSE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminRemoveAllUsersResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_CANT_MANUALLY_CHANGE_SEATS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AdminRemoveAllUsers404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_LICENSE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    NotificationsClearWorkspaceNotificationsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    NotificationsClearWorkspaceNotifications404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    NotificationsListForWorkspaceAndUserResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    NotificationsListForWorkspaceAndUser404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    NotificationsMarkAsReadResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    NotificationsMarkAsRead404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
            - NOTIFICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    NotificationsMarkAllAsReadResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    NotificationsMarkAllAsRead404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    RoleAssignmentsListWithinGroupResponse:
      type: array
      items:
        $ref: '#/components/schemas/OpenApiRoleAssignment'
    RoleAssignmentsListWithinGroup400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    RoleAssignmentsListWithinGroup404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_SCOPE_DOES_NOT_EXIST
            - ERROR_GROUP_DOES_NOT_EXIST
            - ERROR_OBJECT_SCOPE_TYPE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    RoleAssignmentsAssignRoleToGroupResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_CANT_ASSIGN_ROLE_EXCEPTION_TO_ADMIN
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    RoleAssignmentsAssignRoleToGroup404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_SCOPE_DOES_NOT_EXIST
            - ERROR_GROUP_DOES_NOT_EXIST
            - ERROR_OBJECT_SCOPE_TYPE_DOES_NOT_EXIST
            - ERROR_SUBJECT_TYPE_DOES_NOT_EXIST
            - ERROR_ROLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    RoleAssignmentsAssignMultipleSubjectsToGroupResponse:
      type: array
      items:
        $ref: '#/components/schemas/OpenApiRoleAssignment'
    RoleAssignmentsAssignMultipleSubjectsToGroup400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_DUPLICATE_ROLE_ASSIGNMENTS
            - ERROR_CANT_ASSIGN_ROLE_EXCEPTION_TO_ADMIN
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    RoleAssignmentsAssignMultipleSubjectsToGroup404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_SCOPE_DOES_NOT_EXIST
            - ERROR_GROUP_DOES_NOT_EXIST
            - ERROR_OBJECT_SCOPE_TYPE_DOES_NOT_EXIST
            - ERROR_SUBJECT_TYPE_DOES_NOT_EXIST
            - ERROR_ROLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    RoleAssignmentsListWithinWorkspaceScopeResponse:
      type: array
      items:
        $ref: '#/components/schemas/OpenApiRoleAssignment'
    RoleAssignmentsListWithinWorkspaceScope400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    RoleAssignmentsListWithinWorkspaceScope404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_SCOPE_DOES_NOT_EXIST
            - ERROR_GROUP_DOES_NOT_EXIST
            - ERROR_OBJECT_SCOPE_TYPE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AssignRoleResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_CANT_ASSIGN_ROLE_EXCEPTION_TO_ADMIN
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AssignRole404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_SCOPE_DOES_NOT_EXIST
            - ERROR_GROUP_DOES_NOT_EXIST
            - ERROR_OBJECT_SCOPE_TYPE_DOES_NOT_EXIST
            - ERROR_SUBJECT_TYPE_DOES_NOT_EXIST
            - ERROR_ROLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    RoleAssignmentsAssignRoleToGroup200Response:
      type: array
      items:
        $ref: '#/components/schemas/OpenApiRoleAssignment'
    RoleAssignmentsAssignRoleToGroup400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_DUPLICATE_ROLE_ASSIGNMENTS
            - ERROR_CANT_ASSIGN_ROLE_EXCEPTION_TO_ADMIN
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsGetAllCommentsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsGetAllComments404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
            - ERROR_ROW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsCreateCommentResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_INVALID_COMMENT_MENTION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsCreateComment404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
            - ERROR_ROW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsUpdateNotificationModeResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsUpdateNotificationMode404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
            - ERROR_ROW_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsDeleteCommentResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_USER_NOT_COMMENT_AUTHOR
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsDeleteComment401Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_PERMISSION_TO_TABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsDeleteComment404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
            - ERROR_ROW_COMMENT_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsUpdateCommentResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_USER_NOT_COMMENT_AUTHOR
            - ERROR_INVALID_COMMENT_MENTION
            - ERROR_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsUpdateComment401Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_NO_PERMISSION_TO_TABLE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DatabaseTableRowsUpdateComment404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TABLE_DOES_NOT_EXIST
            - ERROR_ROW_COMMENT_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DeleteSnapshotResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_APPLICATION_OPERATION_NOT_SUPPORTED
            - ERROR_SNAPSHOT_IS_BEING_RESTORED
            - ERROR_SNAPSHOT_IS_BEING_DELETED
            - ERROR_SNAPSHOT_OPERATION_LIMIT_EXCEEDED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DeleteSnapshot404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_SNAPSHOT_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    RestoreSnapshotResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_APPLICATION_OPERATION_NOT_SUPPORTED
            - ERROR_SNAPSHOT_IS_BEING_RESTORED
            - ERROR_SNAPSHOT_IS_BEING_DELETED
            - ERROR_SNAPSHOT_OPERATION_LIMIT_EXCEEDED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    RestoreSnapshot404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_SNAPSHOT_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ListSnapshotsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Snapshot'
    ListSnapshots400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ListSnapshots404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    CreateSnapshotResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_MAXIMUM_SNAPSHOTS_REACHED
            - ERROR_APPLICATION_OPERATION_NOT_SUPPORTED
            - ERROR_SNAPSHOT_IS_BEING_CREATED
            - ERROR_SNAPSHOT_NAME_NOT_UNIQUE
            - ERROR_SNAPSHOT_OPERATION_LIMIT_EXCEEDED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    CreateSnapshot404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    AuthGetSamlLoginUrlResponse:
      description: Unspecified response body
      type: object
      additionalProperties: {}
    AuthGetSamlLoginUrl400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_SAML_INVALID_LOGIN_REQUEST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DeleteTeamResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DeleteTeam404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TEAM_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GetTeamResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TEAM_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UpdateTeamResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_TEAM_NAME_NOT_UNIQUE
            - ERROR_SUBJECT_BAD_REQUEST"
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UpdateTeam404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TEAM_DOES_NOT_EXIST
            - ERROR_SUBJECT_DOES_NOT_EXIST
            - ERROR_ROLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    TeamsListSubjectsResponse:
      type: array
      items:
        $ref: '#/components/schemas/TeamSubjectResponse'
    TeamsListSubjects400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TEAM_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    CreateSubjectResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_SUBJECT_NOT_IN_GROUP
            - ERROR_SUBJECT_TYPE_UNSUPPORTED
            - ERROR_SUBJECT_BAD_REQUEST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    CreateSubject404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TEAM_DOES_NOT_EXIST
            - ERROR_SUBJECT_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DeleteSubjectResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DeleteSubject404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TEAM_DOES_NOT_EXIST
            - ERROR_SUBJECT_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    GetSubjectResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_TEAM_DOES_NOT_EXIST
            - ERROR_SUBJECT_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    TeamsGetAllInGroupResponse:
      type: array
      items:
        $ref: '#/components/schemas/TeamResponse'
    TeamsGetAllInGroup404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    TeamsCreateInGroupResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_SUBJECT_BAD_REQUEST
            - ERROR_TEAM_NAME_NOT_UNIQUE
            - ERROR_SUBJECT_NOT_IN_GROUP
            - ERROR_SUBJECT_TYPE_UNSUPPORTED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    TeamsCreateInGroup404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
            - ERROR_SUBJECT_DOES_NOT_EXIST
            - ERROR_ROLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    TeamsListInWorkspaceResponse:
      type: array
      items:
        $ref: '#/components/schemas/TeamResponse'
    TeamsListInWorkspace404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    TeamsCreateNewTeamResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_SUBJECT_BAD_REQUEST
            - ERROR_TEAM_NAME_NOT_UNIQUE
            - ERROR_SUBJECT_NOT_IN_GROUP
            - ERROR_SUBJECT_TYPE_UNSUPPORTED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    TeamsCreateNewTeam404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
            - ERROR_SUBJECT_DOES_NOT_EXIST
            - ERROR_ROLE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ListTemplatesResponse:
      type: array
      items:
        $ref: '#/components/schemas/TemplateCategories'
    TemplatesInstallApplicationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationApplication'
    TemplatesInstallApplications400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_TEMPLATE_FILE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    TemplatesInstallApplications404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
            - ERROR_TEMPLATE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    TemplatesStartAsyncJobResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_TEMPLATE_FILE_DOES_NOT_EXIST
            - ERROR_MAX_JOB_COUNT_EXCEEDED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    TemplatesStartAsyncJob404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
            - ERROR_TEMPLATE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    InstallTemplateResponse:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationApplication'
    InstallTemplate400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_TEMPLATE_FILE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    InstallTemplate404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
            - ERROR_TEMPLATE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    TemplatesStartAsyncJob400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_TEMPLATE_FILE_DOES_NOT_EXIST
            - ERROR_MAX_JOB_COUNT_EXCEEDED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    TrashEmptyGroupContentsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_APPLICATION_NOT_IN_GROUP
            - ERROR_GROUP_DOES_NOT_EXIST
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    TrashGetGroupContentsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_APPLICATION_NOT_IN_GROUP
            - ERROR_GROUP_DOES_NOT_EXIST
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    TrashRestoreItemResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_TRASH_ITEM_DOES_NOT_EXIST
            - ERROR_CANNOT_RESTORE_PARENT_BEFORE_CHILD
            - ERROR_PARENT_ID_MUST_NOT_BE_PROVIDED
            - ERROR_PARENT_ID_MUST_BE_PROVIDED
            - ERROR_CANT_RESTORE_AS_RELATED_TABLE_TRASHED
            - ERROR_CANNOT_RESTORE_ITEM_NOT_OWNED_BY_USER
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    TrashEmptyWorkspaceResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_APPLICATION_NOT_IN_GROUP
            - ERROR_GROUP_DOES_NOT_EXIST
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    TrashGetWorkspaceTrashContentsResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_APPLICATION_NOT_IN_GROUP
            - ERROR_GROUP_DOES_NOT_EXIST
            - ERROR_APPLICATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    CreateUserResponse:
      type: object
      properties:
        user:
          description: An object containing information related to the user.
          type: object
          properties:
            first_name:
              description: The first name of related user.
              type: string
            username:
              description: >-
                The username of the related user. This is always an email
                address.
              type: string
              format: email
            language:
              description: >-
                An ISO 639 language code (with optional variant) selected by the
                user. Ex: en-GB.
              type: string
        token:
          description: Deprecated. Use the `access_token` instead.
          type: string
          deprecated: true
        access_token:
          description: >-
            'access_token' can be used to authorize for other endpoints that
            require authorization. This token will be valid for 10 minutes.
          type: string
        refresh_token:
          description: >-
            'refresh_token' can be used to get a new valid 'access_token'. This
            token will be valid for 168 hours.
          type: string
    CreateUser400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_ALREADY_EXISTS
            - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
            - ERROR_REQUEST_BODY_VALIDATION
            - BAD_TOKEN_SIGNATURE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    CreateUser404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UploadFileResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_INVALID_FILE
            - ERROR_FILE_SIZE_TOO_LARGE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UserFilesUploadViaUrlResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_INVALID_FILE
            - ERROR_FILE_SIZE_TOO_LARGE
            - ERROR_FILE_URL_COULD_NOT_BE_REACHED
            - ERROR_INVALID_FILE_URL
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UserSourcesRefreshAccessTokenResponse:
      type: object
      properties:
        access_token:
          description: >-
            'access_token' can be used to authorize for other endpoints that
            require authorization. This token will be valid for 10 minutes.
          type: string
    UserSourcesRefreshAccessToken401Response:
      type: object
      properties: {}
      example: {}
    UserSourcesBlacklistTokenResponse:
      type: object
      properties: {}
      example: {}
    UserSourcesRemoveByIdResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UserSourcesRemoveById404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_SOURCE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UserSourcesUpdateExistingUserSourceResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UserSourcesUpdateExistingUserSource404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_SOURCE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UserSourcesRearrangeUserSourceResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_USER_SOURCE_NOT_IN_SAME_APPLICATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UserSourcesRearrangeUserSource404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_SOURCE_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UpdateAccountResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ChangePasswordResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_INVALID_OLD_PASSWORD
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    ResetPasswordResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - BAD_TOKEN_SIGNATURE
            - EXPIRED_TOKEN_SIGNATURE
            - ERROR_USER_NOT_FOUND
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UserScheduleAccountDeletionResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UserSendResetPasswordEmailResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_HOSTNAME_IS_NOT_ALLOWED
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    TokenAuthResponse:
      type: object
      properties:
        user:
          description: An object containing information related to the user.
          type: object
          properties:
            first_name:
              description: The first name of related user.
              type: string
            username:
              description: >-
                The username of the related user. This is always an email
                address.
              type: string
              format: email
            language:
              description: >-
                An ISO 639 language code (with optional variant) selected by the
                user. Ex: en-GB.
              type: string
        token:
          description: Deprecated. Use the `access_token` instead.
          type: string
          deprecated: true
        access_token:
          description: >-
            'access_token' can be used to authorize for other endpoints that
            require authorization. This token will be valid for 10 minutes.
          type: string
        refresh_token:
          description: >-
            'refresh_token' can be used to get a new valid 'access_token'. This
            token will be valid for 168 hours.
          type: string
    TokenAuth401Response:
      type: object
      properties: {}
      example: {}
    TokenBlacklistResponse:
      type: object
      properties: {}
      example: {}
    TokenRefreshResponse:
      type: object
      properties:
        user:
          description: An object containing information related to the user.
          type: object
          properties:
            first_name:
              description: The first name of related user.
              type: string
            username:
              description: >-
                The username of the related user. This is always an email
                address.
              type: string
              format: email
            language:
              description: >-
                An ISO 639 language code (with optional variant) selected by the
                user. Ex: en-GB.
              type: string
        token:
          description: Deprecated. Use the `access_token` instead.
          type: string
          deprecated: true
        access_token:
          description: >-
            'access_token' can be used to authorize for other endpoints that
            require authorization. This token will be valid for 10 minutes.
          type: string
    TokenRefresh401Response:
      type: object
      properties: {}
      example: {}
    TokenVerifyResponse:
      type: object
      properties:
        user:
          description: An object containing information related to the user.
          type: object
          properties:
            first_name:
              description: The first name of related user.
              type: string
            username:
              description: >-
                The username of the related user. This is always an email
                address.
              type: string
              format: email
            language:
              description: >-
                An ISO 639 language code (with optional variant) selected by the
                user. Ex: en-GB.
              type: string
    TokenVerify401Response:
      type: object
      properties: {}
      example: {}
    ListWorkspacesResponse:
      type: array
      items:
        $ref: '#/components/schemas/WorkspaceUserWorkspace'
    DeleteWorkspaceResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
            - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    DeleteWorkspace404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UpdateWorkspaceResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_REQUEST_BODY_VALIDATION
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    UpdateWorkspace404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    LeaveWorkspaceResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_GROUP_USER_IS_LAST_ADMIN
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    LeaveWorkspace404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspacePermissionsResponse:
      type: array
      items:
        $ref: '#/components/schemas/PermissionObject'
    WorkspacePermissions404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspaceInvitationsDeleteInvitationResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspaceInvitationsDeleteInvitation404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspaceInvitationsGetByIdResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspaceInvitationsGetById404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspaceInvitationsUpdateExistingInvitationResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspaceInvitationsUpdateExistingInvitation404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspaceInvitationsAcceptInvitationResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_EMAIL_MISMATCH
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspaceInvitationsAcceptInvitation404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspaceInvitationsRejectInvitationResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_EMAIL_MISMATCH
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspaceInvitationsRejectInvitation404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspaceInvitationsGetByTokenResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - BAD_TOKEN_SIGNATURE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspaceInvitationsGetByToken404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspaceInvitationsListResponse:
      type: array
      items:
        $ref: '#/components/schemas/WorkspaceInvitation'
    WorkspaceInvitationsList400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspaceInvitationsList404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspaceInvitationsCreateInviteResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspaceInvitationsCreateInvite404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspacesDeleteUserResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspacesDeleteUser404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspacesUpdateWorkspaceUserResponse:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
            - ERROR_REQUEST_BODY_VALIDATION
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspacesUpdateWorkspaceUser404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_USER_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspacesListUsersInWorkspaceResponse:
      type: array
      items:
        $ref: '#/components/schemas/ListWorkspaceUsersWithMemberData'
    WorkspacesListUsersInWorkspace400Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_USER_NOT_IN_GROUP
            - ERROR_USER_INVALID_GROUP_PERMISSIONS
            - ERROR_INVALID_SORT_DIRECTION
            - ERROR_INVALID_SORT_ATTRIBUTE
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
    WorkspacesListUsersInWorkspace404Response:
      type: object
      properties:
        error:
          description: Machine readable error indicating what went wrong.
          type: string
          enum:
            - ERROR_GROUP_DOES_NOT_EXIST
        detail:
          oneOf:
            - description: Human readable details about what went wrong.
              type: string
              format: string
            - description: Machine readable object about what went wrong.
              type: object
              format: object
  securitySchemes:
    Database token:
      type: http
      scheme: bearer
      bearerFormat: Token your_token
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT your_token
