openapi: 3.0.3
info:
  title: NocoDB v2
  description: NocoDB API Documentation
  version: ''
  x-api-status-urls: false
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - url: http://localhost:8080
tags:
  - name: DB View
  - name: Base
  - name: Source
  - name: Public
  - name: Utils
  - name: Table Records
  - name: DB Table
  - name: DB Table Column
  - name: DB Table Filter
  - name: DB Table Webhook
  - name: Plugin
  - name: Auth
  - name: DB Table Sort
  - name: DB View Share
  - name: DB View Column
  - name: API Token
  - name: DB Table Webhook Filter
  - name: Storage
  - name: DB Table Webhook Logs
paths:
  /api/v2/meta/bases/{baseId}/users:
    parameters:
      - description: Unique Base ID
        schema:
          $ref: '#/components/schemas/Id'
          example: p_124hhlkbeasewh
          type: string
        name: baseId
        in: path
        required: true
    get:
      tags:
        - Auth
      summary: List Base Users
      operationId: Auth_listBaseUsers
      description: List all users in the given base.
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthListBaseUsersResponse'
              examples:
                Example 1:
                  value:
                    users:
                      list:
                        - email: user@example.com
                          email_verified: true
                          firstname: Alice
                          id: us_8kugj628ebjngs
                          lastname: Smith
                          roles: org-level-viewer
                      pageInfo:
                        isFirstPage: true
                        isLastPage: true
                        page: 1
                        pageSize: 10
                        totalRows: 1
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      tags:
        - Auth
      summary: Create Base User
      operationId: Auth_addBaseUser
      description: Create a user and add it to the given base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUserReq'
            examples:
              Example 1:
                value:
                  email: user@example.com
                  roles: owner
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthAddBaseUserResponse'
              examples:
                Inviting a user without any errors:
                  value:
                    msg: The user has been invited successfully
                Inviting a user but invitation email failed to send:
                  value:
                    invite_token: 8354ddba-a769-4d64-8397-eccb2e2b3c06
                    email: w@nocodb.com
                Inviting multiple users:
                  value:
                    invite_token: 8354ddba-a769-4d64-8397-eccb2e2b3c06
                    error:
                      - email: w@nocodb.com
                        error: <ERROR MESSAGE>
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/bases/{baseId}/info:
    parameters:
      - description: Unique Base ID
        schema:
          $ref: '#/components/schemas/Id'
          example: p_124hhlkbeasewh
          type: string
        name: baseId
        in: path
        required: true
    get:
      tags:
        - Base
      summary: Get Base info
      operationId: Base_getInfoById
      description: >-
        Get info such as node version, arch, platform, is docker, rootdb and
        package version of a given base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseGetInfoByIdResponse'
              examples:
                Example 1:
                  value:
                    Node: v12.16.1
                    Arch: x64
                    Platform: linux
                    Docker: false
                    Database: postgres
                    ProjectOnRootDB: false
                    RootDB: postgres
                    PackageVersion: 1.0.0
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/bases/{baseId}/users/{userId}:
    parameters:
      - description: Unique Base ID
        schema:
          $ref: '#/components/schemas/Id'
          example: p_124hhlkbeasewh
          type: string
        name: baseId
        in: path
        required: true
      - description: Unique User ID
        schema:
          $ref: '#/components/schemas/Id'
          example: us_b3xo2i44nx5y9l
        name: userId
        in: path
        required: true
    patch:
      tags:
        - Auth
      summary: Update Base User
      operationId: Auth_updateBaseUser
      description: >-
        Update a given user in a given base. Exclusive for Super Admin. Access
        with API Tokens will be blocked.
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUserReq'
            examples:
              Example 1:
                value:
                  email: user@example.com
                  roles: owner
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUpdateBaseUserResponse'
              examples:
                Example 1:
                  value:
                    msg: The user has been updated successfully
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      tags:
        - Auth
      summary: Delete Base User
      operationId: Auth_deleteBaseUser
      description: >-
        Delete a given user in a given base. Exclusive for Super Admin. Access
        with API Tokens will be blocked.
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthDeleteBaseUserResponse'
              examples:
                Example 1:
                  value:
                    msg: The user has been updated successfully
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/bases/{baseId}/visibility-rules:
    parameters:
      - description: Unique Base ID
        schema:
          $ref: '#/components/schemas/Id'
          example: p_124hhlkbeasewh
          type: string
        name: baseId
        in: path
        required: true
    get:
      tags:
        - Base
      summary: Get UI ACL
      operationId: Base_getUiAcl
      description: Hide / show views based on user role
      parameters:
        - schema:
            type: boolean
          in: query
          name: includeM2M
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseGetUiAclResponse'
              examples:
                Example 1:
                  value:
                    - title: Sheet-1
                      ptn: nc_09gt___Sheet-1
                      _ptn: Sheet-1
                      ptype: table
                      tn: Sheet-1
                      _tn: Sheet-1
                      table_meta: null
                      id: vw_75neroyqdye94k
                      source_id: ds_eol59jg2l4zwev
                      base_id: p_63b4q0qengen1x
                      fk_model_id: md_5mipbdg6ketmv8
                      type: 3
                      is_default: true
                      show_system_fields: null
                      lock_type: collaborative
                      uuid: 24a6d0bb-e45d-4b1a-bfef-f492d870de9f
                      password: null
                      show: true
                      order: 1
                      created_at: '2023-03-08T10:44:55.253Z'
                      updated_at: '2023-03-10T07:18:44.908Z'
                      meta:
                        allowCSVDownload: true
                      view:
                        fk_view_id: vw_75neroyqdye94k
                        source_id: ds_eol59jg2l4zwev
                        base_id: p_63b4q0qengen1x
                        uuid: null
                        created_at: '2023-03-08T10:44:55.288Z'
                        updated_at: '2023-03-08T10:44:55.288Z'
                        meta: null
                        row_height: null
                      disabled:
                        owner: false
                        creator: false
                        viewer: false
                        editor: false
                        commenter: false
                        guest: false
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      tags:
        - Base
      summary: Create UI ACL
      operationId: Base_createUiAcl
      description: Hide / show views based on user role
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisibilityRuleReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseCreateUiAclResponse'
              examples:
                Example 1:
                  value:
                    msg: UI ACL has been created successfully
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/duplicate/{baseId}/{sourceId}:
    post:
      tags:
        - Base
      summary: Duplicate Base Source
      operationId: Base_duplicatePost
      description: Duplicate a base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
        - description: Unique Base ID
          schema:
            $ref: '#/components/schemas/Id'
            example: p_124hhlkbeasewh
            type: string
          name: baseId
          in: path
          required: true
        - description: Unique Source ID
          schema:
            $ref: '#/components/schemas/Id'
            example: ds_124hhlkbeasewh
            type: string
          name: sourceId
          in: path
          required: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseDuplicatePostRequest'
            examples:
              Example 1:
                value:
                  excludeData: true
                  excludeViews: true
                  excludeHooks: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseDuplicatePostResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/duplicate/{baseId}:
    post:
      tags:
        - Base
      summary: Duplicate Base
      operationId: Base_duplicateBasePost
      description: Duplicate a base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
        - description: Unique Base ID
          schema:
            $ref: '#/components/schemas/Id'
            example: p_124hhlkbeasewh
            type: string
          name: baseId
          in: path
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseDuplicateBasePostRequest'
            examples:
              Example 1:
                value:
                  excludeData: true
                  excludeViews: true
                  excludeHooks: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseDuplicateBasePostResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/bases/{baseId}:
    parameters:
      - description: Unique Base ID
        schema:
          $ref: '#/components/schemas/Id'
          example: p_124hhlkbeasewh
          type: string
        name: baseId
        in: path
        required: true
    get:
      tags:
        - Base
      summary: Get Base
      operationId: Base_getInfo
      description: Get the info of a given base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Base'
              examples:
                Example 1:
                  value:
                    title: my-base
                    description: This is my base description
                    sources:
                      - alias: string
                        config: null
                        enabled: true
                        id: string
                        inflection_column: camelize
                        inflection_table: camelize
                        is_meta: true
                        order: 1
                        base_id: string
                        type: mysql2
                        updated_at: '2023-03-01 14:27:36'
                    color: '#24716E'
                    created_at: '2023-03-01 14:27:36'
                    deleted: true
                    id: p_124hhlkbeasewh
                    is_meta: true
                    meta: {}
                    order: 0
                    prefix: nc_vm5q__
                    status: string
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      tags:
        - Base
      summary: Delete Base
      operationId: Base_removeBase
      description: Delete the given base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseRemoveBaseResponse'
              examples:
                Example 1:
                  value: true
        '400':
          $ref: '#/components/responses/BadRequest'
    patch:
      tags:
        - Base
      summary: Update Base
      operationId: Base_updateBaseMeta
      description: Update the given base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdateReq'
            examples:
              Example 1:
                value:
                  title: My Base
                  color: '#24716E'
                  meta: null
                  order: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseUpdateBaseMetaResponse'
              examples:
                Example 1:
                  value: 1
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/bases/{baseId}/user:
    parameters:
      - schema:
          type: string
        name: baseId
        in: path
        required: true
    patch:
      tags:
        - Base
      summary: Base user meta update
      operationId: Base_updateMetaUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUserMetaReq'
      responses:
        '200':
          description: OK
  /api/v2/meta/bases/{baseId}/sources/{sourceId}:
    parameters:
      - description: Unique Base ID
        schema:
          $ref: '#/components/schemas/Id'
          example: p_124hhlkbeasewh
          type: string
        name: baseId
        in: path
        required: true
      - description: Unique Source ID
        schema:
          type: string
          pattern: ds_j04jmxh5xg10lu
        name: sourceId
        in: path
        required: true
    get:
      tags:
        - Source
      summary: Get Source
      operationId: Source_getDetails
      description: Get the source details of a given base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
              examples:
                Example 1:
                  value:
                    alias: null
                    config: <ENCRYPTED>
                    enabled: 1
                    id: ds_krsappzu9f8vmo
                    inflection_column: camelize
                    inflection_table: camelize
                    is_meta: 1
                    meta: null
                    order: 1
                    base_id: p_01clqvzik3izk6
                    type: mysql2
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      tags:
        - Source
      summary: Delete Source
      operationId: Source_deleteDetails
      description: Delete the source details of a given base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceDeleteDetailsResponse'
              examples:
                Example 1:
                  value: true
        '400':
          $ref: '#/components/responses/BadRequest'
    patch:
      tags:
        - Source
      summary: Update Source
      operationId: Source_updateDetails
      description: Update the source details of a given base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceUpdateDetailsRequest'
            examples:
              Example 1:
                value:
                  alias: sakila
                  type: mysql2
                  config:
                    client: mysql2
                    connection:
                      host: localhost
                      port: '3306'
                      user: root
                      password: password
                      database: sakila
                  inflection_column: camelize
                  inflection_table: camelize
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceUpdateDetailsResponse'
              examples:
                Example 1:
                  value:
                    id: ds_rrplkgy0pq1f3c
                    base_id: p_63b4q0qengen1x
                    alias: sakila
                    meta: null
                    is_meta: null
                    type: mysql2
                    inflection_column: camelize
                    inflection_table: camelize
                    created_at: '2023-03-11T10:31:15.341Z'
                    updated_at: '2023-03-11T10:32:25.763Z'
                    enabled: true
                    order: 2
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/bases/:baseId/sources/:sourceId/sqlView:
    parameters:
      - schema:
          type: string
        name: baseId
        in: path
        required: true
      - schema:
          type: string
        name: sourceId
        in: path
        required: true
    post:
      tags:
        - Source
      summary: Create sql view
      operationId: Source_createSqlView
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCreateSqlViewRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceCreateSqlViewResponse'
  /api/v2/meta/bases/{baseId}/sources/{sourceId}/share/erd:
    parameters:
      - schema:
          type: string
        name: baseId
        in: path
        required: true
      - schema:
          type: string
        name: sourceId
        in: path
        required: true
    post:
      tags:
        - Source
      summary: share ERD view
      operationId: Source_createErdShare
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
    delete:
      tags:
        - Source
      summary: ''
      operationId: Source_deleteErdShare
      responses:
        '200':
          description: OK
  /api/v2/meta/bases/{baseId}/shared:
    parameters:
      - description: Unique Base ID
        schema:
          $ref: '#/components/schemas/Id'
          example: p_124hhlkbeasewh
          type: string
        name: baseId
        in: path
        required: true
    get:
      tags:
        - Base
      summary: Get Base Shared Base
      operationId: Base_getSharedBase
      description: Get Base Shared Base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseGetSharedBaseResponse'
              examples:
                Example 1:
                  value:
                    uuid: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
                    url: http://example.com
                    roles: viewer
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      tags:
        - Base
      summary: Delete Base Shared Base
      operationId: Base_deleteSharedBase
      description: Delete Base Shared Base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseDeleteSharedBaseResponse'
              examples:
                Example 1:
                  value: true
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      tags:
        - Base
      summary: Create Base Shared Base
      operationId: Base_createSharedBase
      description: Create Base Shared Base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedBaseReq'
            examples:
              Example 1:
                value:
                  roles: editor
                  password: password123
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseCreateSharedBaseResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
    patch:
      tags:
        - Base
      summary: Update Base Shared Base
      operationId: Base_updateSharedBase
      description: Update Base Shared Base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedBaseReq'
            examples:
              Example 1:
                value:
                  password: password123
                  roles: editor
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseUpdateSharedBaseResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/bases/{baseId}/cost:
    parameters:
      - description: Unique Base ID
        schema:
          $ref: '#/components/schemas/Id'
          example: p_124hhlkbeasewh
          type: string
        name: baseId
        in: path
        required: true
    get:
      tags:
        - Base
      summary: Base Cost
      operationId: Base_calculateCost
      description: Calculate the Base Cost
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseCalculateCostResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
      x-internal: true
  /api/v2/meta/bases/{baseId}/tables:
    parameters:
      - description: Unique Base ID
        schema:
          $ref: '#/components/schemas/Id'
          example: p_124hhlkbeasewh
          type: string
        name: baseId
        in: path
        required: true
    post:
      tags:
        - DB Table
      summary: Create Table
      operationId: DbTable_createNewTable
      description: Create a new table in a given base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
              examples:
                Example 1:
                  value:
                    tags: null
                    title: Table1
                    source_id: ds_g4ccx6e77h1dmi
                    columns:
                      - title: UpdatedAt
                        ai: 0
                        au: 0
                        source_id: ds_g4ccx6e77h1dmi
                        cc: ''
                        cdf: CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP
                        clen: null
                        column_name: updated_at
                        cop: '4'
                        created_at: '2023-03-02 17:04:06'
                        csn: null
                        ct: timestamp
                        deleted: null
                        dt: timestamp
                        dtx: specificType
                        dtxp: '0'
                        dtxs: null
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: cl_m4wkaqgqqjzoeh
                        meta: null
                        np: null
                        ns: null
                        order: 4
                        pk: 0
                        base_id: p_xm3thidrblw4n7
                        pv: null
                        rqd: 0
                        system: 0
                        uidt: DateTime
                        un: 0
                        unique: 0
                        updated_at: '2023-03-02 17:04:06'
                        validate: null
                        virtual: null
                      - title: CreatedAt
                        ai: 0
                        au: 0
                        source_id: ds_g4ccx6e77h1dmi
                        cc: ''
                        cdf: CURRENT_TIMESTAMP
                        clen: null
                        column_name: created_at
                        cop: '3'
                        created_at: '2023-03-02 17:04:06'
                        csn: null
                        ct: timestamp
                        deleted: null
                        dt: timestamp
                        dtx: specificType
                        dtxp: '0'
                        dtxs: null
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: cl_jpl0qu4gj4rexq
                        meta: null
                        np: null
                        ns: null
                        order: 3
                        pk: 0
                        base_id: p_xm3thidrblw4n7
                        pv: null
                        rqd: 0
                        system: 0
                        uidt: DateTime
                        un: 0
                        unique: 0
                        updated_at: '2023-03-02 17:04:06'
                        validate: null
                        virtual: null
                      - title: Title
                        ai: 0
                        au: 0
                        source_id: ds_g4ccx6e77h1dmi
                        cc: ''
                        cdf: null
                        clen: '45'
                        column_name: title
                        cop: '2'
                        created_at: '2023-03-02 17:04:06'
                        csn: utf8mb4
                        ct: varchar(45)
                        deleted: null
                        dt: varchar
                        dtx: specificType
                        dtxp: '45'
                        dtxs: null
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: cl_c5knoi4xs4sfpt
                        meta: null
                        np: null
                        ns: null
                        order: 2
                        pk: 0
                        base_id: p_xm3thidrblw4n7
                        pv: 1
                        rqd: 0
                        system: 0
                        uidt: SingleLineText
                        un: 0
                        unique: 0
                        updated_at: '2023-03-02 17:04:06'
                        validate: null
                        virtual: null
                      - title: Id
                        ai: 1
                        au: 0
                        source_id: ds_g4ccx6e77h1dmi
                        cc: ''
                        cdf: null
                        clen: null
                        column_name: id
                        cop: '1'
                        created_at: '2023-03-02 17:04:06'
                        csn: null
                        ct: int unsigned
                        deleted: null
                        dt: int
                        dtx: specificType
                        dtxp: ''
                        dtxs: '0'
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: cl_phvuuwjrzcdo0g
                        meta: null
                        np: '10'
                        ns: '0'
                        order: 1
                        pk: 1
                        base_id: p_xm3thidrblw4n7
                        pv: null
                        rqd: 1
                        system: 0
                        uidt: ID
                        un: 1
                        unique: 0
                        updated_at: '2023-03-02 17:04:06'
                        validate: null
                        virtual: null
                    columnsById:
                      cl_c5knoi4xs4sfpt:
                        title: Title
                        ai: 0
                        au: 0
                        source_id: ds_g4ccx6e77h1dmi
                        cc: ''
                        cdf: null
                        clen: '45'
                        column_name: title
                        cop: '2'
                        created_at: '2023-03-02 17:04:06'
                        csn: utf8mb4
                        ct: varchar(45)
                        deleted: null
                        dt: varchar
                        dtx: specificType
                        dtxp: '45'
                        dtxs: null
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: cl_c5knoi4xs4sfptX
                        meta: null
                        np: null
                        ns: null
                        order: 2
                        pk: 0
                        base_id: p_xm3thidrblw4n7
                        pv: 1
                        rqd: 0
                        system: 0
                        uidt: SingleLineText
                        un: 0
                        unique: 0
                        updated_at: '2023-03-02 17:04:06'
                        validate: null
                        virtual: null
                      cl_jpl0qu4gj4rexq:
                        title: CreatedAt
                        ai: 0
                        au: 0
                        source_id: ds_g4ccx6e77h1dmi
                        cc: ''
                        cdf: CURRENT_TIMESTAMP
                        clen: null
                        column_name: created_at
                        cop: '3'
                        created_at: '2023-03-02 17:04:06'
                        csn: null
                        ct: timestamp
                        deleted: null
                        dt: timestamp
                        dtx: specificType
                        dtxp: '0'
                        dtxs: null
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: cl_jpl0qu4gj4rexqX
                        meta: null
                        np: null
                        ns: null
                        order: 3
                        pk: 0
                        base_id: p_xm3thidrblw4n7
                        pv: null
                        rqd: 0
                        system: 0
                        uidt: DateTime
                        un: 0
                        unique: 0
                        updated_at: '2023-03-02 17:04:06'
                        validate: null
                        virtual: null
                      cl_m4wkaqgqqjzoeh:
                        title: UpdatedAt
                        ai: 0
                        au: 0
                        source_id: ds_g4ccx6e77h1dmi
                        cc: ''
                        cdf: CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP
                        clen: null
                        column_name: updated_at
                        cop: '4'
                        created_at: '2023-03-02 17:04:06'
                        csn: null
                        ct: timestamp
                        deleted: null
                        dt: timestamp
                        dtx: specificType
                        dtxp: '0'
                        dtxs: null
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: cl_m4wkaqgqqjzoehX
                        meta: null
                        np: null
                        ns: null
                        order: 4
                        pk: 0
                        base_id: p_xm3thidrblw4n7
                        pv: null
                        rqd: 0
                        system: 0
                        uidt: DateTime
                        un: 0
                        unique: 0
                        updated_at: '2023-03-02 17:04:06'
                        validate: null
                        virtual: null
                      cl_phvuuwjrzcdo0g:
                        title: Id
                        ai: 1
                        au: 0
                        source_id: ds_g4ccx6e77h1dmi
                        cc: ''
                        cdf: null
                        clen: null
                        column_name: id
                        cop: '1'
                        created_at: '2023-03-02 17:04:06'
                        csn: null
                        ct: int unsigned
                        deleted: null
                        dt: int
                        dtx: specificType
                        dtxp: ''
                        dtxs: '0'
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: cl_phvuuwjrzcdo0gX
                        meta: null
                        np: '10'
                        ns: '0'
                        order: 1
                        pk: 1
                        base_id: p_xm3thidrblw4n7
                        pv: null
                        rqd: 1
                        system: 0
                        uidt: ID
                        un: 1
                        unique: 0
                        updated_at: '2023-03-02 17:04:06'
                        validate: null
                        virtual: null
                    created_at: '2023-03-02 17:04:06'
                    deleted: null
                    enabled: 1
                    id: md_rsu68aqjsbyqtl
                    meta: null
                    mm: 0
                    order: 1
                    pinned: null
                    base_id: p_xm3thidrblw4n7
                    schema: null
                    table_name: nc_vm5q___Table1
                    type: table
                    updated_at: '2023-03-02 17:04:08'
                    views:
                      - title: Table1
                        _ptn: Table1
                        _tn: Table1
                        source_id: ds_g4ccx6e77h1dmi
                        created_at: '2023-03-02 17:04:06'
                        disabled:
                          commenter: false
                          creator: false
                          editor: false
                          guest: false
                          owner: false
                          viewer: false
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: vw_p2jcatxz4mvcfw
                        is_default: 1
                        lock_type: collaborative
                        meta: {}
                        order: 1
                        password: null
                        base_id: p_xm3thidrblw4n7
                        ptn: nc_vm5q___Table1
                        ptype: table
                        show: 1
                        show_system_fields: null
                        table_meta: null
                        tn: Table1
                        type: 3
                        updated_at: '2023-03-02 17:04:06'
                        uuid: null
                        view:
                          source_id: ds_g4ccx6e77h1dmi
                          created_at: '2023-03-02 17:04:06'
                          fk_view_id: vw_p2jcatxz4mvcfw
                          meta: null
                          base_id: p_xm3thidrblw4n7
                          row_height: null
                          updated_at: '2023-03-02 17:04:06'
                          uuid: null
        '400':
          $ref: '#/components/responses/BadRequest'
    get:
      tags:
        - DB Table
      summary: List Tables
      operationId: DbTable_listTables
      description: List all tables in a given base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
        - schema:
            type: number
          in: query
          name: page
        - schema:
            type: number
          in: query
          name: pageSize
        - schema:
            type: string
          in: query
          name: sort
        - schema:
            type: boolean
          in: query
          name: includeM2M
      responses:
        '200':
          $ref: '#/components/responses/TableList'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/tables/{tableId}:
    parameters:
      - description: Unique Table ID
        schema:
          $ref: '#/components/schemas/Id'
          example: md_w9gpnaousnfss1
          type: string
        name: tableId
        in: path
        required: true
    get:
      tags:
        - DB Table
      summary: Read Table
      operationId: DbTable_readByTableId
      description: Read the table meta data by the given table ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
              examples:
                Example 1:
                  value:
                    tags: null
                    title: Table1
                    id: md_rsu68aqjsbyqtlX
                    source_id: ds_g4ccx6e77h1dmi
                    base_id: p_xm3thidrblw4n7
                    table_name: nc_vm5q___Table1
                    type: table
                    meta: null
                    schema: null
                    enabled: 1
                    mm: 0
                    pinned: null
                    deleted: null
                    order: 1
                    created_at: '2023-03-02 17:04:06'
                    updated_at: '2023-03-02 17:04:08'
                    columns:
                      - title: Id
                        id: cl_phvuuwjrzcdo0gX
                        source_id: ds_g4ccx6e77h1dmi
                        base_id: p_xm3thidrblw4n7
                        fk_model_id: md_rsu68aqjsbyqtl
                        column_name: id
                        uidt: ID
                        dt: int
                        np: '10'
                        ns: '0'
                        clen: null
                        cop: '1'
                        pk: 1
                        pv: null
                        rqd: 1
                        un: 1
                        ct: int unsigned
                        ai: 1
                        unique: 0
                        cdf: null
                        cc: ''
                        csn: null
                        dtx: specificType
                        dtxp: ''
                        dtxs: '0'
                        au: 0
                        validate: null
                        virtual: null
                        deleted: null
                        system: 0
                        order: 1
                        created_at: '2023-03-02 17:04:06'
                        updated_at: '2023-03-02 17:04:06'
                        meta: null
                      - title: Title
                        id: cl_c5knoi4xs4sfptX
                        source_id: ds_g4ccx6e77h1dmi
                        base_id: p_xm3thidrblw4n7
                        fk_model_id: md_rsu68aqjsbyqtl
                        column_name: title
                        uidt: SingleLineText
                        dt: varchar
                        np: null
                        ns: null
                        clen: '45'
                        cop: '2'
                        pk: 0
                        pv: 1
                        rqd: 0
                        un: 0
                        ct: varchar(45)
                        ai: 0
                        unique: 0
                        cdf: null
                        cc: ''
                        csn: utf8mb4
                        dtx: specificType
                        dtxp: '45'
                        dtxs: null
                        au: 0
                        validate: null
                        virtual: null
                        deleted: null
                        system: 0
                        order: 2
                        created_at: '2023-03-02 17:04:06'
                        updated_at: '2023-03-02 17:04:06'
                        meta: null
                      - title: CreatedAt
                        id: cl_jpl0qu4gj4rexqX
                        source_id: ds_g4ccx6e77h1dmi
                        base_id: p_xm3thidrblw4n7
                        fk_model_id: md_rsu68aqjsbyqtl
                        column_name: created_at
                        uidt: DateTime
                        dt: timestamp
                        np: null
                        ns: null
                        clen: null
                        cop: '3'
                        pk: 0
                        pv: null
                        rqd: 0
                        un: 0
                        ct: timestamp
                        ai: 0
                        unique: 0
                        cdf: CURRENT_TIMESTAMP
                        cc: ''
                        csn: null
                        dtx: specificType
                        dtxp: '0'
                        dtxs: null
                        au: 0
                        validate: null
                        virtual: null
                        deleted: null
                        system: 0
                        order: 3
                        created_at: '2023-03-02 17:04:06'
                        updated_at: '2023-03-02 17:04:06'
                        meta: null
                      - title: UpdatedAt
                        id: cl_m4wkaqgqqjzoehX
                        source_id: ds_g4ccx6e77h1dmi
                        base_id: p_xm3thidrblw4n7
                        fk_model_id: md_rsu68aqjsbyqtl
                        column_name: updated_at
                        uidt: DateTime
                        dt: timestamp
                        np: null
                        ns: null
                        clen: null
                        cop: '4'
                        pk: 0
                        pv: null
                        rqd: 0
                        un: 0
                        ct: timestamp
                        ai: 0
                        unique: 0
                        cdf: CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP
                        cc: ''
                        csn: null
                        dtx: specificType
                        dtxp: '0'
                        dtxs: null
                        au: 0
                        validate: null
                        virtual: null
                        deleted: null
                        system: 0
                        order: 4
                        created_at: '2023-03-02 17:04:06'
                        updated_at: '2023-03-02 17:04:06'
                        meta: null
                    views:
                      - title: Table1
                        ptn: nc_vm5q___Table1
                        _ptn: Table1
                        ptype: table
                        tn: Table1
                        _tn: Table1
                        table_meta: null
                        id: vw_p2jcatxz4mvcfwX
                        source_id: ds_g4ccx6e77h1dmi
                        base_id: p_xm3thidrblw4n7
                        fk_model_id: md_rsu68aqjsbyqtl
                        type: 3
                        is_default: 1
                        show_system_fields: null
                        lock_type: collaborative
                        uuid: null
                        password: null
                        show: 1
                        order: 1
                        created_at: '2023-03-02 17:04:06'
                        updated_at: '2023-03-02 17:04:06'
                        meta: {}
                        view:
                          fk_view_id: vw_p2jcatxz4mvcfw
                          source_id: ds_g4ccx6e77h1dmi
                          base_id: p_xm3thidrblw4n7
                          uuid: null
                          created_at: '2023-03-02 17:04:06'
                          updated_at: '2023-03-02 17:04:06'
                          meta: null
                          row_height: null
                        disabled:
                          owner: false
                          creator: false
                          viewer: false
                          editor: false
                          commenter: false
                          guest: false
                    columnsById:
                      cl_phvuuwjrzcdo0g:
                        title: Id
                        id: cl_phvuuwjrzcdo0gX
                        source_id: ds_g4ccx6e77h1dmi
                        base_id: p_xm3thidrblw4n7
                        fk_model_id: md_rsu68aqjsbyqtl
                        column_name: id
                        uidt: ID
                        dt: int
                        np: '10'
                        ns: '0'
                        clen: null
                        cop: '1'
                        pk: 1
                        pv: null
                        rqd: 1
                        un: 1
                        ct: int unsigned
                        ai: 1
                        unique: 0
                        cdf: null
                        cc: ''
                        csn: null
                        dtx: specificType
                        dtxp: ''
                        dtxs: '0'
                        au: 0
                        validate: null
                        virtual: null
                        deleted: null
                        system: 0
                        order: 1
                        created_at: '2023-03-02 17:04:06'
                        updated_at: '2023-03-02 17:04:06'
                        meta: null
                      cl_c5knoi4xs4sfpt:
                        title: Title
                        id: cl_c5knoi4xs4sfptX
                        source_id: ds_g4ccx6e77h1dmi
                        base_id: p_xm3thidrblw4n7
                        fk_model_id: md_rsu68aqjsbyqtl
                        column_name: title
                        uidt: SingleLineText
                        dt: varchar
                        np: null
                        ns: null
                        clen: '45'
                        cop: '2'
                        pk: 0
                        pv: 1
                        rqd: 0
                        un: 0
                        ct: varchar(45)
                        ai: 0
                        unique: 0
                        cdf: null
                        cc: ''
                        csn: utf8mb4
                        dtx: specificType
                        dtxp: '45'
                        dtxs: null
                        au: 0
                        validate: null
                        virtual: null
                        deleted: null
                        system: 0
                        order: 2
                        created_at: '2023-03-02 17:04:06'
                        updated_at: '2023-03-02 17:04:06'
                        meta: null
                      cl_jpl0qu4gj4rexq:
                        title: CreatedAt
                        id: cl_jpl0qu4gj4rexqX
                        source_id: ds_g4ccx6e77h1dmi
                        base_id: p_xm3thidrblw4n7
                        fk_model_id: md_rsu68aqjsbyqtl
                        column_name: created_at
                        uidt: DateTime
                        dt: timestamp
                        np: null
                        ns: null
                        clen: null
                        cop: '3'
                        pk: 0
                        pv: null
                        rqd: 0
                        un: 0
                        ct: timestamp
                        ai: 0
                        unique: 0
                        cdf: CURRENT_TIMESTAMP
                        cc: ''
                        csn: null
                        dtx: specificType
                        dtxp: '0'
                        dtxs: null
                        au: 0
                        validate: null
                        virtual: null
                        deleted: null
                        system: 0
                        order: 3
                        created_at: '2023-03-02 17:04:06'
                        updated_at: '2023-03-02 17:04:06'
                        meta: null
                      cl_m4wkaqgqqjzoeh:
                        title: UpdatedAt
                        id: cl_m4wkaqgqqjzoehX
                        source_id: ds_g4ccx6e77h1dmi
                        base_id: p_xm3thidrblw4n7
                        fk_model_id: md_rsu68aqjsbyqtl
                        column_name: updated_at
                        uidt: DateTime
                        dt: timestamp
                        np: null
                        ns: null
                        clen: null
                        cop: '4'
                        pk: 0
                        pv: null
                        rqd: 0
                        un: 0
                        ct: timestamp
                        ai: 0
                        unique: 0
                        cdf: CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP
                        cc: ''
                        csn: null
                        dtx: specificType
                        dtxp: '0'
                        dtxs: null
                        au: 0
                        validate: null
                        virtual: null
                        deleted: null
                        system: 0
                        order: 4
                        created_at: '2023-03-02 17:04:06'
                        updated_at: '2023-03-02 17:04:06'
                        meta: null
        '400':
          $ref: '#/components/responses/BadRequest'
    patch:
      tags:
        - DB Table
      summary: Update Table
      operationId: DbTable_updateMeta
      description: Update the table meta data by the given table ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DbTableUpdateMetaRequest'
            examples:
              Example 1:
                value:
                  title: Users
                  table_name: users
                  base_id: p_124hhlkbeasewh
                  meta: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbTableUpdateMetaResponse'
              examples:
                Example 1:
                  value:
                    msg: The table has been updated successfully
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      tags:
        - DB Table
      summary: Delete Table
      operationId: DbTable_deleteByTableId
      description: Delete the table meta data by the given table ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbTableDeleteByTableIdResponse'
              examples:
                Example 1:
                  value: true
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/duplicate/{baseId}/table/{tableId}:
    post:
      tags:
        - DB Table
      summary: Duplicate Table
      operationId: DbTable_duplicateTablePost
      description: Duplicate a table
      parameters:
        - $ref: '#/components/parameters/xc-auth'
        - description: Unique Base ID
          schema:
            $ref: '#/components/schemas/Id'
            example: p_124hhlkbeasewh
            type: string
          name: baseId
          in: path
          required: true
        - description: Unique Table ID
          schema:
            $ref: '#/components/schemas/Id'
            example: md_124hhlkbeasewh
            type: string
          name: tableId
          in: path
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DbTableDuplicateTablePostRequest'
            examples:
              Example 1:
                value:
                  excludeData: true
                  excludeViews: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbTableDuplicateTablePostResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/bases/{baseId}/{sourceId}/tables:
    parameters:
      - description: Unique Base ID
        schema:
          $ref: '#/components/schemas/Id'
          example: p_124hhlkbeasewh
          type: string
        name: baseId
        in: path
        required: true
      - description: Unique Source ID
        schema:
          type: string
          pattern: ds_j04jmxh5xg10lu
        name: sourceId
        in: path
        required: true
    get:
      tags:
        - Source
      summary: List Tables
      operationId: Source_getTables
      description: List all tables in a given Base and Source
      parameters:
        - $ref: '#/components/parameters/xc-auth'
        - schema:
            type: number
          in: query
          name: page
        - schema:
            type: number
          in: query
          name: pageSize
        - schema:
            type: string
          in: query
          name: sort
        - schema:
            type: boolean
          in: query
          name: includeM2M
      responses:
        '200':
          $ref: '#/components/responses/TableList'
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      tags:
        - Source
      summary: Create Table
      operationId: Source_createTable
      description: Create a new table in a given Base and Source
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableReq'
            examples:
              Example 1:
                value:
                  title: Sheet-1
                  columns:
                    - title: UpdatedAt
                      ai: false
                      altered: 1
                      cdf: CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP
                      ck: false
                      clen: 45
                      column_name: updated_at
                      ct: varchar(45)
                      dt: timestamp
                      dtx: specificType
                      dtxp: ''
                      dtxs: ''
                      np: null
                      nrqd: true
                      ns: null
                      pk: false
                      rqd: false
                      uicn: ''
                      uidt: DateTime
                      uip: ''
                      un: false
                    - title: CreatedAt
                      ai: false
                      altered: 1
                      cdf: CURRENT_TIMESTAMP
                      ck: false
                      clen: 45
                      column_name: created_at
                      ct: varchar(45)
                      dt: timestamp
                      dtx: specificType
                      dtxp: ''
                      dtxs: ''
                      np: null
                      nrqd: true
                      ns: null
                      pk: false
                      rqd: false
                      uicn: ''
                      uidt: DateTime
                      uip: ''
                      un: false
                    - title: Title
                      ai: false
                      altered: 1
                      cdf: null
                      ck: false
                      clen: 45
                      column_name: title
                      ct: varchar(45)
                      dt: varchar
                      dtx: specificType
                      dtxp: '45'
                      dtxs: ''
                      np: null
                      nrqd: true
                      ns: null
                      pk: false
                      rqd: false
                      uicn: ''
                      uidt: SingleLineText
                      uip: ''
                      un: false
                    - title: Id
                      ai: true
                      altered: 1
                      cdf: null
                      ck: false
                      clen: null
                      column_name: id
                      ct: int(11)
                      dt: int
                      dtx: integer
                      dtxp: '11'
                      dtxs: ''
                      np: 11
                      nrqd: false
                      ns: 0
                      pk: true
                      rqd: true
                      uicn: ''
                      uidt: ID
                      uip: ''
                      un: true
                  table_name: Sheet-1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
              examples:
                Example 1:
                  value:
                    tags: null
                    title: Table1
                    source_id: ds_g4ccx6e77h1dmi
                    columns:
                      - title: UpdatedAt
                        ai: 0
                        au: 0
                        source_id: ds_g4ccx6e77h1dmi
                        cc: ''
                        cdf: CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP
                        clen: null
                        column_name: updated_at
                        cop: '4'
                        created_at: '2023-03-02 17:04:06'
                        csn: null
                        ct: timestamp
                        deleted: null
                        dt: timestamp
                        dtx: specificType
                        dtxp: '0'
                        dtxs: null
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: cl_m4wkaqgqqjzoehX
                        meta: null
                        np: null
                        ns: null
                        order: 4
                        pk: 0
                        base_id: p_xm3thidrblw4n7
                        pv: null
                        rqd: 0
                        system: 0
                        uidt: DateTime
                        un: 0
                        unique: 0
                        updated_at: '2023-03-02 17:04:06'
                        validate: null
                        virtual: null
                      - title: CreatedAt
                        ai: 0
                        au: 0
                        source_id: ds_g4ccx6e77h1dmi
                        cc: ''
                        cdf: CURRENT_TIMESTAMP
                        clen: null
                        column_name: created_at
                        cop: '3'
                        created_at: '2023-03-02 17:04:06'
                        csn: null
                        ct: timestamp
                        deleted: null
                        dt: timestamp
                        dtx: specificType
                        dtxp: '0'
                        dtxs: null
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: cl_jpl0qu4gj4rexqX
                        meta: null
                        np: null
                        ns: null
                        order: 3
                        pk: 0
                        base_id: p_xm3thidrblw4n7
                        pv: null
                        rqd: 0
                        system: 0
                        uidt: DateTime
                        un: 0
                        unique: 0
                        updated_at: '2023-03-02 17:04:06'
                        validate: null
                        virtual: null
                      - title: Title
                        ai: 0
                        au: 0
                        source_id: ds_g4ccx6e77h1dmi
                        cc: ''
                        cdf: null
                        clen: '45'
                        column_name: title
                        cop: '2'
                        created_at: '2023-03-02 17:04:06'
                        csn: utf8mb4
                        ct: varchar(45)
                        deleted: null
                        dt: varchar
                        dtx: specificType
                        dtxp: '45'
                        dtxs: null
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: cl_c5knoi4xs4sfptX
                        meta: null
                        np: null
                        ns: null
                        order: 2
                        pk: 0
                        base_id: p_xm3thidrblw4n7
                        pv: 1
                        rqd: 0
                        system: 0
                        uidt: SingleLineText
                        un: 0
                        unique: 0
                        updated_at: '2023-03-02 17:04:06'
                        validate: null
                        virtual: null
                      - title: Id
                        ai: 1
                        au: 0
                        source_id: ds_g4ccx6e77h1dmi
                        cc: ''
                        cdf: null
                        clen: null
                        column_name: id
                        cop: '1'
                        created_at: '2023-03-02 17:04:06'
                        csn: null
                        ct: int unsigned
                        deleted: null
                        dt: int
                        dtx: specificType
                        dtxp: ''
                        dtxs: '0'
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: cl_phvuuwjrzcdo0gX
                        meta: null
                        np: '10'
                        ns: '0'
                        order: 1
                        pk: 1
                        base_id: p_xm3thidrblw4n7
                        pv: null
                        rqd: 1
                        system: 0
                        uidt: ID
                        un: 1
                        unique: 0
                        updated_at: '2023-03-02 17:04:06'
                        validate: null
                        virtual: null
                    columnsById:
                      cl_c5knoi4xs4sfpt:
                        title: Title
                        ai: 0
                        au: 0
                        source_id: ds_g4ccx6e77h1dmi
                        cc: ''
                        cdf: null
                        clen: '45'
                        column_name: title
                        cop: '2'
                        created_at: '2023-03-02 17:04:06'
                        csn: utf8mb4
                        ct: varchar(45)
                        deleted: null
                        dt: varchar
                        dtx: specificType
                        dtxp: '45'
                        dtxs: null
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: cl_c5knoi4xs4sfptX
                        meta: null
                        np: null
                        ns: null
                        order: 2
                        pk: 0
                        base_id: p_xm3thidrblw4n7
                        pv: 1
                        rqd: 0
                        system: 0
                        uidt: SingleLineText
                        un: 0
                        unique: 0
                        updated_at: '2023-03-02 17:04:06'
                        validate: null
                        virtual: null
                      cl_jpl0qu4gj4rexq:
                        title: CreatedAt
                        ai: 0
                        au: 0
                        source_id: ds_g4ccx6e77h1dmi
                        cc: ''
                        cdf: CURRENT_TIMESTAMP
                        clen: null
                        column_name: created_at
                        cop: '3'
                        created_at: '2023-03-02 17:04:06'
                        csn: null
                        ct: timestamp
                        deleted: null
                        dt: timestamp
                        dtx: specificType
                        dtxp: '0'
                        dtxs: null
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: cl_jpl0qu4gj4rexqX
                        meta: null
                        np: null
                        ns: null
                        order: 3
                        pk: 0
                        base_id: p_xm3thidrblw4n7
                        pv: null
                        rqd: 0
                        system: 0
                        uidt: DateTime
                        un: 0
                        unique: 0
                        updated_at: '2023-03-02 17:04:06'
                        validate: null
                        virtual: null
                      cl_m4wkaqgqqjzoeh:
                        title: UpdatedAt
                        ai: 0
                        au: 0
                        source_id: ds_g4ccx6e77h1dmi
                        cc: ''
                        cdf: CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP
                        clen: null
                        column_name: updated_at
                        cop: '4'
                        created_at: '2023-03-02 17:04:06'
                        csn: null
                        ct: timestamp
                        deleted: null
                        dt: timestamp
                        dtx: specificType
                        dtxp: '0'
                        dtxs: null
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: cl_m4wkaqgqqjzoehX
                        meta: null
                        np: null
                        ns: null
                        order: 4
                        pk: 0
                        base_id: p_xm3thidrblw4n7
                        pv: null
                        rqd: 0
                        system: 0
                        uidt: DateTime
                        un: 0
                        unique: 0
                        updated_at: '2023-03-02 17:04:06'
                        validate: null
                        virtual: null
                      cl_phvuuwjrzcdo0g:
                        title: Id
                        ai: 1
                        au: 0
                        source_id: ds_g4ccx6e77h1dmi
                        cc: ''
                        cdf: null
                        clen: null
                        column_name: id
                        cop: '1'
                        created_at: '2023-03-02 17:04:06'
                        csn: null
                        ct: int unsigned
                        deleted: null
                        dt: int
                        dtx: specificType
                        dtxp: ''
                        dtxs: '0'
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: cl_phvuuwjrzcdo0gX
                        meta: null
                        np: '10'
                        ns: '0'
                        order: 1
                        pk: 1
                        base_id: p_xm3thidrblw4n7
                        pv: null
                        rqd: 1
                        system: 0
                        uidt: ID
                        un: 1
                        unique: 0
                        updated_at: '2023-03-02 17:04:06'
                        validate: null
                        virtual: null
                    created_at: '2023-03-02 17:04:06'
                    deleted: null
                    enabled: 1
                    id: md_rsu68aqjsbyqtlX
                    meta: null
                    mm: 0
                    order: 1
                    pinned: null
                    base_id: p_xm3thidrblw4n7
                    schema: null
                    table_name: nc_vm5q___Table1
                    type: table
                    updated_at: '2023-03-02 17:04:08'
                    views:
                      - title: Table1
                        _ptn: Table1
                        _tn: Table1
                        source_id: ds_g4ccx6e77h1dmi
                        created_at: '2023-03-02 17:04:06'
                        disabled:
                          commenter: false
                          creator: false
                          editor: false
                          guest: false
                          owner: false
                          viewer: false
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: vw_p2jcatxz4mvcfwX
                        is_default: 1
                        lock_type: collaborative
                        meta: {}
                        order: 1
                        password: null
                        base_id: p_xm3thidrblw4n7
                        ptn: nc_vm5q___Table1
                        ptype: table
                        show: 1
                        show_system_fields: null
                        table_meta: null
                        tn: Table1
                        type: 3
                        updated_at: '2023-03-02 17:04:06'
                        uuid: null
                        view:
                          source_id: ds_g4ccx6e77h1dmi
                          created_at: '2023-03-02 17:04:06'
                          fk_view_id: vw_p2jcatxz4mvcfw
                          meta: null
                          base_id: p_xm3thidrblw4n7
                          row_height: null
                          updated_at: '2023-03-02 17:04:06'
                          uuid: null
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/tables/{tableId}/reorder:
    parameters:
      - description: Unique Table ID
        schema:
          $ref: '#/components/schemas/Id'
          example: md_w9gpnaousnfss1
          type: string
        name: tableId
        in: path
        required: true
    post:
      tags:
        - DB Table
      summary: Reorder Table
      operationId: DbTable_updateTableOrder
      description: Update the order of the given Table
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DbTableUpdateTableOrderRequest'
            examples:
              Example 1:
                value:
                  order: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbTableUpdateTableOrderResponse'
              examples:
                Example 1:
                  value: true
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/tables/{tableId}/columns:
    parameters:
      - description: Unique Table ID
        schema:
          $ref: '#/components/schemas/Id'
          example: md_w9gpnaousnfss1
          type: string
        name: tableId
        in: path
        required: true
    post:
      tags:
        - DB Table Column
      summary: Create Column
      operationId: DbTableColumn_createNewColumn
      description: Create a new column in a given Table
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ColumnReq'
            examples:
              Example 1:
                value:
                  title: Title
                  ai: 0
                  au: 0
                  source_id: ds_krsappzu9f8vmo
                  cc: ''
                  cdf: null
                  clen: '45'
                  column_name: title
                  cop: '2'
                  csn: utf8mb4
                  ct: varchar(45)
                  deleted: null
                  dt: varchar
                  dtx: specificType
                  dtxp: '45'
                  dtxs: null
                  fk_model_id: md_yvwvbt2i78rgcm
                  id: cl_0j9gv0oi8vjy46
                  meta: null
                  np: null
                  ns: null
                  order: 2
                  pk: 0
                  base_id: p_01clqvzik3izk6
                  pv: 1
                  rqd: 0
                  system: 0
                  uidt: SingleLineText
                  un: 0
                  unique: 0
                  validate: null
                  virtual: null
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/columns/{columnId}:
    parameters:
      - schema:
          type: string
        name: columnId
        in: path
        required: true
    patch:
      tags:
        - DB Table Column
      summary: Update Column
      operationId: DbTableColumn_updateByColumnId
      description: Update the existing column by the given column ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ColumnReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Column'
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      tags:
        - DB Table Column
      summary: Delete Column
      operationId: DbTableColumn_deleteByColumnId
      description: Delete the existing column by the given column ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
    get:
      tags:
        - DB Table Column
      summary: Get Column
      operationId: DbTableColumn_getColumnById
      description: Get the existing column by the given column ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/columns/{columnId}/primary:
    parameters:
      - schema:
          type: string
        name: columnId
        in: path
        required: true
    post:
      tags:
        - DB Table Column
      summary: Create Primary Value
      operationId: DbTableColumn_setPrimaryValue
      description: Set a primary value on a given column
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbTableColumnSetPrimaryValueResponse'
              examples:
                Example 1:
                  value: true
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/tables/{tableId}/views:
    parameters:
      - description: Unique Table ID
        schema:
          $ref: '#/components/schemas/Id'
          example: md_w9gpnaousnfss1
          type: string
        name: tableId
        in: path
        required: true
    get:
      tags:
        - DB View
      summary: List Views
      operationId: DbView_listTableViews
      description: List all views in a given Table.
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewList'
              examples:
                Example 1:
                  value:
                    list:
                      - tags: string
                        title: string
                        alias: string
                        column:
                          - title: string
                            alias: string
                            auto_increment: true
                            auto_update_timestamp: true
                            source_id: string
                            character_maximum_length: string
                            character_set_name: string
                            colOptions:
                              deleted: string
                              dr: string
                              fk_child_column_id: string
                              fk_column_id: string
                              fk_index_name: string
                              fk_mm_child_column_id: string
                              fk_mm_model_id: string
                              fk_mm_parent_column_id: string
                              fk_parent_column_id: string
                              id: stringX
                              order: string
                              type: string
                              ur: string
                              virtual: true
                            column_comment: string
                            column_default: string
                            column_ordinal_position: string
                            column_type: string
                            data_type: string
                            data_type_x: string
                            data_type_x_precision: string
                            data_type_x_scale: string
                            deleted: true
                            fk_model_id: string
                            id: stringX
                            numeric_precision: string
                            numeric_scale: string
                            order: 0
                            primary_key: true
                            primary_value: true
                            rqd: string
                            ui_data_type: string
                            un: string
                            unique: true
                            visible: true
                        columnByIds: {}
                        deleted: true
                        enabled: true
                        fk_base_id: string
                        fk_project_id: string
                        id: stringX
                        order: 0
                        parent_id: string
                        pinned: true
                        show_as: string
                        type: string
                    pageInfo:
                      isFirstPage: true
                      isLastPage: true
                      page: 1
                      pageSize: 10
                      totalRows: 1
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/views/{viewId}:
    parameters:
      - description: Unique View ID
        schema:
          $ref: '#/components/schemas/Id'
          example: vw_wtdg2meyig5l4q
        name: viewId
        in: path
        required: true
    patch:
      tags:
        - DB View
      summary: Update View
      operationId: DbView_updateById
      description: Update the view with the given view Id.
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewUpdateReq'
            examples:
              Example 1:
                value:
                  title: Grid View 1
                  uuid: e2457bbf-e29c-4fec-866e-fe3b01dba57f
                  password: password123
                  lock_type: collaborative
                  meta: '{"allowCSVDownload":true}'
                  order: 1
                  show_system_fields: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
              examples:
                Example 1:
                  value:
                    title: Grid View 1
                    source_id: ds_g4ccx6e77h1dmi
                    created_at: '2023-03-02 17:46:31'
                    fk_model_id: md_mhs9z4r2ak98x0
                    id: vw_lg052cnc1c26kf
                    is_default: 1
                    lock_type: collaborative
                    meta: '{"allowCSVDownload":true}'
                    order: 1
                    password: password123
                    base_id: p_xm3thidrblw4n7
                    show: 1
                    show_system_fields: null
                    type: 3
                    updated_at: '2023-03-02 17:46:31'
                    uuid: null
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      tags:
        - DB View
      summary: Delete View
      operationId: DbView_deleteViewById
      description: Delete the view with the given view Id.
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbViewDeleteViewByIdResponse'
              examples:
                Example 1:
                  value: true
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/views/{viewId}/show-all:
    parameters:
      - description: Unique View ID
        schema:
          $ref: '#/components/schemas/Id'
          example: vw_wtdg2meyig5l4q
        name: viewId
        in: path
        required: true
    post:
      tags:
        - DB View
      summary: Show All Columns In View
      operationId: DbView_showAllColumns
      description: Show All Columns in a given View
      parameters:
        - schema:
            type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
          in: query
          name: ignoreIds
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbViewShowAllColumnsResponse'
              examples:
                Example 1:
                  value: true
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/views/{viewId}/hide-all:
    parameters:
      - description: Unique View ID
        schema:
          $ref: '#/components/schemas/Id'
          example: vw_wtdg2meyig5l4q
        name: viewId
        in: path
        required: true
    post:
      tags:
        - DB View
      summary: Hide All Columns In View
      operationId: DbView_hideAllColumns
      description: Hide All Columns in a given View
      parameters:
        - schema:
            type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
          in: query
          name: ignoreIds
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbViewHideAllColumnsResponse'
              examples:
                Example 1:
                  value: true
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/tables/{tableId}/share:
    parameters:
      - description: Unique Table ID
        schema:
          $ref: '#/components/schemas/Id'
          example: md_w9gpnaousnfss1
          type: string
        name: tableId
        in: path
        required: true
    get:
      tags:
        - DB View Share
      summary: List Shared Views
      operationId: DbViewShare_listSharedViews
      description: List all shared views in a given Table
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedViewList'
              examples:
                Example 1:
                  value:
                    list:
                      - title: Sheet-1
                        source_id: ds_g4ccx6e77h1dmi
                        created_at: '2023-03-02 17:46:31'
                        fk_model_id: md_mhs9z4r2ak98x0
                        id: vw_lg052cnc1c26kfX
                        is_default: 1
                        lock_type: collaborative
                        meta: {}
                        order: 1
                        base_id: p_xm3thidrblw4n7
                        show: 1
                        show_system_fields: null
                        type: 3
                        updated_at: '2023-03-02 17:46:31'
                        uuid: null
                        view:
                          source_id: ds_g4ccx6e77h1dmi
                          created_at: '2023-03-02 17:46:31'
                          fk_view_id: vw_lg052cnc1c26kf
                          meta: null
                          base_id: p_xm3thidrblw4n7
                          row_height: null
                          updated_at: '2023-03-02 17:46:31'
                          uuid: null
                    pageInfo:
                      isFirstPage: true
                      isLastPage: true
                      page: 1
                      pageSize: 10
                      totalRows: 1
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/views/{viewId}/share:
    parameters:
      - description: Unique View ID
        schema:
          type: string
          example: vw_wtdg2meyig5l4q
        name: viewId
        in: path
        required: true
    post:
      tags:
        - DB View Share
      summary: Create Shared View
      operationId: DbViewShare_createSharedView
      description: Create a shared view in a given View..
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedViewReq'
              examples:
                Example 1:
                  value:
                    meta: {}
                    password: '123456789'
        '400':
          $ref: '#/components/responses/BadRequest'
    patch:
      tags:
        - DB View Share
      summary: Update Shared View
      operationId: DbViewShare_updateSharedView
      description: Update a shared view in a given View..
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedViewReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedView'
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      tags:
        - DB View Share
      summary: Delete Shared View
      operationId: DbViewShare_deleteSharedView
      description: Delete a shared view in a given View.
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbViewShareDeleteSharedViewResponse'
              examples:
                Example 1:
                  value: true
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/views/{viewId}/columns:
    parameters:
      - description: Unique View ID
        schema:
          type: string
          example: vw_wtdg2meyig5l4q
        name: viewId
        in: path
        required: true
    get:
      tags:
        - DB View Column
      summary: List Columns In View
      operationId: DbViewColumn_listByView
      description: List all columns by ViewID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ColumnList'
              examples:
                Example 1:
                  value:
                    list:
                      - title: Title
                        ai: 0
                        au: 0
                        source_id: ds_krsappzu9f8vmo
                        cc: ''
                        cdf: null
                        clen: '45'
                        column_name: title
                        cop: '2'
                        created_at: '2023-03-02 13:14:16'
                        csn: utf8mb4
                        ct: varchar(45)
                        deleted: null
                        dt: varchar
                        dtx: specificType
                        dtxp: '45'
                        dtxs: null
                        fk_model_id: md_yvwvbt2i78rgcm
                        id: cl_0j9gv0oi8vjy46X
                        meta: null
                        np: null
                        ns: null
                        order: 2
                        pk: 0
                        base_id: p_01clqvzik3izk6
                        pv: 1
                        rqd: 0
                        system: 0
                        uidt: SingleLineText
                        un: 0
                        unique: 0
                        updated_at: '2023-03-02 13:14:16'
                        validate: null
                        virtual: null
                    pageInfo:
                      isFirstPage: true
                      isLastPage: true
                      page: 1
                      pageSize: 10
                      totalRows: 1
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      tags:
        - DB View Column
      summary: Create Column in View
      operationId: DbViewColumn_createNewColumn
      description: Create a new column in a given View
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewColumnReq'
            examples:
              Example 1:
                value:
                  fk_column_id: cl_m4wkaqgqqjzoeh
                  show: 0
                  order: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Column'
              examples:
                Example 1:
                  value:
                    title: Title
                    ai: 0
                    au: 0
                    source_id: ds_krsappzu9f8vmo
                    cc: ''
                    cdf: null
                    clen: '45'
                    column_name: title
                    cop: '2'
                    created_at: '2023-03-02 13:14:16'
                    csn: utf8mb4
                    ct: varchar(45)
                    deleted: null
                    dt: varchar
                    dtx: specificType
                    dtxp: '45'
                    dtxs: null
                    fk_model_id: md_yvwvbt2i78rgcm
                    id: cl_0j9gv0oi8vjy46X
                    meta: null
                    np: null
                    ns: null
                    order: 2
                    pk: 0
                    base_id: p_01clqvzik3izk6
                    pv: 1
                    rqd: 0
                    system: 0
                    uidt: SingleLineText
                    un: 0
                    unique: 0
                    updated_at: '2023-03-02 13:14:16'
                    validate: null
                    virtual: null
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/views/{viewId}/columns/{columnId}:
    parameters:
      - schema:
          $ref: '#/components/schemas/Id'
          example: vw_wtdg2meyig5l4q
        name: viewId
        in: path
        required: true
      - description: Unique Column ID
        schema:
          $ref: '#/components/schemas/Id'
          example: cl_8iw2o4ejzvdyna
          type: string
        name: columnId
        in: path
        required: true
    patch:
      tags:
        - DB View Column
      summary: Update View Column
      operationId: DbViewColumn_updateColumn
      description: Update a column in a View
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewColumnUpdateReq'
            examples:
              Example 1:
                value:
                  show: 0
                  order: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbViewColumnUpdateColumnResponse'
              examples:
                Example 1:
                  value: 1
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/views/{viewId}/sorts:
    parameters:
      - description: Unique View ID
        schema:
          type: string
          example: vw_wtdg2meyig5l4q
        name: viewId
        in: path
        required: true
    get:
      tags:
        - DB Table Sort
      summary: List View Sorts
      operationId: DbTableSort_getAllSorts
      description: List all the sort data in a given View
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SortList'
              examples:
                Example 1:
                  value:
                    list:
                      - id: so_xd4t51uv60ghzl
                        fk_column_id: cl_l11b769pe2j1ce
                        fk_model_id: md_ehn5izr99m7d45
                        source_id: ds_3l9qx8xqksenrl
                        direction: desc
                        order: 1
                        base_id: p_9sx43moxhqtjm3
                    pageInfo:
                      isFirstPage: true
                      isLastPage: true
                      page: 1
                      pageSize: 10
                      totalRows: 1
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      tags:
        - DB Table Sort
      summary: Update View Sort
      operationId: DbTableSort_updateViewSort
      description: Update the sort data in a given View
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DbTableSortUpdateViewSortRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbTableSortUpdateViewSortResponse'
              examples:
                Example 1:
                  value: 1
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/sorts/{sortId}:
    parameters:
      - description: Unique Sort ID
        schema:
          type: string
          example: so_xd4t51uv60ghzl
        name: sortId
        in: path
        required: true
    get:
      tags:
        - DB Table Sort
      summary: Get Sort
      operationId: DbTableSort_getSortById
      description: Get the sort data by Sort ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sort'
              examples:
                Example 1:
                  value:
                    id: so_xd4t51uv60ghzlX
                    fk_column_id: cl_l11b769pe2j1ce
                    fk_model_id: md_ehn5izr99m7d45
                    source_id: ds_3l9qx8xqksenrl
                    direction: desc
                    order: 1
                    base_id: p_9sx43moxhqtjm3
        '400':
          $ref: '#/components/responses/BadRequest'
    patch:
      tags:
        - DB Table Sort
      summary: Update Sort
      operationId: DbTableSort_updateSortById
      description: Update the sort data by Sort ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SortReq'
            examples:
              Example 1:
                value:
                  direction: asc
                  fk_column_id: cl_l11b769pe2j1ce
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbTableSortUpdateSortByIdResponse'
              examples:
                Example 1:
                  value: 1
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      tags:
        - DB Table Sort
      summary: Delete Sort
      operationId: DbTableSort_deleteById
      description: Delete the sort data by Sort ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbTableSortDeleteByIdResponse'
              examples:
                Example 1:
                  value: true
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/views/{viewId}/filters:
    parameters:
      - description: Unique View ID
        schema:
          type: string
          example: vw_wtdg2meyig5l4q
        name: viewId
        in: path
        required: true
    get:
      tags:
        - DB Table Filter
      summary: Get View Filter
      operationId: DbTableFilter_getViewData
      description: Get the filter data in a given View
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterList'
              examples:
                Example 1:
                  value:
                    list:
                      - source_id: ds_g4ccx6e77h1dmi
                        comparison_op: eq
                        comparison_sub_op: null
                        created_at: '2023-03-02 18:18:05'
                        fk_column_id: cl_d7ah9n2qfupgys
                        fk_hook_id: null
                        fk_parent_id: null
                        fk_view_id: vw_b739e29vqmrxnf
                        id: fi_xn647tpmdq8fu8
                        is_group: null
                        logical_op: and
                        order: 1
                        base_id: p_xm3thidrblw4n7
                        updated_at: '2023-03-02 18:18:05'
                        value: foo
                    pageInfo:
                      isFirstPage: true
                      isLastPage: true
                      page: 1
                      pageSize: 10
                      totalRows: 1
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      tags:
        - DB Table Filter
      summary: Create View Filter
      operationId: DbTableFilter_createViewFilter
      description: Update the filter data in a given View
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterReq'
            examples:
              Example 1:
                value:
                  comparison_op: eq
                  comparison_sub_op: null
                  fk_column_id: cl_d7ah9n2qfupgys
                  is_group: false
                  logical_op: and
                  value: foo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
              examples:
                Example 1:
                  value:
                    source_id: ds_g4ccx6e77h1dmi
                    comparison_op: eq
                    comparison_sub_op: null
                    created_at: '2023-03-02 18:18:05'
                    fk_column_id: cl_d7ah9n2qfupgys
                    fk_hook_id: null
                    fk_parent_id: null
                    fk_view_id: vw_b739e29vqmrxnf
                    id: fi_xn647tpmdq8fu8X
                    is_group: null
                    logical_op: and
                    order: 1
                    base_id: p_xm3thidrblw4n7
                    updated_at: '2023-03-02 18:18:05'
                    value: foo
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/hooks/{hookId}/filters:
    parameters:
      - description: Unique Hook ID
        schema:
          $ref: '#/components/schemas/Id'
          example: hk_0063k4o1frnxbr
        name: hookId
        in: path
        required: true
    get:
      tags:
        - DB Table Webhook Filter
      summary: Get Hook Filter
      operationId: DbTableWebhookFilter_getHookFilter
      description: Get the filter data in a given Hook
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterList'
              examples:
                Example 1:
                  value:
                    list:
                      - source_id: ds_g4ccx6e77h1dmi
                        comparison_op: eq
                        comparison_sub_op: null
                        created_at: '2023-03-02 18:18:05'
                        fk_column_id: cl_d7ah9n2qfupgys
                        fk_hook_id: null
                        fk_parent_id: null
                        fk_view_id: vw_b739e29vqmrxnf
                        id: fi_xn647tpmdq8fu8X
                        is_group: null
                        logical_op: and
                        order: 1
                        base_id: p_xm3thidrblw4n7
                        updated_at: '2023-03-02 18:18:05'
                        value: foo
                    pageInfo:
                      isFirstPage: true
                      isLastPage: true
                      page: 1
                      pageSize: 10
                      totalRows: 1
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      tags:
        - DB Table Webhook Filter
      summary: Create Hook Filter
      operationId: DbTableWebhookFilter_createNewFilter
      description: Create filter(s) in a given Hook
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterReq'
            examples:
              Example 1:
                value:
                  comparison_op: eq
                  comparison_sub_op: null
                  fk_column_id: cl_d7ah9n2qfupgys
                  is_group: false
                  logical_op: and
                  value: foo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
              examples:
                Example 1:
                  value:
                    source_id: ds_g4ccx6e77h1dmi
                    comparison_op: eq
                    comparison_sub_op: null
                    created_at: '2023-03-02 18:18:05'
                    fk_column_id: cl_d7ah9n2qfupgys
                    fk_hook_id: null
                    fk_parent_id: null
                    fk_view_id: vw_b739e29vqmrxnf
                    id: fi_xn647tpmdq8fu8X
                    is_group: null
                    logical_op: and
                    order: 1
                    base_id: p_xm3thidrblw4n7
                    updated_at: '2023-03-02 18:18:05'
                    value: foo
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/hooks/{hookId}/logs:
    parameters:
      - description: Unique Hook ID
        schema:
          $ref: '#/components/schemas/Id'
          example: hk_0063k4o1frnxbr
        name: hookId
        in: path
        required: true
    get:
      tags:
        - DB Table Webhook Logs
      summary: List Hook Logs
      operationId: DbTableWebhookLogs_list
      description: List the log data in a given Hook
      parameters:
        - schema:
            type: integer
            minimum: 1
          in: query
          name: limit
        - schema:
            type: integer
            minimum: 0
          in: query
          name: offset
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HookLogList'
              examples:
                Example 1:
                  value:
                    list:
                      - source_id: ds_jxuewivwbxeum2
                        event: after
                        execution_time: '98'
                        fk_hook_id: hk_035ijv5qdi97y5
                        id: stringX
                        notifications: >-
                          {"type":"URL","payload":{"method":"POST","body":"{{
                          json data
                          }}","headers":[{}],"parameters":[{}],"auth":"","path":"https://webhook.site/6eb45ce5-b611-4be1-8b96-c2965755662b"}}
                        operation: insert
                        payload: >-
                          {"method":"POST","body":"{{ json data
                          }}","headers":[{}],"parameters":[{}],"auth":"","path":"https://webhook.site/6eb45ce5-b611-4be1-8b96-c2965755662b"}
                        base_id: p_tbhl1hnycvhe5l
                        response: >-
                          {"status":200,"statusText":"OK","headers":{"server":"nginx","content-type":"text/plain;
                          charset=UTF-8","transfer-encoding":"chunked","connection":"close","vary":"Accept-Encoding","x-request-id":"53844a7d-ede8-4798-adf7-8af441908a72","x-token-id":"6eb45ce5-b611-4be1-8b96-c2965755662b","cache-control":"no-cache,
                          private","date":"Fri, 24 Mar 2023 10:50:10
                          GMT"},"config":{"url":"https://webhook.site/6eb45ce5-b611-4be1-8b96-c2965755662b","method":"post","data":"{\"type\":\"records.after.insert\",\"id\":\"a77d97dc-a3e4-4719-9b46-45f93e0cc99a\",\"data\":{\"table_id\":\"md_d8v403o74mf5lf\",\"table_name\":\"Sheet-2\"}}","headers":{"Accept":"application/json,
                          text/plain,
                          */*","Content-Type":"application/x-www-form-urlencoded","User-Agent":"axios/0.21.4","Content-Length":138},"params":{}}}
                        test_call: 0
                        triggered_by: w@nocodb.com
                        type: URL
                    pageInfo:
                      isFirstPage: true
                      isLastPage: true
                      page: 1
                      pageSize: 10
                      totalRows: 1
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/filters/{filterId}:
    parameters:
      - description: Unique Filter ID
        schema:
          $ref: '#/components/schemas/Id'
          pattern: fi_pgfuo11uhn2xeo
        name: filterId
        in: path
        required: true
    get:
      tags:
        - DB Table Filter
      summary: Get Filter
      operationId: DbTableFilter_getById
      description: Get the filter data with a given Filter ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
              examples:
                Example 1:
                  value:
                    source_id: ds_g4ccx6e77h1dmi
                    comparison_op: eq
                    comparison_sub_op: null
                    created_at: '2023-03-02 18:18:05'
                    fk_column_id: cl_d7ah9n2qfupgys
                    fk_hook_id: null
                    fk_parent_id: null
                    fk_view_id: vw_b739e29vqmrxnf
                    id: fi_xn647tpmdq8fu8X
                    is_group: null
                    logical_op: and
                    order: 1
                    base_id: p_xm3thidrblw4n7
                    updated_at: '2023-03-02 18:18:05'
                    value: foo
        '400':
          $ref: '#/components/responses/BadRequest'
    patch:
      tags:
        - DB Table Filter
      summary: Update Filter
      operationId: DbTableFilter_updateById
      description: Update the filter data with a given Filter ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterReq'
            examples:
              Example 1:
                value:
                  comparison_op: eq
                  comparison_sub_op: null
                  fk_column_id: cl_d7ah9n2qfupgys
                  is_group: false
                  logical_op: and
                  value: foo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbTableFilterUpdateByIdResponse'
              examples:
                Example 1:
                  value: 1
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      tags:
        - DB Table Filter
      summary: Delete Filter
      operationId: DbTableFilter_deleteById
      description: Delete the filter data with a given Filter ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbTableFilterDeleteByIdResponse'
              examples:
                Example 1:
                  value: true
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/filters/{filterGroupId}/children:
    parameters:
      - schema:
          description: Filter Group ID
          $ref: '#/components/schemas/Id'
          example: fi_pgfuo11uhn2xeo
        name: filterGroupId
        in: path
        required: true
    get:
      tags:
        - DB Table Filter
      summary: Get Filter Group Children
      operationId: DbTableFilter_getChildren
      description: Get Filter Group Children of a given group ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterList'
              examples:
                Example 1:
                  value:
                    list:
                      - source_id: ds_g4ccx6e77h1dmi
                        comparison_op: eq
                        comparison_sub_op: null
                        created_at: '2023-03-02 18:18:05'
                        fk_column_id: cl_d7ah9n2qfupgys
                        fk_hook_id: null
                        fk_parent_id: null
                        fk_view_id: vw_b739e29vqmrxnf
                        id: fi_xn647tpmdq8fu8X
                        is_group: null
                        logical_op: and
                        order: 1
                        base_id: p_xm3thidrblw4n7
                        updated_at: '2023-03-02 18:18:05'
                        value: foo
                    pageInfo:
                      isFirstPage: true
                      isLastPage: true
                      page: 1
                      pageSize: 10
                      totalRows: 1
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/tables/{tableId}/grids:
    parameters:
      - description: Unique Table ID
        schema:
          $ref: '#/components/schemas/Id'
          example: md_w9gpnaousnfss1
          type: string
        name: tableId
        in: path
        required: true
    post:
      tags:
        - DB View
      summary: Create Grid View
      operationId: DbView_createGridView
      description: Create a new grid view in a given Table
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewCreateReq'
            examples:
              Example 1:
                value:
                  title: My Grid View
                  type: 3
                  copy_from_id: null
                  fk_grp_col_id: null
                  fk_geo_data_col_id: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
              examples:
                Example 1:
                  value:
                    title: Grid-1
                    id: vw_o50jiw9v2txktv
                    source_id: ds_a95vextjl510z7
                    base_id: p_slkm6i3v31q4bc
                    fk_model_id: md_8hr3xndx8umuce
                    type: 3
                    is_default: null
                    show_system_fields: null
                    lock_type: collaborative
                    uuid: null
                    password: null
                    show: true
                    order: 2
                    created_at: '2023-03-13T07:29:16.610Z'
                    updated_at: '2023-03-13T07:29:16.610Z'
                    meta: {}
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/tables/{tableId}/forms:
    parameters:
      - description: Unique Table ID
        schema:
          $ref: '#/components/schemas/Id'
          example: md_w9gpnaousnfss1
          type: string
        name: tableId
        in: path
        required: true
    post:
      tags:
        - DB View
      summary: Create Form View
      operationId: DbView_createFormView
      description: Create a new form view in a given Table
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewCreateReq'
            examples:
              Example 1:
                value:
                  title: My Form View
                  type: 1
                  copy_from_id: null
                  fk_grp_col_id: null
                  fk_geo_data_col_id: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
              examples:
                Example 1:
                  value:
                    title: Form-1
                    id: vw_a830n4bmwk8wlp
                    source_id: ds_a95vextjl510z7
                    base_id: p_slkm6i3v31q4bc
                    fk_model_id: md_8hr3xndx8umuce
                    type: 1
                    is_default: null
                    show_system_fields: null
                    lock_type: collaborative
                    uuid: null
                    password: null
                    show: true
                    order: 4
                    created_at: '2023-03-13T07:29:19.957Z'
                    updated_at: '2023-03-13T07:29:19.957Z'
                    meta: {}
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/forms/{formViewId}:
    parameters:
      - description: Unique Form View ID
        schema:
          $ref: '#/components/schemas/Id'
          example: vw_6fqln9vdytdv8q
        name: formViewId
        in: path
        required: true
    patch:
      tags:
        - DB View
      summary: Update Form View
      operationId: DbView_updateFormView
      description: Update the form data by Form ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormUpdateReq'
            examples:
              Example 1:
                value:
                  title: Form View 1
                  banner_image_url:
                    title: Random-Pictures-of-Conceptual-and-Creative-Ideas-02.jpg
                    mimetype: image/jpg
                    size: 32903
                    path: >-
                      download/noco/pm0umqsip16i1u5/m8yn03dncqal6ri//iDL5ednaHz2j2Sa3Cl.jpg
                  email: user@example.com
                  heading: My Form
                  lock_type: collaborative
                  logo_url: null
                  meta: null
                  redirect_after_secs: null
                  redirect_url: null
                  show_blank_form: 0
                  subheading: My Form Subheading
                  submit_another_form: 0
                  success_msg: Thank you for the submission.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbViewUpdateFormViewResponse'
              examples:
                Example 1:
                  value: 1
        '400':
          $ref: '#/components/responses/BadRequest'
    get:
      tags:
        - DB View
      summary: Get Form
      operationId: DbView_getFormById
      description: Get the form data by Form ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
              examples:
                Example 1:
                  value:
                    title: Form View 1
                    source_id: ds_g4ccx6e77h1dmi
                    banner_image_url:
                      title: Random-Pictures-of-Conceptual-and-Creative-Ideas-02.jpg
                      mimetype: image/jpg
                      size: 32903
                      path: >-
                        download/noco/pm0umqsip16i1u5/m8yn03dncqal6ri//iDL5ednaHz2j2Sa3Cl.jpg
                      signedPath: >-
                        dltemp/lNoLbqB62Jdo5Rmp/1709308800000/noco/pm0umqsip16i1u5/m8yn03dncqal6ri//iDL5ednaHz2j2Sa3Cl.jpg
                    columns:
                      - description: null
                        id: fvc_ugj9zo5bzocxtl
                        source_id: ds_g4ccx6e77h1dmi
                        base_id: p_xm3thidrblw4n7
                        fk_view_id: vw_kdf5cr7qmhksek
                        fk_column_id: cl_phvuuwjrzcdo0g
                        uuid: null
                        label: null
                        help: null
                        required: null
                        show: 0
                        order: 1
                        created_at: '2023-03-04 16:40:47'
                        updated_at: '2023-03-04 16:40:47'
                        meta: {}
                    email: user@example.com
                    fk_model_id: md_rsu68aqjsbyqtl
                    heading: My Form
                    lock_type: collaborative
                    logo_url: null
                    meta: null
                    redirect_after_secs: null
                    redirect_url: null
                    show_blank_form: 0
                    subheading: My Form Subheading
                    submit_another_form: 0
                    success_msg: Thank you for the submission.
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/form-columns/{formViewColumnId}:
    parameters:
      - description: Unique Form View Column ID
        schema:
          $ref: '#/components/schemas/Id'
          example: fvc_1m9b0aub791d4m
          type: string
        name: formViewColumnId
        in: path
        required: true
    patch:
      tags:
        - DB View
      summary: Update Form Column
      operationId: DbView_updateFormColumn
      description: Update the form column(s) by Form View Column ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormColumnReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormColumnReq'
              examples:
                Example 1:
                  value:
                    description: null
                    help: This is a help text
                    label: Form Label
                    meta: null
                    order: 1
                    required: 0
                    show: 0
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/grids/{viewId}:
    parameters:
      - description: Unique View ID
        schema:
          type: string
          example: vw_wtdg2meyig5l4q
        name: viewId
        in: path
        required: true
    patch:
      tags:
        - DB View
      summary: Update Grid View
      operationId: DbView_updateGridView
      description: Update Grid View
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GridUpdateReq'
            examples:
              Example 1:
                value:
                  row_height: 1
                  meta: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbViewUpdateGridViewResponse'
              examples:
                Example 1:
                  value: 1
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/grids/{gridId}/grid-columns:
    parameters:
      - description: Grid View ID
        schema:
          type: string
          example: vw_q6k13mmygdi3yz
        name: gridId
        in: path
        required: true
    get:
      tags:
        - DB View
      summary: List Grid Columns
      operationId: DbView_listGridColumns
      description: List all columns in the given Grid
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbViewListGridColumnsResponse'
              examples:
                Example 1:
                  value:
                    - id: nc_c8jz4kxe6xvh11
                      fk_view_id: vw_p2jcatxz4mvcfw
                      fk_column_id: cl_c5knoi4xs4sfpt
                      base_id: p_xm3thidrblw4n7
                      source_id: ds_g4ccx6e77h1dmi
                      show: 0
                      order: 1
                      width: 200px
                      help: null
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/grid-columns/{columnId}:
    parameters:
      - description: Unique Column ID
        schema:
          $ref: '#/components/schemas/Id'
          example: cl_8iw2o4ejzvdyna
          type: string
        name: columnId
        in: path
        required: true
    patch:
      tags:
        - DB View
      summary: Update Grid Column
      operationId: DbView_updateGridColumnPatch
      description: Update grid column(s) in the given Grid
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GridColumnReq'
            examples:
              Example 1:
                value:
                  fk_column_id: cl_c5knoi4xs4sfpt
                  label: My Column
                  width: 200px
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbViewUpdateGridColumnPatchResponse'
              examples:
                Example 1:
                  value: 1
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/tables/{tableId}/galleries:
    parameters:
      - description: Unique Table ID
        schema:
          $ref: '#/components/schemas/Id'
          example: md_w9gpnaousnfss1
        name: tableId
        in: path
        required: true
    post:
      tags:
        - DB View
      summary: Create Gallery View
      operationId: DbView_createGalleryView
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewCreateReq'
            examples:
              Example 1:
                value:
                  title: My Gallery View
                  type: 2
                  copy_from_id: null
                  fk_grp_col_id: null
                  fk_geo_data_col_id: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
              examples:
                Example 1:
                  value:
                    title: Gallery-1
                    id: vw_qp94qfnvffgk5f
                    source_id: ds_a95vextjl510z7
                    base_id: p_slkm6i3v31q4bc
                    fk_model_id: md_8hr3xndx8umuce
                    type: 2
                    is_default: null
                    show_system_fields: null
                    lock_type: collaborative
                    uuid: null
                    password: null
                    show: true
                    order: 3
                    created_at: '2023-03-13T07:29:18.707Z'
                    updated_at: '2023-03-13T07:29:18.707Z'
                    meta: {}
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/galleries/{galleryViewId}:
    parameters:
      - description: Unique Gallery View ID
        schema:
          type: string
          example: vw_1eq2wk2xe3a9j5
        name: galleryViewId
        in: path
        required: true
    patch:
      tags:
        - DB View
      summary: Update Gallery View
      operationId: DbView_updateGalleryViewData
      description: Update the Gallery View data with Gallery ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GalleryUpdateReq'
            examples:
              Example 1:
                value:
                  fk_cover_image_col_id: cl_ib8l4j1kiu1efx
                  meta: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbViewUpdateGalleryViewDataResponse'
              examples:
                Example 1:
                  value: 1
        '400':
          $ref: '#/components/responses/BadRequest'
    get:
      tags:
        - DB View
      summary: Get Gallery View
      operationId: DbView_getGalleryView
      description: Get the Gallery View data with Gallery ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/tables/{tableId}/kanbans:
    parameters:
      - description: Unique Table ID
        schema:
          $ref: '#/components/schemas/Id'
          example: md_w9gpnaousnfss1
          type: string
        name: tableId
        in: path
        required: true
    post:
      tags:
        - DB View
      summary: Create Kanban View
      operationId: DbView_createKanbanView
      description: Create a new Kanban View
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewCreateReq'
            examples:
              Example 1:
                value:
                  title: My Kanban View
                  type: 4
                  copy_from_id: null
                  fk_grp_col_id: cl_g0a89q9xdry3lu
                  fk_geo_data_col_id: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
              examples:
                Example 1:
                  value:
                    title: Kanban-1
                    id: vw_569sqsrp2vuff4
                    source_id: ds_a95vextjl510z7
                    base_id: p_slkm6i3v31q4bc
                    fk_model_id: md_8hr3xndx8umuce
                    type: 4
                    is_default: null
                    show_system_fields: null
                    lock_type: collaborative
                    uuid: null
                    password: null
                    show: true
                    order: 5
                    created_at: '2023-03-13T07:29:21.387Z'
                    updated_at: '2023-03-13T07:29:21.387Z'
                    meta: {}
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/kanbans/{kanbanViewId}:
    parameters:
      - description: Unique Kanban View ID
        schema:
          type: string
          example: vw_1eq2wk2xe3a9j5
        name: kanbanViewId
        in: path
        required: true
    patch:
      tags:
        - DB View
      summary: Update Kanban View
      operationId: DbView_updateKanbanView
      description: Update the Kanban View data with Kanban ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KanbanUpdateReq'
            examples:
              Example 1:
                value:
                  fk_grp_col_id: cl_g0a89q9xdry3lu
                  fk_cover_image_col_id: cl_ib8l4j1kiu1efx
                  meta:
                    cl_g0a89q9xdry3lu:
                      - title: null
                        id: uncategorized
                        order: 0
                        color: '#c2f5e8'
                        collapsed: false
                      - title: a
                        id: sl_ihyva6jx6dg0fc
                        fk_column_id: cl_g0a89q9xdry3lu
                        color: '#cfdffe'
                        order: 1
                        collapsed: false
                      - title: b
                        id: sl_gqdm5v6t8aetoa
                        fk_column_id: cl_g0a89q9xdry3lu
                        color: '#d0f1fd'
                        order: 2
                        collapsed: false
                      - title: cc
                        id: sl_eipnl0kn7a9d3c
                        fk_column_id: cl_g0a89q9xdry3lu
                        color: '#c2f5e8'
                        order: 3
                        collapsed: false
                      - title: d
                        id: sl_dei8p2jq0cnlv0
                        fk_column_id: cl_g0a89q9xdry3lu
                        color: '#ffdaf6'
                        order: 4
                        collapsed: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbViewUpdateKanbanViewResponse'
              examples:
                Example 1:
                  value: 1
        '400':
          $ref: '#/components/responses/BadRequest'
    get:
      tags:
        - DB View
      summary: Get Kanban View
      operationId: DbView_kanbanViewGet
      description: Get the Kanban View data by Kanban ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kanban'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/tables/{tableId}/maps:
    parameters:
      - description: Unique Table ID
        schema:
          $ref: '#/components/schemas/Id'
          example: md_w9gpnaousnfss1
          type: string
        name: tableId
        in: path
        required: true
    post:
      tags:
        - DB View
      summary: Create Map View
      operationId: DbView_createMapView
      description: Create a new Map View
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewCreateReq'
            examples:
              Example 1:
                value:
                  title: My Map View
                  type: 5
                  copy_from_id: null
                  fk_grp_col_id: null
                  fk_geo_data_col_id: cl_uu1meolj00tlrq
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
              examples:
                Example 1:
                  value:
                    title: Sheet-1
                    source_id: ds_g4ccx6e77h1dmi
                    created_at: '2023-03-02 17:46:31'
                    fk_model_id: md_mhs9z4r2ak98x0
                    id: vw_lg052cnc1c26kfX
                    is_default: 1
                    lock_type: collaborative
                    meta: {}
                    order: 1
                    password: null
                    base_id: p_xm3thidrblw4n7
                    show: 1
                    show_system_fields: null
                    type: 3
                    updated_at: '2023-03-02 17:46:31'
                    uuid: null
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/maps/{mapViewId}:
    parameters:
      - description: Unique Map View ID
        schema:
          type: string
          example: vw_1eq2wk2xe3a9j5
        name: mapViewId
        in: path
        required: true
    patch:
      tags:
        - DB View
      summary: Update Map View
      operationId: DbView_updateMapViewData
      description: Update the Map View data by Map ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapUpdateReq'
            examples:
              Example 1:
                value:
                  fk_geo_data_col_id: cl_8iw2o4ejzvdyna
                  meta: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbViewUpdateMapViewDataResponse'
              examples:
                Example 1:
                  value: 1
        '400':
          $ref: '#/components/responses/BadRequest'
    get:
      tags:
        - DB View
      summary: Get Map View
      operationId: DbView_getMapViewById
      description: Get the Map View data by Map ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/bases/{baseId}/meta-diff:
    parameters:
      - description: Unique Base ID
        schema:
          $ref: '#/components/schemas/Id'
          example: p_124hhlkbeasewh
          type: string
        name: baseId
        in: path
        required: true
    post:
      tags:
        - Base
      summary: Sync Meta
      operationId: Base_syncMetaDiff
      description: >-
        Synchronise the meta data difference between NC_DB and external data
        sources 
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSyncMetaDiffResponse'
              examples:
                Example 1:
                  value:
                    msg: The meta has been synchronized successfully
        '400':
          $ref: '#/components/responses/BadRequest'
    get:
      tags:
        - Base
      summary: Meta Diff
      operationId: Base_metaDiffGet
      description: 'Get the meta data difference between NC_DB and external data sources '
      parameters:
        - $ref: '#/components/parameters/xc-auth'
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseMetaDiffGetResponse'
              examples:
                Example 1:
                  value:
                    - table_name: _nc_m2m_uuv_xzru3m
                      source_id: ds_rrplkgy0pq1f3c
                      type: table
                      detectedChanges:
                        - type: TABLE_NEW
                          msg: New table
                        - type: TABLE_RELATION_ADD
                          tn: _nc_m2m_uuv_xzru3m
                          rtn: Sheet-1
                          cn: table1_id
                          rcn: id
                          msg: New relation added
                          relationType: bt
                          cstn: _nc_m2m_uuv_xzru3m_table1_id_foreign
                        - type: TABLE_RELATION_ADD
                          tn: _nc_m2m_uuv_xzru3m
                          rtn: address
                          cn: table2_id
                          rcn: address_id
                          msg: New relation added
                          relationType: bt
                          cstn: _nc_m2m_uuv_xzru3m_table2_id_foreign
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/bases/{baseId}/meta-diff/{sourceId}:
    parameters:
      - description: Unique Base ID
        schema:
          $ref: '#/components/schemas/Id'
          example: p_124hhlkbeasewh
          type: string
        name: baseId
        in: path
        required: true
      - description: Unique Source ID
        schema:
          type: string
          pattern: ds_j04jmxh5xg10lu
        name: sourceId
        in: path
        required: true
    post:
      tags:
        - Source
      summary: Synchronise Source Meta
      operationId: Source_syncMetaDiff
      description: >-
        Synchronise the meta data difference between NC_DB and external data
        sources in a given Source
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceSyncMetaDiffResponse'
              examples:
                Example 1:
                  value:
                    msg: The source meta has been synchronized successfully
        '400':
          $ref: '#/components/responses/BadRequest'
    get:
      tags:
        - Source
      summary: Source Meta Diff
      operationId: Source_getMetaDiff
      description: >-
        Get the meta data difference between NC_DB and external data sources in
        a given Source
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceGetMetaDiffResponse'
              examples:
                Example 1:
                  value:
                    - table_name: _nc_m2m_uuv_xzru3m
                      source_id: ds_rrplkgy0pq1f3c
                      type: table
                      detectedChanges:
                        - type: TABLE_NEW
                          msg: New table
                        - type: TABLE_RELATION_ADD
                          tn: _nc_m2m_uuv_xzru3m
                          rtn: Sheet-1
                          cn: table1_id
                          rcn: id
                          msg: New relation added
                          relationType: bt
                          cstn: _nc_m2m_uuv_xzru3m_table1_id_foreign
                        - type: TABLE_RELATION_ADD
                          tn: _nc_m2m_uuv_xzru3m
                          rtn: address
                          cn: table2_id
                          rcn: address_id
                          msg: New relation added
                          relationType: bt
                          cstn: _nc_m2m_uuv_xzru3m_table2_id_foreign
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/bases/{baseId}/has-empty-or-null-filters:
    parameters:
      - description: Unique Base ID
        schema:
          $ref: '#/components/schemas/Id'
          example: p_124hhlkbeasewh
          type: string
        name: baseId
        in: path
        required: true
    get:
      tags:
        - Base
      summary: List Empty & Null Filter
      operationId: Base_checkEmptyFilters
      description: >-
        Check if a base contains empty and null filters. Used in `Show NULL and
        EMPTY in Filter` in Base Setting.
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseCheckEmptyFiltersResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
      x-internal: true
  /api/v2/public/shared-view/{sharedViewUuid}/group/{columnId}:
    parameters:
      - description: Shared View UUID
        schema:
          type: string
          example: 24a6d0bb-e45d-4b1a-bfef-f492d870de9f
        name: sharedViewUuid
        in: path
        required: true
      - description: Unique Column ID
        schema:
          $ref: '#/components/schemas/Id'
          example: cl_8iw2o4ejzvdyna
          type: string
        name: columnId
        in: path
        required: true
      - description: Shared view password
        schema:
          type: string
        in: header
        name: xc-password
    get:
      tags:
        - Public
      summary: List Shared View Grouped Data
      operationId: Public_sharedViewGroupDataList
      description: List Shared View Grouped Data
      parameters:
        - description: Which fields to be shown
          schema:
            type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
          in: query
          name: fields
        - description: The result will be sorted based on `sort` query
          schema:
            oneOf:
              - type: array
                items:
                  type: string
              - type: string
          in: query
          name: sort
        - description: Extra filtering
          schema:
            type: string
          in: query
          name: where
        - description: Offset in rows
          schema:
            type: integer
            minimum: 0
          in: query
          name: offset
        - description: Limit in rows
          schema:
            type: integer
            minimum: 1
          in: query
          name: limit
        - description: Used for multiple sort queries
          schema:
            type: string
          in: query
          name: sortArrJson
        - description: Used for multiple filter queries
          schema:
            type: string
          in: query
          name: filterArrJson
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicSharedViewGroupDataListResponse'
              examples:
                Example 1:
                  value:
                    - key: a
                      value:
                        list:
                          - Id: 2
                            Title: foo
                            s: a
                        pageInfo:
                          totalRows: 1
                          page: 1
                          pageSize: 25
                          isFirstPage: true
                          isLastPage: true
                    - key: b
                      value:
                        list:
                          - Id: 3
                            Title: bar
                            s: b
                        pageInfo:
                          totalRows: 1
                          page: 1
                          pageSize: 25
                          isFirstPage: true
                          isLastPage: true
                    - key: null
                      value:
                        list:
                          - Id: 1
                            Title: baz
                            s: null
                        pageInfo:
                          totalRows: 1
                          page: 1
                          pageSize: 25
                          isFirstPage: true
                          isLastPage: true
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/public/calendar-view/{sharedViewUuid}/countByDate:
    parameters:
      - description: Shared View UUID
        schema:
          type: string
          example: 24a6d0bb-e45d-4b1a-bfef-f492d870de9f
        name: sharedViewUuid
        in: path
        required: true
      - description: Shared view password
        schema:
          type: string
        in: header
        name: xc-password
    get:
      tags:
        - Public
      summary: Count of Records in Dates in Calendar View
      operationId: Public_calendarViewCountByDate
      parameters:
        - schema:
            type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
          in: query
          name: sort
        - schema:
            type: string
          in: query
          name: where
        - schema:
            type: integer
            minimum: 1
          in: query
          name: limit
        - schema:
            type: integer
            minimum: 0
          in: query
          name: offset
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicCalendarViewCountByDateResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/public/shared-view/{sharedViewUuid}/rows:
    parameters:
      - description: Shared View UUID
        schema:
          type: string
          example: 24a6d0bb-e45d-4b1a-bfef-f492d870de9f
        name: sharedViewUuid
        in: path
        required: true
      - description: Shared view password
        schema:
          type: string
        in: header
        name: xc-password
    get:
      tags:
        - Public
      summary: List Shared View Rows
      operationId: Public_listSharedRows
      description: List all shared view rows
      parameters:
        - description: Which fields to be shown
          schema:
            type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
          in: query
          name: fields
        - description: The result will be sorted based on `sort` query
          schema:
            oneOf:
              - type: array
                items:
                  type: string
              - type: string
          in: query
          name: sort
        - description: Extra filtering
          schema:
            type: string
          in: query
          name: where
        - description: Offset in rows
          schema:
            type: integer
            minimum: 0
          in: query
          name: offset
        - description: Limit in rows
          schema:
            type: integer
            minimum: 1
          in: query
          name: limit
        - description: Used for multiple sort queries
          schema:
            type: string
          in: query
          name: sortArrJson
        - description: Used for multiple filter queries
          schema:
            type: string
          in: query
          name: filterArrJson
        - description: Comma separated list of pks
          schema:
            type: string
          in: query
          name: pks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedViewList'
              examples:
                Example 1:
                  value:
                    list:
                      - title: Sheet-1
                        source_id: ds_g4ccx6e77h1dmi
                        created_at: '2023-03-02 17:46:31'
                        fk_model_id: md_mhs9z4r2ak98x0
                        id: vw_lg052cnc1c26kfX
                        is_default: 1
                        lock_type: collaborative
                        meta: {}
                        order: 1
                        password: null
                        base_id: p_xm3thidrblw4n7
                        show: 1
                        show_system_fields: null
                        type: 3
                        updated_at: '2023-03-02 17:46:31'
                        uuid: null
                        view:
                          source_id: ds_g4ccx6e77h1dmi
                          created_at: '2023-03-02 17:46:31'
                          fk_view_id: vw_lg052cnc1c26kf
                          meta: null
                          base_id: p_xm3thidrblw4n7
                          row_height: null
                          updated_at: '2023-03-02 17:46:31'
                          uuid: null
                    pageInfo:
                      isFirstPage: true
                      isLastPage: true
                      page: 1
                      pageSize: 10
                      totalRows: 1
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      tags:
        - Public
      summary: Create Share View Row
      operationId: Public_createSharedViewRow
      description: Create a new row for the target shared view
      parameters:
        - description: Shared view password
          schema:
            type: string
          in: header
          name: xc-password
      requestBody:
        description: ''
        content:
          multipart/form-data:
            schema:
              description: >-
                WARNING: Missing schema in media type object. Missing schema has
                been filled with this AnyType schema.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicCreateSharedViewRowResponse'
              examples:
                Example 1:
                  value:
                    Id: 1
                    col1: foo
                    col2: bar
                    CreatedAt: '2023-03-11T08:48:25.598Z'
                    UpdatedAt: '2023-03-11T08:48:25.598Z'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/public/shared-view/{sharedViewUuid}/groupby:
    parameters:
      - description: Shared View UUID
        schema:
          type: string
          example: 24a6d0bb-e45d-4b1a-bfef-f492d870de9f
        name: sharedViewUuid
        in: path
        required: true
      - description: Shared view password
        schema:
          type: string
        in: header
        name: xc-password
    get:
      tags:
        - Public
      summary: List Shared View Rows
      operationId: Public_listSharedViewRowsGroupBy
      description: List all shared view rows grouped by a column
      parameters:
        - description: Which fields to be shown
          schema:
            type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
          in: query
          name: fields
        - description: The result will be sorted based on `sort` query
          schema:
            oneOf:
              - type: array
                items:
                  type: string
              - type: string
          in: query
          name: sort
        - description: Extra filtering
          schema:
            type: string
          in: query
          name: where
        - description: Offset in rows
          schema:
            type: integer
            minimum: 0
          in: query
          name: offset
        - description: Limit in rows
          schema:
            type: integer
            minimum: 1
          in: query
          name: limit
        - description: Used for multiple sort queries
          schema:
            type: string
          in: query
          name: sortArrJson
        - description: Used for multiple filter queries
          schema:
            type: string
          in: query
          name: filterArrJson
        - description: Columns to group by
          schema:
            type: string
          in: query
          name: column_name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedViewList'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/public/shared-view/{sharedViewUuid}/rows/{rowId}/{relationType}/{columnName}:
    parameters:
      - description: Shared View UUID
        schema:
          type: string
          example: 24a6d0bb-e45d-4b1a-bfef-f492d870de9f
        name: sharedViewUuid
        in: path
        required: true
      - description: Unique Row ID
        schema:
          example: '1'
        name: rowId
        in: path
        required: true
      - description: Relation Type
        schema:
          type: string
          enum:
            - mm
            - hm
            - bt
            - oo
        name: relationType
        in: path
        required: true
      - description: Column Name
        schema:
          type: string
        name: columnName
        in: path
        required: true
    get:
      tags:
        - Public
      summary: List Nested List Data
      operationId: Public_listNestedData
      description: List all nested list data in a given shared view
      parameters:
        - description: Which fields to be shown
          schema:
            type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
          in: query
          name: fields
        - description: The result will be sorted based on `sort` query
          schema:
            oneOf:
              - type: array
                items:
                  type: string
              - type: string
          in: query
          name: sort
        - description: Extra filtering
          schema:
            type: string
          in: query
          name: where
        - description: Offset in rows
          schema:
            type: integer
            minimum: 0
          in: query
          name: offset
        - description: Limit in rows
          schema:
            type: integer
            minimum: 1
          in: query
          name: limit
        - description: Used for multiple sort queries
          schema:
            type: string
          in: query
          name: sortArrJson
        - description: Used for multiple filter queries
          schema:
            type: string
          in: query
          name: filterArrJson
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicListNestedDataResponse'
              examples:
                Example 1:
                  value:
                    list:
                      - Id: 1
                        Title: foo
                        CreatedAt: '2023-03-11T08:41:41.356Z'
                        UpdatedAt: '2023-03-11T08:41:41.356Z'
                      - Id: 2
                        Title: bar
                        CreatedAt: '2023-03-11T08:41:45.330Z'
                        UpdatedAt: '2023-03-11T08:41:45.330Z'
                      - Id: 3
                        Title: baz
                        CreatedAt: '2023-03-11T08:48:25.598Z'
                        UpdatedAt: '2023-03-11T08:48:25.598Z'
                    pageInfo:
                      isFirstPage: true
                      isLastPage: true
                      pageSize: 1
                      sort: string
                      totalRows: 3
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/public/shared-view/{sharedViewUuid}/rows/export/{type}:
    parameters:
      - description: Shared View UUID
        schema:
          type: string
          example: 76d44b86-bc65-4500-8956-ab512c80ab25
        name: sharedViewUuid
        in: path
        required: true
      - description: Export Type
        schema:
          type: string
          enum:
            - csv
            - excel
          example: csv
        name: type
        in: path
        required: true
    get:
      tags:
        - Public
      summary: Export Rows in Share View
      operationId: Public_rowsExportType
      description: Export all rows in Share View in a CSV / Excel Format
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/PublicRowsExportTypeResponse'
          headers:
            nc-export-offset:
              description: The starting offset of the next set of rows
              schema:
                type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
      wrapped: true
  /api/v2/public/shared-view/{sharedViewUuid}/nested/{columnName}:
    parameters:
      - description: Shared View UUID
        schema:
          type: string
          example: 24a6d0bb-e45d-4b1a-bfef-f492d870de9f
        name: sharedViewUuid
        in: path
        required: true
      - description: Column Name
        schema:
          type: string
        name: columnName
        in: path
        required: true
      - description: Shared view password
        schema:
          type: string
        in: header
        name: xc-password
    get:
      tags:
        - Public
      summary: List Nested Data Relation
      operationId: Public_nestedDataRelationList
      description: List Nested Data Relation
      parameters:
        - description: Which fields to be shown
          schema:
            type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
          in: query
          name: fields
        - description: The result will be sorted based on `sort` query
          schema:
            oneOf:
              - type: array
                items:
                  type: string
              - type: string
          in: query
          name: sort
        - description: Extra filtering
          schema:
            type: string
          in: query
          name: where
        - description: Offset in rows
          schema:
            type: integer
            minimum: 0
          in: query
          name: offset
        - description: Limit in rows
          schema:
            type: integer
            minimum: 1
          in: query
          name: limit
        - description: Used for multiple sort queries
          schema:
            type: string
          in: query
          name: sortArrJson
        - description: Used for multiple filter queries
          schema:
            type: string
          in: query
          name: filterArrJson
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicNestedDataRelationListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/public/shared-base/{sharedBaseUuid}/meta:
    parameters:
      - description: Shared Base UUID
        schema:
          type: string
          example: 24a6d0bb-e45d-4b1a-bfef-f492d870de9f
        name: sharedBaseUuid
        in: path
        required: true
    get:
      tags:
        - Public
      summary: Get Share Source Meta
      operationId: Public_sharedBaseMetaGet
      description: Get Share Source Meta
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicSharedBaseMetaGetResponse'
              examples:
                Example 1:
                  value:
                    base_id: p_63b4q0qengen1x
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/public/shared-view/{sharedViewUuid}/meta:
    parameters:
      - description: Shared View UUID
        schema:
          type: string
          example: 24a6d0bb-e45d-4b1a-bfef-f492d870de9f
        name: sharedViewUuid
        in: path
        required: true
      - description: Shared view password
        schema:
          type: string
        in: header
        name: xc-password
    get:
      tags:
        - Public
      summary: Get Share View Meta
      operationId: Public_viewMetaGet
      description: Get Share View Meta
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicViewMetaGetResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PublicViewMetaGet200Response'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/public/shared-erd/{sharedErdUuid}/meta:
    parameters:
      - schema:
          type: string
        name: sharedErdUuid
        in: path
        required: true
    get:
      tags:
        - Public
      summary: ''
      operationId: Public_sharedErdMetaGet
      description: ''
      parameters: []
      responses:
        '200':
          description: OK
  /api/v2/meta/audits/comments:
    parameters:
      - $ref: '#/components/parameters/xc-auth'
    get:
      tags:
        - Utils
      summary: List Comments in Audit
      operationId: Utils_listComments
      description: List all comments
      parameters:
        - description: Row ID
          schema:
            type: string
            example: '10'
          in: query
          name: row_id
          required: true
        - description: Foreign Key to Model
          schema:
            $ref: '#/components/schemas/Id'
            example: md_c6csq89tl37jm5
          in: query
          name: fk_model_id
          required: true
        - description: Is showing comments only?
          schema:
            type: boolean
            example: true
          in: query
          name: comments_only
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilsListCommentsResponse'
              examples:
                Example 1:
                  value:
                    list:
                      - description: bar
                        id: adt_3sii7erfwrlegb
                        user: w@nocodb.com
                        display_name: NocoDB
                        ip: null
                        source_id: null
                        base_id: p_63b4q0qengen1x
                        fk_model_id: md_5mipbdg6ketmv8
                        row_id: '1'
                        op_type: COMMENT
                        op_sub_type: null
                        status: null
                        details: null
                        created_at: '2023-03-13T09:39:14.225Z'
                        updated_at: '2023-03-13T09:39:14.225Z'
                      - description: foo
                        id: adt_fezs668qbxj8gc
                        user: w@nocodb.com
                        display_name: NocoDB
                        ip: null
                        source_id: null
                        base_id: p_63b4q0qengen1x
                        fk_model_id: md_5mipbdg6ketmv8
                        row_id: '1'
                        op_type: COMMENT
                        op_sub_type: null
                        status: null
                        details: null
                        created_at: '2023-03-13T09:39:13.321Z'
                        updated_at: '2023-03-13T09:39:13.321Z'
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      tags:
        - Utils
      summary: Comment Rows
      operationId: Utils_createNewCommentRow
      description: Create a new comment in a row. Logged in Audit.
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentReq'
            examples:
              Example 1:
                value:
                  description: This is the comment for the row
                  fk_model_id: md_ehn5izr99m7d45
                  row_id: '3'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audit'
              examples:
                Example 1:
                  value:
                    description: qq
                    user: w@nocodb.com
                    row_id: '1'
                    fk_model_id: md_5mipbdg6ketmv8
                    op_type: COMMENT
                    base_id: p_63b4q0qengen1x
                    id: adt_vx58jpp0loo8qy
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/audits/{auditId}/comment:
    parameters:
      - description: Audit ID
        schema:
          type: string
          example: adt_zlskd6rlf3liay
        name: auditId
        in: path
        required: true
      - description: >-
          Auth Token is a JWT Token generated based on the logged-in user. By
          default, the token is only valid for 10 hours. However, you can change
          the value by defining it using environment variable NC_JWT_EXPIRES_IN.
        name: xc-auth
        in: header
        required: false
        schema:
          type: string
    patch:
      tags:
        - Utils
      summary: Update Comment in Audit
      operationId: Utils_updateAuditComment
      description: Update comment in Audit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentUpdateReq'
            examples:
              Example 1:
                value:
                  description: This is the comment for the row
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilsUpdateAuditCommentResponse'
              examples:
                Example 1:
                  value: 1
  /api/v2/meta/audits/comments/count:
    parameters:
      - $ref: '#/components/parameters/xc-auth'
    get:
      tags:
        - Utils
      summary: Count Comments
      operationId: Utils_countComments
      description: Return the number of comments in the given query.
      parameters:
        - description: Comment IDs
          in: query
          name: ids
          required: true
        - description: Foreign Key to Model
          schema:
            $ref: '#/components/schemas/Id'
          in: query
          name: fk_model_id
          required: true
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilsCountCommentsResponse'
              examples:
                Example 1:
                  value:
                    - count: '4'
                      row_id: '1'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/bases/{baseId}/audits:
    parameters:
      - description: Unique Base ID
        schema:
          $ref: '#/components/schemas/Id'
          example: p_124hhlkbeasewh
          type: string
        name: baseId
        in: path
        required: true
    get:
      tags:
        - Base
      summary: List Audits in Base
      operationId: Base_listAuditsInBase
      description: List all audit data in the given base
      parameters:
        - schema:
            type: integer
            minimum: 0
          in: query
          name: offset
        - schema:
            type: integer
            maximum: 1
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: sourceId
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseListAuditsInBaseResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/audits/rows/{rowId}/update:
    parameters:
      - description: Unique Row ID
        schema:
          example: '1'
        name: rowId
        in: path
        required: true
    post:
      tags:
        - Utils
      summary: Update Audit Row
      operationId: Utils_updateAuditRow
      description: Update Audit Row
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditRowUpdateReq'
            examples:
              Example 1:
                value:
                  column_name: baz
                  fk_model_id: md_ehn5izr99m7d45
                  row_id: '1'
                  prev_value: foo
                  value: bar
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audit'
              examples:
                Example 1:
                  value:
                    description: 'Table Sheet-1 : field Column A got changed from foo to bar'
                    user: w@nocodb.com
                    row_id: '1'
                    fk_model_id: md_5mipbdg6ketmv8
                    op_type: COMMENT
                    base_id: p_63b4q0qengen1x
                    id: adt_vx58jpp0loo8qyX
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/tables/{tableId}/hooks:
    parameters:
      - description: Unique Table ID
        schema:
          $ref: '#/components/schemas/Id'
          example: md_w9gpnaousnfss1
          type: string
        name: tableId
        in: path
        required: true
    get:
      tags:
        - DB Table Webhook
      summary: List Table Hooks
      operationId: DbTableWebhook_listTableHooks
      description: List all hook records in the given Table
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HookList'
              examples:
                Example 1:
                  value:
                    list:
                      - title: My Webhook
                        description: This is my hook description
                        active: 0
                        async: 0
                        env: all
                        event: after
                        fk_model_id: md_rsu68aqjsbyqtl
                        id: stringX
                        notification: >-
                          {"type":"URL","payload":{"method":"POST","body":"{{
                          json data
                          }}","headers":[{}],"parameters":[{}],"auth":"","path":"http://example.com"}}
                        'null': null
                        operation: insert
                        retries: 10
                        retry_interval: 60000
                        timeout: 60000
                    pageInfo:
                      isFirstPage: true
                      isLastPage: true
                      page: 1
                      pageSize: 10
                      totalRows: 1
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      tags:
        - DB Table Webhook
      summary: Create Table Hook
      operationId: DbTableWebhook_createHook
      description: Create a hook in the given table
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HookReq'
            examples:
              Example 1:
                value:
                  title: My Webhook
                  description: This is my hook description
                  active: 0
                  async: 0
                  env: all
                  event: after
                  fk_model_id: md_rsu68aqjsbyqtl
                  id: stringX
                  notification: >-
                    {"type":"URL","payload":{"method":"POST","body":"{{ json
                    data
                    }}","headers":[{}],"parameters":[{}],"auth":"","path":"http://example.com"}}
                  'null': null
                  operation: insert
                  retries: 10
                  retry_interval: 60000
                  timeout: 60000
                  condition: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
              examples:
                Example 1:
                  value:
                    title: My Webhook
                    description: This is my hook description
                    active: 0
                    async: 0
                    env: all
                    event: after
                    fk_model_id: md_rsu68aqjsbyqtl
                    id: stringX
                    notification: >-
                      {"type":"URL","payload":{"method":"POST","body":"{{ json
                      data
                      }}","headers":[{}],"parameters":[{}],"auth":"","path":"http://example.com"}}
                    'null': null
                    operation: insert
                    retries: 10
                    retry_interval: 60000
                    timeout: 60000
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/tables/{tableId}/hooks/test:
    parameters:
      - description: Unique Table ID
        schema:
          $ref: '#/components/schemas/Id'
          example: md_w9gpnaousnfss1
          type: string
        name: tableId
        in: path
        required: true
    post:
      tags:
        - DB Table Webhook
      summary: Test Hook
      operationId: DbTableWebhook_testHookCreate
      description: Test the hook in the given Table
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HookTestReq'
            examples:
              Example 1:
                value:
                  hook:
                    title: My Webhook
                    description: This is my hook description
                    active: 0
                    async: 0
                    env: all
                    event: after
                    fk_model_id: md_rsu68aqjsbyqtl
                    id: stringX
                    notification: >-
                      {"type":"URL","payload":{"method":"POST","body":"{{ json
                      data
                      }}","headers":[{}],"parameters":[{}],"auth":"","path":"http://example.com"}}
                    'null': null
                    operation: insert
                    retries: 10
                    retry_interval: 60000
                    timeout: 60000
                  payload:
                    data:
                      Id: 1
                      Title: Sample Text
                      CreatedAt: '2023-03-03T10:03:06.484Z'
                      UpdatedAt: '2023-03-03T10:03:06.484Z'
                      attachment:
                        - title: image.png
                          url: https://nocodb.com/dummy.png
                          mimetype: image/png
                          size: 0
                      f: Sample Output
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbTableWebhookTestHookCreateResponse'
              examples:
                Example 1:
                  value:
                    msg: The hook has been tested successfully
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/tables/{tableId}/hooks/samplePayload/{operation}/{version}:
    parameters:
      - description: Unique Table ID
        schema:
          $ref: '#/components/schemas/Id'
          example: md_w9gpnaousnfss1
          type: string
        name: tableId
        in: path
        required: true
      - description: Hook Operation
        schema:
          type: string
          enum:
            - insert
            - update
            - delete
            - bulkInsert
            - bulkUpdate
            - bulkDelete
        name: operation
        in: path
        required: true
      - description: Hook Version
        schema:
          type: string
          enum:
            - v1
            - v2
        name: version
        in: path
        required: true
    get:
      tags:
        - DB Table Webhook
      summary: Get Sample Hook Payload
      operationId: DbTableWebhook_getSamplePayload
      description: Get the sample hook payload
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbTableWebhookGetSamplePayloadResponse'
              examples:
                Example 1:
                  value:
                    data:
                      Id: 1
                      Title: Sample Text
                      CreatedAt: '2023-03-13T04:59:49.363Z'
                      UpdatedAt: '2023-03-13T04:59:49.363Z'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/hooks/{hookId}:
    parameters:
      - description: Unique Hook ID
        schema:
          type: string
          example: hk_0063k4o1frnxbr
        name: hookId
        in: path
        required: true
    patch:
      tags:
        - DB Table Webhook
      summary: Update Hook
      operationId: DbTableWebhook_updateById
      description: Update the exsiting hook by its ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hook'
            examples:
              Example 1:
                value:
                  title: My Webhook
                  description: This is my hook description
                  active: 0
                  async: 0
                  env: all
                  event: after
                  fk_model_id: md_rsu68aqjsbyqtl
                  id: stringX
                  notification: >-
                    {"type":"URL","payload":{"method":"POST","body":"{{ json
                    data
                    }}","headers":[{}],"parameters":[{}],"auth":"","path":"http://example.com"}}
                  'null': null
                  operation: insert
                  retries: 10
                  retry_interval: 60000
                  timeout: 60000
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hook'
              examples:
                Example 1:
                  value:
                    title: My Webhook
                    description: This is my hook description
                    active: 0
                    async: 0
                    env: all
                    event: after
                    fk_model_id: md_rsu68aqjsbyqtl
                    id: stringX
                    notification: >-
                      {"type":"URL","payload":{"method":"POST","body":"{{ json
                      data
                      }}","headers":[{}],"parameters":[{}],"auth":"","path":"http://example.com"}}
                    'null': null
                    operation: insert
                    retries: 10
                    retry_interval: 60000
                    timeout: 60000
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      tags:
        - DB Table Webhook
      summary: Delete Hook
      operationId: DbTableWebhook_deleteById
      description: Delete the exsiting hook by its ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbTableWebhookDeleteByIdResponse'
              examples:
                Example 1:
                  value: true
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/plugins:
    parameters:
      - $ref: '#/components/parameters/xc-auth'
    get:
      tags:
        - Plugin
      summary: List Plugins
      operationId: Plugin_listAllPlugins
      description: List all plugins
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginListAllPluginsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/plugins/webhook:
    parameters:
      - $ref: '#/components/parameters/xc-auth'
    get:
      tags:
        - Plugin
      summary: Webhook List Plugins
      operationId: Plugin_webhookListPlugins
      description: List all webhook plugins
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginWebhookListPluginsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/plugins/{pluginTitle}/status:
    parameters:
      - description: Plugin Title
        schema:
          type: string
        name: pluginTitle
        in: path
        required: true
    get:
      tags:
        - Plugin
      summary: Get Plugin Status
      operationId: Plugin_getStatus
      description: Check plugin is active or not
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginGetStatusResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
      x-internal: false
  /api/v2/meta/plugins/test:
    parameters:
      - $ref: '#/components/parameters/xc-auth'
    post:
      tags:
        - Plugin
      summary: Test Plugin
      operationId: Plugin_testConfigurationPost
      description: Test if the plugin is working with the given configurations
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginTestReq'
            examples:
              Example 1:
                value:
                  title: Plugin Foo
                  input: >-
                    {"bucket":"my-bucket","region":"us-west-004","access_key":"redacted","access_secret":"redacted"}
                  category: Email
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginTestConfigurationPostResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/plugins/{pluginId}:
    parameters:
      - description: Plugin ID
        schema:
          type: string
        name: pluginId
        in: path
        required: true
    patch:
      tags:
        - Plugin
      summary: Update Plugin
      operationId: Plugin_updateById
      description: Update the plugin data by ID
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginUpdateByIdResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
      x-internal: false
    get:
      tags:
        - Plugin
      summary: Get Plugin
      operationId: Plugin_getDataById
      description: Get the plugin data by ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plugin'
        '400':
          $ref: '#/components/responses/BadRequest'
      x-internal: false
  /api/v2/meta/connection/test:
    parameters:
      - $ref: '#/components/parameters/xc-auth'
    post:
      tags:
        - Utils
      summary: Test DB Connection
      operationId: Utils_testDbConnection
      description: Test the DB Connection
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UtilsTestDbConnectionRequest'
            examples:
              Example 1:
                value:
                  client: mysql2
                  connection:
                    host: localhost
                    port: '3306'
                    user: root
                    password: password
                    database: null
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilsTestDbConnectionResponse'
              examples:
                Example 1:
                  value:
                    code: 0
                    message: ''
                    data: {}
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/connection/select:
    parameters: []
    post:
      tags:
        - Utils
      summary: ''
      operationId: Utils_selectConnectionPost
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              description: >-
                WARNING: Missing schema in media type object. Missing schema has
                been filled with this AnyType schema.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilsSelectConnectionPostResponse'
  /api/v2/meta/nocodb/info:
    parameters:
      - $ref: '#/components/parameters/xc-auth'
    get:
      tags:
        - Utils
      summary: Get App Info
      operationId: Utils_getAppInfo
      description: >-
        Get the application info such as authType, defaultLimit, version and
        etc.
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilsGetAppInfoResponse'
              examples:
                Example 1:
                  value:
                    version: 0.105.3
                    authType: jwt
                    baseHasAdmin: true
                    firstUser: false
                    type: rest
                    googleAuthEnabled: false
                    githubAuthEnabled: false
                    oneClick: false
                    connectToExternalDB: true
                    defaultLimit: 25
                    ncMin: false
                    teleEnabled: false
                    auditEnabled: true
                    ncSiteUrl: http://localhost:8080
                    ee: false
                    ncAttachmentFieldSize: 20971520
                    ncMaxAttachmentsAllowed: 10
                    isCloud: false
                    automationLogLevel: 'OFF'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/axiosRequestMake:
    parameters:
      - $ref: '#/components/parameters/xc-auth'
    post:
      tags:
        - Utils
      summary: Axios Request
      operationId: Utils_makeAxiosRequest
      description: Generic Axios Call
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UtilsMakeAxiosRequestRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilsMakeAxiosRequestResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
      x-internal: true
  /api/v2/meta/cache:
    parameters:
      - $ref: '#/components/parameters/xc-auth'
    get:
      tags:
        - Utils
      summary: Get Cache
      operationId: Utils_getAllNocoCache
      description: Get All K/V pairs in NocoCache
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Utils
      summary: Delete Cache
      operationId: Utils_clearNocoCache
      description: Delete All K/V pairs in NocoCache
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilsClearNocoCacheResponse'
              examples:
                Example 1:
                  value: true
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/bases/{baseId}/api-tokens:
    parameters:
      - description: Unique Base ID
        schema:
          $ref: '#/components/schemas/Id'
          example: p_124hhlkbeasewh
          type: string
        name: baseId
        in: path
        required: true
    get:
      tags:
        - API Token
      summary: List API Tokens in Base
      operationId: ApiToken_listInBase
      description: List API Tokens in the given base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTokenList'
              examples:
                Example 1:
                  value:
                    list:
                      - description: This API Token is for ABC application
                        id: '1'
                        fk_user_id: us_b3xo2i44nx5y9l
                        token: DYh540o8hbWpUGdarekECKLdN5OhlgCUWutVJYX2
                    pageInfo:
                      isFirstPage: true
                      isLastPage: true
                      page: 1
                      pageSize: 10
                      totalRows: 1
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      tags:
        - API Token
      summary: Create API Token
      operationId: ApiToken_createInBase
      description: Create API Token in a base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiTokenReq'
            examples:
              Example 1:
                value:
                  description: This API token is for ABC application
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiToken'
              examples:
                Example 1:
                  value:
                    description: This API Token is for ABC application
                    id: 1X
                    fk_user_id: us_b3xo2i44nx5y9l
                    token: DYh540o8hbWpUGdarekECKLdN5OhlgCUWutVJYX2
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/bases/{baseId}/api-tokens/{token}:
    parameters:
      - description: Unique Base ID
        schema:
          $ref: '#/components/schemas/Id'
          example: p_124hhlkbeasewh
          type: string
        name: baseId
        in: path
        required: true
      - description: API Token
        schema:
          type: string
          example: DYh540o8hbWpUGdarekECKLdN5OhlgCUWutVJYX2
        name: token
        in: path
        required: true
    delete:
      tags:
        - API Token
      summary: Delete API Token
      operationId: ApiToken_deleteInBase
      description: Delete the given API Token in base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTokenDeleteInBaseResponse'
              examples:
                Example 1:
                  value: 1
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/storage/upload:
    post:
      tags:
        - Storage
      summary: Attachment Upload
      operationId: Storage_uploadAttachment
      description: Upload attachment
      parameters:
        - description: Target File Path
          schema:
            type: string
            example: download/noco/jango_fett/Table1/attachment/uVbjPVQxC_SSfs8Ctx.jpg
          name: path
          in: query
          required: true
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        description: ''
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttachmentReq'
            examples:
              Example 1:
                value:
                  title: 22bc-kavypmq4869759 (1).jpg
                  mimetype: image/jpeg
                  path: >-
                    download/noco/jango_fett/Table1/attachment/uVbjPVQxC_SSfs8Ctx.jpg
                  size: 13052
      responses:
        '200':
          description: OK
  /api/v2/storage/upload-by-url:
    post:
      tags:
        - Storage
      summary: Attachment Upload by URL
      operationId: Storage_uploadByUrl
      description: Upload attachment by URL. Used in Airtable Migration.
      parameters:
        - description: Target File Path
          schema:
            type: string
            example: download/noco/jango_fett/Table1/attachment/c7z_UF8sZBgJUxMjpN.jpg
          name: path
          in: query
          required: true
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageUploadByUrlRequest'
            examples: {}
      responses:
        '200':
          description: OK
  /api/v2/meta/bases/{baseId}/users/{userId}/resend-invite:
    parameters:
      - description: Unique Base ID
        schema:
          $ref: '#/components/schemas/Id'
          example: p_124hhlkbeasewh
          type: string
        name: baseId
        in: path
        required: true
      - description: Unique User ID
        schema:
          $ref: '#/components/schemas/Id'
          example: us_b3xo2i44nx5y9l
        name: userId
        in: path
        required: true
    post:
      tags:
        - Auth
      summary: Resend User Invitation
      operationId: Auth_resendInviteUser
      description: Resend Invitation to a specific user
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResendInviteUserResponse'
              examples:
                Example 1:
                  value:
                    msg: The invitation has been sent to the user
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/tables/{tableId}/columns/hash:
    parameters:
      - description: Unique Table ID
        schema:
          $ref: '#/components/schemas/Id'
          example: md_w9gpnaousnfss1
          type: string
        name: tableId
        in: path
        required: true
    get:
      tags:
        - DB Table Column
      summary: Get columns hash for table
      operationId: DbTableColumn_getTableColumnsHash
      description: Get columns hash for table
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbTableColumnGetTableColumnsHashResponse'
  /api/v2/meta/tables/{tableId}/columns/bulk:
    parameters:
      - description: Unique Table ID
        schema:
          $ref: '#/components/schemas/Id'
          example: md_w9gpnaousnfss1
          type: string
        name: tableId
        in: path
        required: true
    post:
      tags:
        - DB Table Column
      summary: Bulk create-update-delete columns
      operationId: DbTableColumn_bulkCreateUpdate
      description: Bulk create-update-delete columns
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DbTableColumnBulkCreateUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbTableColumnBulkCreateUpdateResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/tables/{tableId}/records:
    parameters:
      - description: '**Table Identifier**.'
        schema:
          type: string
        name: tableId
        in: path
        required: true
    get:
      tags:
        - Table Records
      summary: List Table Records
      operationId: TableRecords_list
      description: >-
        This API endpoint allows you to retrieve records from a specified table.
        You can customize the response by applying various query parameters for
        filtering, sorting, and formatting.


        **Pagination**: The response is paginated by default, with the first
        page being returned initially. The response includes the following
        additional information in the `pageInfo` JSON block:


        - `totalRows`: Indicates the total number of rows available for the
        specified conditions (if any).

        - `page`: Specifies the current page number.

        - `pageSize`: Defaults to 25 and defines the number of records on each
        page.

        - `isFirstPage`: A boolean value that indicates whether the current page
        is the first page of records in the dataset.

        - `isLastPage`: A boolean value that indicates whether the current page
        is the last page of records in the dataset.


        The `pageInfo` attributes are particularly valuable when dealing with
        large datasets that are divided into multiple pages. They enable you to
        determine whether additional pages of records are available for
        retrieval or if you've reached the end of the dataset.
      parameters:
        - description: >-
            Allows you to specify the fields that you wish to include in your
            API response. By default, all the fields are included in the
            response.


            Example: `fields=field1,field2` will include only 'field1' and
            'field2' in the API response. 


            Please note that it's essential not to include spaces between field
            names in the comma-separated list.
          schema:
            type: string
          in: query
          name: fields
        - description: >-
            Allows you to specify the fields by which you want to sort the
            records in your API response. By default, sorting is done in
            ascending order for the designated fields. To sort in descending
            order, add a '-' symbol before the field name.


            Example: `sort=field1,-field2` will sort the records first by
            'field1' in ascending order and then by 'field2' in descending
            order.


            If `viewId` query parameter is also included, the sort included here
            will take precedence over any sorting configuration defined in the
            view.


            Please note that it's essential not to include spaces between field
            names in the comma-separated list.
          schema:
            type: string
          in: query
          name: sort
        - description: >-
            Enables you to define specific conditions for filtering records in
            your API response. Multiple conditions can be combined using logical
            operators such as 'and' and 'or'. Each condition consists of three
            parts: a field name, a comparison operator, and a value.


            Example: `where=(field1,eq,value1)~and(field2,eq,value2)` will
            filter records where 'field1' is equal to 'value1' AND 'field2' is
            equal to 'value2'. 


            You can also use other comparison operators like 'ne' (not equal),
            'gt' (greater than), 'lt' (less than), and more, to create complex
            filtering rules.


            If `viewId` query parameter is also included, then the filters
            included here will be applied over the filtering configuration
            defined in the view. 


            Please remember to maintain the specified format, and do not include
            spaces between the different condition components
          schema:
            type: string
          in: query
          name: where
        - description: >-
            Enables you to control the pagination of your API response by
            specifying the number of records you want to skip from the beginning
            of the result set. The default value for this parameter is set to 0,
            meaning no records are skipped by default.


            Example: `offset=25` will skip the first 25 records in your API
            response, allowing you to access records starting from the 26th
            position.


            Please note that the 'offset' value represents the number of records
            to exclude, not an index value, so an offset of 25 will skip the
            first 25 records.
          schema:
            type: integer
            minimum: 0
          in: query
          name: offset
        - description: >-
            Enables you to set a limit on the number of records you want to
            retrieve in your API response. By default, your response includes
            all the available records, but by using this parameter, you can
            control the quantity you receive.


            Example: `limit=100` will constrain your response to the first 100
            records in the dataset.
          schema:
            type: integer
            minimum: 1
          in: query
          name: limit
        - description: >-
            ***View Identifier***. Allows you to fetch records that are
            currently visible within a specific view. API retrieves records in
            the order they are displayed if the SORT option is enabled within
            that view.


            Additionally, if you specify a `sort` query parameter, it will take
            precedence over any sorting configuration defined in the view. If
            you specify a `where` query parameter, it will be applied over the
            filtering configuration defined in the view. 


            By default, all fields, including those that are disabled within the
            view, are included in the response. To explicitly specify which
            fields to include or exclude, you can use the `fields` query
            parameter to customize the output according to your requirements.
          schema:
            type: string
          name: viewId
          in: query
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableRecordsListResponse'
              examples:
                Example 1:
                  value:
                    list:
                      - Id: 1
                        SingleLineText: David
                        Year: 2023
                        URL: www.google.com
                        SingleSelect: Jan
                        Email: a@b.com
                        Duration: 74040
                        Decimal: 23.658
                        Currency: 23
                        JSON:
                          name: John Doe
                          age: 30
                          email: johndoe@example.com
                          isSubscribed: true
                          address:
                            street: 123 Main Street
                            city: Anytown
                            zipCode: '12345'
                          hobbies:
                            - Reading
                            - Hiking
                            - Cooking
                          scores:
                            math: 95
                            science: 88
                            history: 75
                        Date: '2023-10-16'
                        Time: '06:02:00'
                        Rating: 1
                        Percent: 55
                        Checkbox: true
                        Attachment:
                          - title: 2 be loved.jpeg
                            url: >-
                              https://some-s3-server.com/nc/uploads/2023/10/16/some-key/3niqHLngUKiU2Hupe8.jpeg
                            mimetype: image/jpeg
                            size: 146143
                            signedUrl: >-
                              https://some-s3-server.com/nc/uploads/2023/10/16/signed-url-misc-info
                        MultiSelect: Jan,Feb
                        DateTime: '2023-10-16 08:56:32+00:00'
                        LongText: >-
                          The sunsets in the small coastal town were a
                          breathtaking sight. The sky would transform from a
                          vibrant blue to warm hues of orange and pink as the
                          day came to an end. Locals and tourists alike would
                          gather at the beach, sipping on cool drinks and
                          watching in awe as the sun dipped below the horizon.
                        Geometry: 23.23, 36.54
                        PhoneNumber: '123456789'
                        Number: 5248
                        Barcode: David
                        QRCode: David
                        Formula: '10'
                        Lookup: a
                        Links:belongs-to:
                          Id: 1
                          Title: a
                        Links:has-many: 2
                        Rollup: 3
                        Links:many-many: 3
                    pageInfo:
                      totalRows: 5
                      page: 1
                      pageSize: 1
                      isFirstPage: true
                      isLastPage: false
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      tags:
        - Table Records
      summary: Create Table Records
      operationId: TableRecords_createNewRecord
      description: >-
        This API endpoint allows the creation of new records within a specified
        table. Records to be inserted are input as an array of key-value pair
        objects, where each key corresponds to a field name. Ensure that all the
        required fields are included in the payload, with exceptions for fields
        designated as auto-increment or those having default values. 


        When dealing with 'Links' or 'Link To Another Record' field types, you
        should utilize the 'Create Link' API to insert relevant data. 


        Certain read-only field types will be disregarded if included in the
        request. These field types include 'Look Up,' 'Roll Up,' 'Formula,'
        'Auto Number,' 'Created By,' 'Updated By,' 'Created At,' 'Updated At,'
        'Barcode,' and 'QR Code.'
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableRecordsCreateNewRecordRequest'
            examples:
              Example 1:
                value:
                  - SingleLineText: David
                    LongText: >-
                      The sunsets in the small coastal town were a breathtaking
                      sight. The sky would transform from a vibrant blue to warm
                      hues of orange and pink as the day came to an end. Locals
                      and tourists alike would gather at the beach, sipping on
                      cool drinks and watching in awe as the sun dipped below
                      the horizon.
                    CreatedAt: '2023-10-16 08:27:59+00:00'
                    UpdatedAt: '2023-10-16 08:56:32+00:00'
                    Decimal: 23.658
                    Checkbox: true
                    Attachment:
                      - title: 2 be loved.jpeg
                        url: >-
                          https://some-s3-server.com/nc/uploads/2023/10/16/some-key/3niqHLngUKiU2Hupe8.jpeg
                        mimetype: image/jpeg
                        size: 146143
                        signedUrl: >-
                          https://some-s3-server.com/nc/uploads/2023/10/16/signed-url-misc-info
                    MultiSelect: Jan,Feb
                    SingleSelect: Jan
                    Date: '2023-10-16'
                    Year: 2023
                    Time: '06:02:00'
                    PhoneNumber: '123456789'
                    Email: a@b.com
                    URL: www.google.com
                    Currency: 23
                    Percent: 55
                    Duration: 74040
                    Rating: 1
                    JSON:
                      name: John Doe
                      age: 30
                      email: johndoe@example.com
                      isSubscribed: true
                      address:
                        street: 123 Main Street
                        city: Anytown
                        zipCode: '12345'
                      hobbies:
                        - Reading
                        - Hiking
                        - Cooking
                      scores:
                        math: 95
                        science: 88
                        history: 75
                    DateTime: '2023-10-16 08:56:32+00:00'
                    Geometry: 23.23, 36.54
                    Number: 5248
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableRecordsCreateNewRecordResponse'
              examples:
                Example 1:
                  value:
                    - Id: 10
                    - Id: 11
        '400':
          $ref: '#/components/responses/BadRequest'
    patch:
      tags:
        - Table Records
      summary: Update Table Records
      operationId: TableRecords_updatePatchTableRecords
      description: >-
        This API endpoint allows updating existing records within a specified
        table identified by an array of Record-IDs, serving as unique identifier
        for the record. Records to be updated are input as an array of key-value
        pair objects, where each key corresponds to a field name. Ensure that
        all the required fields are included in the payload, with exceptions for
        fields designated as auto-increment or those having default values. 


        When dealing with 'Links' or 'Link To Another Record' field types, you
        should utilize the 'Create Link' API to insert relevant data. 


        Certain read-only field types will be disregarded if included in the
        request. These field types include 'Look Up,' 'Roll Up,' 'Formula,'
        'Auto Number,' 'Created By,' 'Updated By,' 'Created At,' 'Updated At,'
        'Barcode,' and 'QR Code.'


        Note that a PATCH request only updates the specified fields while
        leaving other fields unaffected. Currently, PUT requests are not
        supported by this endpoint.
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableRecordsUpdatePatchTableRecordsRequest'
            examples:
              Example 1:
                value:
                  - Id: 6
                    SingleLineText: Updated text-1
                    DateTime: '2023-10-19 08:56:32+00:00'
                    Geometry: 23.232, 36.542
                    Number: 52482
                  - Id: 7
                    SingleLineText: Updated text-2
                    DateTime: '2023-10-19 08:56:32+00:00'
                    Geometry: 23.232, 36.542
                    Number: 52482
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TableRecordsUpdatePatchTableRecordsResponse
              examples:
                Example 1:
                  value:
                    - Id: 6
                    - Id: 7
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      tags:
        - Table Records
      summary: Delete Table Records
      operationId: TableRecords_deleteByArray
      description: >-
        This API endpoint allows deleting existing records within a specified
        table identified by an array of Record-IDs, serving as unique identifier
        for the record. Records to be deleted are input as an array of
        record-identifiers.
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableRecordsDeleteByArrayRequest'
            examples:
              Example 1:
                value:
                  - Id: 1
                  - Id: 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableRecordsDeleteByArrayResponse'
              examples:
                Example 1:
                  value:
                    - Id: 1
                    - Id: 2
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/tables/{tableId}/records/{recordId}:
    parameters:
      - description: '**Table Identifier**'
        schema:
          type: string
        name: tableId
        in: path
        required: true
      - description: Record ID
        schema:
          type: string
        name: recordId
        in: path
        required: true
    get:
      tags:
        - Table Records
      summary: Read Table Record
      operationId: TableRecords_readById
      description: >-
        This API endpoint allows you to retrieve a single record identified by
        Record-ID, serving as unique identifier for the record from a specified
        table.
      parameters:
        - description: >-
            Allows you to specify the fields that you wish to include in your
            API response. By default, all the fields are included in the
            response.


            Example: `fields=field1,field2` will include only 'field1' and
            'field2' in the API response. 


            Please note that it's essential not to include spaces between field
            names in the comma-separated list.
          schema:
            type: string
          in: query
          name: fields
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableRecordsReadByIdResponse'
              examples:
                Example 1:
                  value:
                    Id: 1
                    SingleLineText: David
                    CreatedAt: '2023-10-16 08:27:59+00:00'
                    UpdatedAt: '2023-10-16 10:05:41+00:00'
                    Year: 2023
                    URL: www.google.com
                    SingleSelect: Jan
                    Email: a@b.com
                    Duration: 74040
                    Decimal: 23.658
                    Currency: 23
                    Barcode: David
                    JSON:
                      name: John Doe
                      age: 30
                      email: johndoe@example.com
                      isSubscribed: true
                      address:
                        street: 123 Main Street
                        city: Anytown
                        zipCode: '12345'
                      hobbies:
                        - Reading
                        - Hiking
                        - Cooking
                      scores:
                        math: 95
                        science: 88
                        history: 75
                    QRCode: David
                    Rollup: 3
                    Date: '2023-10-16'
                    Time: '06:02:00'
                    Rating: 1
                    Percent: 55
                    Formula: 10
                    Checkbox: true
                    Attachment:
                      - title: 2 be loved.jpeg
                        url: >-
                          https://some-s3-server.com/nc/uploads/2023/10/16/some-key/3niqHLngUKiU2Hupe8.jpeg
                        mimetype: image/jpeg
                        size: 146143
                        signedUrl: >-
                          https://some-s3-server.com/nc/uploads/2023/10/16/signed-url-misc-info
                    MultiSelect: Jan,Feb
                    DateTime: '2023-10-19 08:56:32+00:00'
                    LongText: >-
                      The sunsets in the small coastal town were a breathtaking
                      sight. The sky would transform from a vibrant blue to warm
                      hues of orange and pink as the day came to an end. Locals
                      and tourists alike would gather at the beach, sipping on
                      cool drinks and watching in awe as the sun dipped below
                      the horizon.
                    Geometry: 23.232, 36.542
                    PhoneNumber: '123456789'
                    Number: 52482
                    Links:has-many: 2
                    Links:many-many: 3
                    Links:belongs-to:
                      Id: 1
                      Title: a
                    Lookup: a
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/tables/{tableId}/records/count:
    parameters:
      - description: '**Table Identifier**'
        schema:
          type: string
        name: tableId
        in: path
        required: true
      - description: >-
          **View Identifier**. Allows you to fetch record count that are
          currently visible within a specific view.
        schema:
          type: string
        name: viewId
        in: query
    get:
      tags:
        - Table Records
      summary: Count Table Records
      operationId: TableRecords_getCount
      description: >-
        This API endpoint allows you to retrieve the total number of records
        from a specified table or a view. You can narrow down search results by
        applying `where` query parameter
      parameters:
        - description: >-
            Enables you to define specific conditions for filtering record count
            in your API response. Multiple conditions can be combined using
            logical operators such as 'and' and 'or'. Each condition consists of
            three parts: a field name, a comparison operator, and a value.


            Example: `where=(field1,eq,value1)~and(field2,eq,value2)` will
            filter records where 'field1' is equal to 'value1' AND 'field2' is
            equal to 'value2'. 


            You can also use other comparison operators like 'ne' (not equal),
            'gt' (greater than), 'lt' (less than), and more, to create complex
            filtering rules.


            If `viewId` query parameter is also included, then the filters
            included here will be applied over the filtering configuration
            defined in the view. 


            Please remember to maintain the specified format, and do not include
            spaces between the different condition components
          schema:
            type: string
          in: query
          name: where
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableRecordsGetCountResponse'
              examples:
                Example 1:
                  value:
                    count: 3
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/tables/{tableId}/links/{linkFieldId}/records/{recordId}:
    parameters:
      - description: '**Table Identifier**'
        schema:
          type: string
        name: tableId
        in: path
        required: true
      - description: >-
          **Links Field Identifier** corresponding to the relation field `Links`
          established between tables.
        schema:
          type: string
        name: linkFieldId
        in: path
        required: true
    get:
      tags:
        - Table Records
      summary: List Linked Records
      operationId: TableRecords_listLinkedRecords
      description: >-
        This API endpoint allows you to retrieve list of linked records for a
        specific `Link field` and `Record ID`. The response is an array of
        objects containing Primary Key and its corresponding display value.
      parameters:
        - description: >-
            **Record Identifier** corresponding to the record in this table for
            which linked records are being fetched.
          schema:
            type: string
          name: recordId
          in: path
          required: true
        - description: >-
            Allows you to specify the fields that you wish to include from the
            linked records in your API response. By default, only Primary Key
            and associated display value field is included.


            Example: `fields=field1,field2` will include only 'field1' and
            'field2' in the API response. 


            Please note that it's essential not to include spaces between field
            names in the comma-separated list.
          schema:
            type: string
          in: query
          name: fields
        - description: >-
            Allows you to specify the fields by which you want to sort linked
            records in your API response. By default, sorting is done in
            ascending order for the designated fields. To sort in descending
            order, add a '-' symbol before the field name.


            Example: `sort=field1,-field2` will sort the records first by
            'field1' in ascending order and then by 'field2' in descending
            order.


            Please note that it's essential not to include spaces between field
            names in the comma-separated list.
          schema:
            type: string
          in: query
          name: sort
        - description: >-
            Enables you to define specific conditions for filtering linked
            records in your API response. Multiple conditions can be combined
            using logical operators such as 'and' and 'or'. Each condition
            consists of three parts: a field name, a comparison operator, and a
            value.


            Example: `where=(field1,eq,value1)~and(field2,eq,value2)` will
            filter linked records where 'field1' is equal to 'value1' AND
            'field2' is equal to 'value2'. 


            You can also use other comparison operators like 'ne' (not equal),
            'gt' (greater than), 'lt' (less than), and more, to create complex
            filtering rules.


            Please remember to maintain the specified format, and do not include
            spaces between the different condition components
          schema:
            type: string
          in: query
          name: where
        - description: >-
            Enables you to control the pagination of your API response by
            specifying the number of linked records you want to skip from the
            beginning of the result set. The default value for this parameter is
            set to 0, meaning no linked records are skipped by default.


            Example: `offset=25` will skip the first 25 linked records in your
            API response, allowing you to access linked records starting from
            the 26th position.


            Please note that the 'offset' value represents the number of linked
            records to exclude, not an index value, so an offset of 25 will skip
            the first 25 linked records.
          schema:
            type: integer
            minimum: 0
          in: query
          name: offset
        - description: >-
            Enables you to set a limit on the number of linked records you want
            to retrieve in your API response. By default, your response includes
            all the available linked records, but by using this parameter, you
            can control the quantity you receive.


            Example: `limit=100` will constrain your response to the first 100
            linked records in the dataset.
          schema:
            type: integer
            minimum: 1
          in: query
          name: limit
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableRecordsListLinkedRecordsResponse'
              examples:
                Example 1:
                  value:
                    list:
                      - Id: 1
                        SingleLineText: David
                      - Id: 2
                        SingleLineText: Jane
                      - Id: 3
                        SingleLineText: Dave
                      - Id: 4
                        SingleLineText: Martin
                    pageInfo:
                      totalRows: 4
                      page: 1
                      pageSize: 25
                      isFirstPage: true
                      isLastPage: true
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      tags:
        - Table Records
      summary: Link Records
      operationId: TableRecords_linkRecordsPost
      description: >-
        This API endpoint allows you to link records to a specific `Link field`
        and `Record ID`. The request payload is an array of record-ids from the
        adjacent table for linking purposes. Note that any existing links, if
        present, will be unaffected during this operation.
      parameters:
        - description: >-
            **Record Identifier** corresponding to the record in this table for
            which links are being created.
          schema:
            type: string
          name: recordId
          in: path
          required: true
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableRecordsLinkRecordsPostRequest'
            examples:
              Example 1:
                value:
                  - Id: 4
                  - Id: 5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableRecordsLinkRecordsPostResponse'
              examples:
                Example 1:
                  value: true
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      tags:
        - Table Records
      summary: Unlink Records
      operationId: TableRecords_unlinkRecords
      description: >-
        This API endpoint allows you to unlink records from a specific `Link
        field` and `Record ID`. The request payload is an array of record-ids
        from the adjacent table for unlinking purposes. Note that, 

        - duplicated record-ids will be ignored.

        - non-existent record-ids will be ignored.
      parameters:
        - description: >-
            **Record Identifier** corresponding to the record in this table for
            which links are being removed.
          schema:
            type: string
          name: recordId
          in: path
          required: true
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableRecordsUnlinkRecordsRequest'
            examples:
              Example 1:
                value:
                  - Id: 1
                  - Id: 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableRecordsUnlinkRecordsResponse'
              examples:
                Example 1:
                  value: true
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/bases:
    parameters:
      - $ref: '#/components/parameters/xc-auth'
    get:
      tags:
        - Base
      summary: List Bases
      operationId: Base_listBases
      description: List all base meta data
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
              examples:
                Example 1:
                  value:
                    list:
                      - title: my-base
                        description: This is my base description
                        sources:
                          - alias: string
                            config: null
                            created_at: '2023-03-01 14:27:36'
                            enabled: true
                            id: stringX
                            inflection_column: camelize
                            inflection_table: camelize
                            is_meta: true
                            order: 1
                            base_id: string
                            type: mysql2
                            updated_at: '2023-03-01 14:27:36'
                        color: '#24716E'
                        created_at: '2023-03-01 14:27:36'
                        deleted: true
                        id: p_124hhlkbeasewhX
                        is_meta: true
                        meta: {}
                        order: 0
                        prefix: nc_vm5q__
                        status: string
                        updated_at: '2023-03-01 14:27:36'
                    pageInfo:
                      isFirstPage: true
                      isLastPage: true
                      page: 1
                      pageSize: 10
                      totalRows: 1
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      tags:
        - Base
      summary: Create Base
      operationId: Base_createNewBase
      description: Create a new base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseCreateNewBaseRequest'
            examples:
              Example 1:
                value:
                  title: my-base
                  description: This is my base description
                  sources:
                    - alias: string
                      config: null
                      enabled: true
                      id: stringX
                      inflection_column: camelize
                      inflection_table: camelize
                      is_meta: true
                      order: 1
                      base_id: string
                      type: mysql2
                      updated_at: '2023-03-01 14:27:36'
                  color: '#24716E'
                  created_at: '2023-03-01 14:27:36'
                  deleted: true
                  id: p_124hhlkbeasewhX
                  is_meta: true
                  meta: {}
                  order: 0
                  prefix: nc_vm5q__
                  status: string
                  external: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Base'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/meta/bases/{baseId}/sources:
    parameters:
      - description: Unique Base ID
        schema:
          $ref: '#/components/schemas/Id'
          example: p_124hhlkbeasewh
          type: string
        name: baseId
        in: path
        required: true
    get:
      tags:
        - Source
      summary: List Sources
      operationId: Source_baseIdSourcesList
      description: Get base source list
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceList'
              examples:
                Example 1:
                  value:
                    list:
                      - alias: null
                        config: <ENCRYPTED>
                        enabled: 1
                        id: ds_krsappzu9f8vmoX
                        inflection_column: camelize
                        inflection_table: camelize
                        is_meta: 1
                        meta: null
                        order: 1
                        base_id: p_01clqvzik3izk6
                        type: mysql2
                    pageInfo:
                      isFirstPage: true
                      isLastPage: true
                      page: 1
                      pageSize: 10
                      totalRows: 1
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      tags:
        - Source
      summary: Create Source
      operationId: Source_createNewSource
      description: Create a new source on a given base
      parameters:
        - $ref: '#/components/parameters/xc-auth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCreateNewSourceRequest'
            examples:
              Example 1:
                value:
                  alias: null
                  config: <ENCRYPTED>
                  enabled: 1
                  id: ds_krsappzu9f8vmoX
                  inflection_column: camelize
                  inflection_table: camelize
                  is_meta: 1
                  meta: null
                  order: 1
                  base_id: p_01clqvzik3izk6
                  type: mysql2
                  external: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v2/public/calendar-view/{sharedViewUuid}:
    parameters:
      - description: Shared View UUID
        schema:
          type: string
          example: 24a6d0bb-e45d-4b1a-bfef-f492d870de9f
        name: sharedViewUuid
        in: path
        required: true
      - description: Shared view password
        schema:
          type: string
        in: header
        name: xc-password
    get:
      tags:
        - Public
      summary: List Shared View Rows
      operationId: Public_calendarViewListSharedRows
      description: List all shared view rows
      parameters:
        - description: Which fields to be shown
          schema:
            type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
          in: query
          name: fields
        - description: The result will be sorted based on `sort` query
          schema:
            oneOf:
              - type: array
                items:
                  type: string
              - type: string
          in: query
          name: sort
        - description: From Date
          schema:
            type: string
          in: query
          name: from_date
        - description: To Date
          schema:
            type: string
          in: query
          name: to_date
        - description: Extra filtering
          schema:
            type: string
          in: query
          name: where
        - description: Offset in rows
          schema:
            type: integer
            minimum: 0
          in: query
          name: offset
        - description: Limit in rows
          schema:
            type: integer
            minimum: 1
          in: query
          name: limit
        - description: Used for multiple sort queries
          schema:
            type: string
          in: query
          name: sortArrJson
        - description: Used for multiple filter queries
          schema:
            type: string
          in: query
          name: filterArrJson
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedViewList'
              examples:
                Example 1:
                  value:
                    list:
                      - title: Sheet-1
                        source_id: ds_g4ccx6e77h1dmi
                        created_at: '2023-03-02 17:46:31'
                        fk_model_id: md_mhs9z4r2ak98x0
                        id: vw_lg052cnc1c26kfX
                        is_default: 1
                        lock_type: collaborative
                        meta: {}
                        order: 1
                        password: null
                        base_id: p_xm3thidrblw4n7
                        show: 1
                        show_system_fields: null
                        type: 3
                        updated_at: '2023-03-02 17:46:31'
                        uuid: null
                        view:
                          source_id: ds_g4ccx6e77h1dmi
                          created_at: '2023-03-02 17:46:31'
                          fk_view_id: vw_lg052cnc1c26kf
                          meta: null
                          base_id: p_xm3thidrblw4n7
                          row_height: null
                          updated_at: '2023-03-02 17:46:31'
                          uuid: null
                    pageInfo:
                      isFirstPage: true
                      isLastPage: true
                      page: 1
                      pageSize: 10
                      totalRows: 1
        '400':
          $ref: '#/components/responses/BadRequest'
components:
  parameters:
    xc-auth:
      description: >-
        Auth Token is a JWT Token generated based on the logged-in user. By
        default, the token is only valid for 10 hours. However, you can change
        the value by defining it using environment variable NC_JWT_EXPIRES_IN.
      name: xc-auth
      in: header
      required: false
      schema:
        type: string
  responses:
    ProjectList:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProjectList'
          examples:
            example-1:
              value:
                list:
                  - title: my-base
                    description: This is my base description
                    sources:
                      - alias: string
                        config: null
                        created_at: '2023-03-01 14:27:36'
                        enabled: true
                        id: stringX
                        inflection_column: camelize
                        inflection_table: camelize
                        is_meta: true
                        order: 1
                        base_id: string
                        type: mysql2
                        updated_at: '2023-03-01 14:27:36'
                    color: '#24716E'
                    created_at: '2023-03-01 14:27:36'
                    deleted: true
                    id: p_124hhlkbeasewhX
                    is_meta: true
                    meta: {}
                    order: 0
                    prefix: nc_vm5q__
                    status: string
                    updated_at: '2023-03-01 14:27:36'
                pageInfo:
                  isFirstPage: true
                  isLastPage: true
                  page: 1
                  pageSize: 10
                  totalRows: 1
    BaseList:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseList'
          examples:
            example-1:
              value:
                list:
                  - id: ds_krsappzu9f8vmoX
                    base_id: p_01clqvzik3izk6
                    alias: null
                    config: <ENCRYPTED>
                    meta: null
                    is_meta: 1
                    type: mysql2
                    inflection_column: camelize
                    inflection_table: camelize
                    created_at: '2023-03-01 16:31:49'
                    updated_at: '2023-03-02 11:28:17'
                    enabled: 1
                    order: 1
                  - id: ds_btbdt19zde0gj9
                    base_id: p_01clqvzik3izk6
                    alias: sakila
                    config: <ENCRYPTED>
                    meta: null
                    is_meta: null
                    type: mysql2
                    inflection_column: camelize
                    inflection_table: camelize
                    created_at: '2023-03-02 11:28:17'
                    updated_at: '2023-03-02 11:28:17'
                    enabled: 1
                    order: 2
                pageInfo:
                  totalRows: 2
                  page: 1
                  pageSize: 2
                  isFirstPage: true
                  isLastPage: true
    TableList:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TableList'
          examples:
            Example 1:
              value:
                list:
                  - tags: null
                    title: Sheet-1
                    id: md_5hua2iqloqirhd
                    source_id: ds_jxuewivwbxeum2
                    base_id: p_tbhl1hnycvhe5l
                    table_name: nc_b84e___Sheet-1
                    type: table
                    meta: null
                    schema: null
                    enabled: true
                    mm: false
                    pinned: null
                    deleted: null
                    order: 1
                    created_at: '2023-03-11T09:11:45.907Z'
                    updated_at: '2023-03-11T09:11:45.907Z'
                pageInfo:
                  isFirstPage: true
                  isLastPage: true
                  page: 1
                  pageSize: 10
                  totalRows: 1
    ColumnList:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ColumnList'
    FilterList:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FilterList'
    SortList:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SortList'
          examples: {}
    ViewList:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ViewList'
          examples:
            Example 1:
              value:
                list:
                  - tags: string
                    title: string
                    alias: string
                    column:
                      - title: string
                        alias: string
                        auto_increment: true
                        auto_update_timestamp: true
                        source_id: string
                        character_maximum_length: string
                        character_set_name: string
                        colOptions:
                          deleted: string
                          dr: string
                          fk_child_column_id: string
                          fk_column_id: string
                          fk_index_name: string
                          fk_mm_child_column_id: string
                          fk_mm_model_id: string
                          fk_mm_parent_column_id: string
                          fk_parent_column_id: string
                          id: stringX
                          order: string
                          type: string
                          ur: string
                          virtual: true
                        column_comment: string
                        column_default: string
                        column_ordinal_position: string
                        column_type: string
                        data_type: string
                        data_type_x: string
                        data_type_x_precision: string
                        data_type_x_scale: string
                        deleted: true
                        fk_model_id: string
                        id: stringX
                        numeric_precision: string
                        numeric_scale: string
                        order: 0
                        primary_key: true
                        primary_value: true
                        rqd: string
                        ui_data_type: string
                        un: string
                        unique: true
                        visible: true
                    columnByIds: {}
                    deleted: true
                    enabled: true
                    fk_base_id: string
                    fk_project_id: string
                    id: stringX
                    order: 0
                    parent_id: string
                    pinned: true
                    show_as: string
                    type: string
                pageInfo:
                  isFirstPage: true
                  isLastPage: true
                  page: 1
                  pageSize: 10
                  totalRows: 1
    SharedViewList:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SharedViewList'
          examples:
            Example 1:
              value:
                list:
                  - title: Sheet-1
                    source_id: ds_g4ccx6e77h1dmi
                    created_at: '2023-03-02 17:46:31'
                    fk_model_id: md_mhs9z4r2ak98x0
                    id: vw_lg052cnc1c26kfX
                    is_default: 1
                    lock_type: collaborative
                    meta: {}
                    order: 1
                    password: null
                    base_id: p_xm3thidrblw4n7
                    show: 1
                    show_system_fields: null
                    type: 3
                    updated_at: '2023-03-02 17:46:31'
                    uuid: null
                    view:
                      source_id: ds_g4ccx6e77h1dmi
                      created_at: '2023-03-02 17:46:31'
                      fk_view_id: vw_lg052cnc1c26kf
                      meta: null
                      base_id: p_xm3thidrblw4n7
                      row_height: null
                      updated_at: '2023-03-02 17:46:31'
                      uuid: null
                pageInfo:
                  isFirstPage: true
                  isLastPage: true
                  page: 1
                  pageSize: 10
                  totalRows: 1
    HookList:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HookList'
    UserList:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserList'
          examples:
            Example 1:
              value:
                list:
                  - email: user@example.com
                    email_verified: true
                    firstname: Alice
                    id: us_8kugj628ebjngsX
                    lastname: Smith
                    roles: org-level-viewer
                pageInfo:
                  isFirstPage: true
                  isLastPage: true
                  page: 1
                  pageSize: 10
                  totalRows: 1
    APITokenList:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiTokenList'
          examples: {}
      type: object
      properties:
        list:
          type: array
          x-stoplight:
            id: uukp6v55zfp7i
          items:
            $ref: '#/components/schemas/ApiToken'
            x-stoplight:
              id: 9zqpoqfkdxy0y
        pageInfo:
          $ref: '#/components/schemas/Paginated'
          x-stoplight:
            id: 6unr17jyisial
    BadRequest:
      description: BadReqeust
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthListBaseUsers400Response'
          examples:
            Example 1:
              value:
                msg: 'BadRequest [Error]: <ERROR MESSAGE>'
      headers: {}
  schemas:
    ApiToken:
      title: API Token Model
      description: Model for API Token
      type: object
      properties:
        description:
          description: API Token Description
          type: string
          example: This API Token is for ABC application
        id:
          description: Unique API Token ID
          $ref: '#/components/schemas/Id'
        fk_user_id:
          description: Foreign Key to User
          $ref: '#/components/schemas/Id'
        token:
          description: API Token
          type: string
          example: DYh540o8hbWpUGdarekECKLdN5OhlgCUWutVJYX2
      x-stoplight:
        id: c7i7cfci4kobt
      example:
        description: This API Token is for ABC application
        id: 1X
        fk_user_id: us_b3xo2i44nx5y9l
        token: DYh540o8hbWpUGdarekECKLdN5OhlgCUWutVJYX2
      x-examples:
        - description: This API Token is for ABC application
          id: 1X
          fk_user_id: us_b3xo2i44nx5y9l
          token: DYh540o8hbWpUGdarekECKLdN5OhlgCUWutVJYX2
    ApiTokenReq:
      title: API Token Request Model
      description: Model for API Token Request
      type: object
      properties:
        description:
          description: Description of the API token
          maxLength: 255
          type: string
          example: This API Token is for ABC application
      x-stoplight:
        id: 53ux6deypkuwb
      example:
        description: This API token is for ABC application
      x-examples:
        - description: This API token is for ABC application
    ApiTokenList:
      title: API Token List Model
      description: Model for API Token List
      x-stoplight:
        id: t24xmch4x2o30
      type: object
      properties:
        list:
          description: List of api token objects
          type: array
          example:
            - list:
                - description: This API Token is for ABC application
                  id: 1X
                  fk_user_id: us_b3xo2i44nx5y9l
                  token: DYh540o8hbWpUGdarekECKLdN5OhlgCUWutVJYX2
              pageInfo:
                isFirstPage: true
                isLastPage: true
                page: 1
                pageSize: 10
                totalRows: 1
          x-stoplight:
            id: c7xu43yjgyjww
          items:
            $ref: '#/components/schemas/ApiToken'
            x-stoplight:
              id: 5ih4l0ix2tr5q
        pageInfo:
          description: Model for Paginated
          $ref: '#/components/schemas/Paginated'
          x-stoplight:
            id: 0w8ktfnx3pusz
      required:
        - list
        - pageInfo
      example:
        list:
          - description: This API Token is for ABC application
            id: 1X
            fk_user_id: us_b3xo2i44nx5y9l
            token: DYh540o8hbWpUGdarekECKLdN5OhlgCUWutVJYX2
        pageInfo:
          isFirstPage: true
          isLastPage: true
          page: 1
          pageSize: 10
          totalRows: 1
      x-examples:
        - list:
            - description: This API Token is for ABC application
              id: 1X
              fk_user_id: us_b3xo2i44nx5y9l
              token: DYh540o8hbWpUGdarekECKLdN5OhlgCUWutVJYX2
          pageInfo:
            isFirstPage: true
            isLastPage: true
            page: 1
            pageSize: 10
            totalRows: 1
    Attachment:
      title: Attachment Model
      description: Model for Attachment
      type: object
      properties:
        title:
          description: The title of the attachment. Used in UI.
          type: string
        data:
          description: Data for uploading
        mimetype:
          description: The mimetype of the attachment
          type: string
        path:
          description: File Path
          type: string
        size:
          description: Attachment Size
          type: number
        url:
          description: Attachment URL
          type: string
      x-stoplight:
        id: mjewsbpmazrwe
      example:
        title: kavypmq4869759.jpg
        data: null
        mimetype: image/jpeg
        path: download/noco/jango_fett/Table1/attachment/c7z_UF8sZBgJUxMjpN.jpg
        size: 12345
      x-examples:
        - title: kavypmq4869759.jpg
          data: null
          mimetype: image/jpeg
          path: download/noco/jango_fett/Table1/attachment/c7z_UF8sZBgJUxMjpN.jpg
          size: 12345
    AttachmentReq:
      title: Attachment Request Model
      description: Model for Attachment Request
      type: object
      x-examples:
        Example 1:
          title: 22bc-kavypmq4869759 (1).jpg
          mimetype: image/jpeg
          path: download/noco/jango_fett/Table1/attachment/uVbjPVQxC_SSfs8Ctx.jpg
          size: 13052
      properties:
        title:
          description: The title of the attachment used in UI
          type: string
        mimetype:
          description: The mimetype of the attachment
          type: string
        path:
          description: The file path of the attachment
          type: string
        size:
          description: The size of the attachment
          type: number
        url:
          description: Attachment URL to be uploaded via upload-by-url
          type: string
      x-stoplight:
        id: 6cr1iwhbyxncd
    AttachmentRes:
      title: Attachment Response Model
      description: Model for Attachment Response
      oneOf:
        - type: object
          x-examples:
            Example 1:
              title: Random-Pictures-of-Conceptual-and-Creative-Ideas-02.jpg
              mimetype: image/jpg
              size: 32903
              path: >-
                download/noco/pm0umqsip16i1u5/m8yn03dncqal6ri//iDL5ednaHz2j2Sa3Cl.jpg
              signedPath: >-
                dltemp/lNoLbqB62Jdo5Rmp/1709308800000/noco/pm0umqsip16i1u5/m8yn03dncqal6ri//iDL5ednaHz2j2Sa3Cl.jpg
            Example 2:
              title: 2 be loved.jpeg
              mimetype: image/jpeg
              size: 146143
              url: >-
                https://some-s3-server.com/nc/uploads/2023/10/16/some-key/3niqHLngUKiU2Hupe8.jpeg
              signedUrl: >-
                https://some-s3-server.com/nc/uploads/2023/10/16/signed-url-misc-info
          properties:
            title:
              description: The title of the attachment used in UI
              type: string
            mimetype:
              description: The mimetype of the attachment
              type: string
            path:
              description: The attachment stored path
              type: string
            size:
              description: The size of the attachment
              type: number
            url:
              description: The attachment stored url
              type: string
            signedPath:
              description: Attachment signedPath will allow to access attachment directly
              type: string
            signedUrl:
              description: Attachment signedUrl will allow to access attachment directly
              type: string
        - type: 'null'
    Audit:
      title: Audit Model
      description: Model for Audit
      type: object
      properties:
        description:
          description: Description of the action
          type: string
          example: >-
            Table nc_snms___Table_1 : field Date got changed from  2023-03-12
            to 
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
        user:
          description: The user name performing the action
          type: string
          example: w@nocodb.com
        display_name:
          description: The display name of user performing the action
          type: string
          example: NocoDB
        ip:
          description: IP address from the user
          type: string
          example: '::ffff:127.0.0.1'
        source_id:
          description: Source ID in where action is performed
          type: string
          example: ds_3l9qx8xqksenrl
        base_id:
          description: Base ID in where action is performed
          type: string
          example: p_9sx43moxhqtjm3
        fk_model_id:
          description: Model ID in where action is performed
          type: string
          example: md_ehn5izr99m7d45
        row_id:
          description: Row ID
          type: string
          example: rec0Adp9PMG9o7uJy
        op_type:
          description: Operation Type
          type: string
          example: AUTHENTICATION
          enum:
            - COMMENT
            - DATA
            - PROJECT
            - VIRTUAL_RELATION
            - RELATION
            - TABLE_VIEW
            - TABLE
            - VIEW
            - META
            - WEBHOOKS
            - AUTHENTICATION
            - TABLE_COLUMN
            - ORG_USER
        op_sub_type:
          description: Operation Sub Type
          type: string
          example: UPDATE
          enum:
            - UPDATE
            - INSERT
            - BULK_INSERT
            - BULK_UPDATE
            - BULK_DELETE
            - LINK_RECORD
            - UNLINK_RECORD
            - DELETE
            - CREATE
            - RENAME
            - IMPORT_FROM_ZIP
            - EXPORT_TO_FS
            - EXPORT_TO_ZIP
            - SIGNIN
            - SIGNUP
            - PASSWORD_RESET
            - PASSWORD_FORGOT
            - PASSWORD_CHANGE
            - EMAIL_VERIFICATION
            - ROLES_MANAGEMENT
            - INVITE
            - RESEND_INVITE
        status:
          description: Audit Status
          type: string
        details:
          description: Detail
          type: string
          example: >-
            <span class="">Date</span>   : <span
            class="text-decoration-line-through red px-2 lighten-4
            black--text">2023-03-12</span>   <span class="black--text green
            lighten-4 px-2"></span>
      x-stoplight:
        id: n44nqsmhm56c7
      example:
        description: 'Table nc_snms___Table_1 : field Date got changed from  2023-03-12 to '
        id: adt_l5we7pkx70vaao
        user: w@nocodb.com
        display_name: NocoDB
        ip: '::ffff:127.0.0.1'
        source_id: ds_3l9qx8xqksenrl
        base_id: p_9sx43moxhqtjm3
        fk_model_id: md_ehn5izr99m7d45
        row_id: rec0Adp9PMG9o7uJy
        op_type: AUTHENTICATION
        op_sub_type: UPDATE
        status: string
        details: >-
          <span class="">Date</span>   : <span
          class="text-decoration-line-through red px-2 lighten-4
          black--text">2023-03-12</span>   <span class="black--text green
          lighten-4 px-2"></span>
      x-examples:
        - description: >-
            Table nc_snms___Table_1 : field Date got changed from  2023-03-12
            to 
          id: adt_l5we7pkx70vaao
          user: w@nocodb.com
          display_name: NocoDB
          ip: '::ffff:127.0.0.1'
          source_id: ds_3l9qx8xqksenrl
          base_id: p_9sx43moxhqtjm3
          fk_model_id: md_ehn5izr99m7d45
          row_id: rec0Adp9PMG9o7uJy
          op_type: AUTHENTICATION
          op_sub_type: UPDATE
          status: string
          details: >-
            <span class="">Date</span>   : <span
            class="text-decoration-line-through red px-2 lighten-4
            black--text">2023-03-12</span>   <span class="black--text green
            lighten-4 px-2"></span>
    AuditRowUpdateReq:
      title: Audit Row Update Request Model
      description: Model for Audit Row Update Request
      type: object
      properties:
        column_name:
          description: Column Name
          type: string
          example: baz
        fk_model_id:
          description: Foreign Key to Model
          type: string
          example: md_ehn5izr99m7d45
        row_id:
          description: Row ID
          type: string
          example: rec0Adp9PMG9o7uJy
        prev_value:
          description: The previous value before the action
        value:
          description: The current value after the action
      x-stoplight:
        id: 2fzwvc4m1k5or
      example:
        column_name: baz
        fk_model_id: md_ehn5izr99m7d45
        row_id: rec0Adp9PMG9o7uJy
        prev_value: foo
        value: bar
      x-examples:
        - column_name: baz
          fk_model_id: md_ehn5izr99m7d45
          row_id: rec0Adp9PMG9o7uJy
          prev_value: foo
          value: bar
    Source:
      title: Source Model
      description: Model for Source
      type: object
      properties:
        alias:
          description: Source Name - Default BASE will be null by default
          $ref: '#/components/schemas/StringOrNull'
        config:
          description: Source Configuration
        enabled:
          description: Is this source enabled
          $ref: '#/components/schemas/Bool'
        id:
          description: Unique Source ID
          type: string
        inflection_column:
          description: Inflection for columns
          example: camelize
          type: string
        inflection_table:
          description: Inflection for tables
          example: camelize
          type: string
        is_meta:
          description: Is the data source connected externally
          $ref: '#/components/schemas/Bool'
        is_local:
          description: Is the data source minimal db
          $ref: '#/components/schemas/Bool'
        order:
          description: The order of the list of sources
          example: 1
          type: number
        base_id:
          description: The base ID that this source belongs to
          type: string
        type:
          description: DB Type
          enum:
            - mssql
            - mysql
            - mysql2
            - oracledb
            - pg
            - snowflake
            - sqlite3
          example: mysql2
          type: string
      x-stoplight:
        id: qyzsky82ovjiv
      example:
        alias: null
        config: <ENCRYPTED>
        enabled: 1
        id: ds_krsappzu9f8vmoX
        inflection_column: camelize
        inflection_table: camelize
        is_meta: 1
        meta: null
        order: 1
        base_id: p_01clqvzik3izk6
        type: mysql2
      x-examples:
        - alias: null
          config: <ENCRYPTED>
          enabled: 1
          id: ds_krsappzu9f8vmoX
          inflection_column: camelize
          inflection_table: camelize
          is_meta: 1
          meta: null
          order: 1
          base_id: p_01clqvzik3izk6
          type: mysql2
    BaseList:
      title: Source List Model
      description: Model for Source List
      type: object
      x-examples:
        - list:
            - alias: null
              config: <ENCRYPTED>
              enabled: 1
              id: ds_krsappzu9f8vmoX
              inflection_column: camelize
              inflection_table: camelize
              is_meta: 1
              meta: null
              order: 1
              base_id: p_01clqvzik3izk6
              type: mysql2
          pageInfo:
            isFirstPage: true
            isLastPage: true
            page: 1
            pageSize: 10
            totalRows: 1
      properties:
        list:
          description: List of source objects
          type: array
          x-stoplight:
            id: 1q3ny60j1g4z2
          items:
            $ref: '#/components/schemas/Source'
            x-stoplight:
              id: udd0nrcv6pq8d
        pageInfo:
          description: Paginated Info
          $ref: '#/components/schemas/Paginated'
          x-stoplight:
            id: xqwcniocq37hk
      required:
        - list
        - pageInfo
      x-stoplight:
        id: tty21vb01bfr0
      example:
        list:
          - alias: null
            config: <ENCRYPTED>
            enabled: 1
            id: ds_krsappzu9f8vmoX
            inflection_column: camelize
            inflection_table: camelize
            is_meta: 1
            meta: null
            order: 1
            base_id: p_01clqvzik3izk6
            type: mysql2
        pageInfo:
          isFirstPage: true
          isLastPage: true
          page: 1
          pageSize: 10
          totalRows: 1
    BaseReq:
      title: Source Request
      description: Model for Source Request
      properties:
        alias:
          description: Source Name - Default BASE will be null by default
          example: My Source
          maxLength: 128
          type: string
        config:
          description: Source Configuration
        inflection_column:
          description: Inflection for columns
          example: camelize
          type: string
        inflection_table:
          description: Inflection for tables
          example: camelize
          type: string
        is_meta:
          description: Is the data source connected externally
          type: boolean
        is_local:
          description: Is the data source minimal db
          type: boolean
        type:
          description: DB Type
          enum:
            - mssql
            - mysql
            - mysql2
            - oracledb
            - pg
            - snowflake
            - sqlite3
          type: string
      type: object
      x-stoplight:
        id: ky2ak9xsyl3b5
      example:
        alias: My Source
        config: null
        inflection_column: camelize
        inflection_table: camelize
        is_meta: true
        type: mysql
      x-examples:
        - alias: My Source
          config: null
          inflection_column: camelize
          inflection_table: camelize
          is_meta: true
          type: mysql
    Bool:
      title: Bool Model
      description: Model for Bool
      oneOf:
        - description: 0 or 1
          example: 0
          type: integer
        - description: true or false
          type: boolean
        - type: 'null'
      x-stoplight:
        id: y0m76u8t9x2tn
      example: true
      x-examples:
        - true
    Column:
      title: Column Model
      description: Model for Column
      type: object
      properties:
        title:
          description: Column Title
          example: Title
          type: string
        ai:
          description: Is Auto-Increment?
          $ref: '#/components/schemas/Bool'
        au:
          description: Auto Update Timestamp
          $ref: '#/components/schemas/Bool'
        source_id:
          description: Source ID that this column belongs to
          example: ds_krsappzu9f8vmo
          type: string
        cc:
          description: Column Comment
          type: string
        cdf:
          description: Column Default
          $ref: '#/components/schemas/StringOrNullOrBooleanOrNumber'
        clen:
          description: Character Maximum Length
          oneOf:
            - type: integer
            - type: 'null'
            - type: string
        colOptions:
          description: Column Options
          anyOf:
            - $ref: '#/components/schemas/Formula'
            - $ref: '#/components/schemas/LinkToAnotherRecord'
            - $ref: '#/components/schemas/Lookup'
            - $ref: '#/components/schemas/Rollup'
            - $ref: '#/components/schemas/SelectOptions'
            - type: object
        column_name:
          description: Column Name
          example: title
          type: string
        cop:
          description: Column Ordinal Position
          type: string
        csn:
          description: Character Set Name
          $ref: '#/components/schemas/StringOrNull'
        ct:
          description: Column Type
          example: varchar(45)
          type: string
        deleted:
          description: Is Deleted?
          $ref: '#/components/schemas/Bool'
        dt:
          description: Data Type in DB
          example: varchar
          type: string
        dtx:
          description: Data Type X
          example: specificType
          type: string
        dtxp:
          description: Data Type X Precision
          oneOf:
            - type: 'null'
            - type: number
            - type: string
        dtxs:
          description: Data Type X Scale
          oneOf:
            - type: 'null'
            - type: number
            - type: string
        fk_model_id:
          description: Model ID that this column belongs to
          example: md_yvwvbt2i78rgcm
          type: string
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
        meta:
          description: Meta Info
          $ref: '#/components/schemas/Meta'
        np:
          description: Numeric Precision
          oneOf:
            - type: integer
            - type: 'null'
            - type: string
        ns:
          description: Numeric Scale
          oneOf:
            - type: integer
            - type: 'null'
            - type: string
        order:
          description: The order of the list of columns
          type: number
        pk:
          description: Is Primary Key?
          $ref: '#/components/schemas/Bool'
        pv:
          description: Is Primary Value?
          $ref: '#/components/schemas/Bool'
        rqd:
          description: Is Required?
          $ref: '#/components/schemas/Bool'
        system:
          description: Is System Column?
          $ref: '#/components/schemas/Bool'
        uidt:
          description: The data type in UI
          example: SingleLineText
          enum:
            - Attachment
            - AutoNumber
            - Barcode
            - Button
            - Checkbox
            - Collaborator
            - Count
            - CreatedTime
            - Currency
            - Date
            - DateTime
            - Decimal
            - Duration
            - Email
            - Formula
            - ForeignKey
            - GeoData
            - Geometry
            - ID
            - JSON
            - LastModifiedTime
            - LongText
            - LinkToAnotherRecord
            - Lookup
            - MultiSelect
            - Number
            - Percent
            - PhoneNumber
            - Rating
            - Rollup
            - SingleLineText
            - SingleSelect
            - SpecificDBType
            - Time
            - URL
            - Year
            - QrCode
            - Links
            - User
            - CreatedBy
            - LastModifiedBy
          type: string
        un:
          description: Is Unsigned?
          $ref: '#/components/schemas/Bool'
        unique:
          description: Is unique?
          $ref: '#/components/schemas/Bool'
        visible:
          description: Is Visible?
          $ref: '#/components/schemas/Bool'
      x-stoplight:
        id: y9jx9r6o6x0h6
      example:
        title: Title
        ai: 0
        au: 0
        source_id: ds_krsappzu9f8vmo
        cc: ''
        cdf: null
        clen: '45'
        column_name: title
        cop: '2'
        created_at: '2023-03-02 13:14:16'
        csn: utf8mb4
        ct: varchar(45)
        deleted: null
        dt: varchar
        dtx: specificType
        dtxp: '45'
        dtxs: null
        fk_model_id: md_yvwvbt2i78rgcm
        id: cl_0j9gv0oi8vjy46X
        meta: null
        np: null
        ns: null
        order: 2
        pk: 0
        base_id: p_01clqvzik3izk6
        pv: 1
        rqd: 0
        system: 0
        uidt: SingleLineText
        un: 0
        unique: 0
        updated_at: '2023-03-02 13:14:16'
        validate: null
        virtual: null
      x-examples:
        - title: Title
          ai: 0
          au: 0
          source_id: ds_krsappzu9f8vmo
          cc: ''
          cdf: null
          clen: '45'
          column_name: title
          cop: '2'
          created_at: '2023-03-02 13:14:16'
          csn: utf8mb4
          ct: varchar(45)
          deleted: null
          dt: varchar
          dtx: specificType
          dtxp: '45'
          dtxs: null
          fk_model_id: md_yvwvbt2i78rgcm
          id: cl_0j9gv0oi8vjy46X
          meta: null
          np: null
          ns: null
          order: 2
          pk: 0
          base_id: p_01clqvzik3izk6
          pv: 1
          rqd: 0
          system: 0
          uidt: SingleLineText
          un: 0
          unique: 0
          updated_at: '2023-03-02 13:14:16'
          validate: null
          virtual: null
    ColumnList:
      title: Column List Model
      description: Model for Column List
      type: object
      x-examples:
        - list:
            - title: Title
              ai: 0
              au: 0
              source_id: ds_krsappzu9f8vmo
              cc: ''
              cdf: null
              clen: '45'
              column_name: title
              cop: '2'
              created_at: '2023-03-02 13:14:16'
              csn: utf8mb4
              ct: varchar(45)
              deleted: null
              dt: varchar
              dtx: specificType
              dtxp: '45'
              dtxs: null
              fk_model_id: md_yvwvbt2i78rgcm
              id: cl_0j9gv0oi8vjy46X
              meta: null
              np: null
              ns: null
              order: 2
              pk: 0
              base_id: p_01clqvzik3izk6
              pv: 1
              rqd: 0
              system: 0
              uidt: SingleLineText
              un: 0
              unique: 0
              updated_at: '2023-03-02 13:14:16'
              validate: null
              virtual: null
          pageInfo:
            isFirstPage: true
            isLastPage: true
            page: 1
            pageSize: 10
            totalRows: 1
      properties:
        list:
          description: List of column objects
          type: array
          x-stoplight:
            id: c6lpw8px25356
          items:
            $ref: '#/components/schemas/Column'
            x-stoplight:
              id: zbm89i86dr73y
        pageInfo:
          $ref: '#/components/schemas/Paginated'
          x-stoplight:
            id: ko0s0z13h4hsw
      required:
        - list
        - pageInfo
      x-stoplight:
        id: rsk9o5cs00wh5
      example:
        list:
          - title: Title
            ai: 0
            au: 0
            source_id: ds_krsappzu9f8vmo
            cc: ''
            cdf: null
            clen: '45'
            column_name: title
            cop: '2'
            created_at: '2023-03-02 13:14:16'
            csn: utf8mb4
            ct: varchar(45)
            deleted: null
            dt: varchar
            dtx: specificType
            dtxp: '45'
            dtxs: null
            fk_model_id: md_yvwvbt2i78rgcm
            id: cl_0j9gv0oi8vjy46X
            meta: null
            np: null
            ns: null
            order: 2
            pk: 0
            base_id: p_01clqvzik3izk6
            pv: 1
            rqd: 0
            system: 0
            uidt: SingleLineText
            un: 0
            unique: 0
            updated_at: '2023-03-02 13:14:16'
            validate: null
            virtual: null
        pageInfo:
          isFirstPage: true
          isLastPage: true
          page: 1
          pageSize: 10
          totalRows: 1
    ColumnReq:
      title: Column Request Model
      description: Model for Column Request
      allOf:
        - anyOf:
            - $ref: '#/components/schemas/FormulaColumnReq'
            - $ref: '#/components/schemas/LinkToAnotherColumnReq'
            - $ref: '#/components/schemas/LookupColumnReq'
            - $ref: '#/components/schemas/NormalColumnRequest'
            - $ref: '#/components/schemas/RollupColumnReq'
        - properties:
            title:
              maxLength: 255
              minLength: 1
              type: string
            column_name:
              type: string
            column_order:
              description: Column order in a specific view
              properties:
                order:
                  type: number
                view_id:
                  type: string
              type: object
          required:
            - title
      type: object
      x-stoplight:
        id: aipiq4098ocg3
      example:
        title: Title
        ai: 0
        au: 0
        source_id: ds_krsappzu9f8vmo
        cc: ''
        cdf: null
        clen: '45'
        column_name: title
        cop: '2'
        created_at: '2023-03-02 13:14:16'
        csn: utf8mb4
        ct: varchar(45)
        deleted: null
        dt: varchar
        dtx: specificType
        dtxp: '45'
        dtxs: null
        fk_model_id: md_yvwvbt2i78rgcm
        id: cl_0j9gv0oi8vjy46X
        meta: null
        np: null
        ns: null
        order: 2
        pk: 0
        base_id: p_01clqvzik3izk6
        pv: 1
        rqd: 0
        system: 0
        uidt: SingleLineText
        un: 0
        unique: 0
        updated_at: '2023-03-02 13:14:16'
        validate: null
        virtual: null
      x-examples:
        - title: Title
          ai: 0
          au: 0
          source_id: ds_krsappzu9f8vmo
          cc: ''
          cdf: null
          clen: '45'
          column_name: title
          cop: '2'
          created_at: '2023-03-02 13:14:16'
          csn: utf8mb4
          ct: varchar(45)
          deleted: null
          dt: varchar
          dtx: specificType
          dtxp: '45'
          dtxs: null
          fk_model_id: md_yvwvbt2i78rgcm
          id: cl_0j9gv0oi8vjy46X
          meta: null
          np: null
          ns: null
          order: 2
          pk: 0
          base_id: p_01clqvzik3izk6
          pv: 1
          rqd: 0
          system: 0
          uidt: SingleLineText
          un: 0
          unique: 0
          updated_at: '2023-03-02 13:14:16'
          validate: null
          virtual: null
      properties:
        title:
          type: string
          example: Title
        ai:
          type: number
          example: 0
        au:
          type: number
          example: 0
        source_id:
          type: string
          example: ds_krsappzu9f8vmo
        cc:
          type: string
          example: ''
        cdf:
          type: string
          nullable: true
          x-konfig-null-placeholder: true
        clen:
          type: string
          example: '45'
        column_name:
          type: string
          example: title
        cop:
          type: string
          example: '2'
        created_at:
          type: string
          example: '2023-03-02 13:14:16'
        csn:
          type: string
          example: utf8mb4
        ct:
          type: string
          example: varchar(45)
        deleted:
          type: string
          nullable: true
          x-konfig-null-placeholder: true
        dt:
          type: string
          example: varchar
        dtx:
          type: string
          example: specificType
        dtxp:
          type: string
          example: '45'
        dtxs:
          type: string
          nullable: true
          x-konfig-null-placeholder: true
        fk_model_id:
          type: string
          example: md_yvwvbt2i78rgcm
        id:
          type: string
          example: cl_0j9gv0oi8vjy46
        meta:
          type: string
          nullable: true
          x-konfig-null-placeholder: true
        np:
          type: string
          nullable: true
          x-konfig-null-placeholder: true
        ns:
          type: string
          nullable: true
          x-konfig-null-placeholder: true
        order:
          type: number
          example: 2
        pk:
          type: number
          example: 0
        base_id:
          type: string
          example: p_01clqvzik3izk6
        pv:
          type: number
          example: 1
        rqd:
          type: number
          example: 0
        system:
          type: number
          example: 0
        uidt:
          type: string
          example: SingleLineText
        un:
          type: number
          example: 0
        unique:
          type: number
          example: 0
        updated_at:
          type: string
          example: '2023-03-02 13:14:16'
        validate:
          type: string
          nullable: true
          x-konfig-null-placeholder: true
        virtual:
          type: string
          nullable: true
          x-konfig-null-placeholder: true
    CommentReq:
      title: Comment Request Model
      description: Model for Comment Request
      type: object
      properties:
        description:
          description: Description for the target row
          type: string
          example: This is the comment for the row
        fk_model_id:
          description: Foreign Key to Model
          type: string
          example: md_ehn5izr99m7d45
        row_id:
          description: Row ID
          type: string
          example: '3'
      required:
        - fk_model_id
        - row_id
      x-stoplight:
        id: ohotsd0vq6d8w
      example:
        description: This is the comment for the row
        fk_model_id: md_ehn5izr99m7d45
        row_id: '3'
      x-examples:
        - description: This is the comment for the row
          fk_model_id: md_ehn5izr99m7d45
          row_id: '3'
    CommentUpdateReq:
      title: Comment Update Request Model
      description: Model for Comment Update Request
      x-stoplight:
        id: 5shp04hfghm3a
      type: object
      properties:
        description:
          description: Description for the target row
          type: string
          example: This is the comment for the row
      example:
        description: This is the comment for the row
      x-examples:
        - description: This is the comment for the row
    Filter:
      title: Filter Model
      description: Model for Filter
      properties:
        source_id:
          description: Unqiue Source ID
          readOnly: true
          type: string
        children:
          description: Children filters. Available when the filter is grouped.
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        comparison_op:
          description: Comparison Operator
          enum:
            - allof
            - anyof
            - blank
            - btw
            - checked
            - empty
            - eq
            - ge
            - gt
            - gte
            - in
            - is
            - isWithin
            - isnot
            - le
            - like
            - lt
            - lte
            - nallof
            - nanyof
            - nbtw
            - neq
            - nlike
            - not
            - notblank
            - notchecked
            - notempty
            - notnull
            - 'null'
          type: string
          nullable: true
        comparison_sub_op:
          description: Comparison Sub-Operator
          enum:
            - daysAgo
            - daysFromNow
            - exactDate
            - nextMonth
            - nextNumberOfDays
            - nextWeek
            - nextYear
            - oneMonthAgo
            - oneMonthFromNow
            - oneWeekAgo
            - oneWeekFromNow
            - pastMonth
            - pastNumberOfDays
            - pastWeek
            - pastYear
            - today
            - tomorrow
            - yesterday
          type: string
          nullable: true
        fk_column_id:
          description: Foreign Key to Column
          $ref: '#/components/schemas/StringOrNull'
        fk_hook_id:
          description: Foreign Key to Hook
          $ref: '#/components/schemas/StringOrNull'
        fk_model_id:
          description: Foreign Key to Model
          $ref: '#/components/schemas/Id'
        fk_parent_id:
          description: Foreign Key to parent group.
          $ref: '#/components/schemas/StringOrNull'
        fk_view_id:
          description: Foreign Key to View
          $ref: '#/components/schemas/StringOrNull'
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
        is_group:
          description: Is this filter grouped?
          oneOf:
            - type: boolean
            - type: integer
            - type: 'null'
        logical_op:
          description: Logical Operator
          enum:
            - and
            - not
            - or
          type: string
        base_id:
          description: Unique Base ID
          readOnly: true
          type: string
        value:
          description: The filter value. Can be NULL for some operators.
      readOnly: true
      type: object
      x-stoplight:
        id: txz3lsqh1rbsu
      example:
        source_id: ds_g4ccx6e77h1dmi
        comparison_op: eq
        comparison_sub_op: null
        created_at: '2023-03-02 18:18:05'
        fk_column_id: cl_d7ah9n2qfupgys
        fk_hook_id: null
        fk_parent_id: null
        fk_view_id: vw_b739e29vqmrxnf
        id: fi_xn647tpmdq8fu8X
        is_group: null
        logical_op: and
        order: 1
        base_id: p_xm3thidrblw4n7
        updated_at: '2023-03-02 18:18:05'
        value: foo
      x-examples:
        - source_id: ds_g4ccx6e77h1dmi
          comparison_op: eq
          comparison_sub_op: null
          created_at: '2023-03-02 18:18:05'
          fk_column_id: cl_d7ah9n2qfupgys
          fk_hook_id: null
          fk_parent_id: null
          fk_view_id: vw_b739e29vqmrxnf
          id: fi_xn647tpmdq8fu8X
          is_group: null
          logical_op: and
          order: 1
          base_id: p_xm3thidrblw4n7
          updated_at: '2023-03-02 18:18:05'
          value: foo
    FilterList:
      title: Filter List Model
      description: Model for Filter List
      type: object
      x-examples:
        - list:
            - source_id: ds_g4ccx6e77h1dmi
              comparison_op: eq
              comparison_sub_op: null
              created_at: '2023-03-02 18:18:05'
              fk_column_id: cl_d7ah9n2qfupgys
              fk_hook_id: null
              fk_parent_id: null
              fk_view_id: vw_b739e29vqmrxnf
              id: fi_xn647tpmdq8fu8X
              is_group: null
              logical_op: and
              order: 1
              base_id: p_xm3thidrblw4n7
              updated_at: '2023-03-02 18:18:05'
              value: foo
          pageInfo:
            isFirstPage: true
            isLastPage: true
            page: 1
            pageSize: 10
            totalRows: 1
      properties:
        list:
          description: List of filter objects
          type: array
          x-stoplight:
            id: 22sgv37ve9kxo
          items:
            $ref: '#/components/schemas/Filter'
            x-stoplight:
              id: ttw5rxhy83k8p
        pageInfo:
          $ref: '#/components/schemas/Paginated'
          x-stoplight:
            id: 7cyrb1770mrzz
      required:
        - list
        - pageInfo
      x-stoplight:
        id: wbc42cyev1qzt
      example:
        list:
          - source_id: ds_g4ccx6e77h1dmi
            comparison_op: eq
            comparison_sub_op: null
            created_at: '2023-03-02 18:18:05'
            fk_column_id: cl_d7ah9n2qfupgys
            fk_hook_id: null
            fk_parent_id: null
            fk_view_id: vw_b739e29vqmrxnf
            id: fi_xn647tpmdq8fu8X
            is_group: null
            logical_op: and
            order: 1
            base_id: p_xm3thidrblw4n7
            updated_at: '2023-03-02 18:18:05'
            value: foo
        pageInfo:
          isFirstPage: true
          isLastPage: true
          page: 1
          pageSize: 10
          totalRows: 1
    FilterLogList:
      title: Filter Log List Model
      description: Model for Filter Log List
      x-stoplight:
        id: jbgae8q40szhc
      type: object
      x-examples:
        - list:
            - source_id: ds_g4ccx6e77h1dmi
              comparison_op: eq
              comparison_sub_op: null
              created_at: '2023-03-02 18:18:05'
              fk_column_id: cl_d7ah9n2qfupgys
              fk_hook_id: null
              fk_parent_id: null
              fk_view_id: vw_b739e29vqmrxnf
              id: fi_xn647tpmdq8fu8X
              is_group: null
              logical_op: and
              order: 1
              base_id: p_xm3thidrblw4n7
              updated_at: '2023-03-02 18:18:05'
              value: foo
          pageInfo:
            isFirstPage: true
            isLastPage: true
            page: 1
            pageSize: 10
            totalRows: 1
      properties:
        list:
          description: List of filter objects
          type: array
          x-stoplight:
            id: 22sgv37ve9kxo
          items:
            $ref: '#/components/schemas/Filter'
            x-stoplight:
              id: ttw5rxhy83k8p
        pageInfo:
          $ref: '#/components/schemas/Paginated'
          x-stoplight:
            id: 7cyrb1770mrzz
      required:
        - list
        - pageInfo
      example:
        list:
          - source_id: ds_g4ccx6e77h1dmi
            comparison_op: eq
            comparison_sub_op: null
            created_at: '2023-03-02 18:18:05'
            fk_column_id: cl_d7ah9n2qfupgys
            fk_hook_id: null
            fk_parent_id: null
            fk_view_id: vw_b739e29vqmrxnf
            id: fi_xn647tpmdq8fu8X
            is_group: null
            logical_op: and
            order: 1
            base_id: p_xm3thidrblw4n7
            updated_at: '2023-03-02 18:18:05'
            value: foo
        pageInfo:
          isFirstPage: true
          isLastPage: true
          page: 1
          pageSize: 10
          totalRows: 1
    FilterReq:
      title: Filter Request Model
      description: Model for Filter Request
      type: object
      x-stoplight:
        id: f95qy45zzlhei
      properties:
        comparison_op:
          description: Comparison Operator
          enum:
            - allof
            - anyof
            - blank
            - btw
            - checked
            - empty
            - eq
            - ge
            - gt
            - gte
            - in
            - is
            - isWithin
            - isnot
            - le
            - like
            - lt
            - lte
            - nallof
            - nanyof
            - nbtw
            - neq
            - nlike
            - not
            - notblank
            - notchecked
            - notempty
            - notnull
            - 'null'
          type: string
          nullable: true
        comparison_sub_op:
          description: Comparison Sub-Operator
          enum:
            - daysAgo
            - daysFromNow
            - exactDate
            - nextMonth
            - nextNumberOfDays
            - nextWeek
            - nextYear
            - oneMonthAgo
            - oneMonthFromNow
            - oneWeekAgo
            - oneWeekFromNow
            - pastMonth
            - pastNumberOfDays
            - pastWeek
            - pastYear
            - today
            - tomorrow
            - yesterday
          type: string
          nullable: true
        fk_column_id:
          description: Foreign Key to Column
          $ref: '#/components/schemas/StringOrNull'
        fk_parent_id:
          description: Belong to which filter ID
          $ref: '#/components/schemas/StringOrNull'
        is_group:
          description: Is this filter grouped?
          $ref: '#/components/schemas/Bool'
        logical_op:
          description: Logical Operator
          enum:
            - and
            - not
            - or
          type: string
        value:
          description: The filter value. Can be NULL for some operators.
      readOnly: true
      example:
        comparison_op: eq
        comparison_sub_op: null
        fk_column_id: cl_d7ah9n2qfupgys
        is_group: false
        logical_op: and
        value: foo
      x-examples:
        - comparison_op: eq
          comparison_sub_op: null
          fk_column_id: cl_d7ah9n2qfupgys
          is_group: false
          logical_op: and
          value: foo
    Follower:
      title: Follower
      properties:
        fk_follower_id:
          type: string
      type: object
      x-stoplight:
        id: a3aza5b3wavkv
    Form:
      title: Form Model
      description: Model for Form
      type: object
      properties:
        title:
          description: Form View Title
          type: string
          example: Form View 1
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: z6wjvs00d3qfk
        banner_image_url:
          description: Banner Image URL
          $ref: '#/components/schemas/AttachmentRes'
        columns:
          description: Form Columns
          type: array
          items:
            $ref: '#/components/schemas/FormColumn'
        email:
          description: Email to sned after form is submitted
          $ref: '#/components/schemas/StringOrNull'
        fk_model_id:
          description: Foreign Key to Model
          type: string
          example: md_rsu68aqjsbyqtl
        source_id:
          description: Source ID
          type: string
          example: md_rsu68aqjsbyqtl
          x-stoplight:
            id: kfz7tve8nzj6f
        heading:
          description: The heading of the form
          type: string
          example: My Form
        lock_type:
          description: Lock Type of this view
          enum:
            - collaborative
            - locked
            - personal
          type: string
          example: collaborative
        logo_url:
          description: Logo URL.
          $ref: '#/components/schemas/AttachmentRes'
        meta:
          description: Meta Info for this view
          $ref: '#/components/schemas/Meta'
        redirect_after_secs:
          description: The numbers of seconds to redirect after form submission
          $ref: '#/components/schemas/StringOrNull'
        redirect_url:
          description: URL to redirect after submission
          $ref: '#/components/schemas/TextOrNull'
        show_blank_form:
          description: Show `Blank Form` after 5 seconds
          $ref: '#/components/schemas/Bool'
        subheading:
          description: The subheading of the form
          $ref: '#/components/schemas/TextOrNull'
          example: My Form Subheading
        submit_another_form:
          description: Show `Submit Another Form` button
          $ref: '#/components/schemas/Bool'
        success_msg:
          description: Custom message after the form is successfully submitted
          $ref: '#/components/schemas/TextOrNull'
      x-stoplight:
        id: szw7mwcmvrj90
      example:
        title: Form View 1
        source_id: ds_g4ccx6e77h1dmi
        banner_image_url:
          title: Random-Pictures-of-Conceptual-and-Creative-Ideas-02.jpg
          mimetype: image/jpg
          size: 32903
          path: >-
            download/noco/pm0umqsip16i1u5/m8yn03dncqal6ri//iDL5ednaHz2j2Sa3Cl.jpg
          signedPath: >-
            dltemp/lNoLbqB62Jdo5Rmp/1709308800000/noco/pm0umqsip16i1u5/m8yn03dncqal6ri//iDL5ednaHz2j2Sa3Cl.jpg
        columns:
          - description: null
            id: fvc_ugj9zo5bzocxtlX
            source_id: ds_g4ccx6e77h1dmi
            base_id: p_xm3thidrblw4n7
            fk_view_id: vw_kdf5cr7qmhksek
            fk_column_id: cl_phvuuwjrzcdo0g
            uuid: null
            label: null
            help: null
            required: null
            show: 0
            order: 1
            created_at: '2023-03-04 16:40:47'
            updated_at: '2023-03-04 16:40:47'
            meta: {}
        email: user@example.com
        fk_model_id: md_rsu68aqjsbyqtl
        heading: My Form
        lock_type: collaborative
        logo_url:
          title: Random-Pictures-of-Conceptual-and-Creative-Ideas-02.jpg
          mimetype: image/jpg
          size: 32903
          path: >-
            download/noco/pm0umqsip16i1u5/m8yn03dncqal6ri//iDL5ednaHz2j2Sa3Cl.jpg
          signedPath: >-
            dltemp/lNoLbqB62Jdo5Rmp/1709308800000/noco/pm0umqsip16i1u5/m8yn03dncqal6ri//iDL5ednaHz2j2Sa3Cl.jpg
        meta: null
        redirect_after_secs: null
        redirect_url: null
        show_blank_form: 0
        subheading: My Form Subheading
        submit_another_form: 0
        success_msg: Thank you for the submission.
      x-examples:
        - title: Form View 1
          source_id: ds_g4ccx6e77h1dmi
          banner_image_url:
            title: Random-Pictures-of-Conceptual-and-Creative-Ideas-02.jpg
            mimetype: image/jpg
            size: 32903
            path: >-
              download/noco/pm0umqsip16i1u5/m8yn03dncqal6ri//iDL5ednaHz2j2Sa3Cl.jpg
            signedPath: >-
              dltemp/lNoLbqB62Jdo5Rmp/1709308800000/noco/pm0umqsip16i1u5/m8yn03dncqal6ri//iDL5ednaHz2j2Sa3Cl.jpg
          columns:
            - description: null
              id: fvc_ugj9zo5bzocxtlX
              source_id: ds_g4ccx6e77h1dmi
              base_id: p_xm3thidrblw4n7
              fk_view_id: vw_kdf5cr7qmhksek
              fk_column_id: cl_phvuuwjrzcdo0g
              uuid: null
              label: null
              help: null
              required: null
              show: 0
              order: 1
              created_at: '2023-03-04 16:40:47'
              updated_at: '2023-03-04 16:40:47'
              meta: {}
          email: user@example.com
          fk_model_id: md_rsu68aqjsbyqtl
          heading: My Form
          lock_type: collaborative
          logo_url:
            title: Random-Pictures-of-Conceptual-and-Creative-Ideas-02.jpg
            mimetype: image/jpg
            size: 32903
            path: >-
              download/noco/pm0umqsip16i1u5/m8yn03dncqal6ri//iDL5ednaHz2j2Sa3Cl.jpg
            signedPath: >-
              dltemp/lNoLbqB62Jdo5Rmp/1709308800000/noco/pm0umqsip16i1u5/m8yn03dncqal6ri//iDL5ednaHz2j2Sa3Cl.jpg
          meta: null
          redirect_after_secs: null
          redirect_url: null
          show_blank_form: 0
          subheading: My Form Subheading
          submit_another_form: 0
          success_msg: Thank you for the submission.
    FormUpdateReq:
      title: Form Update Request Model
      description: Model for Form Update Request
      type: object
      properties:
        banner_image_url:
          description: Banner Image URL
          oneOf:
            - $ref: '#/components/schemas/AttachmentReq'
            - type: 'null'
        email:
          description: Email to sned after form is submitted
          $ref: '#/components/schemas/StringOrNull'
        heading:
          description: The heading of the form
          example: My Form
          maxLength: 255
          type: string
        logo_url:
          description: Logo URL.
          oneOf:
            - $ref: '#/components/schemas/AttachmentReq'
            - type: 'null'
        meta:
          description: Meta Info for this view
          $ref: '#/components/schemas/Meta'
        redirect_after_secs:
          description: The numbers of seconds to redirect after form submission
          $ref: '#/components/schemas/StringOrNull'
        redirect_url:
          description: URL to redirect after submission
          $ref: '#/components/schemas/TextOrNull'
        show_blank_form:
          description: Show `Blank Form` after 5 seconds
          $ref: '#/components/schemas/Bool'
        subheading:
          description: The subheading of the form
          $ref: '#/components/schemas/TextOrNull'
          example: My Form Subheading
        submit_another_form:
          description: Show `Submit Another Form` button
          $ref: '#/components/schemas/Bool'
        success_msg:
          description: Custom message after the form is successfully submitted
          $ref: '#/components/schemas/TextOrNull'
      x-stoplight:
        id: gqdmtil2ni0ln
      example:
        banner_image_url:
          title: Random-Pictures-of-Conceptual-and-Creative-Ideas-02.jpg
          mimetype: image/jpg
          size: 32903
          path: >-
            download/noco/pm0umqsip16i1u5/m8yn03dncqal6ri//iDL5ednaHz2j2Sa3Cl.jpg
        email: user@example.com
        heading: My Form
        logo_url: null
        meta: null
        redirect_after_secs: null
        redirect_url: null
        show_blank_form: 0
        subheading: My Form Subheading
        submit_another_form: 0
        success_msg: Thank you for the submission.
      x-examples:
        - banner_image_url:
            title: Random-Pictures-of-Conceptual-and-Creative-Ideas-02.jpg
            mimetype: image/jpg
            size: 32903
            path: >-
              download/noco/pm0umqsip16i1u5/m8yn03dncqal6ri//iDL5ednaHz2j2Sa3Cl.jpg
          email: user@example.com
          heading: My Form
          logo_url: null
          meta: null
          redirect_after_secs: null
          redirect_url: null
          show_blank_form: 0
          subheading: My Form Subheading
          submit_another_form: 0
          success_msg: Thank you for the submission.
    FormColumn:
      title: Form Column Model
      description: Model for Form Column
      type: object
      x-examples:
        - description: null
          id: fvc_1m9b0aub791d4m
          fk_column_id: cl_ah9zavkn25ihyd
          fk_view_id: vw_6fqln9vdytdv8q
          help: This is a help text
          label: Form Label
          meta: null
          order: 1
          required: 0
          show: 0
          uuid: null
      properties:
        description:
          description: Form Column Description
          $ref: '#/components/schemas/TextOrNull'
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
        fk_column_id:
          description: Foreign Key to Column
          $ref: '#/components/schemas/Id'
        fk_view_id:
          description: Foreign Key to View
          $ref: '#/components/schemas/Id'
        help:
          description: Form Column Help Text (Not in use)
          $ref: '#/components/schemas/TextOrNull'
        label:
          description: Form Column Label
          $ref: '#/components/schemas/TextOrNull'
        meta:
          description: Meta Info
          $ref: '#/components/schemas/Meta'
        order:
          description: The order among all the columns in the form
          type: number
          example: 1
        required:
          description: Is this form column required in submission?
          $ref: '#/components/schemas/Bool'
        show:
          description: Is this column shown in Form?
          $ref: '#/components/schemas/Bool'
        enable_scanner:
          description: >-
            Indicates whether the 'Fill by scan' button is visible for this
            column or not.
          $ref: '#/components/schemas/Bool'
          example: true
        uuid:
          description: Form Column UUID (Not in use)
          $ref: '#/components/schemas/StringOrNull'
      x-stoplight:
        id: rs2uh5opf10q6
      example:
        description: null
        id: fvc_1m9b0aub791d4m
        fk_column_id: cl_ah9zavkn25ihyd
        fk_view_id: vw_6fqln9vdytdv8q
        help: This is a help text
        label: Form Label
        meta: null
        order: 1
        required: 0
        show: 0
        uuid: null
    FormColumnReq:
      title: Form Column Request Model
      description: Model for Form Column Request
      type: object
      x-examples:
        - description: null
          help: This is a help text
          label: Form Label
          meta: null
          order: 1
          required: 0
          show: 0
      properties:
        description:
          description: Form Column Description
          $ref: '#/components/schemas/TextOrNull'
        help:
          description: Form Column Help Text (Not in use)
          $ref: '#/components/schemas/TextOrNull'
        label:
          description: Form Column Label
          $ref: '#/components/schemas/TextOrNull'
        meta:
          description: Meta Info
          $ref: '#/components/schemas/Meta'
        order:
          description: The order among all the columns in the form
          type: number
        required:
          description: Is this form column required in submission?
          $ref: '#/components/schemas/Bool'
        show:
          description: Is this column shown in Form?
          $ref: '#/components/schemas/Bool'
      x-stoplight:
        id: a1vgymjna1ose
      example:
        description: null
        help: This is a help text
        label: Form Label
        meta: null
        order: 1
        required: 0
        show: 0
    Formula:
      title: Formula Model
      description: Model for Formula
      type: object
      properties:
        error:
          description: Error Message
          type: string
        fk_column_id:
          description: Foreign Key to Column
          $ref: '#/components/schemas/Id'
        formula:
          description: Formula with column ID replaced
          example: CONCAT("FOO", {{cl_c5knoi4xs4sfpt}})
          type: string
        formula_raw:
          description: Original Formula inputted in UI
          example: CONCAT("FOO", {Title})
          type: string
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
      x-stoplight:
        id: syn5ameyiipp7
      example:
        error: Error Message shows here
        fk_column_id: cl_h2micb4jdnmsh1
        formula: CONCAT("FOO", {{cl_c5knoi4xs4sfpt}})
        formula_raw: CONCAT("FOO", {Title})
        id: fm_1lo8wqtvvipdns
      x-examples:
        - error: Error Message shows here
          fk_column_id: cl_h2micb4jdnmsh1
          formula: CONCAT("FOO", {{cl_c5knoi4xs4sfpt}})
          formula_raw: CONCAT("FOO", {Title})
          id: fm_1lo8wqtvvipdns
    FormulaColumnReq:
      title: Formula Column Request Model
      description: Model for Formula Column Request
      type: object
      properties:
        title:
          description: Formula Title
          maxLength: 255
          minLength: 1
          type: string
        formula:
          description: Formula with column ID replaced
          type: string
        formula_raw:
          description: Original Formula inputted in UI
          type: string
        uidt:
          description: UI Data Type
          enum:
            - Formula
          type: string
      x-stoplight:
        id: tvczns7x7nj73
      example:
        title: Formula
        formula: CONCAT("FOO", {{cl_c5knoi4xs4sfpt}})
        formula_raw: CONCAT("FOO", {Title})
        uidt: Formula
      x-examples:
        - title: Formula
          formula: CONCAT("FOO", {{cl_c5knoi4xs4sfpt}})
          formula_raw: CONCAT("FOO", {Title})
          uidt: Formula
    Gallery:
      title: Gallery Model
      description: Model for Gallery
      properties:
        title:
          type: string
        alias:
          type: string
        columns:
          items:
            $ref: '#/components/schemas/GalleryColumn'
          type: array
        cover_image:
          type: string
        cover_image_idx:
          type: integer
        deleted:
          $ref: '#/components/schemas/Bool'
        fk_cover_image_col_id:
          description: Foreign Key to Cover Image Column
          $ref: '#/components/schemas/StringOrNull'
        fk_model_id:
          description: Foreign Key to Model
          type: string
        fk_view_id:
          description: Foreign Key to View
          type: string
        lock_type:
          enum:
            - collaborative
            - locked
            - personal
          type: string
        next_enabled:
          $ref: '#/components/schemas/Bool'
        order:
          description: Order of Gallery
          type: number
        prev_enabled:
          $ref: '#/components/schemas/Bool'
        restrict_number:
          type: string
        restrict_size:
          type: string
        restrict_types:
          type: string
      type: object
      x-stoplight:
        id: brih3mxjli606
      example:
        title: string
        alias: string
        columns:
          - fk_col_id: string
            fk_gallery_id: string
            help: string
            id: stringX
            label: string
        cover_image: string
        cover_image_idx: 0
        deleted: true
        fk_cover_image_col_id: string
        fk_model_id: string
        fk_view_id: string
        lock_type: collaborative
        next_enabled: true
        order: 0
        prev_enabled: true
        restrict_number: string
        restrict_size: string
        restrict_types: string
      x-examples:
        - title: string
          alias: string
          columns:
            - fk_col_id: string
              fk_gallery_id: string
              help: string
              id: stringX
              label: string
          cover_image: string
          cover_image_idx: 0
          deleted: true
          fk_cover_image_col_id: string
          fk_model_id: string
          fk_view_id: string
          lock_type: collaborative
          next_enabled: true
          order: 0
          prev_enabled: true
          restrict_number: string
          restrict_size: string
          restrict_types: string
    GalleryColumn:
      title: Gallery Column Model
      description: Model for Gallery Column
      properties:
        fk_col_id:
          type: string
        fk_gallery_id:
          type: string
        help:
          type: string
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
        label:
          type: string
      type: object
      x-stoplight:
        id: auloy6128iwh9
      example:
        fk_col_id: string
        fk_gallery_id: string
        help: string
        id: stringX
        label: string
      x-examples:
        - fk_col_id: string
          fk_gallery_id: string
          help: string
          id: stringX
          label: string
    GalleryUpdateReq:
      title: Gallery View Update Request Model
      description: Model for Gallery View Update Request
      x-stoplight:
        id: 8o7b279bp9wmg
      type: object
      properties:
        fk_cover_image_col_id:
          description: The id of the column that contains the cover image
          $ref: '#/components/schemas/StringOrNull'
        meta:
          description: Meta Info
          $ref: '#/components/schemas/Meta'
          x-stoplight:
            id: zhp6jkrr54wuf
      example:
        fk_cover_image_col_id: cl_ib8l4j1kiu1efx
        meta: null
      x-examples:
        - fk_cover_image_col_id: cl_ib8l4j1kiu1efx
          meta: null
    GeoLocation:
      title: Geo Location Model
      description: Model for Geo Location
      properties:
        latitude:
          description: The latitude of the location
          example: 18.52139
          exclusiveMaximum: 90
          exclusiveMinimum: -90
          format: double
          type: number
        longitude:
          description: The longitude of the location
          example: 179.87295
          exclusiveMaximum: 180
          exclusiveMinimum: -180
          format: double
          type: number
      type: object
      x-stoplight:
        id: jv0zkileq99er
      example:
        latitude: 18.52139
        longitude: 179.87295
      x-examples:
        - latitude: 18.52139
          longitude: 179.87295
    Grid:
      title: Grid Model
      description: Model for Grid
      type: object
      properties:
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: e3ti3fc0ocjyu
        base_id:
          description: Base ID
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: e3ti3fc0ocjyu
        source_id:
          description: Source ID
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: m8v3iyf1tidy9
        fk_view_id:
          description: Foreign Key to View
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: m8v3iyf1tidy9
        row_height:
          description: Row Height
          type: number
          example: 1
        meta:
          description: Meta info for Grid Model
          $ref: '#/components/schemas/Meta'
          x-stoplight:
            id: n8cud3jyqw5yv
        columns:
          description: Grid View Columns
          type: array
          x-stoplight:
            id: 22y0gipx2jdf8
          items:
            $ref: '#/components/schemas/GridColumn'
            x-stoplight:
              id: nmzp6w3o6b24u
      x-stoplight:
        id: wlj101286bua3
      example:
        base_id: p_xm3thidrblw4n7
        source_id: ds_g4ccx6e77h1dmi
        fk_view_id: vw_p2jcatxz4mvcfw
        row_height: 1
        meta: null
        columns:
          - title: Id
            id: cl_phvuuwjrzcdo0gX
            source_id: ds_g4ccx6e77h1dmi
            base_id: p_xm3thidrblw4n7
            fk_model_id: md_rsu68aqjsbyqtl
            column_name: id
            uidt: ID
            dt: int
            np: '10'
            ns: '0'
            clen: null
            cop: '1'
            pk: 1
            pv: null
            rqd: 1
            un: 1
            ct: int unsigned
            ai: 1
            unique: 0
            cdf: null
            cc: ''
            csn: null
            dtx: specificType
            dtxp: ''
            dtxs: '0'
            au: 0
            validate: null
            virtual: null
            deleted: null
            system: 0
            order: 1
            created_at: '2023-03-02 17:04:06'
            updated_at: '2023-03-02 17:04:06'
            meta: null
      x-examples:
        - base_id: p_xm3thidrblw4n7
          source_id: ds_g4ccx6e77h1dmi
          fk_view_id: vw_p2jcatxz4mvcfw
          row_height: 1
          meta: null
          columns:
            - title: Id
              id: cl_phvuuwjrzcdo0gX
              source_id: ds_g4ccx6e77h1dmi
              base_id: p_xm3thidrblw4n7
              fk_model_id: md_rsu68aqjsbyqtl
              column_name: id
              uidt: ID
              dt: int
              np: '10'
              ns: '0'
              clen: null
              cop: '1'
              pk: 1
              pv: null
              rqd: 1
              un: 1
              ct: int unsigned
              ai: 1
              unique: 0
              cdf: null
              cc: ''
              csn: null
              dtx: specificType
              dtxp: ''
              dtxs: '0'
              au: 0
              validate: null
              virtual: null
              deleted: null
              system: 0
              order: 1
              created_at: '2023-03-02 17:04:06'
              updated_at: '2023-03-02 17:04:06'
              meta: null
    Grid - copy:
      title: Grid Model
      description: Model for Grid
      x-stoplight:
        id: 9hiq0xt18jao0
      type: object
      properties:
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: e3ti3fc0ocjyu
        base_id:
          description: Base ID
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: e3ti3fc0ocjyu
        source_id:
          description: Source ID
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: m8v3iyf1tidy9
        fk_view_id:
          description: Foreign Key to View
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: m8v3iyf1tidy9
        row_height:
          description: Row Height
          type: number
          example: 1
        meta:
          description: Meta info for Grid Model
          $ref: '#/components/schemas/Meta'
          x-stoplight:
            id: n8cud3jyqw5yv
        columns:
          description: Grid View Columns
          type: array
          x-stoplight:
            id: 22y0gipx2jdf8
          items:
            $ref: '#/components/schemas/GridColumn'
            x-stoplight:
              id: nmzp6w3o6b24u
      example:
        base_id: p_xm3thidrblw4n7
        source_id: ds_g4ccx6e77h1dmi
        fk_view_id: vw_p2jcatxz4mvcfw
        row_height: 1
        meta: null
        columns:
          - title: Id
            id: cl_phvuuwjrzcdo0gX
            source_id: ds_g4ccx6e77h1dmi
            base_id: p_xm3thidrblw4n7
            fk_model_id: md_rsu68aqjsbyqtl
            column_name: id
            uidt: ID
            dt: int
            np: '10'
            ns: '0'
            clen: null
            cop: '1'
            pk: 1
            pv: null
            rqd: 1
            un: 1
            ct: int unsigned
            ai: 1
            unique: 0
            cdf: null
            cc: ''
            csn: null
            dtx: specificType
            dtxp: ''
            dtxs: '0'
            au: 0
            validate: null
            virtual: null
            deleted: null
            system: 0
            order: 1
            created_at: '2023-03-02 17:04:06'
            updated_at: '2023-03-02 17:04:06'
            meta: null
      x-examples:
        - base_id: p_xm3thidrblw4n7
          source_id: ds_g4ccx6e77h1dmi
          fk_view_id: vw_p2jcatxz4mvcfw
          row_height: 1
          meta: null
          columns:
            - title: Id
              id: cl_phvuuwjrzcdo0gX
              source_id: ds_g4ccx6e77h1dmi
              base_id: p_xm3thidrblw4n7
              fk_model_id: md_rsu68aqjsbyqtl
              column_name: id
              uidt: ID
              dt: int
              np: '10'
              ns: '0'
              clen: null
              cop: '1'
              pk: 1
              pv: null
              rqd: 1
              un: 1
              ct: int unsigned
              ai: 1
              unique: 0
              cdf: null
              cc: ''
              csn: null
              dtx: specificType
              dtxp: ''
              dtxs: '0'
              au: 0
              validate: null
              virtual: null
              deleted: null
              system: 0
              order: 1
              created_at: '2023-03-02 17:04:06'
              updated_at: '2023-03-02 17:04:06'
              meta: null
    GridColumn:
      title: Grid Column Model
      description: Model for Grid Column
      type: object
      properties:
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: jc14yojp52rqj
        fk_view_id:
          description: Foreign Key to View
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: vl18dbt5c2r8r
        fk_column_id:
          description: Foreign Key to Column
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: 2drg88fmodf3v
        base_id:
          description: Base ID
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: 2drg88fmodf3v
        source_id:
          description: Source ID
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: 2drg88fmodf3v
        show:
          $ref: '#/components/schemas/Bool'
          x-stoplight:
            id: d47eer13oa8yr
        order:
          description: Grid Column Order
          type: number
          x-stoplight:
            id: d47eer13oa8yr
          example: 1
        width:
          description: Column Width
          type: string
          example: 200px
        help:
          description: Column Help Text
          $ref: '#/components/schemas/StringOrNull'
          x-stoplight:
            id: azwh6zn37qzkc
        group_by:
          description: Group By
          $ref: '#/components/schemas/Bool'
        group_by_order:
          description: Group By Order
          type: number
          example: 1
        group_by_sort:
          description: Group By Sort
          $ref: '#/components/schemas/StringOrNull'
          example: asc
      x-stoplight:
        id: 195gzd7s6p7nv
      example:
        id: nc_c8jz4kxe6xvh11X
        fk_view_id: vw_p2jcatxz4mvcfw
        fk_column_id: cl_c5knoi4xs4sfpt
        base_id: p_xm3thidrblw4n7
        source_id: ds_g4ccx6e77h1dmi
        show: 0
        order: 1
        width: 200px
        help: null
        group_by: 0
        group_by_order: null
        group_by_sort: null
      x-examples:
        - id: nc_c8jz4kxe6xvh11X
          fk_view_id: vw_p2jcatxz4mvcfw
          fk_column_id: cl_c5knoi4xs4sfpt
          base_id: p_xm3thidrblw4n7
          source_id: ds_g4ccx6e77h1dmi
          show: 0
          order: 1
          width: 200px
          help: null
          group_by: 0
          group_by_order: null
          group_by_sort: null
    GridColumnReq:
      title: Grid Column Request Model
      description: Model for Grid Column Request
      properties:
        fk_column_id:
          description: Foreign Key to Column
          $ref: '#/components/schemas/Id'
        help:
          maxLength: 255
          type: string
        label:
          description: The label of the column
          example: My Column
          maxLength: 255
          type: string
        width:
          description: The width of the column
          example: 200px
          maxLength: 255
          pattern: ^[0-9]+(px|%)$
          type: string
        group_by:
          description: Group By
          $ref: '#/components/schemas/Bool'
        group_by_order:
          description: Group By Order
          type: number
          example: 1
        group_by_sort:
          description: Group By Sort
          $ref: '#/components/schemas/StringOrNull'
          example: asc
      type: object
      x-stoplight:
        id: 9yhalgmix6d0m
      example:
        fk_column_id: cl_c5knoi4xs4sfpt
        label: My Column
        width: 200px
      x-examples:
        - fk_column_id: cl_c5knoi4xs4sfpt
          label: My Column
          width: 200px
    GridUpdateReq:
      title: Grid View Update Model
      description: Model for Grid View Update
      x-stoplight:
        id: v0hz01gynll1t
      type: object
      properties:
        row_height:
          description: Row Height
          type: number
          x-stoplight:
            id: m5976ax1q13cr
          example: 1
        meta:
          description: Meta Info for grid view
          $ref: '#/components/schemas/Meta'
          x-stoplight:
            id: dugbkhe9iupqu
      example:
        row_height: '1'
        meta: null
      x-examples:
        - row_height: '1'
          meta: null
    Hook:
      title: Hook Model
      description: Model for Hook
      type: object
      x-stoplight:
        id: 5jvfnece2nu6w
      properties:
        title:
          description: Hook Title
          type: string
          example: My Webhook
        description:
          description: Hook Description
          type: string
          example: This is my hook description
        version:
          description: Hook Version
          type: string
          x-stoplight:
            id: socewqvadj91n
          example: v2
          enum:
            - v1
            - v2
        active:
          description: Is the hook active?
          $ref: '#/components/schemas/Bool'
        async:
          description: Is the hook aysnc?
          $ref: '#/components/schemas/Bool'
        env:
          description: Environment for the hook
          type: string
          example: all
        event:
          description: Event Type for the operation
          enum:
            - after
            - before
          type: string
          example: after
        fk_model_id:
          description: Foreign Key to Model
          type: string
          example: md_rsu68aqjsbyqtl
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
        notification:
          description: >-
            Hook Notification including info such as type, payload, method,
            body, and etc
          type:
            - object
            - string
        operation:
          description: Hook Operation
          enum:
            - insert
            - update
            - delete
            - bulkInsert
            - bulkUpdate
            - bulkDelete
          type: string
          example: insert
        retries:
          description: Retry Count
          type: number
          example: 10
        retry_interval:
          description: Retry Interval
          type: number
          example: 60000
        timeout:
          description: Timeout
          type: number
          example: 60000
        type:
          description: Hook Type
          type: string
      example:
        title: My Webhook
        description: This is my hook description
        active: 0
        async: 0
        env: all
        event: after
        fk_model_id: md_rsu68aqjsbyqtl
        id: stringX
        notification: >-
          {"type":"URL","payload":{"method":"POST","body":"{{ json data
          }}","headers":[{}],"parameters":[{}],"auth":"","path":"http://example.com"}}
        'null': null
        operation: insert
        retries: 10
        retry_interval: 60000
        timeout: 60000
      x-examples:
        - title: My Webhook
          description: This is my hook description
          active: 0
          async: 0
          env: all
          event: after
          fk_model_id: md_rsu68aqjsbyqtl
          id: stringX
          notification: >-
            {"type":"URL","payload":{"method":"POST","body":"{{ json data
            }}","headers":[{}],"parameters":[{}],"auth":"","path":"http://example.com"}}
          'null': null
          operation: insert
          retries: 10
          retry_interval: 60000
          timeout: 60000
    HookReq:
      title: Hook Request Model
      description: Model for Hook
      x-stoplight:
        id: btj9o665l08xj
      type: object
      properties:
        title:
          description: Hook Title
          type: string
          example: My Webhook
        description:
          description: Hook Description
          $ref: '#/components/schemas/StringOrNull'
        active:
          description: Is the hook active?
          $ref: '#/components/schemas/Bool'
        async:
          description: Is the hook aysnc?
          $ref: '#/components/schemas/Bool'
        env:
          description: Environment for the hook
          type: string
          example: all
        event:
          description: Event Type for the operation
          enum:
            - after
            - before
          type: string
          example: after
        fk_model_id:
          description: Foreign Key to Model
          type: string
          example: md_rsu68aqjsbyqtl
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
        notification:
          description: >-
            Hook Notification including info such as type, payload, method,
            body, and etc
          type:
            - object
            - string
        operation:
          description: Hook Operation
          enum:
            - insert
            - update
            - delete
            - bulkInsert
            - bulkUpdate
            - bulkDelete
          type: string
          example: insert
        retries:
          description: Retry Count
          type: number
          example: 10
        retry_interval:
          description: Retry Interval
          type: number
          example: 60000
        timeout:
          description: Timeout
          type: number
          example: 60000
        type:
          description: Hook Type
          type:
            - string
            - 'null'
        condition:
          description: Is this hook assoicated with some filters
          $ref: '#/components/schemas/Bool'
          x-stoplight:
            id: wwzoum7rrlwun
      required:
        - event
        - notification
        - operation
        - title
      example:
        title: My Webhook
        description: This is my hook description
        active: 0
        async: 0
        env: all
        event: after
        fk_model_id: md_rsu68aqjsbyqtl
        id: stringX
        notification: >-
          {"type":"URL","payload":{"method":"POST","body":"{{ json data
          }}","headers":[{}],"parameters":[{}],"auth":"","path":"http://example.com"}}
        'null': null
        operation: insert
        retries: 10
        retry_interval: 60000
        timeout: 60000
        condition: false
      x-examples:
        - title: My Webhook
          description: This is my hook description
          active: 0
          async: 0
          env: all
          event: after
          fk_model_id: md_rsu68aqjsbyqtl
          id: stringX
          notification: >-
            {"type":"URL","payload":{"method":"POST","body":"{{ json data
            }}","headers":[{}],"parameters":[{}],"auth":"","path":"http://example.com"}}
          'null': null
          operation: insert
          retries: 10
          retry_interval: 60000
          timeout: 60000
          condition: false
    HookList:
      title: Hook List Model
      description: Model for Hook List
      type: object
      x-examples:
        - list:
            - title: My Webhook
              description: This is my hook description
              active: 0
              async: 0
              env: all
              event: after
              fk_model_id: md_rsu68aqjsbyqtl
              id: stringX
              notification: >-
                {"type":"URL","payload":{"method":"POST","body":"{{ json data
                }}","headers":[{}],"parameters":[{}],"auth":"","path":"http://example.com"}}
              'null': null
              operation: insert
              retries: 10
              retry_interval: 60000
              timeout: 60000
          pageInfo:
            isFirstPage: true
            isLastPage: true
            page: 1
            pageSize: 10
            totalRows: 1
      properties:
        list:
          description: List of hook objects
          minItems: 1
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Hook'
        pageInfo:
          $ref: '#/components/schemas/Paginated'
      required:
        - list
        - pageInfo
      x-stoplight:
        id: oza9z6dpygn29
      example:
        list:
          - title: My Webhook
            description: This is my hook description
            active: 0
            async: 0
            env: all
            event: after
            fk_model_id: md_rsu68aqjsbyqtl
            id: stringX
            notification: >-
              {"type":"URL","payload":{"method":"POST","body":"{{ json data
              }}","headers":[{}],"parameters":[{}],"auth":"","path":"http://example.com"}}
            'null': null
            operation: insert
            retries: 10
            retry_interval: 60000
            timeout: 60000
        pageInfo:
          isFirstPage: true
          isLastPage: true
          page: 1
          pageSize: 10
          totalRows: 1
    HookLog:
      title: Hook Log Model
      description: Model for Hook Log
      type: object
      x-stoplight:
        id: alkb2a68ewbpz
      properties:
        source_id:
          description: Unique Source ID
          type: string
          example: ds_jxuewivwbxeum2
        conditions:
          description: Hook Conditions
          type: string
        error:
          description: Error
          $ref: '#/components/schemas/StringOrNull'
        error_code:
          description: Error Code
          $ref: '#/components/schemas/StringOrNull'
        error_message:
          description: Error Message
          $ref: '#/components/schemas/StringOrNull'
        event:
          description: Hook Event
          type: string
          example: after
          enum:
            - after
            - before
        execution_time:
          description: Execution Time in milliseconds
          type: string
          example: '98'
        fk_hook_id:
          description: Foreign Key to Hook
          $ref: '#/components/schemas/StringOrNull'
        id:
          description: Unique ID
          $ref: '#/components/schemas/StringOrNull'
        notifications:
          description: Hook Notification
          type: string
        operation:
          description: Hook Operation
          type: string
          enum:
            - insert
            - update
            - delete
            - bulkInsert
            - bulkUpdate
            - bulkDelete
          example: insert
        payload:
          description: Hook Payload
          type: string
          example: >-
            {"method":"POST","body":"{{ json data
            }}","headers":[{}],"parameters":[{}],"auth":"","path":"https://webhook.site/6eb45ce5-b611-4be1-8b96-c2965755662b"}
        base_id:
          description: Base ID
          type: string
          example: p_tbhl1hnycvhe5l
        response:
          description: Hook Response
          $ref: '#/components/schemas/StringOrNull'
        test_call:
          description: Is this testing hook call?
          $ref: '#/components/schemas/Bool'
        triggered_by:
          description: Who triggered the hook?
          $ref: '#/components/schemas/StringOrNull'
        type:
          description: Hook Type
          type: string
          example: URL
      example:
        source_id: ds_jxuewivwbxeum2
        event: after
        execution_time: '98'
        fk_hook_id: hk_035ijv5qdi97y5
        id: stringX
        notifications: >-
          {"type":"URL","payload":{"method":"POST","body":"{{ json data
          }}","headers":[{}],"parameters":[{}],"auth":"","path":"https://webhook.site/6eb45ce5-b611-4be1-8b96-c2965755662b"}}
        operation: insert
        payload: >-
          {"method":"POST","body":"{{ json data
          }}","headers":[{}],"parameters":[{}],"auth":"","path":"https://webhook.site/6eb45ce5-b611-4be1-8b96-c2965755662b"}
        base_id: p_tbhl1hnycvhe5l
        response: >-
          {"status":200,"statusText":"OK","headers":{"server":"nginx","content-type":"text/plain;
          charset=UTF-8","transfer-encoding":"chunked","connection":"close","vary":"Accept-Encoding","x-request-id":"53844a7d-ede8-4798-adf7-8af441908a72","x-token-id":"6eb45ce5-b611-4be1-8b96-c2965755662b","cache-control":"no-cache,
          private","date":"Fri, 24 Mar 2023 10:50:10
          GMT"},"config":{"url":"https://webhook.site/6eb45ce5-b611-4be1-8b96-c2965755662b","method":"post","data":"{\"type\":\"records.after.insert\",\"id\":\"a77d97dc-a3e4-4719-9b46-45f93e0cc99a\",\"data\":{\"table_id\":\"md_d8v403o74mf5lf\",\"table_name\":\"Sheet-2\"}}","headers":{"Accept":"application/json,
          text/plain,
          */*","Content-Type":"application/x-www-form-urlencoded","User-Agent":"axios/0.21.4","Content-Length":138},"params":{}}}
        test_call: 0
        triggered_by: w@nocodb.com
        type: URL
      x-examples:
        - source_id: ds_jxuewivwbxeum2
          event: after
          execution_time: '98'
          fk_hook_id: hk_035ijv5qdi97y5
          id: stringX
          notifications: >-
            {"type":"URL","payload":{"method":"POST","body":"{{ json data
            }}","headers":[{}],"parameters":[{}],"auth":"","path":"https://webhook.site/6eb45ce5-b611-4be1-8b96-c2965755662b"}}
          operation: insert
          payload: >-
            {"method":"POST","body":"{{ json data
            }}","headers":[{}],"parameters":[{}],"auth":"","path":"https://webhook.site/6eb45ce5-b611-4be1-8b96-c2965755662b"}
          base_id: p_tbhl1hnycvhe5l
          response: >-
            {"status":200,"statusText":"OK","headers":{"server":"nginx","content-type":"text/plain;
            charset=UTF-8","transfer-encoding":"chunked","connection":"close","vary":"Accept-Encoding","x-request-id":"53844a7d-ede8-4798-adf7-8af441908a72","x-token-id":"6eb45ce5-b611-4be1-8b96-c2965755662b","cache-control":"no-cache,
            private","date":"Fri, 24 Mar 2023 10:50:10
            GMT"},"config":{"url":"https://webhook.site/6eb45ce5-b611-4be1-8b96-c2965755662b","method":"post","data":"{\"type\":\"records.after.insert\",\"id\":\"a77d97dc-a3e4-4719-9b46-45f93e0cc99a\",\"data\":{\"table_id\":\"md_d8v403o74mf5lf\",\"table_name\":\"Sheet-2\"}}","headers":{"Accept":"application/json,
            text/plain,
            */*","Content-Type":"application/x-www-form-urlencoded","User-Agent":"axios/0.21.4","Content-Length":138},"params":{}}}
          test_call: 0
          triggered_by: w@nocodb.com
          type: URL
    HookLogList:
      title: Hook Log List Model
      description: Model for Hook Log List
      x-stoplight:
        id: ck3ymtqepbl7e
      examples: []
      type: object
      x-examples:
        example-1:
          sources:
            list:
              - alias: string
                database: string
                host: string
                id: string
                params: string
                password: string
                port: 0
                base_id: string
                ssl: string
                type: string
                url: string
                username: string
            pageInfo:
              isFirstPage: true
              isLastPage: true
              pageSize: 0
              sort: string
              totalRows: 0
      properties:
        list:
          description: List of hook objects
          minItems: 1
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/HookLog'
        pageInfo:
          $ref: '#/components/schemas/Paginated'
      required:
        - list
        - pageInfo
    HookTestReq:
      title: Hook Test Request Model
      description: Model for Hook Test Request
      type: object
      properties:
        hook:
          $ref: '#/components/schemas/HookReq'
        payload:
          description: Payload to be sent
      required:
        - hook
        - payload
      x-stoplight:
        id: fmxwekzyi46za
      example:
        hook:
          title: My Webhook
          description: This is my hook description
          active: 0
          async: 0
          env: all
          event: after
          fk_model_id: md_rsu68aqjsbyqtl
          id: stringX
          notification: >-
            {"type":"URL","payload":{"method":"POST","body":"{{ json data
            }}","headers":[{}],"parameters":[{}],"auth":"","path":"http://example.com"}}
          'null': null
          operation: insert
          retries: 10
          retry_interval: 60000
          timeout: 60000
        payload:
          data:
            Id: 1
            Title: Sample Text
            CreatedAt: '2023-03-03T10:03:06.484Z'
            UpdatedAt: '2023-03-03T10:03:06.484Z'
            attachment:
              - title: image.png
                url: https://nocodb.com/dummy.png
                mimetype: image/png
                size: 0
            f: Sample Output
      x-examples:
        - hook:
            title: My Webhook
            description: This is my hook description
            active: 0
            async: 0
            env: all
            event: after
            fk_model_id: md_rsu68aqjsbyqtl
            id: stringX
            notification: >-
              {"type":"URL","payload":{"method":"POST","body":"{{ json data
              }}","headers":[{}],"parameters":[{}],"auth":"","path":"http://example.com"}}
            'null': null
            operation: insert
            retries: 10
            retry_interval: 60000
            timeout: 60000
          payload:
            data:
              Id: 1
              Title: Sample Text
              CreatedAt: '2023-03-03T10:03:06.484Z'
              UpdatedAt: '2023-03-03T10:03:06.484Z'
              attachment:
                - title: image.png
                  url: https://nocodb.com/dummy.png
                  mimetype: image/png
                  size: 0
              f: Sample Output
    Id:
      title: ID Model
      description: Model for ID
      maxLength: 20
      minLength: 0
      type: string
      x-stoplight:
        id: upw7it13u2dkn
      example: string
      x-examples:
        - string
    Kanban:
      title: Kanban Model
      description: Model for Kanban
      type: object
      properties:
        title:
          description: Kanban Title
          type: string
          example: My Kanban
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
        fk_grp_col_id:
          description: Grouping Field Column ID
          $ref: '#/components/schemas/StringOrNull'
        fk_view_id:
          description: View ID
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: 1kgw1w06b97nl
        fk_cover_image_col_id:
          description: Cover Image Column ID
          $ref: '#/components/schemas/StringOrNull'
        columns:
          description: Kanban Columns
          type: array
          items:
            $ref: '#/components/schemas/KanbanColumn'
        meta:
          description: Meta Info for Kanban
          $ref: '#/components/schemas/Meta'
      x-stoplight:
        id: gu721t0zw7jqq
      example:
        title: My Kanban
        id: vw_wqs4zheuo5lgdy
        fk_grp_col_id: cl_3704cxcbqt7sj7
        fk_view_id: vw_wqs4zheuo5lgdy
        fk_cover_image_col_id: null
        columns:
          - title: string
            id: kvc_2skkg5mi1eb37f
            fk_column_id: cl_hzos4ghyncqi4k
            fk_view_id: vw_wqs4zheuo5lgdy
            source_id: ds_hd4ojj0xpquaam
            base_id: p_kzfl5lb0t3tcok
            show: 0
            order: '1'
        meta: null
      x-examples:
        - title: My Kanban
          id: vw_wqs4zheuo5lgdy
          fk_grp_col_id: cl_3704cxcbqt7sj7
          fk_view_id: vw_wqs4zheuo5lgdy
          fk_cover_image_col_id: null
          columns:
            - title: string
              id: kvc_2skkg5mi1eb37f
              fk_column_id: cl_hzos4ghyncqi4k
              fk_view_id: vw_wqs4zheuo5lgdy
              source_id: ds_hd4ojj0xpquaam
              base_id: p_kzfl5lb0t3tcok
              show: 0
              order: '1'
          meta: null
    KanbanColumn:
      title: Kanban Column Model
      description: Model for Kanban Column
      type: object
      properties:
        title:
          description: Base ID
          x-stoplight:
            id: uqq8xmyz97t1u
          type: string
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
        fk_column_id:
          description: Foreign Key to Column
          $ref: '#/components/schemas/Id'
        fk_view_id:
          description: Foreign Key to View
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: t1fy4zy561ih8
        source_id:
          description: |
            Baes ID
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: uqq8xmyz97t1u
        base_id:
          description: Base ID
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: uqq8xmyz97t1u
        show:
          description: Is this column shown?
          $ref: '#/components/schemas/Bool'
          x-stoplight:
            id: uqq8xmyz97t1u
        order:
          description: Column Order
          type: number
          x-stoplight:
            id: pbnchzgci5dwa
          example: 1
      x-stoplight:
        id: psbv6c6y9qvbu
      example:
        title: string
        id: kvc_2skkg5mi1eb37fX
        fk_column_id: cl_hzos4ghyncqi4k
        fk_view_id: vw_wqs4zheuo5lgdy
        source_id: ds_hd4ojj0xpquaam
        base_id: p_kzfl5lb0t3tcok
        show: 0
        order: '1'
      x-examples:
        - title: string
          id: kvc_2skkg5mi1eb37fX
          fk_column_id: cl_hzos4ghyncqi4k
          fk_view_id: vw_wqs4zheuo5lgdy
          source_id: ds_hd4ojj0xpquaam
          base_id: p_kzfl5lb0t3tcok
          show: 0
          order: '1'
    KanbanUpdateReq:
      title: Kanban Update Request Model
      description: Model for Kanban Update Request
      type: object
      properties:
        fk_grp_col_id:
          description: Foreign Key to Grouping Field Column
          $ref: '#/components/schemas/StringOrNull'
        fk_cover_image_col_id:
          description: Foreign Key to Cover Image Column
          $ref: '#/components/schemas/StringOrNull'
          x-stoplight:
            id: 81wn4hzj76wod
        meta:
          description: Meta Info
          $ref: '#/components/schemas/Meta'
          x-stoplight:
            id: stsvdmkli1b0r
      x-stoplight:
        id: 9zirjgj9k1gqa
      example:
        fk_grp_col_id: cl_g0a89q9xdry3lu
        fk_cover_image_col_id: cl_ib8l4j1kiu1efx
        meta:
          cl_g0a89q9xdry3lu:
            - title: null
              id: uncategorizedX
              order: 0
              color: '#c2f5e8'
              collapsed: false
            - title: a
              id: sl_ihyva6jx6dg0fcX
              fk_column_id: cl_g0a89q9xdry3lu
              color: '#cfdffe'
              order: 1
              collapsed: false
            - title: b
              id: sl_gqdm5v6t8aetoaX
              fk_column_id: cl_g0a89q9xdry3lu
              color: '#d0f1fd'
              order: 2
              collapsed: false
            - title: cc
              id: sl_eipnl0kn7a9d3cX
              fk_column_id: cl_g0a89q9xdry3lu
              color: '#c2f5e8'
              order: 3
              collapsed: false
            - title: d
              id: sl_dei8p2jq0cnlv0X
              fk_column_id: cl_g0a89q9xdry3lu
              color: '#ffdaf6'
              order: 4
              collapsed: false
      x-examples:
        - fk_grp_col_id: cl_g0a89q9xdry3lu
          fk_cover_image_col_id: cl_ib8l4j1kiu1efx
          meta:
            cl_g0a89q9xdry3lu:
              - title: null
                id: uncategorizedX
                order: 0
                color: '#c2f5e8'
                collapsed: false
              - title: a
                id: sl_ihyva6jx6dg0fcX
                fk_column_id: cl_g0a89q9xdry3lu
                color: '#cfdffe'
                order: 1
                collapsed: false
              - title: b
                id: sl_gqdm5v6t8aetoaX
                fk_column_id: cl_g0a89q9xdry3lu
                color: '#d0f1fd'
                order: 2
                collapsed: false
              - title: cc
                id: sl_eipnl0kn7a9d3cX
                fk_column_id: cl_g0a89q9xdry3lu
                color: '#c2f5e8'
                order: 3
                collapsed: false
              - title: d
                id: sl_dei8p2jq0cnlv0X
                fk_column_id: cl_g0a89q9xdry3lu
                color: '#ffdaf6'
                order: 4
                collapsed: false
    LicenseReq:
      title: License Key Request Model
      description: Model for Kanban Request
      properties:
        key:
          description: The license key
          example: '1234567890'
          maxLength: 255
          type: string
      type: object
      x-stoplight:
        id: 4vo9hms4s6uie
      example:
        key: '1234567890'
      x-examples:
        - key: '1234567890'
    LinkToAnotherColumnReq:
      title: LinkToAnotherColumn Request Model
      description: Model for LinkToAnotherColumn Request
      properties:
        title:
          description: The title of the virtual column
          maxLength: 255
          minLength: 1
          type: string
        childId:
          description: Foreign Key to chhild column
          $ref: '#/components/schemas/Id'
        parentId:
          description: Foreign Key to parent column
          $ref: '#/components/schemas/Id'
        type:
          description: The type of the relationship
          enum:
            - bt
            - hm
            - mm
            - oo
          type: string
        uidt:
          description: Abstract type of the relationship
          enum:
            - LinkToAnotherRecord
            - Links
          type: string
        virtual:
          description: Is this relationship virtual?
          $ref: '#/components/schemas/Bool'
      required:
        - childId
        - parentId
        - title
        - type
        - uidt
      type: object
      x-stoplight:
        id: ke4urwgcmt83x
      example:
        title: string
        childId: string
        parentId: string
        type: hm
        uidt: LinkToAnotherRecord
        virtual: true
      x-examples:
        - title: string
          childId: string
          parentId: string
          type: hm
          uidt: LinkToAnotherRecord
          virtual: true
    LinkToAnotherRecord:
      title: LinkToAnotherRecord Model
      description: Model for LinkToAnotherRecord
      properties:
        deleted:
          type: string
        dr:
          type: string
        fk_child_column_id:
          type: string
        fk_column_id:
          description: Foreign Key to Column
          $ref: '#/components/schemas/Id'
        fk_index_name:
          type: string
        fk_mm_child_column_id:
          type: string
        fk_mm_model_id:
          type: string
        fk_mm_parent_column_id:
          type: string
        fk_parent_column_id:
          type: string
        fk_related_model_id:
          type: string
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
        order:
          type: string
        type:
          type: string
        ur:
          type: string
        virtual:
          $ref: '#/components/schemas/Bool'
      type: object
      x-stoplight:
        id: tcn1muyj67810
      example:
        deleted: string
        dr: string
        fk_child_column_id: string
        fk_column_id: string
        fk_index_name: string
        fk_mm_child_column_id: string
        fk_mm_model_id: string
        fk_mm_parent_column_id: string
        fk_parent_column_id: string
        fk_related_model_id: string
        id: stringX
        order: string
        type: string
        ur: string
        virtual: true
      x-examples:
        - deleted: string
          dr: string
          fk_child_column_id: string
          fk_column_id: string
          fk_index_name: string
          fk_mm_child_column_id: string
          fk_mm_model_id: string
          fk_mm_parent_column_id: string
          fk_parent_column_id: string
          fk_related_model_id: string
          id: stringX
          order: string
          type: string
          ur: string
          virtual: true
    Lookup:
      title: Lookup Model
      description: Model for Lookup
      type: object
      properties:
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
        fk_column_id:
          description: Foreign Key to Column
          $ref: '#/components/schemas/Id'
        fk_lookup_column_id:
          description: Foreign Key to Lookup Column
          $ref: '#/components/schemas/Id'
        fk_relation_column_id:
          description: Foreign Key to Relation Column
          $ref: '#/components/schemas/Id'
        order:
          description: The order among the list
          type: number
          example: 1
      x-stoplight:
        id: 53ff6kxwlgjrb
      example:
        id: lk_mngsu0e45njbxr
        fk_column_id: cl_vdiy9bz7h11kdm
        fk_relation_column_id: cl_5jestblzneb649
        fk_lookup_column_id: cl_4cm47dtjphgqkv
        order: 1
      x-examples:
        - id: lk_mngsu0e45njbxr
          fk_column_id: cl_vdiy9bz7h11kdm
          fk_relation_column_id: cl_5jestblzneb649
          fk_lookup_column_id: cl_4cm47dtjphgqkv
          order: 1
    LookupColumnReq:
      title: Lookup Column Request Model
      description: Model for Lookup Column Request
      type: object
      properties:
        title:
          description: Lookup Title
          maxLength: 255
          type: string
          example: My Lookup
        fk_lookup_column_id:
          description: Foreign Key to Lookup Column
          $ref: '#/components/schemas/Id'
        fk_relation_column_id:
          description: Foreign Key to Relation Column
          $ref: '#/components/schemas/Id'
        uidt:
          description: UI DataType
          enum:
            - Lookup
          type: string
      x-stoplight:
        id: rmmtwpsofeqo5
      example:
        title: My Lookup
        fk_relation_column_id: cl_5jestblzneb649
        fk_lookup_column_id: cl_4cm47dtjphgqkv
        uidt: Lookup
      x-examples:
        - title: My Lookup
          fk_relation_column_id: cl_5jestblzneb649
          fk_lookup_column_id: cl_4cm47dtjphgqkv
          uidt: Lookup
    Map:
      title: Map Model
      description: Model for Map
      properties:
        title:
          description: Title of Map View
          example: My Map
          type: string
        source_id:
          description: The ID of the source that this view belongs to
          example: ds_g4ccx6e77h1dmi
          type: string
        columns:
          description: Columns in this view
          items:
            $ref: '#/components/schemas/MapColumn'
          type: array
        fk_geo_data_col_id:
          description: Foreign Key to GeoData Column
          example: cl_8iw2o4ejzvdyna
          type: string
        fk_view_id:
          description: Unique ID for Map
          example: vw_qjt7klod1p9kyv
          type: string
        meta:
          description: Meta data for this view
          $ref: '#/components/schemas/Meta'
        order:
          description: The order of the map list
          type: number
        base_id:
          description: The ID of the base that this view belongs to
          example: p_xm3thidrblw4n7
          type: string
        show:
          description: To show this Map or not
          type: boolean
      type: object
      x-stoplight:
        id: bg6hvpyk90f0p
      example:
        title: My Map
        source_id: ds_g4ccx6e77h1dmi
        columns:
          - source_id: ds_g4ccx6e77h1dmi
            fk_column_id: cl_8iw2o4ejzvdyna
            fk_view_id: vw_qjt7klod1p9kyv
            id: nc_46xcacqn4rc9xf
            order: 1
            base_id: p_xm3thidrblw4n7
            show: 1
        fk_geo_data_col_id: cl_8iw2o4ejzvdyna
        fk_view_id: vw_qjt7klod1p9kyv
        meta: {}
        order: 0
        base_id: p_xm3thidrblw4n7
        show: true
      x-examples:
        - title: My Map
          source_id: ds_g4ccx6e77h1dmi
          columns:
            - source_id: ds_g4ccx6e77h1dmi
              fk_column_id: cl_8iw2o4ejzvdyna
              fk_view_id: vw_qjt7klod1p9kyv
              id: nc_46xcacqn4rc9xf
              order: 1
              base_id: p_xm3thidrblw4n7
              show: 1
          fk_geo_data_col_id: cl_8iw2o4ejzvdyna
          fk_view_id: vw_qjt7klod1p9kyv
          meta: {}
          order: 0
          base_id: p_xm3thidrblw4n7
          show: true
    MapUpdateReq:
      title: Map View Update Request Model
      description: Model for Map
      x-stoplight:
        id: 2me98w8ot1e6o
      type: object
      properties:
        fk_geo_data_col_id:
          description: Foreign Key to GeoData Column
          example: cl_8iw2o4ejzvdyna
          type: string
        meta:
          description: Meta data for this view
          $ref: '#/components/schemas/Meta'
      example:
        fk_geo_data_col_id: cl_8iw2o4ejzvdyna
        meta: null
      x-examples:
        - fk_geo_data_col_id: cl_8iw2o4ejzvdyna
          meta: null
    MapColumn:
      title: Map Column Model
      description: Model for Map Column
      properties:
        source_id:
          description: The ID of the source that this map column belongs to
          example: ds_g4ccx6e77h1dmi
          type: string
        fk_column_id:
          description: Foreign Key to Column
          example: cl_8iw2o4ejzvdyna
          type: string
        fk_view_id:
          description: Foreign Key to View
          example: vw_qjt7klod1p9kyv
          type: string
        id:
          description: Unique ID of Map Column
          example: nc_46xcacqn4rc9xf
          type: string
        order:
          description: the order in the list of map columns
          example: 1
          type: number
        base_id:
          description: The ID of the base that this map column belongs to
          example: p_xm3thidrblw4n7
          type: string
        show:
          description: Whether to show this column or not
          example: 1
          type: number
      type: object
      x-stoplight:
        id: 01nfqgzhqlqoe
      example:
        source_id: ds_g4ccx6e77h1dmi
        fk_column_id: cl_8iw2o4ejzvdyna
        fk_view_id: vw_qjt7klod1p9kyv
        id: nc_46xcacqn4rc9xfX
        order: 1
        base_id: p_xm3thidrblw4n7
        show: 1
      x-examples:
        - source_id: ds_g4ccx6e77h1dmi
          fk_column_id: cl_8iw2o4ejzvdyna
          fk_view_id: vw_qjt7klod1p9kyv
          id: nc_46xcacqn4rc9xfX
          order: 1
          base_id: p_xm3thidrblw4n7
          show: 1
    Meta:
      title: Meta Model
      description: Model for Meta
      oneOf:
        - type: 'null'
        - type: object
        - type: string
      x-stoplight:
        id: daskjldw4zldd
      example: {}
      x-examples:
        - {}
    ModelRoleVisibility:
      title: ModelRoleVisibility Model
      description: Model for ModelRoleVisibility
      properties:
        source_id:
          type: string
        disabled:
          $ref: '#/components/schemas/Bool'
        fk_model_id:
          type: string
        fk_view_id:
          type: string
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
        base_id:
          type: string
        role:
          type: string
      type: object
      x-stoplight:
        id: cxh7walcnpkn0
      example:
        source_id: string
        disabled: true
        fk_model_id: string
        fk_view_id: string
        id: stringX
        base_id: string
        role: string
      x-examples:
        - source_id: string
          disabled: true
          fk_model_id: string
          fk_view_id: string
          id: stringX
          base_id: string
          role: string
    NormalColumnRequest:
      title: Normal Column Request Model
      description: Model for Normal Column Request
      properties:
        title:
          description: Column Title
          maxLength: 255
          type: string
        ai:
          description: Is this column auto-incremented?
          $ref: '#/components/schemas/Bool'
        au:
          description: Is this column auto-updated datetime field?
          $ref: '#/components/schemas/Bool'
        cc:
          description: Column Comment
          $ref: '#/components/schemas/StringOrNull'
        cdf:
          description: Column Default Value
          $ref: '#/components/schemas/StringOrNullOrBooleanOrNumber'
        column_name:
          description: Column Name
          maxLength: 255
          minLength: 1
          type: string
        csn:
          $ref: '#/components/schemas/StringOrNull'
        dt:
          description: Data Type
          type: string
        dtx:
          description: Data Type Extra
          $ref: '#/components/schemas/StringOrNull'
        dtxp:
          description: Data Type Extra Precision
          oneOf:
            - type: string
            - type: number
            - type: 'null'
        dtxs:
          description: Data Type Extra Scale
          oneOf:
            - $ref: '#/components/schemas/StringOrNull'
            - type: number
        np:
          description: Numeric Precision
          oneOf:
            - $ref: '#/components/schemas/StringOrNull'
            - type: integer
        ns:
          description: Numeric Scale
          oneOf:
            - $ref: '#/components/schemas/StringOrNull'
            - type: integer
        pk:
          description: Is this column a primary key?
          $ref: '#/components/schemas/Bool'
        pv:
          description: Is this column a primary value?
          $ref: '#/components/schemas/Bool'
        rqd:
          description: Is this column required?
          $ref: '#/components/schemas/Bool'
        uidt:
          description: UI Data Type
          enum:
            - Attachment
            - AutoNumber
            - Barcode
            - Button
            - Checkbox
            - Collaborator
            - Count
            - CreatedTime
            - Currency
            - Date
            - DateTime
            - Decimal
            - Duration
            - Email
            - Formula
            - ForeignKey
            - GeoData
            - Geometry
            - ID
            - JSON
            - LastModifiedTime
            - LongText
            - LinkToAnotherRecord
            - Lookup
            - MultiSelect
            - Number
            - Percent
            - PhoneNumber
            - Rating
            - Rollup
            - SingleLineText
            - SingleSelect
            - SpecificDBType
            - Time
            - URL
            - Year
            - QrCode
            - Links
            - User
            - CreatedBy
            - LastModifiedBy
          type: string
        un:
          description: Is this column unique?
          $ref: '#/components/schemas/Bool'
        unique:
          description: Is this column unique?
          $ref: '#/components/schemas/Bool'
      type: object
      required:
        - column_name
      x-stoplight:
        id: fn3gqmojvswv2
      example:
        title: string
        ai: true
        au: true
        cc: string
        cdf: string
        column_name: string
        csn: string
        dt: string
        dtx: string
        dtxp: 0
        dtxs: 0
        np: 0
        ns: 0
        pk: true
        pv: true
        rqd: true
        uidt: ID
        un: true
        unique: true
      x-examples:
        - title: string
          ai: true
          au: true
          cc: string
          cdf: string
          column_name: string
          csn: string
          dt: string
          dtx: string
          dtxp: 0
          dtxs: 0
          np: 0
          ns: 0
          pk: true
          pv: true
          rqd: true
          uidt: ID
          un: true
          unique: true
    OrgUserReq:
      title: Organisation User Request Model
      description: Model for Organisation User Update Request
      properties:
        email:
          format: email
          type: string
        roles:
          description: Roles for the base user
          enum:
            - org-level-creator
            - org-level-viewer
          type: string
      type: object
      x-stoplight:
        id: n484boi6jv3up
      example:
        email: user@example.com
        roles: org-level-creator
      x-examples:
        - email: user@example.com
          roles: org-level-creator
    Paginated:
      title: Paginated Model
      description: Model for Paginated
      properties:
        isFirstPage:
          description: Is the current page the first page
          type: boolean
        isLastPage:
          description: Is the current page the last page
          type: boolean
        page:
          description: The current page
          example: 1
          type: number
        pageSize:
          description: The number of pages
          example: 10
          type: number
        totalRows:
          description: The number of rows in the given result
          example: 1
          type: number
      type: object
      x-stoplight:
        id: 2x65v3n9xo8q3
      example:
        isFirstPage: true
        isLastPage: true
        page: 1
        pageSize: 10
        totalRows: 1
      x-examples:
        - isFirstPage: true
          isLastPage: true
          page: 1
          pageSize: 10
          totalRows: 1
    Password:
      title: Password Model
      description: Model for Password
      example: password123456789
      minLength: 8
      type: string
      x-stoplight:
        id: s7gk265anpyc7
      x-examples:
        - password123456789
    PasswordChangeReq:
      title: Password Change Request Model
      description: Model for Password Change Request
      properties:
        currentPassword:
          type: string
        newPassword:
          minLength: 8
          type: string
      required:
        - currentPassword
        - newPassword
      type: object
      x-stoplight:
        id: wvritsht82jyy
      example:
        currentPassword: currentpassword
        newPassword: newpassword
      x-examples:
        - currentPassword: currentpassword
          newPassword: newpassword
    PasswordForgotReq:
      title: Password Forgot Request Model
      description: Model for Password Forgot Request
      properties:
        email:
          description: Email address of the user
          format: email
          type: string
      required:
        - email
      type: object
      x-stoplight:
        id: qj6pb0nc6dtb1
      example:
        email: user@example.com
      x-examples:
        - email: user@example.com
    PasswordResetReq:
      title: Password Reset Request Model
      description: Model for Password Reset Request
      properties:
        password:
          description: New password
          example: newpassword
          minLength: 8
          type: string
      required:
        - password
      type: object
      x-stoplight:
        id: 24ig9uh9evw2p
      example:
        password: newpassword
      x-examples:
        - password: newpassword
    Plugin:
      title: Plugin Model
      description: Model for Plugin
      type: object
      properties:
        tags:
          description: Plugin tags
          type: string
          example: Storage
        title:
          description: Plugin Title
          type: string
        description:
          description: Plugin Description
          type: string
          example: >-
            Amazon Simple Storage Service (Amazon S3) is an object storage
            service that offers industry-leading scalability, data availability,
            security, and performance.
        version:
          description: Plugin Version
          type: string
          example: 0.0.1
        active:
          description: Is plguin active?
          $ref: '#/components/schemas/Bool'
        category:
          description: Plugin Category
          type: string
          example: Storage
        creator:
          description: Plugin Creator (Not in use)
          type: string
        creator_website:
          description: Plugin Creator website (Not in use)
          type: string
        docs:
          description: Documentation of plugin (Not in use)
          type: string
        icon:
          description: Plugin Icon (Not in use)
          type: string
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
        input:
          description: Plugin Input
          oneOf:
            - $ref: '#/components/schemas/StringOrNull'
            - type: integer
        input_schema:
          description: |
            Plugin Input Schema
          type: string
        logo:
          description: Plugin logo
          type: string
          example: plugins/s3.png
        price:
          description: Plugin Price (Not in use)
          type: string
        rating:
          description: Plugin Rating (Not in use)
          type: number
        status:
          description: Plugin Status
          type: string
          example: install
        status_details:
          description: Not in use
          type: string
      x-stoplight:
        id: xxoy0oe5kab93
      example:
        tags: Storage
        title: S3
        description: >-
          Amazon Simple Storage Service (Amazon S3) is an object storage service
          that offers industry-leading scalability, data availability, security,
          and performance.
        version: 0.0.1
        id: nc_tljibbzcyjrhcc
        active: true
        rating: null
        docs: null
        status: install
        status_details: null
        logo: plugins/s3.png
        icon: null
        category: Storage
        input_schema: >-
          {"title":"Configure Amazon
          S3","items":[{"key":"bucket","label":"Bucket
          Name","placeholder":"Bucket
          Name","type":"SingleLineText","required":true},{"key":"region","label":"Region","placeholder":"Region","type":"SingleLineText","required":true},{"key":"access_key","label":"Access
          Key","placeholder":"Access
          Key","type":"SingleLineText","required":true},{"key":"access_secret","label":"Access
          Secret","placeholder":"Access
          Secret","type":"Password","required":true}],"actions":[{"label":"Test","placeholder":"Test","key":"test","actionType":"TEST","type":"Button"},{"label":"Save","placeholder":"Save","key":"save","actionType":"SUBMIT","type":"Button"}],"msgOnInstall":"Successfully
          installed and attachment will be stored in AWS
          S3","msgOnUninstall":""}
        input: >-
          {"bucket":"my-bucket","region":"us-west-004","access_key":"redacted","access_secret":"redacted"}
        creator: null
        creator_website: null
        price: null
      x-examples:
        - tags: Storage
          title: S3
          description: >-
            Amazon Simple Storage Service (Amazon S3) is an object storage
            service that offers industry-leading scalability, data availability,
            security, and performance.
          version: 0.0.1
          id: nc_tljibbzcyjrhcc
          active: true
          rating: null
          docs: null
          status: install
          status_details: null
          logo: plugins/s3.png
          icon: null
          category: Storage
          input_schema: >-
            {"title":"Configure Amazon
            S3","items":[{"key":"bucket","label":"Bucket
            Name","placeholder":"Bucket
            Name","type":"SingleLineText","required":true},{"key":"region","label":"Region","placeholder":"Region","type":"SingleLineText","required":true},{"key":"access_key","label":"Access
            Key","placeholder":"Access
            Key","type":"SingleLineText","required":true},{"key":"access_secret","label":"Access
            Secret","placeholder":"Access
            Secret","type":"Password","required":true}],"actions":[{"label":"Test","placeholder":"Test","key":"test","actionType":"TEST","type":"Button"},{"label":"Save","placeholder":"Save","key":"save","actionType":"SUBMIT","type":"Button"}],"msgOnInstall":"Successfully
            installed and attachment will be stored in AWS
            S3","msgOnUninstall":""}
          input: >-
            {"bucket":"my-bucket","region":"us-west-004","access_key":"redacted","access_secret":"redacted"}
          creator: null
          creator_website: null
          price: null
    PluginReq:
      title: Plugin Reqeust
      description: Model for Plugin Request
      type: object
      x-stoplight:
        id: qcriv4xl88hyu
      properties:
        active:
          description: Is Plugin Active?
          $ref: '#/components/schemas/Bool'
        input:
          description: Plugin Input
          oneOf:
            - type: string
            - type: 'null'
      example:
        active: 0
        input: >-
          {"bucket":"my-bucket","region":"us-west-004","access_key":"redacted","access_secret":"redacted"}
      x-examples:
        - active: 0
          input: >-
            {"bucket":"my-bucket","region":"us-west-004","access_key":"redacted","access_secret":"redacted"}
    PluginTestReq:
      title: Plugin Test Request Model
      description: Model for Plugin Test Request
      type: object
      properties:
        title:
          description: Plugin Title
          maxLength: 45
          type: string
        input:
          oneOf:
            - description: Plugin Input as JSON string
              type: string
            - description: Plugin Input
              type: object
        category:
          x-stoplight:
            id: rg3i3ov9rs6d0
          type: string
          example: Email
      required:
        - title
        - input
        - category
      x-stoplight:
        id: zrvjtpfx9wc54
      example:
        title: Plugin Foo
        input: >-
          {"bucket":"my-bucket","region":"us-west-004","access_key":"redacted","access_secret":"redacted"}
        category: Email
      x-examples:
        - title: Plugin Foo
          input: >-
            {"bucket":"my-bucket","region":"us-west-004","access_key":"redacted","access_secret":"redacted"}
          category: Email
    Base:
      title: Base Model
      description: Model for Base
      type: object
      properties:
        title:
          description: Base Title
          example: my-base
          type: string
        description:
          description: Base Description
          example: This is my base description
          type: string
        sources:
          description: List of source models
          type: array
          items:
            $ref: '#/components/schemas/Source'
        color:
          description: Primary Theme Color
          example: '#24716E'
          type: string
        deleted:
          description: Is the base deleted
          $ref: '#/components/schemas/Bool'
        id:
          description: Unique Base ID
          example: p_124hhlkbeasewh
          type: string
        is_meta:
          $ref: '#/components/schemas/Bool'
        meta:
          description: Meta Info such as theme colors
          $ref: '#/components/schemas/Meta'
        order:
          description: The order in base list
          type: number
        prefix:
          description: Base prefix. Used in XCDB only.
          example: nc_vm5q__
          type: string
        type:
          type: string
          enum:
            - database
            - documentation
            - dashboard
        linked_db_projects:
          description: >-
            List of linked Database Projects that this base has access to (only
            used in Dashboard bases so far)
          type: array
          items:
            $ref: '#/components/schemas/Base'
        status:
          type: string
      x-stoplight:
        id: t8uouhop01ndi
      example:
        title: my-base
        description: This is my base description
        sources:
          - alias: string
            config: null
            enabled: true
            id: stringX
            inflection_column: camelize
            inflection_table: camelize
            is_meta: true
            order: 1
            base_id: string
            type: mysql2
            updated_at: '2023-03-01 14:27:36'
        color: '#24716E'
        created_at: '2023-03-01 14:27:36'
        deleted: true
        id: p_124hhlkbeasewhX
        is_meta: true
        meta: {}
        order: 0
        prefix: nc_vm5q__
        status: string
      x-examples:
        - title: my-base
          description: This is my base description
          sources:
            - alias: string
              config: null
              enabled: true
              id: stringX
              inflection_column: camelize
              inflection_table: camelize
              is_meta: true
              order: 1
              base_id: string
              type: mysql2
              updated_at: '2023-03-01 14:27:36'
          color: '#24716E'
          created_at: '2023-03-01 14:27:36'
          deleted: true
          id: p_124hhlkbeasewhX
          is_meta: true
          meta: {}
          order: 0
          prefix: nc_vm5q__
          status: string
    ProjectList:
      title: Base List Model
      description: Model for Base List
      type: object
      x-examples:
        - list:
            - title: my-base
              description: This is my base description
              sources:
                - alias: string
                  config: null
                  created_at: '2023-03-01 14:27:36'
                  enabled: true
                  id: stringX
                  inflection_column: camelize
                  inflection_table: camelize
                  is_meta: true
                  order: 1
                  base_id: string
                  type: mysql2
                  updated_at: '2023-03-01 14:27:36'
              color: '#24716E'
              created_at: '2023-03-01 14:27:36'
              deleted: true
              id: p_124hhlkbeasewhX
              is_meta: true
              meta: {}
              order: 0
              prefix: nc_vm5q__
              status: string
              updated_at: '2023-03-01 14:27:36'
          pageInfo:
            isFirstPage: true
            isLastPage: true
            page: 1
            pageSize: 10
            totalRows: 1
      properties:
        list:
          description: List of Base Models
          minItems: 1
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Base'
        pageInfo:
          description: Pagination Info
          $ref: '#/components/schemas/Paginated'
      required:
        - list
        - pageInfo
      x-stoplight:
        id: fr75wwwzt951h
      example:
        list:
          - title: my-base
            description: This is my base description
            sources:
              - alias: string
                config: null
                created_at: '2023-03-01 14:27:36'
                enabled: true
                id: stringX
                inflection_column: camelize
                inflection_table: camelize
                is_meta: true
                order: 1
                base_id: string
                type: mysql2
                updated_at: '2023-03-01 14:27:36'
            color: '#24716E'
            created_at: '2023-03-01 14:27:36'
            deleted: true
            id: p_124hhlkbeasewhX
            is_meta: true
            meta: {}
            order: 0
            prefix: nc_vm5q__
            status: string
            updated_at: '2023-03-01 14:27:36'
        pageInfo:
          isFirstPage: true
          isLastPage: true
          page: 1
          pageSize: 10
          totalRows: 1
    ProjectReq:
      title: Base Request Model
      description: Model for Base Request
      properties:
        title:
          description: Base Title
          example: My Base
          maxLength: 128
          minLength: 1
          type: string
        description:
          description: Base Description
          example: This is my base description
          type: string
        sources:
          description: Array of Bases
          items:
            $ref: '#/components/schemas/BaseReq'
          type: array
        color:
          description: Primary Theme Color
          example: '#24716E'
          maxLength: 50
          type: string
        status:
          description: Base Status
          $ref: '#/components/schemas/StringOrNull'
          example: locked
        type:
          type: string
          enum:
            - database
            - documentation
            - dashboard
        linked_db_project_ids:
          description: >-
            List of Linked Database Base IDs (only used for Dashboard Projects
            so far)
          type: array
          items:
            type: string
        meta:
          description: Base Meta
          $ref: '#/components/schemas/Meta'
      required:
        - title
      type: object
      x-stoplight:
        id: f5k929rrvfy92
      example:
        title: My Base
        description: This is my base description
        sources:
          - alias: My Source
            config: null
            inflection_column: camelize
            inflection_table: camelize
            is_meta: true
            type: mysql
        color: '#24716E'
      x-examples:
        - title: My Base
          description: This is my base description
          sources:
            - alias: My Source
              config: null
              inflection_column: camelize
              inflection_table: camelize
              is_meta: true
              type: mysql
          color: '#24716E'
    ProjectUpdateReq:
      title: Base Update Request Model
      description: Model for Base Update Request
      x-stoplight:
        id: 0fq3a94qjgb5f
      type: object
      properties:
        title:
          description: Base Title
          example: My Base
          maxLength: 128
          minLength: 1
          type: string
        color:
          description: Primary Theme Color
          example: '#24716E'
          maxLength: 50
          type: string
        meta:
          description: Base Meta
          $ref: '#/components/schemas/Meta'
          x-stoplight:
            id: m05w9sbwqgul3
        status:
          description: Base Status
          $ref: '#/components/schemas/StringOrNull'
          example: locked
        linked_db_project_ids:
          description: >-
            List of Linked Database Base IDs (only used for Dashboard Projects
            so far)
          type: array
          items:
            type: string
        order:
          description: The order of the list of projects.
          type: number
          example: 1
          minimum: 0
      example:
        title: My Base
        color: '#24716E'
        meta: null
        order: 1
      x-examples:
        - title: My Base
          color: '#24716E'
          meta: null
          order: 1
    ProjectUserReq:
      title: Base User Request Model
      description: Model for Base User Request
      type: object
      properties:
        email:
          description: Base User Email
          format: email
          type: string
        roles:
          description: Base User Role
          enum:
            - no-access
            - commenter
            - editor
            - guest
            - owner
            - viewer
            - creator
          type: string
      required:
        - email
        - roles
      x-stoplight:
        id: 3bvgqk9tn16ur
      example:
        email: user@example.com
        roles: owner
      x-examples:
        - email: user@example.com
          roles: owner
    ProjectUserMetaReq:
      title: Base User Meta Request Model
      description: Model for Base User Meta Request
      type: object
      properties:
        starred:
          description: Star Base
          $ref: '#/components/schemas/Bool'
        order:
          description: The order among the bases
          type: number
          example: 1
        hidden:
          $ref: '#/components/schemas/Bool'
      example:
        starred: true
        order: 1
        hidden: true
      x-examples:
        - starred: true
          order: 1
          hidden: true
    Rollup:
      title: Rollup Model
      description: Model for Rollup
      type: object
      properties:
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
        fk_column_id:
          description: Foreign Key to Column
          $ref: '#/components/schemas/Id'
        fk_relation_column_id:
          description: Foreign to Relation Column
          $ref: '#/components/schemas/Id'
        fk_rollup_column_id:
          description: Foreign to Rollup Column
          $ref: '#/components/schemas/Id'
        rollup_function:
          description: Rollup Function
          type: string
          example: count
          enum:
            - count
            - min
            - max
            - avg
            - countDistinct
            - sumDistinct
            - avgDistinct
      x-stoplight:
        id: imknmkksc8bqk
      example:
        id: rl_kc19pbdkij8wly
        fk_column_id: cl_588b63mneri2yi
        fk_relation_column_id: cl_c09q6eu6hsvn4s
        fk_rollup_column_id: cl_m62i1vyl23n8co
        rollup_function: count
      x-examples:
        - id: rl_kc19pbdkij8wly
          fk_column_id: cl_588b63mneri2yi
          fk_relation_column_id: cl_c09q6eu6hsvn4s
          fk_rollup_column_id: cl_m62i1vyl23n8co
          rollup_function: count
    RollupColumnReq:
      title: Rollup Column Request Model
      description: Model for Rollup Column Request
      type: object
      properties:
        title:
          description: Rollup Column Title
          maxLength: 255
          type: string
        fk_relation_column_id:
          description: Foreign Key to Relation Column
          $ref: '#/components/schemas/Id'
        fk_rollup_column_id:
          description: Foreign Key to Rollup Column
          $ref: '#/components/schemas/Id'
        rollup_function:
          description: Rollup Function
          enum:
            - avg
            - avgDistinct
            - count
            - countDistinct
            - max
            - min
            - sum
            - sumDistinct
          type: string
        uidt:
          description: UI DataType
          enum:
            - Rollup
          type: string
      x-stoplight:
        id: ayjjv1pfxmvlv
      example:
        title: Rollup Column
        fk_relation_column_id: cl_c09q6eu6hsvn4s
        fk_rollup_column_id: cl_m62i1vyl23n8co
        rollup_function: avg
        uidt: Rollup
      x-examples:
        - title: Rollup Column
          fk_relation_column_id: cl_c09q6eu6hsvn4s
          fk_rollup_column_id: cl_m62i1vyl23n8co
          rollup_function: avg
          uidt: Rollup
    SelectOption:
      title: SelectOption Model
      description: Model for SelectOption
      type: object
      properties:
        title:
          description: |
            Option Title
          type: string
          example: Option A
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
        fk_column_id:
          description: Foreign Key to Column
          $ref: '#/components/schemas/Id'
        color:
          description: Option Color
          type: string
          example: '#cfdffe'
        order:
          description: The order among the options
          type: number
          example: 1
      x-stoplight:
        id: y9gglydcl3zjr
      example:
        title: Option A
        id: sl_hvfeuagqtlzzbk
        fk_column_id: cl_35zmvi2tezfipw
        color: '#cfdffe'
        order: 1
      x-examples:
        - title: Option A
          id: sl_hvfeuagqtlzzbk
          fk_column_id: cl_35zmvi2tezfipw
          color: '#cfdffe'
          order: 1
    SelectOptions:
      title: SelectOptions Model
      description: Model for SelectOptions
      type: object
      properties:
        options:
          description: Array of select options
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
      required:
        - options
      x-stoplight:
        id: 3rx8jyy2ufbc3
      example:
        options:
          - title: Option A
            id: sl_hvfeuagqtlzzbkX
            fk_column_id: cl_35zmvi2tezfipw
            color: '#cfdffe'
            order: 1
      x-examples:
        - options:
            - title: Option A
              id: sl_hvfeuagqtlzzbkX
              fk_column_id: cl_35zmvi2tezfipw
              color: '#cfdffe'
              order: 1
    SharedBaseReq:
      title: Shared Base Request Model
      description: Model for Shared Base Request
      type: object
      properties:
        password:
          description: Password to protect the base
          minLength: 8
          type: string
          example: password123
        roles:
          description: The role given the target user
          enum:
            - commenter
            - editor
            - viewer
          type: string
          example: editor
      x-stoplight:
        id: 4jvab8fa8ibxv
      example:
        password: password123
        roles: editor
      x-examples:
        - password: password123
          roles: editor
    SharedView:
      title: SharedView
      description: Model for Shared View
      $ref: '#/components/schemas/View'
      x-stoplight:
        id: gagdto3i3c0fb
      example:
        title: Sheet-1
        source_id: ds_g4ccx6e77h1dmi
        created_at: '2023-03-02 17:46:31'
        fk_model_id: md_mhs9z4r2ak98x0
        id: vw_lg052cnc1c26kfX
        is_default: 1
        lock_type: collaborative
        meta: {}
        order: 1
        password: null
        base_id: p_xm3thidrblw4n7
        show: 1
        show_system_fields: null
        type: 3
        updated_at: '2023-03-02 17:46:31'
        uuid: null
        view:
          source_id: ds_g4ccx6e77h1dmi
          created_at: '2023-03-02 17:46:31'
          fk_view_id: vw_lg052cnc1c26kf
          meta: null
          base_id: p_xm3thidrblw4n7
          row_height: null
          updated_at: '2023-03-02 17:46:31'
          uuid: null
      x-examples:
        - title: Sheet-1
          source_id: ds_g4ccx6e77h1dmi
          created_at: '2023-03-02 17:46:31'
          fk_model_id: md_mhs9z4r2ak98x0
          id: vw_lg052cnc1c26kfX
          is_default: 1
          lock_type: collaborative
          meta: {}
          order: 1
          password: null
          base_id: p_xm3thidrblw4n7
          show: 1
          show_system_fields: null
          type: 3
          updated_at: '2023-03-02 17:46:31'
          uuid: null
          view:
            source_id: ds_g4ccx6e77h1dmi
            created_at: '2023-03-02 17:46:31'
            fk_view_id: vw_lg052cnc1c26kf
            meta: null
            base_id: p_xm3thidrblw4n7
            row_height: null
            updated_at: '2023-03-02 17:46:31'
            uuid: null
    SharedViewList:
      title: Shared View List Model
      description: Model for Shared View List
      type: object
      x-examples:
        - list:
            - title: Sheet-1
              source_id: ds_g4ccx6e77h1dmi
              created_at: '2023-03-02 17:46:31'
              fk_model_id: md_mhs9z4r2ak98x0
              id: vw_lg052cnc1c26kfX
              is_default: 1
              lock_type: collaborative
              meta: {}
              order: 1
              password: null
              base_id: p_xm3thidrblw4n7
              show: 1
              show_system_fields: null
              type: 3
              updated_at: '2023-03-02 17:46:31'
              uuid: null
              view:
                source_id: ds_g4ccx6e77h1dmi
                created_at: '2023-03-02 17:46:31'
                fk_view_id: vw_lg052cnc1c26kf
                meta: null
                base_id: p_xm3thidrblw4n7
                row_height: null
                updated_at: '2023-03-02 17:46:31'
                uuid: null
          pageInfo:
            isFirstPage: true
            isLastPage: true
            page: 1
            pageSize: 10
            totalRows: 1
      properties:
        list:
          description: List of shared view objects
          minItems: 1
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/SharedView'
        pageInfo:
          description: Paginated Info
          $ref: '#/components/schemas/Paginated'
      required:
        - list
        - pageInfo
      x-stoplight:
        id: 5gnbbmgal3om3
      example:
        list:
          - title: Sheet-1
            source_id: ds_g4ccx6e77h1dmi
            created_at: '2023-03-02 17:46:31'
            fk_model_id: md_mhs9z4r2ak98x0
            id: vw_lg052cnc1c26kfX
            is_default: 1
            lock_type: collaborative
            meta: {}
            order: 1
            password: null
            base_id: p_xm3thidrblw4n7
            show: 1
            show_system_fields: null
            type: 3
            updated_at: '2023-03-02 17:46:31'
            uuid: null
            view:
              source_id: ds_g4ccx6e77h1dmi
              created_at: '2023-03-02 17:46:31'
              fk_view_id: vw_lg052cnc1c26kf
              meta: null
              base_id: p_xm3thidrblw4n7
              row_height: null
              updated_at: '2023-03-02 17:46:31'
              uuid: null
        pageInfo:
          isFirstPage: true
          isLastPage: true
          page: 1
          pageSize: 10
          totalRows: 1
    SharedViewReq:
      title: Shared View Request Model
      description: Model for Shared View Request
      type: object
      properties:
        meta:
          description: >-
            Meta data passing to Shared View such as if download is allowed or
            not.
          $ref: '#/components/schemas/Meta'
        password:
          description: Password to restrict access
          $ref: '#/components/schemas/StringOrNull'
      x-stoplight:
        id: hbj6j87gyi7ap
      example:
        meta: {}
        password: '123456789'
      x-examples:
        - meta: {}
          password: '123456789'
    SignInReq:
      title: Signin Request Model
      description: Model for Signin Request
      properties:
        email:
          description: Email address of the user
          format: email
          type: string
        password:
          description: Password of the user
          type: string
      required:
        - email
        - password
      type: object
      x-stoplight:
        id: efb2gvnypydy9
      example:
        email: user@example.com
        password: string
      x-examples:
        - email: user@example.com
          password: string
    SignUpReq:
      title: Signup Request Model
      description: Model for Signup Request
      type: object
      properties:
        email:
          description: Email address of the user
          example: user@example.com
          format: email
          type: string
        password:
          description: Password of the user
          example: password123456789
          minLength: 8
          type: string
        firstname:
          $ref: '#/components/schemas/StringOrNull'
          x-stoplight:
            id: lblivgs8wcsm1
        lastname:
          $ref: '#/components/schemas/StringOrNull'
          x-stoplight:
            id: d4341r35tucq3
        token:
          description: Sign Up Token. Used for invitation.
          $ref: '#/components/schemas/StringOrNull'
          x-stoplight:
            id: otw9jgnr9n7c4
        ignore_subscribe:
          description: Ignore Subscription
          $ref: '#/components/schemas/Bool'
          x-stoplight:
            id: g7ge6mc6vdsds
      required:
        - email
        - password
      x-stoplight:
        id: 6ia1chyii9w48
      example:
        email: user@example.com
        password: password123456789
        firstname: Alice
        lastname: Smith
        token: null
        ignore_subscribe: 0
      x-examples:
        - email: user@example.com
          password: password123456789
          firstname: Alice
          lastname: Smith
          token: null
          ignore_subscribe: 0
    Sort:
      title: Sort Model
      description: Model for Sort
      type: object
      properties:
        id:
          description: Unique ID
          $ref: '#/components/schemas/Id'
        fk_column_id:
          $ref: '#/components/schemas/Id'
        fk_model_id:
          $ref: '#/components/schemas/Id'
        source_id:
          description: Source ID
          type: string
          example: ds_3l9qx8xqksenrl
          readOnly: true
        direction:
          description: Sort direction
          type: string
          enum:
            - asc
            - desc
          example: desc
        order:
          type: number
          example: 1
        base_id:
          description: Base ID
          type: string
          example: p_9sx43moxhqtjm3
          readOnly: true
      x-stoplight:
        id: 25fm97zsmwf6h
      example:
        id: so_xd4t51uv60ghzlX
        fk_column_id: cl_l11b769pe2j1ce
        fk_model_id: md_ehn5izr99m7d45
        source_id: ds_3l9qx8xqksenrl
        direction: desc
        order: 1
        base_id: p_9sx43moxhqtjm3
      x-examples:
        - id: so_xd4t51uv60ghzlX
          fk_column_id: cl_l11b769pe2j1ce
          fk_model_id: md_ehn5izr99m7d45
          source_id: ds_3l9qx8xqksenrl
          direction: desc
          order: 1
          base_id: p_9sx43moxhqtjm3
    SortList:
      title: Sort List Model
      description: Model for Sort List
      type: object
      x-examples:
        - list:
            - id: so_xd4t51uv60ghzlX
              fk_column_id: cl_l11b769pe2j1ce
              fk_model_id: md_ehn5izr99m7d45
              source_id: ds_3l9qx8xqksenrl
              direction: desc
              order: 1
              base_id: p_9sx43moxhqtjm3
          pageInfo:
            isFirstPage: true
            isLastPage: true
            page: 1
            pageSize: 10
            totalRows: 1
      properties:
        list:
          description: List of Sort Objects
          type: array
          x-stoplight:
            id: gjqqc8ciqg947
          items:
            $ref: '#/components/schemas/Sort'
            x-stoplight:
              id: usnfa1kbovpmb
        pageInfo:
          $ref: '#/components/schemas/Paginated'
          x-stoplight:
            id: i75wcejfp5mnq
      required:
        - list
        - pageInfo
      x-stoplight:
        id: us9qfo1go142f
      example:
        list:
          - id: so_xd4t51uv60ghzlX
            fk_column_id: cl_l11b769pe2j1ce
            fk_model_id: md_ehn5izr99m7d45
            source_id: ds_3l9qx8xqksenrl
            direction: desc
            order: 1
            base_id: p_9sx43moxhqtjm3
        pageInfo:
          isFirstPage: true
          isLastPage: true
          page: 1
          pageSize: 10
          totalRows: 1
    SortReq:
      title: Sort Request Model
      description: Model for Sort Request
      minProperties: 1
      type: object
      properties:
        fk_column_id:
          description: Foreign Key to Column
          $ref: '#/components/schemas/Id'
        direction:
          description: Sort direction
          enum:
            - asc
            - desc
          type: string
      x-stoplight:
        id: 8v8qzwm3w4v11
      example:
        direction: asc
        fk_column_id: cl_l11b769pe2j1ce
      x-examples:
        - direction: asc
          fk_column_id: cl_l11b769pe2j1ce
    TextOrNull:
      title: TextOrNull Model
      description: Model for TextOrNull
      oneOf:
        - maxLength: 8192
          type: string
        - type: 'null'
      example: string
      x-examples:
        - string
    StringOrNull:
      title: StringOrNull Model
      description: Model for StringOrNull
      oneOf:
        - maxLength: 255
          type: string
        - type: 'null'
      x-stoplight:
        id: p1g7xrgdsn540
      example: string
      x-examples:
        - string
    StringOrNullOrBooleanOrNumber:
      title: StringOrNullOrBooleanOrNumber Model
      description: Model for StringOrNullOrBooleanOrNumber
      oneOf:
        - type: string
        - type: 'null'
        - type: boolean
        - type: number
      example: string
      x-examples:
        - string
    Table:
      title: Table Model
      description: Model for Table
      type: object
      properties:
        tags:
          description: Currently not in use
          $ref: '#/components/schemas/StringOrNull'
        title:
          description: Table Title
          type: string
        source_id:
          description: Unique Source ID
          type: string
        columns:
          description: The columns included in this table
          type: array
          items:
            $ref: '#/components/schemas/Column'
        columnsById:
          description: Column Models grouped by IDs
          type: object
        deleted:
          $ref: '#/components/schemas/Bool'
        enabled:
          description: Is this table enabled?
          $ref: '#/components/schemas/Bool'
        id:
          description: Unique Table ID
          type: string
        meta:
          description: Meta Data
          $ref: '#/components/schemas/Meta'
        mm:
          description: Is this table used for M2M
          $ref: '#/components/schemas/Bool'
        order:
          description: The order of the list of tables
          type: number
        pinned:
          description: Currently not in use
          $ref: '#/components/schemas/Bool'
        base_id:
          description: Unique Base ID
          type: string
        table_name:
          description: Table Name. Prefix will be added for XCDB bases.
          type: string
        type:
          description: Table Type
          type: string
      required:
        - table_name
        - title
      x-stoplight:
        id: dkfoyjcny5am9
      example:
        tags: null
        title: Table1
        source_id: ds_g4ccx6e77h1dmi
        columns:
          - title: UpdatedAt
            ai: 0
            au: 0
            source_id: ds_g4ccx6e77h1dmi
            cc: ''
            cdf: CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP
            clen: null
            column_name: updated_at
            cop: '4'
            created_at: '2023-03-02 17:04:06'
            csn: null
            ct: timestamp
            deleted: null
            dt: timestamp
            dtx: specificType
            dtxp: '0'
            dtxs: null
            fk_model_id: md_rsu68aqjsbyqtl
            id: cl_m4wkaqgqqjzoehX
            meta: null
            np: null
            ns: null
            order: 4
            pk: 0
            base_id: p_xm3thidrblw4n7
            pv: null
            rqd: 0
            system: 0
            uidt: DateTime
            un: 0
            unique: 0
            updated_at: '2023-03-02 17:04:06'
            validate: null
            virtual: null
          - title: CreatedAt
            ai: 0
            au: 0
            source_id: ds_g4ccx6e77h1dmi
            cc: ''
            cdf: CURRENT_TIMESTAMP
            clen: null
            column_name: created_at
            cop: '3'
            created_at: '2023-03-02 17:04:06'
            csn: null
            ct: timestamp
            deleted: null
            dt: timestamp
            dtx: specificType
            dtxp: '0'
            dtxs: null
            fk_model_id: md_rsu68aqjsbyqtl
            id: cl_jpl0qu4gj4rexqX
            meta: null
            np: null
            ns: null
            order: 3
            pk: 0
            base_id: p_xm3thidrblw4n7
            pv: null
            rqd: 0
            system: 0
            uidt: DateTime
            un: 0
            unique: 0
            updated_at: '2023-03-02 17:04:06'
            validate: null
            virtual: null
          - title: Title
            ai: 0
            au: 0
            source_id: ds_g4ccx6e77h1dmi
            cc: ''
            cdf: null
            clen: '45'
            column_name: title
            cop: '2'
            created_at: '2023-03-02 17:04:06'
            csn: utf8mb4
            ct: varchar(45)
            deleted: null
            dt: varchar
            dtx: specificType
            dtxp: '45'
            dtxs: null
            fk_model_id: md_rsu68aqjsbyqtl
            id: cl_c5knoi4xs4sfptX
            meta: null
            np: null
            ns: null
            order: 2
            pk: 0
            base_id: p_xm3thidrblw4n7
            pv: 1
            rqd: 0
            system: 0
            uidt: SingleLineText
            un: 0
            unique: 0
            updated_at: '2023-03-02 17:04:06'
            validate: null
            virtual: null
          - title: Id
            ai: 1
            au: 0
            source_id: ds_g4ccx6e77h1dmi
            cc: ''
            cdf: null
            clen: null
            column_name: id
            cop: '1'
            created_at: '2023-03-02 17:04:06'
            csn: null
            ct: int unsigned
            deleted: null
            dt: int
            dtx: specificType
            dtxp: ''
            dtxs: '0'
            fk_model_id: md_rsu68aqjsbyqtl
            id: cl_phvuuwjrzcdo0gX
            meta: null
            np: '10'
            ns: '0'
            order: 1
            pk: 1
            base_id: p_xm3thidrblw4n7
            pv: null
            rqd: 1
            system: 0
            uidt: ID
            un: 1
            unique: 0
            updated_at: '2023-03-02 17:04:06'
            validate: null
            virtual: null
        columnsById:
          cl_c5knoi4xs4sfpt:
            title: Title
            ai: 0
            au: 0
            source_id: ds_g4ccx6e77h1dmi
            cc: ''
            cdf: null
            clen: '45'
            column_name: title
            cop: '2'
            created_at: '2023-03-02 17:04:06'
            csn: utf8mb4
            ct: varchar(45)
            deleted: null
            dt: varchar
            dtx: specificType
            dtxp: '45'
            dtxs: null
            fk_model_id: md_rsu68aqjsbyqtl
            id: cl_c5knoi4xs4sfptX
            meta: null
            np: null
            ns: null
            order: 2
            pk: 0
            base_id: p_xm3thidrblw4n7
            pv: 1
            rqd: 0
            system: 0
            uidt: SingleLineText
            un: 0
            unique: 0
            updated_at: '2023-03-02 17:04:06'
            validate: null
            virtual: null
          cl_jpl0qu4gj4rexq:
            title: CreatedAt
            ai: 0
            au: 0
            source_id: ds_g4ccx6e77h1dmi
            cc: ''
            cdf: CURRENT_TIMESTAMP
            clen: null
            column_name: created_at
            cop: '3'
            created_at: '2023-03-02 17:04:06'
            csn: null
            ct: timestamp
            deleted: null
            dt: timestamp
            dtx: specificType
            dtxp: '0'
            dtxs: null
            fk_model_id: md_rsu68aqjsbyqtl
            id: cl_jpl0qu4gj4rexqX
            meta: null
            np: null
            ns: null
            order: 3
            pk: 0
            base_id: p_xm3thidrblw4n7
            pv: null
            rqd: 0
            system: 0
            uidt: DateTime
            un: 0
            unique: 0
            updated_at: '2023-03-02 17:04:06'
            validate: null
            virtual: null
          cl_m4wkaqgqqjzoeh:
            title: UpdatedAt
            ai: 0
            au: 0
            source_id: ds_g4ccx6e77h1dmi
            cc: ''
            cdf: CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP
            clen: null
            column_name: updated_at
            cop: '4'
            created_at: '2023-03-02 17:04:06'
            csn: null
            ct: timestamp
            deleted: null
            dt: timestamp
            dtx: specificType
            dtxp: '0'
            dtxs: null
            fk_model_id: md_rsu68aqjsbyqtl
            id: cl_m4wkaqgqqjzoehX
            meta: null
            np: null
            ns: null
            order: 4
            pk: 0
            base_id: p_xm3thidrblw4n7
            pv: null
            rqd: 0
            system: 0
            uidt: DateTime
            un: 0
            unique: 0
            updated_at: '2023-03-02 17:04:06'
            validate: null
            virtual: null
          cl_phvuuwjrzcdo0g:
            title: Id
            ai: 1
            au: 0
            source_id: ds_g4ccx6e77h1dmi
            cc: ''
            cdf: null
            clen: null
            column_name: id
            cop: '1'
            created_at: '2023-03-02 17:04:06'
            csn: null
            ct: int unsigned
            deleted: null
            dt: int
            dtx: specificType
            dtxp: ''
            dtxs: '0'
            fk_model_id: md_rsu68aqjsbyqtl
            id: cl_phvuuwjrzcdo0gX
            meta: null
            np: '10'
            ns: '0'
            order: 1
            pk: 1
            base_id: p_xm3thidrblw4n7
            pv: null
            rqd: 1
            system: 0
            uidt: ID
            un: 1
            unique: 0
            updated_at: '2023-03-02 17:04:06'
            validate: null
            virtual: null
        created_at: '2023-03-02 17:04:06'
        deleted: null
        enabled: 1
        id: md_rsu68aqjsbyqtlX
        meta: null
        mm: 0
        order: 1
        pinned: null
        base_id: p_xm3thidrblw4n7
        schema: null
        table_name: nc_vm5q___Table1
        type: table
        updated_at: '2023-03-02 17:04:08'
        views:
          - title: Table1
            _ptn: Table1
            _tn: Table1
            source_id: ds_g4ccx6e77h1dmi
            created_at: '2023-03-02 17:04:06'
            disabled:
              commenter: false
              creator: false
              editor: false
              guest: false
              owner: false
              viewer: false
            fk_model_id: md_rsu68aqjsbyqtl
            id: vw_p2jcatxz4mvcfwX
            is_default: 1
            lock_type: collaborative
            meta: {}
            order: 1
            password: null
            base_id: p_xm3thidrblw4n7
            ptn: nc_vm5q___Table1
            ptype: table
            show: 1
            show_system_fields: null
            table_meta: null
            tn: Table1
            type: 3
            updated_at: '2023-03-02 17:04:06'
            uuid: null
            view:
              source_id: ds_g4ccx6e77h1dmi
              created_at: '2023-03-02 17:04:06'
              fk_view_id: vw_p2jcatxz4mvcfw
              meta: null
              base_id: p_xm3thidrblw4n7
              row_height: null
              updated_at: '2023-03-02 17:04:06'
              uuid: null
      x-examples:
        - tags: null
          title: Table1
          source_id: ds_g4ccx6e77h1dmi
          columns:
            - title: UpdatedAt
              ai: 0
              au: 0
              source_id: ds_g4ccx6e77h1dmi
              cc: ''
              cdf: CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP
              clen: null
              column_name: updated_at
              cop: '4'
              created_at: '2023-03-02 17:04:06'
              csn: null
              ct: timestamp
              deleted: null
              dt: timestamp
              dtx: specificType
              dtxp: '0'
              dtxs: null
              fk_model_id: md_rsu68aqjsbyqtl
              id: cl_m4wkaqgqqjzoehX
              meta: null
              np: null
              ns: null
              order: 4
              pk: 0
              base_id: p_xm3thidrblw4n7
              pv: null
              rqd: 0
              system: 0
              uidt: DateTime
              un: 0
              unique: 0
              updated_at: '2023-03-02 17:04:06'
              validate: null
              virtual: null
            - title: CreatedAt
              ai: 0
              au: 0
              source_id: ds_g4ccx6e77h1dmi
              cc: ''
              cdf: CURRENT_TIMESTAMP
              clen: null
              column_name: created_at
              cop: '3'
              created_at: '2023-03-02 17:04:06'
              csn: null
              ct: timestamp
              deleted: null
              dt: timestamp
              dtx: specificType
              dtxp: '0'
              dtxs: null
              fk_model_id: md_rsu68aqjsbyqtl
              id: cl_jpl0qu4gj4rexqX
              meta: null
              np: null
              ns: null
              order: 3
              pk: 0
              base_id: p_xm3thidrblw4n7
              pv: null
              rqd: 0
              system: 0
              uidt: DateTime
              un: 0
              unique: 0
              updated_at: '2023-03-02 17:04:06'
              validate: null
              virtual: null
            - title: Title
              ai: 0
              au: 0
              source_id: ds_g4ccx6e77h1dmi
              cc: ''
              cdf: null
              clen: '45'
              column_name: title
              cop: '2'
              created_at: '2023-03-02 17:04:06'
              csn: utf8mb4
              ct: varchar(45)
              deleted: null
              dt: varchar
              dtx: specificType
              dtxp: '45'
              dtxs: null
              fk_model_id: md_rsu68aqjsbyqtl
              id: cl_c5knoi4xs4sfptX
              meta: null
              np: null
              ns: null
              order: 2
              pk: 0
              base_id: p_xm3thidrblw4n7
              pv: 1
              rqd: 0
              system: 0
              uidt: SingleLineText
              un: 0
              unique: 0
              updated_at: '2023-03-02 17:04:06'
              validate: null
              virtual: null
            - title: Id
              ai: 1
              au: 0
              source_id: ds_g4ccx6e77h1dmi
              cc: ''
              cdf: null
              clen: null
              column_name: id
              cop: '1'
              created_at: '2023-03-02 17:04:06'
              csn: null
              ct: int unsigned
              deleted: null
              dt: int
              dtx: specificType
              dtxp: ''
              dtxs: '0'
              fk_model_id: md_rsu68aqjsbyqtl
              id: cl_phvuuwjrzcdo0gX
              meta: null
              np: '10'
              ns: '0'
              order: 1
              pk: 1
              base_id: p_xm3thidrblw4n7
              pv: null
              rqd: 1
              system: 0
              uidt: ID
              un: 1
              unique: 0
              updated_at: '2023-03-02 17:04:06'
              validate: null
              virtual: null
          columnsById:
            cl_c5knoi4xs4sfpt:
              title: Title
              ai: 0
              au: 0
              source_id: ds_g4ccx6e77h1dmi
              cc: ''
              cdf: null
              clen: '45'
              column_name: title
              cop: '2'
              created_at: '2023-03-02 17:04:06'
              csn: utf8mb4
              ct: varchar(45)
              deleted: null
              dt: varchar
              dtx: specificType
              dtxp: '45'
              dtxs: null
              fk_model_id: md_rsu68aqjsbyqtl
              id: cl_c5knoi4xs4sfptX
              meta: null
              np: null
              ns: null
              order: 2
              pk: 0
              base_id: p_xm3thidrblw4n7
              pv: 1
              rqd: 0
              system: 0
              uidt: SingleLineText
              un: 0
              unique: 0
              updated_at: '2023-03-02 17:04:06'
              validate: null
              virtual: null
            cl_jpl0qu4gj4rexq:
              title: CreatedAt
              ai: 0
              au: 0
              source_id: ds_g4ccx6e77h1dmi
              cc: ''
              cdf: CURRENT_TIMESTAMP
              clen: null
              column_name: created_at
              cop: '3'
              created_at: '2023-03-02 17:04:06'
              csn: null
              ct: timestamp
              deleted: null
              dt: timestamp
              dtx: specificType
              dtxp: '0'
              dtxs: null
              fk_model_id: md_rsu68aqjsbyqtl
              id: cl_jpl0qu4gj4rexqX
              meta: null
              np: null
              ns: null
              order: 3
              pk: 0
              base_id: p_xm3thidrblw4n7
              pv: null
              rqd: 0
              system: 0
              uidt: DateTime
              un: 0
              unique: 0
              updated_at: '2023-03-02 17:04:06'
              validate: null
              virtual: null
            cl_m4wkaqgqqjzoeh:
              title: UpdatedAt
              ai: 0
              au: 0
              source_id: ds_g4ccx6e77h1dmi
              cc: ''
              cdf: CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP
              clen: null
              column_name: updated_at
              cop: '4'
              created_at: '2023-03-02 17:04:06'
              csn: null
              ct: timestamp
              deleted: null
              dt: timestamp
              dtx: specificType
              dtxp: '0'
              dtxs: null
              fk_model_id: md_rsu68aqjsbyqtl
              id: cl_m4wkaqgqqjzoehX
              meta: null
              np: null
              ns: null
              order: 4
              pk: 0
              base_id: p_xm3thidrblw4n7
              pv: null
              rqd: 0
              system: 0
              uidt: DateTime
              un: 0
              unique: 0
              updated_at: '2023-03-02 17:04:06'
              validate: null
              virtual: null
            cl_phvuuwjrzcdo0g:
              title: Id
              ai: 1
              au: 0
              source_id: ds_g4ccx6e77h1dmi
              cc: ''
              cdf: null
              clen: null
              column_name: id
              cop: '1'
              created_at: '2023-03-02 17:04:06'
              csn: null
              ct: int unsigned
              deleted: null
              dt: int
              dtx: specificType
              dtxp: ''
              dtxs: '0'
              fk_model_id: md_rsu68aqjsbyqtl
              id: cl_phvuuwjrzcdo0gX
              meta: null
              np: '10'
              ns: '0'
              order: 1
              pk: 1
              base_id: p_xm3thidrblw4n7
              pv: null
              rqd: 1
              system: 0
              uidt: ID
              un: 1
              unique: 0
              updated_at: '2023-03-02 17:04:06'
              validate: null
              virtual: null
          created_at: '2023-03-02 17:04:06'
          deleted: null
          enabled: 1
          id: md_rsu68aqjsbyqtlX
          meta: null
          mm: 0
          order: 1
          pinned: null
          base_id: p_xm3thidrblw4n7
          schema: null
          table_name: nc_vm5q___Table1
          type: table
          updated_at: '2023-03-02 17:04:08'
          views:
            - title: Table1
              _ptn: Table1
              _tn: Table1
              source_id: ds_g4ccx6e77h1dmi
              created_at: '2023-03-02 17:04:06'
              disabled:
                commenter: false
                creator: false
                editor: false
                guest: false
                owner: false
                viewer: false
              fk_model_id: md_rsu68aqjsbyqtl
              id: vw_p2jcatxz4mvcfwX
              is_default: 1
              lock_type: collaborative
              meta: {}
              order: 1
              password: null
              base_id: p_xm3thidrblw4n7
              ptn: nc_vm5q___Table1
              ptype: table
              show: 1
              show_system_fields: null
              table_meta: null
              tn: Table1
              type: 3
              updated_at: '2023-03-02 17:04:06'
              uuid: null
              view:
                source_id: ds_g4ccx6e77h1dmi
                created_at: '2023-03-02 17:04:06'
                fk_view_id: vw_p2jcatxz4mvcfw
                meta: null
                base_id: p_xm3thidrblw4n7
                row_height: null
                updated_at: '2023-03-02 17:04:06'
                uuid: null
    TableList:
      title: Table List Model
      description: Model for Table List
      type: object
      x-examples:
        - list:
            - tags: string
              title: string
              alias: string
              source_id: string
              column:
                - title: string
                  alias: string
                  auto_increment: true
                  auto_update_timestamp: true
                  source_id: string
                  character_maximum_length: string
                  character_set_name: string
                  colOptions:
                    deleted: string
                    dr: string
                    fk_child_column_id: string
                    fk_column_id: string
                    fk_index_name: string
                    fk_mm_child_column_id: string
                    fk_mm_model_id: string
                    fk_mm_parent_column_id: string
                    fk_parent_column_id: string
                    id: stringX
                    order: string
                    type: string
                    ur: string
                    virtual: true
                  column_comment: string
                  column_default: string
                  column_ordinal_position: string
                  column_type: string
                  data_type: string
                  data_type_x: string
                  data_type_x_precision: string
                  data_type_x_scale: string
                  deleted: true
                  fk_model_id: string
                  id: stringX
                  numeric_precision: string
                  numeric_scale: string
                  order: 0
                  primary_key: true
                  primary_value: true
                  rqd: string
                  ui_data_type: string
                  un: string
                  unique: true
                  visible: true
              columnByIds: {}
              deleted: true
              enabled: true
              id: stringX
              order: 0
              parent_id: string
              pinned: true
              base_id: string
              show_as: string
              type: string
          pageInfo:
            isFirstPage: true
            isLastPage: true
            page: 1
            pageSize: 10
            totalRows: 1
      properties:
        list:
          description: List of table objects
          minItems: 1
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Table'
        pageInfo:
          description: Paginated Info
          $ref: '#/components/schemas/Paginated'
      required:
        - list
        - pageInfo
      x-stoplight:
        id: urwk2euatlkjl
      example:
        list:
          - tags: string
            title: string
            alias: string
            source_id: string
            column:
              - title: string
                alias: string
                auto_increment: true
                auto_update_timestamp: true
                source_id: string
                character_maximum_length: string
                character_set_name: string
                colOptions:
                  deleted: string
                  dr: string
                  fk_child_column_id: string
                  fk_column_id: string
                  fk_index_name: string
                  fk_mm_child_column_id: string
                  fk_mm_model_id: string
                  fk_mm_parent_column_id: string
                  fk_parent_column_id: string
                  id: stringX
                  order: string
                  type: string
                  ur: string
                  virtual: true
                column_comment: string
                column_default: string
                column_ordinal_position: string
                column_type: string
                data_type: string
                data_type_x: string
                data_type_x_precision: string
                data_type_x_scale: string
                deleted: true
                fk_model_id: string
                id: stringX
                numeric_precision: string
                numeric_scale: string
                order: 0
                primary_key: true
                primary_value: true
                rqd: string
                ui_data_type: string
                un: string
                unique: true
                visible: true
            columnByIds: {}
            deleted: true
            enabled: true
            id: stringX
            order: 0
            parent_id: string
            pinned: true
            base_id: string
            show_as: string
            type: string
        pageInfo:
          isFirstPage: true
          isLastPage: true
          page: 1
          pageSize: 10
          totalRows: 1
    TableReq:
      title: Table Request Model
      description: Model for Table Request
      properties:
        title:
          description: Table title
          example: My Table
          maxLength: 255
          minLength: 0
          type: string
        columns:
          description: The column models in this table
          items:
            $ref: '#/components/schemas/NormalColumnRequest'
          type: array
        meta:
          description: the meta data for this table
          $ref: '#/components/schemas/Meta'
        order:
          description: The order of table list
          example: 1
          type: number
        table_name:
          description: Table name
          example: my_table
          maxLength: 255
          minLength: 1
          type: string
      required:
        - columns
        - table_name
      type: object
      x-stoplight:
        id: sv3junrrevn31
      example:
        title: Sheet-1
        columns:
          - title: UpdatedAt
            ai: false
            altered: 1
            cdf: CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP
            ck: false
            clen: 45
            column_name: updated_at
            ct: varchar(45)
            dt: timestamp
            dtx: specificType
            dtxp: ''
            dtxs: ''
            np: null
            nrqd: true
            ns: null
            pk: false
            rqd: false
            uicn: ''
            uidt: DateTime
            uip: ''
            un: false
          - title: CreatedAt
            ai: false
            altered: 1
            cdf: CURRENT_TIMESTAMP
            ck: false
            clen: 45
            column_name: created_at
            ct: varchar(45)
            dt: timestamp
            dtx: specificType
            dtxp: ''
            dtxs: ''
            np: null
            nrqd: true
            ns: null
            pk: false
            rqd: false
            uicn: ''
            uidt: DateTime
            uip: ''
            un: false
          - title: Title
            ai: false
            altered: 1
            cdf: null
            ck: false
            clen: 45
            column_name: title
            ct: varchar(45)
            dt: varchar
            dtx: specificType
            dtxp: '45'
            dtxs: ''
            np: null
            nrqd: true
            ns: null
            pk: false
            rqd: false
            uicn: ''
            uidt: SingleLineText
            uip: ''
            un: false
          - title: Id
            ai: true
            altered: 1
            cdf: null
            ck: false
            clen: null
            column_name: id
            ct: int(11)
            dt: int
            dtx: integer
            dtxp: '11'
            dtxs: ''
            np: 11
            nrqd: false
            ns: 0
            pk: true
            rqd: true
            uicn: ''
            uidt: ID
            uip: ''
            un: true
        table_name: Sheet-1
      x-examples:
        - title: Sheet-1
          columns:
            - title: UpdatedAt
              ai: false
              altered: 1
              cdf: CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP
              ck: false
              clen: 45
              column_name: updated_at
              ct: varchar(45)
              dt: timestamp
              dtx: specificType
              dtxp: ''
              dtxs: ''
              np: null
              nrqd: true
              ns: null
              pk: false
              rqd: false
              uicn: ''
              uidt: DateTime
              uip: ''
              un: false
            - title: CreatedAt
              ai: false
              altered: 1
              cdf: CURRENT_TIMESTAMP
              ck: false
              clen: 45
              column_name: created_at
              ct: varchar(45)
              dt: timestamp
              dtx: specificType
              dtxp: ''
              dtxs: ''
              np: null
              nrqd: true
              ns: null
              pk: false
              rqd: false
              uicn: ''
              uidt: DateTime
              uip: ''
              un: false
            - title: Title
              ai: false
              altered: 1
              cdf: null
              ck: false
              clen: 45
              column_name: title
              ct: varchar(45)
              dt: varchar
              dtx: specificType
              dtxp: '45'
              dtxs: ''
              np: null
              nrqd: true
              ns: null
              pk: false
              rqd: false
              uicn: ''
              uidt: SingleLineText
              uip: ''
              un: false
            - title: Id
              ai: true
              altered: 1
              cdf: null
              ck: false
              clen: null
              column_name: id
              ct: int(11)
              dt: int
              dtx: integer
              dtxp: '11'
              dtxs: ''
              np: 11
              nrqd: false
              ns: 0
              pk: true
              rqd: true
              uicn: ''
              uidt: ID
              uip: ''
              un: true
          table_name: Sheet-1
    User:
      title: User Model
      description: Model for User
      type: object
      x-internal: false
      properties:
        id:
          description: Unique identifier for the given user.
          type: string
        email:
          type: string
          format: email
        roles:
          type: string
        email_verified:
          description: Set to true if the user's email has been verified.
          type: boolean
        created_at:
          description: The date that the user was created.
          type: string
          format: date
        updated_at:
          description: The date that the user was created.
          type: string
          format: date
        display_name:
          type: string
        user_name:
          type: string
        bio:
          type: string
        location:
          type: string
        website:
          type: string
        avatar:
          type: string
        token_version:
          description: Access token version
          type: string
      required:
        - id
        - email
        - email_verified
      x-stoplight:
        id: hcruzlenrwb2x
      example:
        id: '142'
        user_name: jaysmith
        display_name: Jay Smith
        email: jay.smith@gmail.com
        emailVerified: true
        roles: org-level-creator,super
        bio: foo
        location: Istanbul
        created_at: '2019-08-24'
        avatar: https://dummyimage.com/300.png
      x-examples:
        - id: '142'
          user_name: jaysmith
          display_name: Jay Smith
          email: jay.smith@gmail.com
          emailVerified: true
          roles: org-level-creator,super
          bio: foo
          location: Istanbul
          created_at: '2019-08-24'
          avatar: https://dummyimage.com/300.png
    UserInfo:
      title: User Info Model
      description: Model for User Info
      properties:
        email:
          description: User Email
          format: email
          type: string
        email_verified:
          description: Set to true if the user's email has been verified.
          type: boolean
        firstname:
          description: The firstname of the user
          type: string
        id:
          description: User ID
          type: string
        lastname:
          description: The lastname of the user
          type: string
        roles:
          description: The roles of the user
        base_roles:
          description: The base roles of the user
        workspace_roles:
          description: The workspace roles of the user
      type: object
      x-stoplight:
        id: mzqg7tcf4hglo
      example:
        email: user@example.com
        email_verified: true
        firstname: string
        id: stringX
        lastname: string
        roles: null
      x-examples:
        - email: user@example.com
          email_verified: true
          firstname: string
          id: stringX
          lastname: string
          roles: null
    UserList:
      title: User List Model
      description: Model for User List
      type: object
      x-examples:
        - list:
            - email: user@example.com
              email_verified: true
              firstname: Alice
              id: us_8kugj628ebjngsX
              lastname: Smith
              roles: org-level-viewer
          pageInfo:
            isFirstPage: true
            isLastPage: true
            page: 1
            pageSize: 10
            totalRows: 1
      properties:
        list:
          description: List of user objects
          type: array
          x-stoplight:
            id: 8o7v47q3e67ef
          items:
            $ref: '#/components/schemas/User'
            x-stoplight:
              id: kwqzxwea9r5er
        pageInfo:
          description: Paginated Info
          $ref: '#/components/schemas/Paginated'
          x-stoplight:
            id: 0d98n6sfxfvft
      required:
        - list
        - pageInfo
      x-stoplight:
        id: 32mz06s4tgptq
      example:
        list:
          - email: user@example.com
            email_verified: true
            firstname: Alice
            id: us_8kugj628ebjngsX
            lastname: Smith
            roles: org-level-viewer
        pageInfo:
          isFirstPage: true
          isLastPage: true
          page: 1
          pageSize: 10
          totalRows: 1
    View:
      title: View Model
      description: Model for View
      type: object
      properties:
        title:
          description: View Title
          type: string
        source_id:
          description: Unique Source ID
          $ref: '#/components/schemas/Id'
        fk_model_id:
          description: Unique Model ID
          $ref: '#/components/schemas/Id'
        id:
          description: Unique ID for View
          $ref: '#/components/schemas/Id'
        lock_type:
          description: Lock Type of the view
          enum:
            - collaborative
            - locked
            - personal
          type: string
        meta:
          description: Meta data for this view
          $ref: '#/components/schemas/Meta'
        order:
          description: The rder of the list of views
          type: number
        password:
          description: Password for protecting the view
          $ref: '#/components/schemas/StringOrNull'
        base_id:
          description: Unique Base ID
          $ref: '#/components/schemas/Id'
        show:
          description: If this view is shown?
          $ref: '#/components/schemas/Bool'
        show_system_fields:
          description: Should show system fields in this view?
          $ref: '#/components/schemas/Bool'
        is_default:
          description: Is this view default view for the model?
          $ref: '#/components/schemas/Bool'
        type:
          description: View Type
          type: number
        uuid:
          description: UUID of the view
          $ref: '#/components/schemas/StringOrNull'
        view:
          description: Associated View Model
          anyOf:
            - $ref: '#/components/schemas/Form'
            - $ref: '#/components/schemas/Gallery'
            - $ref: '#/components/schemas/Grid'
            - $ref: '#/components/schemas/Kanban'
            - $ref: '#/components/schemas/Map'
      required:
        - fk_model_id
        - show
        - title
        - type
      x-stoplight:
        id: nobjewdlhxrkq
      example:
        title: Sheet-1
        source_id: ds_g4ccx6e77h1dmi
        created_at: '2023-03-02 17:46:31'
        fk_model_id: md_mhs9z4r2ak98x0
        id: vw_lg052cnc1c26kfX
        is_default: 1
        lock_type: collaborative
        meta: {}
        order: 1
        password: null
        base_id: p_xm3thidrblw4n7
        show: 1
        show_system_fields: null
        type: 3
        updated_at: '2023-03-02 17:46:31'
        uuid: null
        view:
          source_id: ds_g4ccx6e77h1dmi
          created_at: '2023-03-02 17:46:31'
          fk_view_id: vw_lg052cnc1c26kf
          meta: null
          base_id: p_xm3thidrblw4n7
          row_height: null
          updated_at: '2023-03-02 17:46:31'
          uuid: null
      x-examples:
        - title: Sheet-1
          source_id: ds_g4ccx6e77h1dmi
          created_at: '2023-03-02 17:46:31'
          fk_model_id: md_mhs9z4r2ak98x0
          id: vw_lg052cnc1c26kfX
          is_default: 1
          lock_type: collaborative
          meta: {}
          order: 1
          password: null
          base_id: p_xm3thidrblw4n7
          show: 1
          show_system_fields: null
          type: 3
          updated_at: '2023-03-02 17:46:31'
          uuid: null
          view:
            source_id: ds_g4ccx6e77h1dmi
            created_at: '2023-03-02 17:46:31'
            fk_view_id: vw_lg052cnc1c26kf
            meta: null
            base_id: p_xm3thidrblw4n7
            row_height: null
            updated_at: '2023-03-02 17:46:31'
            uuid: null
    ViewList:
      title: View List Model
      description: Model for View List
      type: object
      x-examples:
        - list:
            - tags: string
              title: string
              alias: string
              column:
                - title: string
                  alias: string
                  auto_increment: true
                  auto_update_timestamp: true
                  source_id: string
                  character_maximum_length: string
                  character_set_name: string
                  colOptions:
                    deleted: string
                    dr: string
                    fk_child_column_id: string
                    fk_column_id: string
                    fk_index_name: string
                    fk_mm_child_column_id: string
                    fk_mm_model_id: string
                    fk_mm_parent_column_id: string
                    fk_parent_column_id: string
                    id: stringX
                    order: string
                    type: string
                    ur: string
                    virtual: true
                  column_comment: string
                  column_default: string
                  column_ordinal_position: string
                  column_type: string
                  data_type: string
                  data_type_x: string
                  data_type_x_precision: string
                  data_type_x_scale: string
                  deleted: true
                  fk_model_id: string
                  id: stringX
                  numeric_precision: string
                  numeric_scale: string
                  order: 0
                  primary_key: true
                  primary_value: true
                  rqd: string
                  ui_data_type: string
                  un: string
                  unique: true
                  visible: true
              columnByIds: {}
              deleted: true
              enabled: true
              fk_base_id: string
              fk_project_id: string
              id: stringX
              order: 0
              parent_id: string
              pinned: true
              show_as: string
              type: string
          pageInfo:
            isFirstPage: true
            isLastPage: true
            page: 1
            pageSize: 10
            totalRows: 1
      properties:
        list:
          description: List of view objects
          type: array
          items:
            $ref: '#/components/schemas/View'
        pageInfo:
          description: Paginated Info
          $ref: '#/components/schemas/Paginated'
      required:
        - list
        - pageInfo
      x-stoplight:
        id: a1f99jvpiuugl
      example:
        list:
          - tags: string
            title: string
            alias: string
            column:
              - title: string
                alias: string
                auto_increment: true
                auto_update_timestamp: true
                source_id: string
                character_maximum_length: string
                character_set_name: string
                colOptions:
                  deleted: string
                  dr: string
                  fk_child_column_id: string
                  fk_column_id: string
                  fk_index_name: string
                  fk_mm_child_column_id: string
                  fk_mm_model_id: string
                  fk_mm_parent_column_id: string
                  fk_parent_column_id: string
                  id: stringX
                  order: string
                  type: string
                  ur: string
                  virtual: true
                column_comment: string
                column_default: string
                column_ordinal_position: string
                column_type: string
                data_type: string
                data_type_x: string
                data_type_x_precision: string
                data_type_x_scale: string
                deleted: true
                fk_model_id: string
                id: stringX
                numeric_precision: string
                numeric_scale: string
                order: 0
                primary_key: true
                primary_value: true
                rqd: string
                ui_data_type: string
                un: string
                unique: true
                visible: true
            columnByIds: {}
            deleted: true
            enabled: true
            fk_base_id: string
            fk_project_id: string
            id: stringX
            order: 0
            parent_id: string
            pinned: true
            show_as: string
            type: string
        pageInfo:
          isFirstPage: true
          isLastPage: true
          page: 1
          pageSize: 10
          totalRows: 1
    ViewCreateReq:
      title: ViewCreateReq
      description: Model for View Create Request
      type: object
      x-stoplight:
        id: zvdo4i7c70jmo
      properties:
        title:
          description: View Title
          type: string
          example: My View
        type:
          description: View Type
          type: number
        copy_from_id:
          description: ID of view to be copied from. Used in Copy View.
          $ref: '#/components/schemas/StringOrNull'
        fk_grp_col_id:
          description: Foreign Key to Grouping Column. Used in creating Kanban View.
          $ref: '#/components/schemas/StringOrNull'
        fk_geo_data_col_id:
          description: Foreign Key to Geo Data Column. Used in creating Map View.
          $ref: '#/components/schemas/StringOrNull'
      required:
        - title
      example:
        title: My Grid View
        type: 3
        copy_from_id: null
        fk_grp_col_id: null
        fk_geo_data_col_id: null
      x-examples:
        - title: My Grid View
          type: 3
          copy_from_id: null
          fk_grp_col_id: null
          fk_geo_data_col_id: null
        - title: My Gallery View
          type: 2
          copy_from_id: null
          fk_grp_col_id: null
          fk_geo_data_col_id: null
        - title: My Form View
          type: 1
          copy_from_id: null
          fk_grp_col_id: null
          fk_geo_data_col_id: null
        - title: My Kanban View
          type: 4
          copy_from_id: null
          fk_grp_col_id: cl_g0a89q9xdry3lu
          fk_geo_data_col_id: null
        - title: My Map View
          type: 5
          copy_from_id: null
          fk_grp_col_id: null
          fk_geo_data_col_id: cl_uu1meolj00tlrq
    ViewUpdateReq:
      title: View Update Request Model
      description: Model for View Update Request
      x-stoplight:
        id: 7inf594lhs8mh
      type: object
      properties:
        title:
          description: View Title
          maxLength: 255
          type: string
          example: Grid View 1
        uuid:
          description: View UUID. Used in Shared View.
          maxLength: 255
          type: string
          x-stoplight:
            id: vlhs7xs644u8l
          example: e2457bbf-e29c-4fec-866e-fe3b01dba57f
        password:
          description: View Password. Used in Shared View.
          maxLength: 255
          type: string
          x-stoplight:
            id: vlhs7xs644u8l
          example: password123
        lock_type:
          description: Lock type of View.
          enum:
            - collaborative
            - locked
            - personal
          type: string
          example: collaborative
        meta:
          description: Meta info used in View.
          $ref: '#/components/schemas/Meta'
        order:
          description: The order of the list of views.
          type: number
          example: 1
          minimum: 0
        show_system_fields:
          description: Should this view show system fields?
          $ref: '#/components/schemas/Bool'
      example:
        title: Grid View 1
        uuid: e2457bbf-e29c-4fec-866e-fe3b01dba57f
        password: password123
        lock_type: collaborative
        meta: '{"allowCSVDownload":true}'
        order: 1
        show_system_fields: 0
      x-examples:
        - title: Grid View 1
          uuid: e2457bbf-e29c-4fec-866e-fe3b01dba57f
          password: password123
          lock_type: collaborative
          meta: '{"allowCSVDownload":true}'
          order: 1
          show_system_fields: 0
    ViewColumnUpdateReq:
      title: View Column Update Request Model
      description: Model for View Column Update Request
      x-stoplight:
        id: 7xso36z6hvh43
      type: object
      properties:
        show:
          description: View Title
          $ref: '#/components/schemas/Bool'
          x-stoplight:
            id: coxius73ejq5x
        order:
          description: The order of the list of views.
          type: number
          example: 1
          minimum: 0
      example:
        show: 0
        order: 1
      x-examples:
        - show: 0
          order: 1
    ViewColumnReq:
      title: View Column Request Model
      description: Model for View Column Request
      x-stoplight:
        id: ofapz0gzl35z2
      type: object
      properties:
        fk_column_id:
          description: Foreign Key to Column
          $ref: '#/components/schemas/Id'
          x-stoplight:
            id: rxd07wvp9hf6s
        show:
          description: View Title
          $ref: '#/components/schemas/Bool'
          x-stoplight:
            id: coxius73ejq5x
        order:
          description: The order of the list of views.
          type: number
          example: 1
          minimum: 0
      example:
        fk_column_id: cl_5jestblzneb649
        show: 0
        order: 1
      x-examples:
        - fk_column_id: cl_5jestblzneb649
          show: 0
          order: 1
    VisibilityRuleReq:
      title: Visibility Rule Request Model
      description: Model for Visibility Rule Request
      items:
        properties:
          id:
            oneOf:
              - type: string
              - type: 'null'
          disabled:
            properties:
              commenter:
                $ref: '#/components/schemas/Bool'
              creator:
                $ref: '#/components/schemas/Bool'
              editor:
                $ref: '#/components/schemas/Bool'
              guest:
                $ref: '#/components/schemas/Bool'
              owner:
                $ref: '#/components/schemas/Bool'
              viewer:
                $ref: '#/components/schemas/Bool'
            type: object
        type: object
      type: array
      x-stoplight:
        id: xu5zgt0fc3ms9
      example:
        - disabled:
            commenter: true
            creator: true
            editor: true
            guest: true
            owner: true
            viewer: true
      x-examples:
        - - disabled:
              commenter: true
              creator: true
              editor: true
              guest: true
              owner: true
              viewer: true
    Webhook:
      title: Webhook
      properties:
        title:
          type: string
        id:
          type: string
        type:
          type: string
      type: object
    ProjectInviteEvent:
      type: object
      properties:
        fk_user_id:
          description: The ID of the user who receives the base invite
          type: string
        type:
          description: The type of event, which should be set to 'PROJECT_INVITE'
          type: string
        body:
          type: object
          properties:
            title:
              description: The title of the base being invited to
              type: string
            id:
              description: The ID of the base being invited to
              type: string
            type:
              description: The type of the base being invited to
              type: string
            invited_by:
              description: The email address of the user who invited the recipient
              type: string
          required:
            - id
            - title
            - type
            - invited_by
      required:
        - fk_user_id
        - type
        - body
    ProjectEvent:
      type: object
      properties:
        fk_user_id:
          description: The ID of the user
          type: string
        type:
          type: string
        body:
          type: object
          properties:
            title:
              description: The title of the base
              type: string
            id:
              description: The ID of the base
              type: string
            type:
              description: The type of the base
              type: string
          required:
            - id
            - title
            - type
      required:
        - fk_user_id
        - type
        - body
    WelcomeEvent:
      type: object
      properties:
        fk_user_id:
          description: The ID of the user receiving the welcome message
          type: string
        type:
          description: The type of event, which should be set to 'WELCOME'
          type: string
        body:
          description: An empty object
          type: object
      required:
        - fk_user_id
        - type
        - body
    SortEvent:
      type: object
      properties:
        fk_user_id:
          description: The ID of the user who created sort
          type: string
        type:
          type: string
        body:
          type: object
      required:
        - fk_user_id
        - type
        - body
    FilterEvent:
      type: object
      properties:
        fk_user_id:
          description: The ID of the user who created filter
          type: string
        type:
          type: string
        body:
          type: object
      required:
        - fk_user_id
        - type
        - body
    TableEvent:
      type: object
      properties:
        fk_user_id:
          description: The ID of the user who triggered the event
          type: string
        type:
          description: The type of the event
          type: string
        body:
          type: object
          properties:
            title:
              description: The title of the table associated with the event
              type: string
            base_id:
              description: The ID of the base that the table belongs to
              type: string
            source_id:
              description: The ID of the source that the table belongs to
              type: string
            id:
              description: The ID of the table associated with the event
              type: string
          required:
            - title
            - base_id
            - source_id
            - id
      required:
        - fk_user_id
        - type
        - body
    ViewEvent:
      type: object
      properties:
        fk_user_id:
          description: The ID of the user who triggered the event
          type: string
        type:
          description: The type of the event
          type: string
        body:
          type: object
          properties:
            title:
              description: The title of the view associated with the event
              type: string
            base_id:
              description: The ID of the base that the view belongs to
              type: string
            source_id:
              description: The ID of the source that the view belongs to
              type: string
            id:
              description: The ID of the view associated with the event
              type: string
            fk_model_id:
              description: The ID of the model that the view is based on
              type: string
          required:
            - title
            - base_id
            - source_id
            - id
            - fk_model_id
      required:
        - fk_user_id
        - type
        - body
    ColumnEvent:
      type: object
      properties:
        fk_user_id:
          description: The ID of the user who triggered the event
          type: string
        type:
          description: The type of the event
          type: string
        body:
          type: object
          properties:
            title:
              description: The title of the column associated with the event
              type: string
            base_id:
              description: The ID of the base that the column belongs to
              type: string
            source_id:
              description: The ID of the source that the column belongs to
              type: string
            id:
              description: The ID of the column associated with the event
              type: string
            fk_model_id:
              description: The ID of the model that the column belongs to
              type: string
          required:
            - title
            - base_id
            - source_id
            - id
            - fk_model_id
      required:
        - fk_user_id
        - type
        - body
    Notification:
      allOf:
        - title: Notification
          description: ''
          properties:
            id:
              description: Unique ID
              $ref: '#/components/schemas/Id'
            is_read:
              description: Whether the notification has been read by the user
              type: boolean
            is_deleted:
              description: Whether the notification has been deleted by the user
              type: boolean
            type:
              description: Type of notification
              type: string
            updated_at: {}
            created_at: {}
          type: object
        - oneOf:
            - $ref: '#/components/schemas/ProjectInviteEvent'
            - $ref: '#/components/schemas/ProjectEvent'
            - $ref: '#/components/schemas/TableEvent'
            - $ref: '#/components/schemas/ViewEvent'
            - $ref: '#/components/schemas/ColumnEvent'
            - $ref: '#/components/schemas/WelcomeEvent'
            - $ref: '#/components/schemas/SortEvent'
            - $ref: '#/components/schemas/FilterEvent'
    NotificationList:
      title: API Token List Model
      description: Model for Notification List
      type: object
      properties:
        list:
          description: List of notification objects
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        pageInfo:
          description: Model for Paginated
          $ref: '#/components/schemas/Paginated'
      required:
        - list
        - pageInfo
      example:
        list:
          - body: {}
            type: invite
            is_read: false
            is_deleted: false
            id: 1X
            updated_at: '2020-05-20T12:00:00.000000Z'
            created_at: '2020-05-20T12:00:00.000000Z'
            fk_user_id: us_b3xo2i44nx5y9l
        pageInfo:
          isFirstPage: true
          isLastPage: true
          page: 1
          pageSize: 10
          totalRows: 1
      x-examples:
        - list:
            - body: {}
              type: invite
              is_read: false
              is_deleted: false
              id: 1X
              updated_at: '2020-05-20T12:00:00.000000Z'
              created_at: '2020-05-20T12:00:00.000000Z'
              fk_user_id: us_b3xo2i44nx5y9l
          pageInfo:
            isFirstPage: true
            isLastPage: true
            page: 1
            pageSize: 10
            totalRows: 1
    NotificationUpdate:
      type: object
      properties:
        is_read:
          type: boolean
    BaseDuplicatePostRequest:
      type: object
      properties:
        options:
          type: object
          properties:
            excludeData:
              type: boolean
              required: false
            excludeViews:
              type: boolean
              required: false
            excludeHooks:
              type: boolean
              required: false
        base:
          type: object
          required: false
    BaseDuplicateBasePostRequest:
      type: object
      properties:
        options:
          type: object
          properties:
            excludeData:
              type: boolean
              required: false
            excludeViews:
              type: boolean
              required: false
            excludeHooks:
              type: boolean
              required: false
        base:
          type: object
          required: false
    SourceUpdateDetailsRequest:
      type: object
      properties:
        alias:
          type: string
          example: sakila
        type:
          type: string
          example: mysql2
        config:
          type: object
          properties:
            client:
              type: string
              example: mysql2
            connection:
              type: object
              properties:
                host:
                  type: string
                  example: localhost
                port:
                  type: string
                  example: '3306'
                user:
                  type: string
                  example: root
                password:
                  type: string
                  example: password
                database:
                  type: string
                  example: sakila
        inflection_column:
          type: string
          example: camelize
        inflection_table:
          type: string
          example: camelize
      example:
        alias: sakila
        type: mysql2
        config:
          client: mysql2
          connection:
            host: localhost
            port: '3306'
            user: root
            password: password
            database: sakila
        inflection_column: camelize
        inflection_table: camelize
    SourceCreateSqlViewRequest:
      type: object
      properties:
        view_name:
          type: string
        view_definition:
          type: string
    DbTableUpdateMetaRequest:
      type: object
      properties:
        title:
          description: Table title
          type: string
          example: Users
        table_name:
          description: Table name
          type: string
          example: users
        base_id:
          description: Base ID
          type: string
          example: p_124hhlkbeasewh
        meta:
          $ref: '#/components/schemas/Meta'
    DbTableDuplicateTablePostRequest:
      type: object
      properties:
        options:
          type: object
          properties:
            excludeData:
              type: boolean
              required: false
            excludeViews:
              type: boolean
              required: false
            excludeHooks:
              type: boolean
              required: false
    DbTableUpdateTableOrderRequest:
      type: object
      properties:
        order:
          type: number
    DbTableSortUpdateViewSortRequest:
      allOf:
        - $ref: '#/components/schemas/SortReq'
        - type: object
          properties:
            push_to_top:
              description: Push the sort to the top of the list
              type: boolean
              example: true
    UtilsTestDbConnectionRequest:
      type: object
      x-examples:
        Example 1:
          client: mysql2
          connection:
            host: localhost
            port: '3306'
            user: root
            password: password
            database: null
      properties:
        client:
          description: DB Type
          enum:
            - mssql
            - mysql
            - mysql2
            - oracledb
            - pg
            - snowflake
            - sqlite3
          example: mysql2
          type: string
        connection:
          type: object
          properties:
            host:
              type: string
            port:
              type: string
            user:
              type: string
            password:
              type: string
            database:
              $ref: '#/components/schemas/StringOrNull'
    UtilsMakeAxiosRequestRequest:
      type: object
    StorageUploadByUrlRequest:
      type: array
      items:
        $ref: '#/components/schemas/AttachmentReq'
    DbTableColumnBulkCreateUpdateRequest:
      type: object
      properties:
        hash:
          description: Columns hash
          type: string
        ops:
          type: array
          items:
            schema:
              type: object
              properties:
                op:
                  type: string
                column:
                  type: object
    TableRecordsDeleteByArrayRequest:
      oneOf:
        - type: object
        - type: array
          items:
            type: object
    TableRecordsUpdatePatchTableRecordsRequest:
      oneOf:
        - type: object
        - type: array
          items:
            type: object
    TableRecordsCreateNewRecordRequest:
      oneOf:
        - type: object
        - type: array
          items:
            type: object
    TableRecordsUnlinkRecordsRequest:
      oneOf:
        - type: array
          items:
            type: object
    TableRecordsLinkRecordsPostRequest:
      oneOf:
        - type: object
        - type: array
          items:
            type: object
    BaseCreateNewBaseRequest:
      allOf:
        - $ref: '#/components/schemas/ProjectReq'
        - type: object
          properties:
            external:
              description: >-
                If true, the base will us an external database else it will use
                the root database
              type: boolean
              default: false
    SourceCreateNewSourceRequest:
      allOf:
        - $ref: '#/components/schemas/Source'
        - type: object
          properties:
            external:
              type: boolean
              default: false
    AuthListBaseUsersResponse:
      type: object
      properties:
        users:
          type: object
          properties:
            list:
              type: array
              uniqueItems: true
              minItems: 1
              items:
                $ref: '#/components/schemas/User'
            pageInfo:
              $ref: '#/components/schemas/Paginated'
          required:
            - list
            - pageInfo
    AuthListBaseUsers400Response:
      type: object
      properties:
        msg:
          type: string
          x-stoplight:
            id: p9mk4oi0hbihm
          example: 'BadRequest [Error]: <ERROR MESSAGE>'
      required:
        - msg
    AuthAddBaseUserResponse:
      type: object
      properties:
        msg:
          description: Success Message for inviting single email
          type: string
          x-stoplight:
            id: waau9tvy75zsd
          example: The user has been invited successfully
        invite_token:
          type: string
          x-stoplight:
            id: yx0s35u8ds3p7
          example: 8354ddba-a769-4d64-8397-eccb2e2b3c06
        error:
          type: array
          x-stoplight:
            id: yhfi6wzhr6zr1
          items:
            x-stoplight:
              id: ce0hlv3d0f96j
            type: object
            properties:
              email:
                type: string
                x-stoplight:
                  id: dgnh01j4lxvl1
                example: w@nocodb.com
              error:
                type: string
                x-stoplight:
                  id: 7dgttqiijg8no
                example: <ERROR_MESSAGE>
        email:
          type: string
          x-stoplight:
            id: 08pqst2q30vot
          example: w@nocodb.com
    BaseGetInfoByIdResponse:
      type: object
      properties:
        Node:
          description: Node version
          type: string
          example: v12.16.1
        Arch:
          description: Architecture type
          type: string
          example: x64
        Platform:
          description: Platform type
          type: string
          example: linux
        Docker:
          description: Is docker
          type: boolean
          example: false
        Database:
          description: Database type
          type: string
          example: postgres
        ProjectOnRootDB:
          description: Is base on rootdb
          type: boolean
          example: false
        RootDB:
          description: Root database type
          type: string
          example: postgres
        PackageVersion:
          description: Package version
          type: string
          example: 1.0.0
    AuthDeleteBaseUserResponse:
      type: object
      properties:
        msg:
          description: Success Message
          type: string
          x-stoplight:
            id: 5h7c9lqh5ynve
          example: The user has been updated successfully
    AuthUpdateBaseUserResponse:
      type: object
      properties:
        msg:
          description: Success Message
          type: string
          x-stoplight:
            id: 5a2q8as60daly
          example: The user has been updated successfully
    BaseGetUiAclResponse:
      type: array
      items: {}
    BaseCreateUiAclResponse:
      type: object
      properties:
        msg:
          type: string
          x-stoplight:
            id: 2txh071wsodys
          example: UI ACL has been created successfully
    BaseDuplicatePostResponse:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        base_id:
          type: string
    BaseDuplicateBasePostResponse:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
    BaseRemoveBaseResponse:
      type: boolean
    BaseUpdateBaseMetaResponse:
      type: number
      example: 1
    SourceDeleteDetailsResponse:
      type: boolean
    SourceUpdateDetailsResponse:
      type: object
      properties: {}
    SourceCreateSqlViewResponse:
      type: object
      properties: {}
    BaseDeleteSharedBaseResponse:
      type: boolean
    BaseGetSharedBaseResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
        url:
          type: string
          format: uri
        roles:
          type: string
          example: viewer
    BaseUpdateSharedBaseResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11
        url:
          type: string
          format: uri
        roles:
          type: string
          example: viewer
    BaseCreateSharedBaseResponse:
      type: object
      properties:
        uuid:
          $ref: '#/components/schemas/StringOrNull'
        roles:
          $ref: '#/components/schemas/StringOrNull'
    BaseCalculateCostResponse:
      type: object
      properties: {}
    DbTableDeleteByTableIdResponse:
      type: boolean
    DbTableUpdateMetaResponse:
      type: object
      properties:
        msg:
          type: string
          x-stoplight:
            id: 5a0g9yvs4e678
          example: The table has been updated successfully
    DbTableDuplicateTablePostResponse:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
    DbTableUpdateTableOrderResponse:
      type: boolean
    DbTableColumnSetPrimaryValueResponse:
      type: boolean
    DbViewDeleteViewByIdResponse:
      type: boolean
    DbViewShowAllColumnsResponse:
      type: boolean
    DbViewHideAllColumnsResponse:
      type: boolean
    DbViewShareDeleteSharedViewResponse:
      type: boolean
    DbViewColumnUpdateColumnResponse:
      type: number
    DbTableSortUpdateViewSortResponse:
      type: number
    DbTableSortDeleteByIdResponse:
      type: boolean
    DbTableSortUpdateSortByIdResponse:
      type: number
      example: 1
    DbTableFilterDeleteByIdResponse:
      type: boolean
    DbTableFilterUpdateByIdResponse:
      type: number
    DbViewUpdateFormViewResponse:
      type: number
    DbViewUpdateGridViewResponse:
      type: number
    DbViewListGridColumnsResponse:
      type: array
      items:
        $ref: '#/components/schemas/GridColumn'
    DbViewUpdateGridColumnPatchResponse:
      type: number
    DbViewUpdateGalleryViewDataResponse:
      type: number
    DbViewUpdateKanbanViewResponse:
      type: number
    DbViewUpdateMapViewDataResponse:
      type: number
    BaseMetaDiffGetResponse:
      type: array
      items:
        x-stoplight:
          id: awdkjwr7uultr
        type: object
        properties:
          table_name:
            description: Table Name
            type: string
            x-stoplight:
              id: jjj8ufafq1sd2
            example: Table 1
          source_id:
            description: Source ID
            type: string
            x-stoplight:
              id: smx2or6bv1xym
            example: ds_rrplkgy0pq1f3c
          type:
            description: Change Type
            type: string
            x-stoplight:
              id: zr19ahh1s6d13
            example: table
          detectedChanges:
            description: Detected Changes
            type: array
            x-stoplight:
              id: bptxla2y27aq6
            items:
              x-stoplight:
                id: ob16o1ln7xy8o
              type: object
    BaseSyncMetaDiffResponse:
      type: object
      properties:
        msg:
          type: string
          x-stoplight:
            id: la6fd99uw6eao
          example: The meta has been synchronized successfully
    SourceGetMetaDiffResponse:
      type: array
      items:
        x-stoplight:
          id: pav4jmel1ebeu
        type: object
        properties:
          table_name:
            description: Table Name
            type: string
            x-stoplight:
              id: xjw4k4httzmaf
            example: Table 1
          source_id:
            description: Source ID
            type: string
            x-stoplight:
              id: l1o3qhkgagsdl
            example: ds_rrplkgy0pq1f3c
          type:
            description: Change Type
            type: string
            x-stoplight:
              id: v5ciaygrj64uh
            example: table
          detectedChanges:
            description: Detected Changes
            type: array
            x-stoplight:
              id: wqn5noi0e46q8
            items:
              x-stoplight:
                id: r2roo274wquvf
              type: object
    SourceSyncMetaDiffResponse:
      type: object
      properties:
        msg:
          type: string
          x-stoplight:
            id: acy7tx4rounqw
          example: The source meta has been synchronized successfully
    BaseCheckEmptyFiltersResponse:
      type: object
      properties: {}
      example: {}
    PublicSharedViewGroupDataListResponse:
      type: array
      items:
        x-stoplight:
          id: bldcv1pwuri5s
        type: object
        properties:
          key:
            description: The Grouped Key
            type: string
            x-stoplight:
              id: n0ujmkbyhgsxo
          value:
            description: the paginated result of the given key
            type: object
            x-stoplight:
              id: 0xsi3jvwn7duo
            required:
              - list
              - pageInfo
            properties:
              list:
                description: List of the target data
                type: array
                x-stoplight:
                  id: jw8dmo16txbjv
                items:
                  x-stoplight:
                    id: xcu8vxmf5ygyi
                  type: object
              pageInfo:
                description: Paginated Info
                $ref: '#/components/schemas/Paginated'
                x-stoplight:
                  id: 1gsbgwi9bg8s5
        required:
          - key
          - value
    PublicCalendarViewCountByDateResponse:
      type: object
      properties: {}
      example: {}
    PublicCreateSharedViewRowResponse:
      type: object
      properties:
        Id:
          type: number
          example: 1
        col1:
          type: string
          example: foo
        col2:
          type: string
          example: bar
        CreatedAt:
          type: string
          example: '2023-03-11T08:48:25.598Z'
        UpdatedAt:
          type: string
          example: '2023-03-11T08:48:25.598Z'
      example:
        Id: 1
        col1: foo
        col2: bar
        CreatedAt: '2023-03-11T08:48:25.598Z'
        UpdatedAt: '2023-03-11T08:48:25.598Z'
    PublicListNestedDataResponse:
      type: object
      properties:
        list:
          description: List of data objects
          type: array
          x-stoplight:
            id: gvblksjzjfyg7
          items:
            x-stoplight:
              id: 8assgoc1vtcs9
            type: object
        pageInfo:
          description: Paginated info
          $ref: '#/components/schemas/Paginated'
          x-stoplight:
            id: if546w1yuo6fw
      required:
        - list
        - pageInfo
    PublicRowsExportTypeResponse: {}
    PublicNestedDataRelationListResponse:
      type: object
      properties: {}
      example: {}
    PublicSharedBaseMetaGetResponse:
      type: object
      properties:
        base_id:
          description: Base ID
          type: string
    PublicViewMetaGetResponse:
      allOf:
        - $ref: '#/components/schemas/View'
        - type: object
          properties:
            relatedMetas: {}
            client:
              type: string
            source_id:
              type: string
            columns:
              allOf:
                - anyOf:
                    - $ref: '#/components/schemas/GridColumn'
                    - $ref: '#/components/schemas/FormColumn'
                    - $ref: '#/components/schemas/GalleryColumn'
                - $ref: '#/components/schemas/Column'
            model:
              $ref: '#/components/schemas/Table'
        - type: object
          properties:
            view:
              anyOf:
                - $ref: '#/components/schemas/Form'
                - $ref: '#/components/schemas/Grid'
                - $ref: '#/components/schemas/Gallery'
    PublicViewMetaGet200Response: {}
    UtilsListCommentsResponse:
      type: object
      properties:
        list:
          x-stoplight:
            id: 5zto1xohsngbu
          type: array
          items:
            $ref: '#/components/schemas/Audit'
            x-stoplight:
              id: d22zkup0c0l80
      required:
        - list
    UtilsUpdateAuditCommentResponse:
      type: number
      example: 1
    UtilsCountCommentsResponse:
      type: array
      items:
        x-stoplight:
          id: ziwcy4va5r1ao
        type: object
        properties:
          count:
            description: The number of comments
            type: string
            x-stoplight:
              id: 5r91gkxmaiyv4
            example: '4'
          row_id:
            description: Row ID
            type: string
            x-stoplight:
              id: 08sgorhq172sm
            example: '1'
        required:
          - count
          - row_id
    BaseListAuditsInBaseResponse:
      type: object
      properties:
        list:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/Audit'
        pageInfo:
          $ref: '#/components/schemas/Paginated'
      required:
        - list
        - pageInfo
    DbTableWebhookTestHookCreateResponse:
      type: object
      properties:
        msg:
          type: string
          x-stoplight:
            id: l5k90tzuvvv1g
          example: The hook has been tested successfully
    DbTableWebhookGetSamplePayloadResponse:
      type: object
      properties:
        data:
          description: Sample Payload Data
          type: object
          x-stoplight:
            id: qifsikf69hqbl
    DbTableWebhookDeleteByIdResponse:
      type: boolean
    PluginListAllPluginsResponse:
      type: object
      properties:
        list:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/Plugin'
        pageInfo:
          $ref: '#/components/schemas/Paginated'
    PluginWebhookListPluginsResponse:
      type: object
      properties:
        list:
          type: array
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/Plugin'
        pageInfo:
          $ref: '#/components/schemas/Paginated'
    PluginGetStatusResponse:
      type: boolean
    PluginTestConfigurationPostResponse:
      type: object
      properties: {}
      example: {}
    PluginUpdateByIdResponse:
      type: object
      properties: {}
      example: {}
    UtilsTestDbConnectionResponse:
      type: object
      properties:
        code:
          type: number
        message:
          type: string
        data:
          type: object
          x-stoplight:
            id: 6orbk04w97ien
    UtilsSelectConnectionPostResponse:
      type: object
      properties: {}
      example: {}
    UtilsGetAppInfoResponse:
      type: object
      x-examples:
        Example 1:
          version: 0.105.3
          authType: jwt
          baseHasAdmin: true
          firstUser: false
          type: rest
          googleAuthEnabled: false
          githubAuthEnabled: false
          oneClick: false
          connectToExternalDB: true
          defaultLimit: 25
          ncMin: false
          teleEnabled: false
          auditEnabled: true
          ncSiteUrl: http://localhost:8080
          ee: false
          ncAttachmentFieldSize: 20971520
          ncMaxAttachmentsAllowed: 10
      properties:
        version:
          type: string
        authType:
          type: string
        baseHasAdmin:
          type: boolean
        firstUser:
          type: boolean
        type:
          type: string
        googleAuthEnabled:
          type: boolean
        githubAuthEnabled:
          type: boolean
        oneClick:
          type: boolean
        connectToExternalDB:
          type: boolean
        defaultLimit:
          type: number
        ncMin:
          type: boolean
        teleEnabled:
          type: boolean
        auditEnabled:
          type: boolean
        ncSiteUrl:
          type: string
        ee:
          type: boolean
        ncAttachmentFieldSize:
          type: number
        ncMaxAttachmentsAllowed:
          type: number
        isCloud:
          type: boolean
          x-stoplight:
            id: bstdkpky2131f
        automationLogLevel:
          type: string
          x-stoplight:
            id: uc3vaotye2eu8
          enum:
            - 'OFF'
            - ERROR
            - ALL
          example: 'OFF'
    UtilsMakeAxiosRequestResponse:
      type: object
      properties: {}
    UtilsClearNocoCacheResponse:
      type: boolean
    ApiTokenDeleteInBaseResponse:
      type: number
      example: 1
    AuthResendInviteUserResponse:
      type: object
      properties:
        msg:
          description: Success Message
          type: string
          x-stoplight:
            id: m570oh5j3afjt
          example: The invitation has been sent to the user
    DbTableColumnGetTableColumnsHashResponse:
      type: object
      properties:
        hash:
          description: Columns hash
          type: string
    DbTableColumnBulkCreateUpdateResponse:
      type: object
      properties:
        failedOps:
          type: array
          items:
            schema:
              type: object
              properties:
                op:
                  type: string
                  enum:
                    - add
                    - update
                    - delete
                  required: true
                column:
                  $ref: '#/components/schemas/Column'
                  required: true
                error: {}
    TableRecordsDeleteByArrayResponse:
      type: array
      items:
        type: object
        properties:
          Id:
            type: number
            example: 1
      example:
        - Id: 1
        - Id: 2
    TableRecordsListResponse:
      type: object
      properties:
        list:
          description: List of data objects
          type: array
          items:
            type: object
        pageInfo:
          description: Paginated Info
          $ref: '#/components/schemas/Paginated'
      required:
        - list
        - pageInfo
    TableRecordsUpdatePatchTableRecordsResponse:
      type: array
      items:
        type: object
        properties:
          Id:
            type: number
            example: 6
      example:
        - Id: 6
        - Id: 7
    TableRecordsCreateNewRecordResponse:
      type: array
      items:
        type: object
        properties:
          Id:
            type: number
            example: 10
      example:
        - Id: 10
        - Id: 11
    TableRecordsReadByIdResponse:
      type: object
      properties:
        Id:
          type: number
          example: 1
        SingleLineText:
          type: string
          example: David
        CreatedAt:
          type: string
          example: '2023-10-16 08:27:59+00:00'
        UpdatedAt:
          type: string
          example: '2023-10-16 10:05:41+00:00'
        Year:
          type: number
          example: 2023
        URL:
          type: string
          example: www.google.com
        SingleSelect:
          type: string
          example: Jan
        Email:
          type: string
          example: a@b.com
        Duration:
          type: number
          example: 74040
        Decimal:
          type: number
          example: 23.658
        Currency:
          type: number
          example: 23
        Barcode:
          type: string
          example: David
        JSON:
          type: object
          properties:
            name:
              type: string
              example: John Doe
            age:
              type: number
              example: 30
            email:
              type: string
              example: johndoe@example.com
            isSubscribed:
              type: boolean
              example: true
            address:
              type: object
              properties:
                street:
                  type: string
                  example: 123 Main Street
                city:
                  type: string
                  example: Anytown
                zipCode:
                  type: string
                  example: '12345'
            hobbies:
              type: array
              items:
                type: string
                example: Reading
            scores:
              type: object
              properties:
                math:
                  type: number
                  example: 95
                science:
                  type: number
                  example: 88
                history:
                  type: number
                  example: 75
        QRCode:
          type: string
          example: David
        Rollup:
          type: number
          example: 3
        Date:
          type: string
          example: '2023-10-16'
        Time:
          type: string
          example: '06:02:00'
        Rating:
          type: number
          example: 1
        Percent:
          type: number
          example: 55
        Formula:
          type: number
          example: 10
        Checkbox:
          type: boolean
          example: true
        Attachment:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
                example: 2 be loved.jpeg
              url:
                type: string
                example: >-
                  https://some-s3-server.com/nc/uploads/2023/10/16/some-key/3niqHLngUKiU2Hupe8.jpeg
              mimetype:
                type: string
                example: image/jpeg
              size:
                type: number
                example: 146143
              signedUrl:
                type: string
                example: >-
                  https://some-s3-server.com/nc/uploads/2023/10/16/signed-url-misc-info
        MultiSelect:
          type: string
          example: Jan,Feb
        DateTime:
          type: string
          example: '2023-10-19 08:56:32+00:00'
        LongText:
          type: string
          example: >-
            The sunsets in the small coastal town were a breathtaking sight. The
            sky would transform from a vibrant blue to warm hues of orange and
            pink as the day came to an end. Locals and tourists alike would
            gather at the beach, sipping on cool drinks and watching in awe as
            the sun dipped below the horizon.
        Geometry:
          type: string
          example: 23.232, 36.542
        PhoneNumber:
          type: string
          example: '123456789'
        Number:
          type: number
          example: 52482
        Links:has-many:
          type: number
          example: 2
        Links:many-many:
          type: number
          example: 3
        Links:belongs-to:
          type: object
          properties:
            Id:
              type: number
              example: 1
            Title:
              type: string
              example: a
        Lookup:
          type: string
          example: a
      example:
        Id: 1
        SingleLineText: David
        CreatedAt: '2023-10-16 08:27:59+00:00'
        UpdatedAt: '2023-10-16 10:05:41+00:00'
        Year: 2023
        URL: www.google.com
        SingleSelect: Jan
        Email: a@b.com
        Duration: 74040
        Decimal: 23.658
        Currency: 23
        Barcode: David
        JSON:
          name: John Doe
          age: 30
          email: johndoe@example.com
          isSubscribed: true
          address:
            street: 123 Main Street
            city: Anytown
            zipCode: '12345'
          hobbies:
            - Reading
            - Hiking
            - Cooking
          scores:
            math: 95
            science: 88
            history: 75
        QRCode: David
        Rollup: 3
        Date: '2023-10-16'
        Time: '06:02:00'
        Rating: 1
        Percent: 55
        Formula: 10
        Checkbox: true
        Attachment:
          - title: 2 be loved.jpeg
            url: >-
              https://some-s3-server.com/nc/uploads/2023/10/16/some-key/3niqHLngUKiU2Hupe8.jpeg
            mimetype: image/jpeg
            size: 146143
            signedUrl: >-
              https://some-s3-server.com/nc/uploads/2023/10/16/signed-url-misc-info
        MultiSelect: Jan,Feb
        DateTime: '2023-10-19 08:56:32+00:00'
        LongText: >-
          The sunsets in the small coastal town were a breathtaking sight. The
          sky would transform from a vibrant blue to warm hues of orange and
          pink as the day came to an end. Locals and tourists alike would gather
          at the beach, sipping on cool drinks and watching in awe as the sun
          dipped below the horizon.
        Geometry: 23.232, 36.542
        PhoneNumber: '123456789'
        Number: 52482
        Links:has-many: 2
        Links:many-many: 3
        Links:belongs-to:
          Id: 1
          Title: a
        Lookup: a
    TableRecordsGetCountResponse:
      type: object
      properties:
        count:
          type: number
      required:
        - list
        - pageInfo
    TableRecordsUnlinkRecordsResponse:
      type: boolean
      example: true
    TableRecordsListLinkedRecordsResponse:
      type: object
      properties:
        list:
          description: List of data objects
          type: array
          items:
            type: object
        pageInfo:
          description: Paginated Info
          $ref: '#/components/schemas/Paginated'
      required:
        - list
        - pageInfo
    TableRecordsLinkRecordsPostResponse:
      type: boolean
      example: true
  securitySchemes:
    xc-auth:
      description: >-
        Auth Token is a JWT Token generated based on the logged-in user. By
        default, the token is only valid for 10 hours. However, you can change
        the value by defining it using environment variable `NC_JWT_EXPIRES_IN`.
      name: 'Auth Token '
      type: apiKey
      in: header
    xc-shared-base-id:
      description: Shared base uuid
      name: Shared Base ID
      type: apiKey
      in: header
    xc-shared-erd-id:
      description: Shared ERD uuid
      name: Shared ERD ID
      type: apiKey
      in: header
x-stoplight:
  id: qiz1rcfqd2jy6
x-tagGroups:
  - tags:
      - Auth
      - API Token
    name: Auth APIs
  - tags:
      - Public
    name: Public APIs
  - tags:
      - DB Table Row
      - DB View Row
      - Storage
    name: Data APIs
  - tags:
      - Source
      - DB Table
      - DB Table Column
      - DB Table Filter
      - DB Table Sort
      - DB Table Webhook
      - DB Table Webhook Filter
      - DB View
      - DB View Column
      - DB View Share
      - Plugin
      - Base
      - Utils
    name: Meta APIs
  - tags:
      - Org App Settings
      - Org License
      - Org Tokens
      - Org Users
    name: Organisation APIs
